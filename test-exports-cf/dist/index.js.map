{
  "version": 3,
  "sources": ["../../node_modules/decamelize/index.js", "../../node_modules/camelcase/index.js", "../../langchain/dist/load/map_keys.js", "../../langchain/dist/load/serializable.js", "../../langchain/dist/agents/agent.js", "../../node_modules/jsonpointer/jsonpointer.js", "../../node_modules/uuid/dist/esm-browser/rng.js", "../../node_modules/uuid/dist/esm-browser/stringify.js", "../../node_modules/uuid/dist/esm-browser/native.js", "../../node_modules/uuid/dist/esm-browser/v4.js", "../../node_modules/uuid/dist/esm-browser/index.js", "../../langchain/dist/callbacks/base.js", "../../node_modules/ansi-styles/index.js", "../../langchain/dist/callbacks/handlers/tracer.js", "../../langchain/dist/callbacks/handlers/console.js", "../../node_modules/retry/lib/retry_operation.js", "../../node_modules/retry/lib/retry.js", "../../node_modules/retry/index.js", "../../node_modules/p-retry/index.js", "../../node_modules/eventemitter3/index.js", "../../node_modules/p-finally/index.js", "../../node_modules/p-timeout/index.js", "../../node_modules/p-queue/dist/lower-bound.js", "../../node_modules/p-queue/dist/priority-queue.js", "../../node_modules/p-queue/dist/index.js", "../../node_modules/langsmith/dist/utils/async_caller.js", "../../node_modules/langsmith/dist/utils/env.js", "../../node_modules/langsmith/dist/client.js", "../../node_modules/langsmith/dist/run_trees.js", "../../node_modules/langsmith/dist/index.js", "../../node_modules/langsmith/index.js", "../../langchain/dist/util/env.js", "../../langchain/dist/callbacks/handlers/tracer_langchain.js", "../../langchain/dist/memory/base.js", "../../langchain/dist/callbacks/handlers/tracer_langchain_v1.js", "../../langchain/dist/callbacks/handlers/initialize.js", "../../langchain/dist/callbacks/promises.js", "../../langchain/dist/callbacks/manager.js", "../../langchain/dist/util/async_caller.js", "../../node_modules/js-tiktoken/dist/chunk-XXPGZHWZ.js", "../../node_modules/base64-js/index.js", "../../node_modules/js-tiktoken/dist/chunk-THGZSONF.js", "../../node_modules/js-tiktoken/dist/lite.js", "../../langchain/dist/util/tiktoken.js", "../../langchain/dist/base_language/count_tokens.js", "../../node_modules/axios/lib/helpers/bind.js", "../../node_modules/axios/lib/utils.js", "../../node_modules/axios/lib/helpers/buildURL.js", "../../node_modules/axios/lib/core/InterceptorManager.js", "../../node_modules/axios/lib/helpers/normalizeHeaderName.js", "../../node_modules/axios/lib/core/enhanceError.js", "../../node_modules/axios/lib/defaults/transitional.js", "../../node_modules/axios/lib/core/createError.js", "../../node_modules/axios/lib/core/settle.js", "../../node_modules/axios/lib/helpers/cookies.js", "../../node_modules/axios/lib/helpers/isAbsoluteURL.js", "../../node_modules/axios/lib/helpers/combineURLs.js", "../../node_modules/axios/lib/core/buildFullPath.js", "../../node_modules/axios/lib/helpers/parseHeaders.js", "../../node_modules/axios/lib/helpers/isURLSameOrigin.js", "../../node_modules/axios/lib/cancel/Cancel.js", "../../node_modules/axios/lib/adapters/xhr.js", "../../node_modules/axios/lib/defaults/index.js", "../../node_modules/axios/lib/core/transformData.js", "../../node_modules/axios/lib/cancel/isCancel.js", "../../node_modules/axios/lib/core/dispatchRequest.js", "../../node_modules/axios/lib/core/mergeConfig.js", "../../node_modules/axios/lib/env/data.js", "../../node_modules/axios/lib/helpers/validator.js", "../../node_modules/axios/lib/core/Axios.js", "../../node_modules/axios/lib/cancel/CancelToken.js", "../../node_modules/axios/lib/helpers/spread.js", "../../node_modules/axios/lib/helpers/isAxiosError.js", "../../node_modules/axios/lib/axios.js", "../../node_modules/axios/index.js", "../../node_modules/openai/dist/base.js", "../../node_modules/openai/dist/common.js", "../../node_modules/openai/dist/api.js", "../../node_modules/form-data/lib/browser.js", "../../node_modules/openai/dist/configuration.js", "../../node_modules/openai/dist/index.js", "../../langchain/dist/util/event-source-parse.js", "../../langchain/dist/util/axios-fetch-adapter.js", "../../langchain/dist/schema/index.js", "../../langchain/dist/chat_models/base.js", "../../langchain/dist/util/prompt-layer.js", "../../node_modules/zod/lib/helpers/util.js", "../../node_modules/zod/lib/ZodError.js", "../../node_modules/zod/lib/locales/en.js", "../../node_modules/zod/lib/errors.js", "../../node_modules/zod/lib/helpers/parseUtil.js", "../../node_modules/zod/lib/helpers/typeAliases.js", "../../node_modules/zod/lib/helpers/errorUtil.js", "../../node_modules/zod/lib/types.js", "../../node_modules/zod/lib/external.js", "../../node_modules/zod/lib/index.js", "../../node_modules/zod-to-json-schema/src/parsers/any.js", "../../node_modules/zod-to-json-schema/src/errorMessages.js", "../../node_modules/zod-to-json-schema/src/parsers/array.js", "../../node_modules/zod-to-json-schema/src/parsers/bigint.js", "../../node_modules/zod-to-json-schema/src/parsers/boolean.js", "../../node_modules/zod-to-json-schema/src/parsers/branded.js", "../../node_modules/zod-to-json-schema/src/parsers/catch.js", "../../node_modules/zod-to-json-schema/src/parsers/date.js", "../../node_modules/zod-to-json-schema/src/parsers/default.js", "../../node_modules/zod-to-json-schema/src/parsers/effects.js", "../../node_modules/zod-to-json-schema/src/parsers/enum.js", "../../node_modules/zod-to-json-schema/src/parsers/intersection.js", "../../node_modules/zod-to-json-schema/src/parsers/literal.js", "../../node_modules/zod-to-json-schema/src/parsers/map.js", "../../node_modules/zod-to-json-schema/src/parsers/nativeEnum.js", "../../node_modules/zod-to-json-schema/src/parsers/never.js", "../../node_modules/zod-to-json-schema/src/parsers/null.js", "../../node_modules/zod-to-json-schema/src/parsers/union.js", "../../node_modules/zod-to-json-schema/src/parsers/nullable.js", "../../node_modules/zod-to-json-schema/src/parsers/number.js", "../../node_modules/zod-to-json-schema/src/parsers/object.js", "../../node_modules/zod-to-json-schema/src/parsers/optional.js", "../../node_modules/zod-to-json-schema/src/parsers/pipeline.js", "../../node_modules/zod-to-json-schema/src/parsers/promise.js", "../../node_modules/zod-to-json-schema/src/parsers/string.js", "../../node_modules/zod-to-json-schema/src/parsers/record.js", "../../node_modules/zod-to-json-schema/src/parsers/set.js", "../../node_modules/zod-to-json-schema/src/parsers/tuple.js", "../../node_modules/zod-to-json-schema/src/parsers/undefined.js", "../../node_modules/zod-to-json-schema/src/parsers/unknown.js", "../../node_modules/zod-to-json-schema/src/parseDef.js", "../../node_modules/zod-to-json-schema/src/Options.js", "../../node_modules/zod-to-json-schema/src/Refs.js", "../../node_modules/zod-to-json-schema/src/zodToJsonSchema.js", "../../node_modules/zod-to-json-schema/index.js", "../../langchain/dist/tools/convert_to_openai.js", "../../langchain/dist/util/azure.js", "../../langchain/dist/chat_models/openai.js", "../../langchain/dist/base_language/index.js", "../../langchain/dist/util/set.js", "../../langchain/dist/chains/sequential_chain.js", "../../langchain/dist/prompts/template.js", "../../langchain/dist/prompts/few_shot.js", "../../langchain/dist/prompts/base.js", "../../langchain/dist/prompts/prompt.js", "../../langchain/dist/chains/combine_docs_chain.js", "../../langchain/dist/prompts/chat.js", "../../langchain/dist/prompts/selectors/conditional.js", "../../langchain/dist/chains/question_answering/stuff_prompts.js", "../../langchain/dist/chains/question_answering/map_reduce_prompts.js", "../../langchain/dist/prompts/selectors/LengthBasedExampleSelector.js", "../../langchain/dist/document.js", "../../langchain/dist/prompts/selectors/SemanticSimilarityExampleSelector.js", "../../langchain/dist/prompts/pipeline.js", "../../langchain/dist/prompts/index.js", "../../langchain/dist/chains/question_answering/refine_prompts.js", "../../langchain/dist/chains/question_answering/load.js", "../../langchain/dist/chains/vector_db_qa.js", "../../langchain/dist/chains/api/prompts.js", "../../langchain/dist/chains/api/api_chain.js", "../../langchain/dist/chains/base.js", "../../langchain/dist/schema/output_parser.js", "../../langchain/dist/output_parsers/noop.js", "../../langchain/dist/chains/llm_chain.js", "../../langchain/dist/agents/helpers.js", "../../langchain/dist/agents/types.js", "../../langchain/dist/agents/mrkl/prompt.js", "../../langchain/dist/agents/mrkl/outputParser.js", "../../langchain/dist/agents/mrkl/index.js", "../../langchain/dist/util/chunk.js", "../../node_modules/object-hash/dist/object_hash.js", "../../langchain/dist/cache/base.js", "../../langchain/dist/cache/index.js", "../../langchain/dist/llms/openai-chat.js", "../../langchain/dist/llms/openai.js", "../../langchain/dist/llms/base.js", "../../node_modules/binary-search/index.js", "../../node_modules/num-sort/index.js", "../../node_modules/has-symbols/shams.js", "../../node_modules/has-symbols/index.js", "../../node_modules/function-bind/implementation.js", "../../node_modules/function-bind/index.js", "../../node_modules/has/src/index.js", "../../node_modules/get-intrinsic/index.js", "../../node_modules/call-bind/index.js", "../../node_modules/call-bind/callBound.js", "../../node_modules/object-inspect/util.inspect", "../../node_modules/object-inspect/index.js", "../../node_modules/side-channel/index.js", "../../node_modules/qs/lib/formats.js", "../../node_modules/qs/lib/utils.js", "../../node_modules/qs/lib/stringify.js", "../../node_modules/qs/lib/parse.js", "../../node_modules/qs/lib/index.js", "../../node_modules/cheerio/lib/esm/types.js", "../../node_modules/cheerio/lib/esm/options.ts", "../../node_modules/domelementtype/lib/esm/index.js", "../../node_modules/domhandler/lib/esm/node.js", "../../node_modules/domhandler/lib/esm/index.js", "../../node_modules/entities/lib/esm/generated/generated/decode-data-html.ts", "../../node_modules/entities/lib/esm/generated/generated/decode-data-xml.ts", "../../node_modules/entities/lib/esm/decode_codepoint.ts", "../../node_modules/entities/lib/esm/decode.ts", "../../node_modules/entities/lib/esm/generated/generated/encode-html.ts", "../../node_modules/entities/lib/esm/escape.ts", "../../node_modules/entities/lib/esm/encode.ts", "../../node_modules/entities/lib/esm/index.ts", "../../node_modules/dom-serializer/lib/esm/foreignNames.js", "../../node_modules/dom-serializer/lib/esm/index.js", "../../node_modules/domutils/lib/esm/stringify.ts", "../../node_modules/domutils/lib/esm/traversal.ts", "../../node_modules/domutils/lib/esm/manipulation.ts", "../../node_modules/domutils/lib/esm/querying.ts", "../../node_modules/domutils/lib/esm/legacy.ts", "../../node_modules/domutils/lib/esm/helpers.ts", "../../node_modules/domutils/lib/esm/feeds.ts", "../../node_modules/domutils/lib/esm/index.ts", "../../node_modules/cheerio/lib/esm/static.ts", "../../node_modules/cheerio/lib/esm/utils.ts", "../../node_modules/cheerio/lib/esm/api/api/attributes.ts", "../../node_modules/css-what/lib/es/types.js", "../../node_modules/css-what/lib/es/parse.js", "../../node_modules/css-what/lib/es/index.js", "../../node_modules/boolbase/index.js", "../../node_modules/css-select/lib/esm/sort.ts", "../../node_modules/css-select/lib/esm/attributes.ts", "../../node_modules/nth-check/lib/esm/parse.ts", "../../node_modules/nth-check/lib/esm/compile.ts", "../../node_modules/nth-check/lib/esm/index.ts", "../../node_modules/css-select/lib/esm/pseudo-selectors/pseudo-selectors/filters.ts", "../../node_modules/css-select/lib/esm/pseudo-selectors/pseudo-selectors/pseudos.ts", "../../node_modules/css-select/lib/esm/pseudo-selectors/pseudo-selectors/aliases.ts", "../../node_modules/css-select/lib/esm/pseudo-selectors/pseudo-selectors/subselects.ts", "../../node_modules/css-select/lib/esm/pseudo-selectors/pseudo-selectors/index.ts", "../../node_modules/css-select/lib/esm/general.ts", "../../node_modules/css-select/lib/esm/compile.ts", "../../node_modules/css-select/lib/esm/index.ts", "../../node_modules/cheerio-select/lib/esm/positionals.ts", "../../node_modules/cheerio-select/lib/esm/helpers.ts", "../../node_modules/cheerio-select/lib/esm/index.ts", "../../node_modules/cheerio/lib/esm/api/api/traversing.ts", "../../node_modules/cheerio/lib/esm/parse.ts", "../../node_modules/cheerio/lib/esm/api/api/manipulation.ts", "../../node_modules/cheerio/lib/esm/api/api/css.ts", "../../node_modules/cheerio/lib/esm/api/api/forms.ts", "../../node_modules/cheerio/lib/esm/cheerio.ts", "../../node_modules/cheerio/lib/esm/load.ts", "../../node_modules/parse5/dist/common/unicode.js", "../../node_modules/parse5/dist/common/error-codes.js", "../../node_modules/parse5/dist/tokenizer/preprocessor.js", "../../node_modules/parse5/dist/common/token.js", "../../node_modules/parse5/dist/common/html.js", "../../node_modules/parse5/dist/tokenizer/index.js", "../../node_modules/parse5/dist/parser/open-element-stack.js", "../../node_modules/parse5/dist/parser/formatting-element-list.js", "../../node_modules/parse5/dist/tree-adapters/default.js", "../../node_modules/parse5/dist/common/doctype.js", "../../node_modules/parse5/dist/common/foreign-content.js", "../../node_modules/parse5/dist/parser/index.js", "../../node_modules/parse5/dist/serializer/index.js", "../../node_modules/parse5/dist/index.js", "../../node_modules/cheerio/node_modules/parse5-htmlparser2-tree-adapter/dist/index.js", "../../node_modules/cheerio/lib/esm/parsers/parsers/parse5-adapter.ts", "../../node_modules/htmlparser2/lib/esm/Tokenizer.ts", "../../node_modules/htmlparser2/lib/esm/Parser.ts", "../../node_modules/htmlparser2/lib/esm/index.ts", "../../node_modules/cheerio/lib/esm/index.ts", "../../langchain/dist/load/import_map.js", "../../langchain/dist/agents/index.js", "../../langchain/dist/tools/json.js", "../../langchain/dist/tools/base.js", "../../langchain/dist/agents/toolkits/json/json.js", "../../langchain/dist/agents/executor.js", "../../langchain/dist/agents/toolkits/openapi/openapi.js", "../../langchain/dist/tools/vectorstore.js", "../../langchain/dist/agents/toolkits/vectorstore/vectorstore.js", "../../langchain/dist/tools/zapier.js", "../../langchain/dist/agents/chat/index.js", "../../langchain/dist/agents/chat/outputParser.js", "../../langchain/dist/agents/chat_convo/index.js", "../../langchain/dist/agents/chat_convo/outputParser.js", "../../langchain/dist/output_parsers/fix.js", "../../langchain/dist/output_parsers/prompts.js", "../../langchain/dist/memory/buffer_memory.js", "../../langchain/dist/memory/chat_memory.js", "../../langchain/dist/stores/message/in_memory.js", "../../langchain/dist/agents/structured_chat/index.js", "../../langchain/dist/agents/structured_chat/outputParser.js", "../../langchain/dist/agents/structured_chat/prompt.js", "../../langchain/dist/agents/initialize.js", "../../langchain/dist/agents/openai/index.js", "../../langchain/dist/tools/serpapi.js", "../../langchain/dist/tools/bingserpapi.js", "../../langchain/dist/tools/serper.js", "../../langchain/dist/tools/google_custom_search.js", "../../langchain/dist/tools/brave_search.js", "../../langchain/dist/tools/dataforseo_api_search.js", "../../langchain/dist/tools/searxng_search.js", "../../langchain/dist/chains/index.js", "../../langchain/dist/chains/conversation.js", "../../langchain/dist/chains/chat_vector_db_chain.js", "../../langchain/dist/chains/analyze_documents_chain.js", "../../langchain/dist/text_splitter.js", "../../langchain/dist/schema/document.js", "../../langchain/dist/chains/summarization/load.js", "../../langchain/dist/chains/summarization/stuff_prompts.js", "../../langchain/dist/chains/summarization/refine_prompts.js", "../../langchain/dist/chains/conversational_retrieval_chain.js", "../../langchain/dist/chains/retrieval_qa.js", "../../langchain/dist/chains/constitutional_ai/constitutional_chain.js", "../../langchain/dist/chains/constitutional_ai/constitutional_prompts.js", "../../langchain/dist/chains/openai_moderation.js", "../../langchain/dist/chains/router/multi_route.js", "../../langchain/dist/chains/router/llm_router.js", "../../langchain/dist/chains/router/multi_prompt.js", "../../langchain/dist/output_parsers/structured.js", "../../langchain/dist/output_parsers/router.js", "../../langchain/dist/chains/router/multi_retrieval_qa.js", "../../langchain/dist/chains/transform.js", "../../langchain/dist/chains/openai_functions/extraction.js", "../../langchain/dist/output_parsers/openai_functions.js", "../../langchain/dist/chains/openai_functions/tagging.js", "../../node_modules/js-yaml/dist/js-yaml.mjs", "../../langchain/dist/chains/openai_functions/openapi.js", "../../langchain/dist/chains/openai_functions/structured_output.js", "../../langchain/dist/util/@cfworker/json-schema/src/dereference.js", "../../langchain/dist/util/@cfworker/json-schema/src/format.js", "../../langchain/dist/embeddings/base.js", "../../langchain/dist/embeddings/openai.js", "../../langchain/dist/llms/ai21.js", "../../langchain/dist/llms/aleph_alpha.js", "../../langchain/dist/schema/retriever.js", "../../langchain/dist/vectorstores/base.js", "../../node_modules/ml-tree-similarity/src/createTree.js", "../../langchain/dist/vectorstores/memory.js", "../../langchain/dist/vectorstores/prisma.js", "../../langchain/dist/vectorstores/vectara.js", "../../langchain/dist/memory/index.js", "../../langchain/dist/memory/summary.js", "../../langchain/dist/memory/prompt.js", "../../langchain/dist/memory/buffer_window_memory.js", "../../langchain/dist/memory/motorhead_memory.js", "../../langchain/dist/memory/vector_store.js", "../../langchain/dist/memory/entity_memory.js", "../../langchain/dist/memory/stores/entity/in_memory.js", "../../langchain/dist/document_loaders/base.js", "../../langchain/dist/document_loaders/web/sort_xyz_blockchain.js", "../../langchain/dist/document_transformers/openai_functions.js", "../../node_modules/@anthropic-ai/sdk/src/core.ts", "../../node_modules/@anthropic-ai/sdk/src/version.ts", "../../node_modules/@anthropic-ai/sdk/src/error.ts", "../../node_modules/@anthropic-ai/sdk/src/streaming.ts", "../../node_modules/@anthropic-ai/sdk/src/_shims/agent.ts", "../../node_modules/@anthropic-ai/sdk/_shims/fetch.mjs", "../../node_modules/@anthropic-ai/sdk/_shims/formdata.mjs", "../../node_modules/@anthropic-ai/sdk/src/_shims/fileFromPath.ts", "../../node_modules/@anthropic-ai/sdk/src/uploads.ts", "../../node_modules/@anthropic-ai/sdk/src/resource.ts", "../../node_modules/@anthropic-ai/sdk/src/resources/completions.ts", "../../node_modules/@anthropic-ai/sdk/src/index.ts", "../../langchain/dist/chat_models/anthropic.js", "../../langchain/dist/chat_models/baiduwenxin.js", "../../langchain/dist/callbacks/index.js", "../../langchain/dist/output_parsers/list.js", "../../langchain/dist/output_parsers/regex.js", "../../langchain/dist/output_parsers/combining.js", "../../langchain/dist/retrievers/remote/base.js", "../../langchain/dist/retrievers/remote/chatgpt-plugin.js", "../../langchain/dist/retrievers/remote/remote-retriever.js", "../../langchain/dist/retrievers/databerry.js", "../../langchain/dist/retrievers/document_compressors/chain_extract.js", "../../langchain/dist/retrievers/hyde.js", "../../langchain/dist/retrievers/vespa.js", "../../langchain/dist/stores/doc/in_memory.js", "../../langchain/dist/stores/file/in_memory.js", "../../langchain/dist/experimental/autogpt/prompt.js", "../../langchain/dist/experimental/autogpt/prompt_generator.js", "../../langchain/dist/experimental/autogpt/output_parser.js", "../../langchain/dist/experimental/autogpt/agent.js", "../../langchain/dist/experimental/babyagi/task_creation.js", "../../langchain/dist/experimental/babyagi/task_execution.js", "../../langchain/dist/experimental/babyagi/task_prioritization.js", "../../langchain/dist/experimental/babyagi/agent.js", "../../langchain/dist/experimental/generative_agents/generative_agent_memory.js", "../../langchain/dist/experimental/generative_agents/generative_agent.js", "../../langchain/dist/experimental/plan_and_execute/agent_executor.js", "../../langchain/dist/experimental/plan_and_execute/prompt.js", "../../langchain/dist/experimental/plan_and_execute/outputParser.js", "../../langchain/dist/load/index.js", "../../langchain/load/serializable.js", "../../langchain/base_language.js", "../../langchain/llms/base.js", "../../langchain/llms/openai.js", "../../langchain/prompts.js", "../../langchain/document.js", "../../langchain/chat_models/base.js", "../../langchain/chat_models/openai.js", "../../langchain/schema.js", "../../langchain/schema/output_parser.js", "../../langchain/cache.js", "../../langchain/dist/document_loaders/web/hn.js", "../../langchain/dist/document_loaders/web/cheerio.js", "../src/index.ts"],
  "sourceRoot": "dist",
  "sourcesContent": ["'use strict';\nmodule.exports = function (str, sep) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\tsep = typeof sep === 'undefined' ? '_' : sep;\n\n\treturn str\n\t\t.replace(/([a-z\\d])([A-Z])/g, '$1' + sep + '$2')\n\t\t.replace(/([A-Z]+)([A-Z][a-z\\d]+)/g, '$1' + sep + '$2')\n\t\t.toLowerCase();\n};\n", "'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n", "import snakeCase from \"decamelize\";\nimport camelCase from \"camelcase\";\nexport function keyToJson(key, map) {\n    return map?.[key] || snakeCase(key);\n}\nexport function keyFromJson(key, map) {\n    return map?.[key] || camelCase(key);\n}\nexport function mapKeys(fields, mapper, map) {\n    const mapped = {};\n    for (const key in fields) {\n        if (Object.hasOwn(fields, key)) {\n            mapped[mapper(key, map)] = fields[key];\n        }\n    }\n    return mapped;\n}\n", "import { keyToJson, mapKeys } from \"./map_keys.js\";\nfunction shallowCopy(obj) {\n    return Array.isArray(obj) ? [...obj] : { ...obj };\n}\nfunction replaceSecrets(root, secretsMap) {\n    const result = shallowCopy(root);\n    for (const [path, secretId] of Object.entries(secretsMap)) {\n        const [last, ...partsReverse] = path.split(\".\").reverse();\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let current = result;\n        for (const part of partsReverse.reverse()) {\n            if (current[part] === undefined) {\n                break;\n            }\n            current[part] = shallowCopy(current[part]);\n            current = current[part];\n        }\n        if (current[last] !== undefined) {\n            current[last] = {\n                lc: 1,\n                type: \"secret\",\n                id: [secretId],\n            };\n        }\n    }\n    return result;\n}\nexport class Serializable {\n    /**\n     * A map of secrets, which will be omitted from serialization.\n     * Keys are paths to the secret in constructor args, e.g. \"foo.bar.baz\".\n     * Values are the secret ids, which will be used when deserializing.\n     */\n    get lc_secrets() {\n        return undefined;\n    }\n    /**\n     * A map of additional attributes to merge with constructor args.\n     * Keys are the attribute names, e.g. \"foo\".\n     * Values are the attribute values, which will be serialized.\n     * These attributes need to be accepted by the constructor as arguments.\n     */\n    get lc_attributes() {\n        return undefined;\n    }\n    /**\n     * A map of aliases for constructor args.\n     * Keys are the attribute names, e.g. \"foo\".\n     * Values are the alias that will replace the key in serialization.\n     * This is used to eg. make argument names match Python.\n     */\n    get lc_aliases() {\n        return undefined;\n    }\n    constructor(kwargs, ..._args) {\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"lc_kwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.lc_kwargs = kwargs || {};\n    }\n    toJSON() {\n        if (!this.lc_serializable) {\n            return this.toJSONNotImplemented();\n        }\n        if (\n        // eslint-disable-next-line no-instanceof/no-instanceof\n        this.lc_kwargs instanceof Serializable ||\n            typeof this.lc_kwargs !== \"object\" ||\n            Array.isArray(this.lc_kwargs)) {\n            // We do not support serialization of classes with arg not a POJO\n            // I'm aware the check above isn't as strict as it could be\n            return this.toJSONNotImplemented();\n        }\n        const aliases = {};\n        const secrets = {};\n        const kwargs = Object.keys(this.lc_kwargs).reduce((acc, key) => {\n            acc[key] = key in this ? this[key] : this.lc_kwargs[key];\n            return acc;\n        }, {});\n        // get secrets, attributes and aliases from all superclasses\n        for (\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        let current = Object.getPrototypeOf(this); current; current = Object.getPrototypeOf(current)) {\n            Object.assign(aliases, Reflect.get(current, \"lc_aliases\", this));\n            Object.assign(secrets, Reflect.get(current, \"lc_secrets\", this));\n            Object.assign(kwargs, Reflect.get(current, \"lc_attributes\", this));\n        }\n        // include all secrets used, even if not in kwargs,\n        // will be replaced with sentinel value in replaceSecrets\n        for (const key in secrets) {\n            if (key in this && this[key] !== undefined) {\n                kwargs[key] = this[key] || kwargs[key];\n            }\n        }\n        return {\n            lc: 1,\n            type: \"constructor\",\n            id: [...this.lc_namespace, this.constructor.name],\n            kwargs: mapKeys(Object.keys(secrets).length ? replaceSecrets(kwargs, secrets) : kwargs, keyToJson, aliases),\n        };\n    }\n    toJSONNotImplemented() {\n        return {\n            lc: 1,\n            type: \"not_implemented\",\n            id: [...this.lc_namespace, this.constructor.name],\n        };\n    }\n}\n", "import { Serializable } from \"../load/serializable.js\";\nclass ParseError extends Error {\n    constructor(msg, output) {\n        super(msg);\n        Object.defineProperty(this, \"output\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.output = output;\n    }\n}\nexport class BaseAgent extends Serializable {\n    get returnValues() {\n        return [\"output\"];\n    }\n    get allowedTools() {\n        return undefined;\n    }\n    /**\n     * Return the string type key uniquely identifying this class of agent.\n     */\n    _agentType() {\n        throw new Error(\"Not implemented\");\n    }\n    /**\n     * Return response when agent has been stopped due to max iterations\n     */\n    returnStoppedResponse(earlyStoppingMethod, _steps, _inputs, _callbackManager) {\n        if (earlyStoppingMethod === \"force\") {\n            return Promise.resolve({\n                returnValues: { output: \"Agent stopped due to max iterations.\" },\n                log: \"\",\n            });\n        }\n        throw new Error(`Invalid stopping method: ${earlyStoppingMethod}`);\n    }\n    /**\n     * Prepare the agent for output, if needed\n     */\n    async prepareForOutput(_returnValues, _steps) {\n        return {};\n    }\n}\nexport class BaseSingleActionAgent extends BaseAgent {\n    _agentActionType() {\n        return \"single\";\n    }\n}\nexport class BaseMultiActionAgent extends BaseAgent {\n    _agentActionType() {\n        return \"multi\";\n    }\n}\nexport class LLMSingleActionAgent extends BaseSingleActionAgent {\n    constructor(input) {\n        super(input);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\"]\n        });\n        Object.defineProperty(this, \"llmChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputParser\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"stop\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.stop = input.stop;\n        this.llmChain = input.llmChain;\n        this.outputParser = input.outputParser;\n    }\n    get inputKeys() {\n        return this.llmChain.inputKeys;\n    }\n    /**\n     * Decide what to do given some input.\n     *\n     * @param steps - Steps the LLM has taken so far, along with observations from each.\n     * @param inputs - User inputs.\n     * @param callbackManager - Callback manager.\n     *\n     * @returns Action specifying what tool to use.\n     */\n    async plan(steps, inputs, callbackManager) {\n        const output = await this.llmChain.call({\n            intermediate_steps: steps,\n            stop: this.stop,\n            ...inputs,\n        }, callbackManager);\n        return this.outputParser.parse(output[this.llmChain.outputKey], callbackManager);\n    }\n}\n/**\n * Class responsible for calling a language model and deciding an action.\n *\n * @remarks This is driven by an LLMChain. The prompt in the LLMChain *must*\n * include a variable called \"agent_scratchpad\" where the agent can put its\n * intermediary work.\n */\nexport class Agent extends BaseSingleActionAgent {\n    get allowedTools() {\n        return this._allowedTools;\n    }\n    get inputKeys() {\n        return this.llmChain.inputKeys.filter((k) => k !== \"agent_scratchpad\");\n    }\n    constructor(input) {\n        super(input);\n        Object.defineProperty(this, \"llmChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputParser\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_allowedTools\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: undefined\n        });\n        this.llmChain = input.llmChain;\n        this._allowedTools = input.allowedTools;\n        this.outputParser = input.outputParser;\n    }\n    /**\n     * Get the default output parser for this agent.\n     */\n    static getDefaultOutputParser(_fields) {\n        throw new Error(\"Not implemented\");\n    }\n    /**\n     * Create a prompt for this class\n     *\n     * @param _tools - List of tools the agent will have access to, used to format the prompt.\n     * @param _fields - Additional fields used to format the prompt.\n     *\n     * @returns A PromptTemplate assembled from the given tools and fields.\n     * */\n    static createPrompt(_tools, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _fields) {\n        throw new Error(\"Not implemented\");\n    }\n    /** Construct an agent from an LLM and a list of tools */\n    static fromLLMAndTools(_llm, _tools, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _args) {\n        throw new Error(\"Not implemented\");\n    }\n    /**\n     * Validate that appropriate tools are passed in\n     */\n    static validateTools(_tools) { }\n    _stop() {\n        return [`\\n${this.observationPrefix()}`];\n    }\n    /**\n     * Name of tool to use to terminate the chain.\n     */\n    finishToolName() {\n        return \"Final Answer\";\n    }\n    /**\n     * Construct a scratchpad to let the agent continue its thought process\n     */\n    async constructScratchPad(steps) {\n        return steps.reduce((thoughts, { action, observation }) => thoughts +\n            [\n                action.log,\n                `${this.observationPrefix()}${observation}`,\n                this.llmPrefix(),\n            ].join(\"\\n\"), \"\");\n    }\n    async _plan(steps, inputs, suffix, callbackManager) {\n        const thoughts = await this.constructScratchPad(steps);\n        const newInputs = {\n            ...inputs,\n            agent_scratchpad: suffix ? `${thoughts}${suffix}` : thoughts,\n        };\n        if (this._stop().length !== 0) {\n            newInputs.stop = this._stop();\n        }\n        const output = await this.llmChain.predict(newInputs, callbackManager);\n        if (!this.outputParser) {\n            throw new Error(\"Output parser not set\");\n        }\n        return this.outputParser.parse(output, callbackManager);\n    }\n    /**\n     * Decide what to do given some input.\n     *\n     * @param steps - Steps the LLM has taken so far, along with observations from each.\n     * @param inputs - User inputs.\n     * @param callbackManager - Callback manager to use for this call.\n     *\n     * @returns Action specifying what tool to use.\n     */\n    plan(steps, inputs, callbackManager) {\n        return this._plan(steps, inputs, undefined, callbackManager);\n    }\n    /**\n     * Return response when agent has been stopped due to max iterations\n     */\n    async returnStoppedResponse(earlyStoppingMethod, steps, inputs, callbackManager) {\n        if (earlyStoppingMethod === \"force\") {\n            return {\n                returnValues: { output: \"Agent stopped due to max iterations.\" },\n                log: \"\",\n            };\n        }\n        if (earlyStoppingMethod === \"generate\") {\n            try {\n                const action = await this._plan(steps, inputs, \"\\n\\nI now need to return a final answer based on the previous steps:\", callbackManager);\n                if (\"returnValues\" in action) {\n                    return action;\n                }\n                return { returnValues: { output: action.log }, log: action.log };\n            }\n            catch (err) {\n                // fine to use instanceof because we're in the same module\n                // eslint-disable-next-line no-instanceof/no-instanceof\n                if (!(err instanceof ParseError)) {\n                    throw err;\n                }\n                return { returnValues: { output: err.output }, log: err.output };\n            }\n        }\n        throw new Error(`Invalid stopping method: ${earlyStoppingMethod}`);\n    }\n    /**\n     * Load an agent from a json-like object describing it.\n     */\n    static async deserialize(data) {\n        switch (data._type) {\n            case \"zero-shot-react-description\": {\n                const { ZeroShotAgent } = await import(\"./mrkl/index.js\");\n                return ZeroShotAgent.deserialize(data);\n            }\n            default:\n                throw new Error(\"Unknown agent type\");\n        }\n    }\n}\n", "var hasExcape = /~/\nvar escapeMatcher = /~[01]/g\nfunction escapeReplacer (m) {\n  switch (m) {\n    case '~1': return '/'\n    case '~0': return '~'\n  }\n  throw new Error('Invalid tilde escape: ' + m)\n}\n\nfunction untilde (str) {\n  if (!hasExcape.test(str)) return str\n  return str.replace(escapeMatcher, escapeReplacer)\n}\n\nfunction setter (obj, pointer, value) {\n  var part\n  var hasNextPart\n\n  for (var p = 1, len = pointer.length; p < len;) {\n    if (pointer[p] === 'constructor' || pointer[p] === 'prototype' || pointer[p] === '__proto__') return obj\n\n    part = untilde(pointer[p++])\n    hasNextPart = len > p\n\n    if (typeof obj[part] === 'undefined') {\n      // support setting of /-\n      if (Array.isArray(obj) && part === '-') {\n        part = obj.length\n      }\n\n      // support nested objects/array when setting values\n      if (hasNextPart) {\n        if ((pointer[p] !== '' && pointer[p] < Infinity) || pointer[p] === '-') obj[part] = []\n        else obj[part] = {}\n      }\n    }\n\n    if (!hasNextPart) break\n    obj = obj[part]\n  }\n\n  var oldValue = obj[part]\n  if (value === undefined) delete obj[part]\n  else obj[part] = value\n  return oldValue\n}\n\nfunction compilePointer (pointer) {\n  if (typeof pointer === 'string') {\n    pointer = pointer.split('/')\n    if (pointer[0] === '') return pointer\n    throw new Error('Invalid JSON pointer.')\n  } else if (Array.isArray(pointer)) {\n    for (const part of pointer) {\n      if (typeof part !== 'string' && typeof part !== 'number') {\n        throw new Error('Invalid JSON pointer. Must be of type string or number.')\n      }\n    }\n    return pointer\n  }\n\n  throw new Error('Invalid JSON pointer.')\n}\n\nfunction get (obj, pointer) {\n  if (typeof obj !== 'object') throw new Error('Invalid input object.')\n  pointer = compilePointer(pointer)\n  var len = pointer.length\n  if (len === 1) return obj\n\n  for (var p = 1; p < len;) {\n    obj = obj[untilde(pointer[p++])]\n    if (len === p) return obj\n    if (typeof obj !== 'object' || obj === null) return undefined\n  }\n}\n\nfunction set (obj, pointer, value) {\n  if (typeof obj !== 'object') throw new Error('Invalid input object.')\n  pointer = compilePointer(pointer)\n  if (pointer.length === 0) throw new Error('Invalid JSON pointer for set.')\n  return setter(obj, pointer, value)\n}\n\nfunction compile (pointer) {\n  var compiled = compilePointer(pointer)\n  return {\n    get: function (object) {\n      return get(object, compiled)\n    },\n    set: function (object, value) {\n      return set(object, compiled, value)\n    }\n  }\n}\n\nexports.get = get\nexports.set = set\nexports.compile = compile\n", "// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}", "import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;", "const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};", "import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;", "export { default as v1 } from './v1.js';\nexport { default as v3 } from './v3.js';\nexport { default as v4 } from './v4.js';\nexport { default as v5 } from './v5.js';\nexport { default as NIL } from './nil.js';\nexport { default as version } from './version.js';\nexport { default as validate } from './validate.js';\nexport { default as stringify } from './stringify.js';\nexport { default as parse } from './parse.js';", "import * as uuid from \"uuid\";\nimport { Serializable, } from \"../load/serializable.js\";\nclass BaseCallbackHandlerMethodsClass {\n}\nexport class BaseCallbackHandler extends BaseCallbackHandlerMethodsClass {\n    get lc_namespace() {\n        return [\"langchain\", \"callbacks\", this.name];\n    }\n    get lc_secrets() {\n        return undefined;\n    }\n    get lc_attributes() {\n        return undefined;\n    }\n    get lc_aliases() {\n        return undefined;\n    }\n    constructor(input) {\n        super();\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"lc_kwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"ignoreLLM\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"ignoreChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"ignoreAgent\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"ignoreRetriever\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"awaitHandlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: typeof process !== \"undefined\"\n                ? // eslint-disable-next-line no-process-env\n                    process.env?.LANGCHAIN_CALLBACKS_BACKGROUND !== \"true\"\n                : true\n        });\n        this.lc_kwargs = input || {};\n        if (input) {\n            this.ignoreLLM = input.ignoreLLM ?? this.ignoreLLM;\n            this.ignoreChain = input.ignoreChain ?? this.ignoreChain;\n            this.ignoreAgent = input.ignoreAgent ?? this.ignoreAgent;\n            this.ignoreRetriever = input.ignoreRetriever ?? this.ignoreRetriever;\n        }\n    }\n    copy() {\n        return new this.constructor(this);\n    }\n    toJSON() {\n        return Serializable.prototype.toJSON.call(this);\n    }\n    toJSONNotImplemented() {\n        return Serializable.prototype.toJSONNotImplemented.call(this);\n    }\n    static fromMethods(methods) {\n        class Handler extends BaseCallbackHandler {\n            constructor() {\n                super();\n                Object.defineProperty(this, \"name\", {\n                    enumerable: true,\n                    configurable: true,\n                    writable: true,\n                    value: uuid.v4()\n                });\n                Object.assign(this, methods);\n            }\n        }\n        return new Handler();\n    }\n}\n", "'use strict';\n\nconst ANSI_BACKGROUND_OFFSET = 10;\n\nconst wrapAnsi256 = (offset = 0) => code => `\\u001B[${38 + offset};5;${code}m`;\n\nconst wrapAnsi16m = (offset = 0) => (red, green, blue) => `\\u001B[${38 + offset};2;${red};${green};${blue}m`;\n\nfunction assembleStyles() {\n\tconst codes = new Map();\n\tconst styles = {\n\t\tmodifier: {\n\t\t\treset: [0, 0],\n\t\t\t// 21 isn't widely supported and 22 does the same thing\n\t\t\tbold: [1, 22],\n\t\t\tdim: [2, 22],\n\t\t\titalic: [3, 23],\n\t\t\tunderline: [4, 24],\n\t\t\toverline: [53, 55],\n\t\t\tinverse: [7, 27],\n\t\t\thidden: [8, 28],\n\t\t\tstrikethrough: [9, 29]\n\t\t},\n\t\tcolor: {\n\t\t\tblack: [30, 39],\n\t\t\tred: [31, 39],\n\t\t\tgreen: [32, 39],\n\t\t\tyellow: [33, 39],\n\t\t\tblue: [34, 39],\n\t\t\tmagenta: [35, 39],\n\t\t\tcyan: [36, 39],\n\t\t\twhite: [37, 39],\n\n\t\t\t// Bright color\n\t\t\tblackBright: [90, 39],\n\t\t\tredBright: [91, 39],\n\t\t\tgreenBright: [92, 39],\n\t\t\tyellowBright: [93, 39],\n\t\t\tblueBright: [94, 39],\n\t\t\tmagentaBright: [95, 39],\n\t\t\tcyanBright: [96, 39],\n\t\t\twhiteBright: [97, 39]\n\t\t},\n\t\tbgColor: {\n\t\t\tbgBlack: [40, 49],\n\t\t\tbgRed: [41, 49],\n\t\t\tbgGreen: [42, 49],\n\t\t\tbgYellow: [43, 49],\n\t\t\tbgBlue: [44, 49],\n\t\t\tbgMagenta: [45, 49],\n\t\t\tbgCyan: [46, 49],\n\t\t\tbgWhite: [47, 49],\n\n\t\t\t// Bright color\n\t\t\tbgBlackBright: [100, 49],\n\t\t\tbgRedBright: [101, 49],\n\t\t\tbgGreenBright: [102, 49],\n\t\t\tbgYellowBright: [103, 49],\n\t\t\tbgBlueBright: [104, 49],\n\t\t\tbgMagentaBright: [105, 49],\n\t\t\tbgCyanBright: [106, 49],\n\t\t\tbgWhiteBright: [107, 49]\n\t\t}\n\t};\n\n\t// Alias bright black as gray (and grey)\n\tstyles.color.gray = styles.color.blackBright;\n\tstyles.bgColor.bgGray = styles.bgColor.bgBlackBright;\n\tstyles.color.grey = styles.color.blackBright;\n\tstyles.bgColor.bgGrey = styles.bgColor.bgBlackBright;\n\n\tfor (const [groupName, group] of Object.entries(styles)) {\n\t\tfor (const [styleName, style] of Object.entries(group)) {\n\t\t\tstyles[styleName] = {\n\t\t\t\topen: `\\u001B[${style[0]}m`,\n\t\t\t\tclose: `\\u001B[${style[1]}m`\n\t\t\t};\n\n\t\t\tgroup[styleName] = styles[styleName];\n\n\t\t\tcodes.set(style[0], style[1]);\n\t\t}\n\n\t\tObject.defineProperty(styles, groupName, {\n\t\t\tvalue: group,\n\t\t\tenumerable: false\n\t\t});\n\t}\n\n\tObject.defineProperty(styles, 'codes', {\n\t\tvalue: codes,\n\t\tenumerable: false\n\t});\n\n\tstyles.color.close = '\\u001B[39m';\n\tstyles.bgColor.close = '\\u001B[49m';\n\n\tstyles.color.ansi256 = wrapAnsi256();\n\tstyles.color.ansi16m = wrapAnsi16m();\n\tstyles.bgColor.ansi256 = wrapAnsi256(ANSI_BACKGROUND_OFFSET);\n\tstyles.bgColor.ansi16m = wrapAnsi16m(ANSI_BACKGROUND_OFFSET);\n\n\t// From https://github.com/Qix-/color-convert/blob/3f0e0d4e92e235796ccb17f6e85c72094a651f49/conversions.js\n\tObject.defineProperties(styles, {\n\t\trgbToAnsi256: {\n\t\t\tvalue: (red, green, blue) => {\n\t\t\t\t// We use the extended greyscale palette here, with the exception of\n\t\t\t\t// black and white. normal palette only has 4 greyscale shades.\n\t\t\t\tif (red === green && green === blue) {\n\t\t\t\t\tif (red < 8) {\n\t\t\t\t\t\treturn 16;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (red > 248) {\n\t\t\t\t\t\treturn 231;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn Math.round(((red - 8) / 247) * 24) + 232;\n\t\t\t\t}\n\n\t\t\t\treturn 16 +\n\t\t\t\t\t(36 * Math.round(red / 255 * 5)) +\n\t\t\t\t\t(6 * Math.round(green / 255 * 5)) +\n\t\t\t\t\tMath.round(blue / 255 * 5);\n\t\t\t},\n\t\t\tenumerable: false\n\t\t},\n\t\thexToRgb: {\n\t\t\tvalue: hex => {\n\t\t\t\tconst matches = /(?<colorString>[a-f\\d]{6}|[a-f\\d]{3})/i.exec(hex.toString(16));\n\t\t\t\tif (!matches) {\n\t\t\t\t\treturn [0, 0, 0];\n\t\t\t\t}\n\n\t\t\t\tlet {colorString} = matches.groups;\n\n\t\t\t\tif (colorString.length === 3) {\n\t\t\t\t\tcolorString = colorString.split('').map(character => character + character).join('');\n\t\t\t\t}\n\n\t\t\t\tconst integer = Number.parseInt(colorString, 16);\n\n\t\t\t\treturn [\n\t\t\t\t\t(integer >> 16) & 0xFF,\n\t\t\t\t\t(integer >> 8) & 0xFF,\n\t\t\t\t\tinteger & 0xFF\n\t\t\t\t];\n\t\t\t},\n\t\t\tenumerable: false\n\t\t},\n\t\thexToAnsi256: {\n\t\t\tvalue: hex => styles.rgbToAnsi256(...styles.hexToRgb(hex)),\n\t\t\tenumerable: false\n\t\t}\n\t});\n\n\treturn styles;\n}\n\n// Make the export immutable\nObject.defineProperty(module, 'exports', {\n\tenumerable: true,\n\tget: assembleStyles\n});\n", "import { BaseCallbackHandler, } from \"../base.js\";\nexport class BaseTracer extends BaseCallbackHandler {\n    constructor(_fields) {\n        super(...arguments);\n        Object.defineProperty(this, \"runMap\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Map()\n        });\n    }\n    copy() {\n        return this;\n    }\n    _addChildRun(parentRun, childRun) {\n        parentRun.child_runs.push(childRun);\n    }\n    _startTrace(run) {\n        if (run.parent_run_id !== undefined) {\n            const parentRun = this.runMap.get(run.parent_run_id);\n            if (parentRun) {\n                this._addChildRun(parentRun, run);\n            }\n        }\n        this.runMap.set(run.id, run);\n    }\n    async _endTrace(run) {\n        const parentRun = run.parent_run_id !== undefined && this.runMap.get(run.parent_run_id);\n        if (parentRun) {\n            parentRun.child_execution_order = Math.max(parentRun.child_execution_order, run.child_execution_order);\n        }\n        else {\n            await this.persistRun(run);\n        }\n        this.runMap.delete(run.id);\n    }\n    _getExecutionOrder(parentRunId) {\n        const parentRun = parentRunId !== undefined && this.runMap.get(parentRunId);\n        // If a run has no parent then execution order is 1\n        if (!parentRun) {\n            return 1;\n        }\n        return parentRun.child_execution_order + 1;\n    }\n    async handleLLMStart(llm, prompts, runId, parentRunId, extraParams, tags, metadata) {\n        const execution_order = this._getExecutionOrder(parentRunId);\n        const start_time = Date.now();\n        const finalExtraParams = metadata\n            ? { ...extraParams, metadata }\n            : extraParams;\n        const run = {\n            id: runId,\n            name: llm.id[llm.id.length - 1],\n            parent_run_id: parentRunId,\n            start_time,\n            serialized: llm,\n            events: [\n                {\n                    name: \"start\",\n                    time: start_time,\n                },\n            ],\n            inputs: { prompts },\n            execution_order,\n            child_runs: [],\n            child_execution_order: execution_order,\n            run_type: \"llm\",\n            extra: finalExtraParams ?? {},\n            tags: tags || [],\n        };\n        this._startTrace(run);\n        await this.onLLMStart?.(run);\n    }\n    async handleChatModelStart(llm, messages, runId, parentRunId, extraParams, tags, metadata) {\n        const execution_order = this._getExecutionOrder(parentRunId);\n        const start_time = Date.now();\n        const finalExtraParams = metadata\n            ? { ...extraParams, metadata }\n            : extraParams;\n        const run = {\n            id: runId,\n            name: llm.id[llm.id.length - 1],\n            parent_run_id: parentRunId,\n            start_time,\n            serialized: llm,\n            events: [\n                {\n                    name: \"start\",\n                    time: start_time,\n                },\n            ],\n            inputs: { messages },\n            execution_order,\n            child_runs: [],\n            child_execution_order: execution_order,\n            run_type: \"llm\",\n            extra: finalExtraParams ?? {},\n            tags: tags || [],\n        };\n        this._startTrace(run);\n        await this.onLLMStart?.(run);\n    }\n    async handleLLMEnd(output, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"llm\") {\n            throw new Error(\"No LLM run to end.\");\n        }\n        run.end_time = Date.now();\n        run.outputs = output;\n        run.events.push({\n            name: \"end\",\n            time: run.end_time,\n        });\n        await this.onLLMEnd?.(run);\n        await this._endTrace(run);\n    }\n    async handleLLMError(error, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"llm\") {\n            throw new Error(\"No LLM run to end.\");\n        }\n        run.end_time = Date.now();\n        run.error = error.message;\n        run.events.push({\n            name: \"error\",\n            time: run.end_time,\n        });\n        await this.onLLMError?.(run);\n        await this._endTrace(run);\n    }\n    async handleChainStart(chain, inputs, runId, parentRunId, tags, metadata) {\n        const execution_order = this._getExecutionOrder(parentRunId);\n        const start_time = Date.now();\n        const run = {\n            id: runId,\n            name: chain.id[chain.id.length - 1],\n            parent_run_id: parentRunId,\n            start_time,\n            serialized: chain,\n            events: [\n                {\n                    name: \"start\",\n                    time: start_time,\n                },\n            ],\n            inputs,\n            execution_order,\n            child_execution_order: execution_order,\n            run_type: \"chain\",\n            child_runs: [],\n            extra: metadata ? { metadata } : {},\n            tags: tags || [],\n        };\n        this._startTrace(run);\n        await this.onChainStart?.(run);\n    }\n    async handleChainEnd(outputs, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"chain\") {\n            throw new Error(\"No chain run to end.\");\n        }\n        run.end_time = Date.now();\n        run.outputs = outputs;\n        run.events.push({\n            name: \"end\",\n            time: run.end_time,\n        });\n        await this.onChainEnd?.(run);\n        await this._endTrace(run);\n    }\n    async handleChainError(error, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"chain\") {\n            throw new Error(\"No chain run to end.\");\n        }\n        run.end_time = Date.now();\n        run.error = error.message;\n        run.events.push({\n            name: \"error\",\n            time: run.end_time,\n        });\n        await this.onChainError?.(run);\n        await this._endTrace(run);\n    }\n    async handleToolStart(tool, input, runId, parentRunId, tags, metadata) {\n        const execution_order = this._getExecutionOrder(parentRunId);\n        const start_time = Date.now();\n        const run = {\n            id: runId,\n            name: tool.id[tool.id.length - 1],\n            parent_run_id: parentRunId,\n            start_time,\n            serialized: tool,\n            events: [\n                {\n                    name: \"start\",\n                    time: start_time,\n                },\n            ],\n            inputs: { input },\n            execution_order,\n            child_execution_order: execution_order,\n            run_type: \"tool\",\n            child_runs: [],\n            extra: metadata ? { metadata } : {},\n            tags: tags || [],\n        };\n        this._startTrace(run);\n        await this.onToolStart?.(run);\n    }\n    async handleToolEnd(output, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"tool\") {\n            throw new Error(\"No tool run to end\");\n        }\n        run.end_time = Date.now();\n        run.outputs = { output };\n        run.events.push({\n            name: \"end\",\n            time: run.end_time,\n        });\n        await this.onToolEnd?.(run);\n        await this._endTrace(run);\n    }\n    async handleToolError(error, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"tool\") {\n            throw new Error(\"No tool run to end\");\n        }\n        run.end_time = Date.now();\n        run.error = error.message;\n        run.events.push({\n            name: \"error\",\n            time: run.end_time,\n        });\n        await this.onToolError?.(run);\n        await this._endTrace(run);\n    }\n    async handleAgentAction(action, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"chain\") {\n            return;\n        }\n        const agentRun = run;\n        agentRun.actions = agentRun.actions || [];\n        agentRun.actions.push(action);\n        agentRun.events.push({\n            name: \"agent_action\",\n            time: Date.now(),\n            kwargs: { action },\n        });\n        await this.onAgentAction?.(run);\n    }\n    async handleAgentEnd(action, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"chain\") {\n            return;\n        }\n        run.events.push({\n            name: \"agent_end\",\n            time: Date.now(),\n            kwargs: { action },\n        });\n        await this.onAgentEnd?.(run);\n    }\n    async handleRetrieverStart(retriever, query, runId, parentRunId, tags, metadata) {\n        const execution_order = this._getExecutionOrder(parentRunId);\n        const start_time = Date.now();\n        const run = {\n            id: runId,\n            name: retriever.id[retriever.id.length - 1],\n            parent_run_id: parentRunId,\n            start_time,\n            serialized: retriever,\n            events: [\n                {\n                    name: \"start\",\n                    time: start_time,\n                },\n            ],\n            inputs: { query },\n            execution_order,\n            child_execution_order: execution_order,\n            run_type: \"retriever\",\n            child_runs: [],\n            extra: metadata ? { metadata } : {},\n            tags: tags || [],\n        };\n        this._startTrace(run);\n        await this.onRetrieverStart?.(run);\n    }\n    async handleRetrieverEnd(documents, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"retriever\") {\n            throw new Error(\"No retriever run to end\");\n        }\n        run.end_time = Date.now();\n        run.outputs = { documents };\n        run.events.push({\n            name: \"end\",\n            time: run.end_time,\n        });\n        await this.onRetrieverEnd?.(run);\n        await this._endTrace(run);\n    }\n    async handleRetrieverError(error, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"retriever\") {\n            throw new Error(\"No retriever run to end\");\n        }\n        run.end_time = Date.now();\n        run.error = error.message;\n        run.events.push({\n            name: \"error\",\n            time: run.end_time,\n        });\n        await this.onRetrieverError?.(run);\n        await this._endTrace(run);\n    }\n    async handleText(text, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"chain\") {\n            return;\n        }\n        run.events.push({\n            name: \"text\",\n            time: Date.now(),\n            kwargs: { text },\n        });\n        await this.onText?.(run);\n    }\n    async handleLLMNewToken(token, idx, runId) {\n        const run = this.runMap.get(runId);\n        if (!run || run?.run_type !== \"llm\") {\n            return;\n        }\n        run.events.push({\n            name: \"new_token\",\n            time: Date.now(),\n            kwargs: { token, idx },\n        });\n        await this.onLLMNewToken?.(run);\n    }\n}\n", "import styles from \"ansi-styles\";\nimport { BaseTracer } from \"./tracer.js\";\nfunction wrap(style, text) {\n    return `${style.open}${text}${style.close}`;\n}\nfunction tryJsonStringify(obj, fallback) {\n    try {\n        return JSON.stringify(obj, null, 2);\n    }\n    catch (err) {\n        return fallback;\n    }\n}\nfunction elapsed(run) {\n    if (!run.end_time)\n        return \"\";\n    const elapsed = run.end_time - run.start_time;\n    if (elapsed < 1000) {\n        return `${elapsed}ms`;\n    }\n    return `${(elapsed / 1000).toFixed(2)}s`;\n}\nconst { color } = styles;\nexport class ConsoleCallbackHandler extends BaseTracer {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"console_callback_handler\"\n        });\n    }\n    persistRun(_run) {\n        return Promise.resolve();\n    }\n    // utility methods\n    getParents(run) {\n        const parents = [];\n        let currentRun = run;\n        while (currentRun.parent_run_id) {\n            const parent = this.runMap.get(currentRun.parent_run_id);\n            if (parent) {\n                parents.push(parent);\n                currentRun = parent;\n            }\n            else {\n                break;\n            }\n        }\n        return parents;\n    }\n    getBreadcrumbs(run) {\n        const parents = this.getParents(run).reverse();\n        const string = [...parents, run]\n            .map((parent, i, arr) => {\n            const name = `${parent.execution_order}:${parent.run_type}:${parent.name}`;\n            return i === arr.length - 1 ? wrap(styles.bold, name) : name;\n        })\n            .join(\" > \");\n        return wrap(color.grey, string);\n    }\n    // logging methods\n    onChainStart(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.green, \"[chain/start]\")} [${crumbs}] Entering Chain run with input: ${tryJsonStringify(run.inputs, \"[inputs]\")}`);\n    }\n    onChainEnd(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.cyan, \"[chain/end]\")} [${crumbs}] [${elapsed(run)}] Exiting Chain run with output: ${tryJsonStringify(run.outputs, \"[outputs]\")}`);\n    }\n    onChainError(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.red, \"[chain/error]\")} [${crumbs}] [${elapsed(run)}] Chain run errored with error: ${tryJsonStringify(run.error, \"[error]\")}`);\n    }\n    onLLMStart(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        const inputs = \"prompts\" in run.inputs\n            ? { prompts: run.inputs.prompts.map((p) => p.trim()) }\n            : run.inputs;\n        console.log(`${wrap(color.green, \"[llm/start]\")} [${crumbs}] Entering LLM run with input: ${tryJsonStringify(inputs, \"[inputs]\")}`);\n    }\n    onLLMEnd(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.cyan, \"[llm/end]\")} [${crumbs}] [${elapsed(run)}] Exiting LLM run with output: ${tryJsonStringify(run.outputs, \"[response]\")}`);\n    }\n    onLLMError(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.red, \"[llm/error]\")} [${crumbs}] [${elapsed(run)}] LLM run errored with error: ${tryJsonStringify(run.error, \"[error]\")}`);\n    }\n    onToolStart(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.green, \"[tool/start]\")} [${crumbs}] Entering Tool run with input: \"${run.inputs.input?.trim()}\"`);\n    }\n    onToolEnd(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.cyan, \"[tool/end]\")} [${crumbs}] [${elapsed(run)}] Exiting Tool run with output: \"${run.outputs?.output?.trim()}\"`);\n    }\n    onToolError(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.red, \"[tool/error]\")} [${crumbs}] [${elapsed(run)}] Tool run errored with error: ${tryJsonStringify(run.error, \"[error]\")}`);\n    }\n    onRetrieverStart(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.green, \"[retriever/start]\")} [${crumbs}] Entering Retriever run with input: ${tryJsonStringify(run.inputs, \"[inputs]\")}`);\n    }\n    onRetrieverEnd(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.cyan, \"[retriever/end]\")} [${crumbs}] [${elapsed(run)}] Exiting Retriever run with output: ${tryJsonStringify(run.outputs, \"[outputs]\")}`);\n    }\n    onRetrieverError(run) {\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.red, \"[retriever/error]\")} [${crumbs}] [${elapsed(run)}] Retriever run errored with error: ${tryJsonStringify(run.error, \"[error]\")}`);\n    }\n    onAgentAction(run) {\n        const agentRun = run;\n        const crumbs = this.getBreadcrumbs(run);\n        console.log(`${wrap(color.blue, \"[agent/action]\")} [${crumbs}] Agent selected action: ${tryJsonStringify(agentRun.actions[agentRun.actions.length - 1], \"[action]\")}`);\n    }\n}\n", "function RetryOperation(timeouts, options) {\n  // Compatibility for the old (timeouts, retryForever) signature\n  if (typeof options === 'boolean') {\n    options = { forever: options };\n  }\n\n  this._originalTimeouts = JSON.parse(JSON.stringify(timeouts));\n  this._timeouts = timeouts;\n  this._options = options || {};\n  this._maxRetryTime = options && options.maxRetryTime || Infinity;\n  this._fn = null;\n  this._errors = [];\n  this._attempts = 1;\n  this._operationTimeout = null;\n  this._operationTimeoutCb = null;\n  this._timeout = null;\n  this._operationStart = null;\n  this._timer = null;\n\n  if (this._options.forever) {\n    this._cachedTimeouts = this._timeouts.slice(0);\n  }\n}\nmodule.exports = RetryOperation;\n\nRetryOperation.prototype.reset = function() {\n  this._attempts = 1;\n  this._timeouts = this._originalTimeouts.slice(0);\n}\n\nRetryOperation.prototype.stop = function() {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n  if (this._timer) {\n    clearTimeout(this._timer);\n  }\n\n  this._timeouts       = [];\n  this._cachedTimeouts = null;\n};\n\nRetryOperation.prototype.retry = function(err) {\n  if (this._timeout) {\n    clearTimeout(this._timeout);\n  }\n\n  if (!err) {\n    return false;\n  }\n  var currentTime = new Date().getTime();\n  if (err && currentTime - this._operationStart >= this._maxRetryTime) {\n    this._errors.push(err);\n    this._errors.unshift(new Error('RetryOperation timeout occurred'));\n    return false;\n  }\n\n  this._errors.push(err);\n\n  var timeout = this._timeouts.shift();\n  if (timeout === undefined) {\n    if (this._cachedTimeouts) {\n      // retry forever, only keep last error\n      this._errors.splice(0, this._errors.length - 1);\n      timeout = this._cachedTimeouts.slice(-1);\n    } else {\n      return false;\n    }\n  }\n\n  var self = this;\n  this._timer = setTimeout(function() {\n    self._attempts++;\n\n    if (self._operationTimeoutCb) {\n      self._timeout = setTimeout(function() {\n        self._operationTimeoutCb(self._attempts);\n      }, self._operationTimeout);\n\n      if (self._options.unref) {\n          self._timeout.unref();\n      }\n    }\n\n    self._fn(self._attempts);\n  }, timeout);\n\n  if (this._options.unref) {\n      this._timer.unref();\n  }\n\n  return true;\n};\n\nRetryOperation.prototype.attempt = function(fn, timeoutOps) {\n  this._fn = fn;\n\n  if (timeoutOps) {\n    if (timeoutOps.timeout) {\n      this._operationTimeout = timeoutOps.timeout;\n    }\n    if (timeoutOps.cb) {\n      this._operationTimeoutCb = timeoutOps.cb;\n    }\n  }\n\n  var self = this;\n  if (this._operationTimeoutCb) {\n    this._timeout = setTimeout(function() {\n      self._operationTimeoutCb();\n    }, self._operationTimeout);\n  }\n\n  this._operationStart = new Date().getTime();\n\n  this._fn(this._attempts);\n};\n\nRetryOperation.prototype.try = function(fn) {\n  console.log('Using RetryOperation.try() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = function(fn) {\n  console.log('Using RetryOperation.start() is deprecated');\n  this.attempt(fn);\n};\n\nRetryOperation.prototype.start = RetryOperation.prototype.try;\n\nRetryOperation.prototype.errors = function() {\n  return this._errors;\n};\n\nRetryOperation.prototype.attempts = function() {\n  return this._attempts;\n};\n\nRetryOperation.prototype.mainError = function() {\n  if (this._errors.length === 0) {\n    return null;\n  }\n\n  var counts = {};\n  var mainError = null;\n  var mainErrorCount = 0;\n\n  for (var i = 0; i < this._errors.length; i++) {\n    var error = this._errors[i];\n    var message = error.message;\n    var count = (counts[message] || 0) + 1;\n\n    counts[message] = count;\n\n    if (count >= mainErrorCount) {\n      mainError = error;\n      mainErrorCount = count;\n    }\n  }\n\n  return mainError;\n};\n", "var RetryOperation = require('./retry_operation');\n\nexports.operation = function(options) {\n  var timeouts = exports.timeouts(options);\n  return new RetryOperation(timeouts, {\n      forever: options && (options.forever || options.retries === Infinity),\n      unref: options && options.unref,\n      maxRetryTime: options && options.maxRetryTime\n  });\n};\n\nexports.timeouts = function(options) {\n  if (options instanceof Array) {\n    return [].concat(options);\n  }\n\n  var opts = {\n    retries: 10,\n    factor: 2,\n    minTimeout: 1 * 1000,\n    maxTimeout: Infinity,\n    randomize: false\n  };\n  for (var key in options) {\n    opts[key] = options[key];\n  }\n\n  if (opts.minTimeout > opts.maxTimeout) {\n    throw new Error('minTimeout is greater than maxTimeout');\n  }\n\n  var timeouts = [];\n  for (var i = 0; i < opts.retries; i++) {\n    timeouts.push(this.createTimeout(i, opts));\n  }\n\n  if (options && options.forever && !timeouts.length) {\n    timeouts.push(this.createTimeout(i, opts));\n  }\n\n  // sort the array numerically ascending\n  timeouts.sort(function(a,b) {\n    return a - b;\n  });\n\n  return timeouts;\n};\n\nexports.createTimeout = function(attempt, opts) {\n  var random = (opts.randomize)\n    ? (Math.random() + 1)\n    : 1;\n\n  var timeout = Math.round(random * Math.max(opts.minTimeout, 1) * Math.pow(opts.factor, attempt));\n  timeout = Math.min(timeout, opts.maxTimeout);\n\n  return timeout;\n};\n\nexports.wrap = function(obj, options, methods) {\n  if (options instanceof Array) {\n    methods = options;\n    options = null;\n  }\n\n  if (!methods) {\n    methods = [];\n    for (var key in obj) {\n      if (typeof obj[key] === 'function') {\n        methods.push(key);\n      }\n    }\n  }\n\n  for (var i = 0; i < methods.length; i++) {\n    var method   = methods[i];\n    var original = obj[method];\n\n    obj[method] = function retryWrapper(original) {\n      var op       = exports.operation(options);\n      var args     = Array.prototype.slice.call(arguments, 1);\n      var callback = args.pop();\n\n      args.push(function(err) {\n        if (op.retry(err)) {\n          return;\n        }\n        if (err) {\n          arguments[0] = op.mainError();\n        }\n        callback.apply(this, arguments);\n      });\n\n      op.attempt(function() {\n        original.apply(obj, args);\n      });\n    }.bind(obj, original);\n    obj[method].options = options;\n  }\n};\n", "module.exports = require('./lib/retry');", "'use strict';\nconst retry = require('retry');\n\nconst networkErrorMsgs = [\n\t'Failed to fetch', // Chrome\n\t'NetworkError when attempting to fetch resource.', // Firefox\n\t'The Internet connection appears to be offline.', // Safari\n\t'Network request failed' // `cross-fetch`\n];\n\nclass AbortError extends Error {\n\tconstructor(message) {\n\t\tsuper();\n\n\t\tif (message instanceof Error) {\n\t\t\tthis.originalError = message;\n\t\t\t({message} = message);\n\t\t} else {\n\t\t\tthis.originalError = new Error(message);\n\t\t\tthis.originalError.stack = this.stack;\n\t\t}\n\n\t\tthis.name = 'AbortError';\n\t\tthis.message = message;\n\t}\n}\n\nconst decorateErrorWithCounts = (error, attemptNumber, options) => {\n\t// Minus 1 from attemptNumber because the first attempt does not count as a retry\n\tconst retriesLeft = options.retries - (attemptNumber - 1);\n\n\terror.attemptNumber = attemptNumber;\n\terror.retriesLeft = retriesLeft;\n\treturn error;\n};\n\nconst isNetworkError = errorMessage => networkErrorMsgs.includes(errorMessage);\n\nconst pRetry = (input, options) => new Promise((resolve, reject) => {\n\toptions = {\n\t\tonFailedAttempt: () => {},\n\t\tretries: 10,\n\t\t...options\n\t};\n\n\tconst operation = retry.operation(options);\n\n\toperation.attempt(async attemptNumber => {\n\t\ttry {\n\t\t\tresolve(await input(attemptNumber));\n\t\t} catch (error) {\n\t\t\tif (!(error instanceof Error)) {\n\t\t\t\treject(new TypeError(`Non-error was thrown: \"${error}\". You should only throw errors.`));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (error instanceof AbortError) {\n\t\t\t\toperation.stop();\n\t\t\t\treject(error.originalError);\n\t\t\t} else if (error instanceof TypeError && !isNetworkError(error.message)) {\n\t\t\t\toperation.stop();\n\t\t\t\treject(error);\n\t\t\t} else {\n\t\t\t\tdecorateErrorWithCounts(error, attemptNumber, options);\n\n\t\t\t\ttry {\n\t\t\t\t\tawait options.onFailedAttempt(error);\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (!operation.retry(error)) {\n\t\t\t\t\treject(operation.mainError());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n});\n\nmodule.exports = pRetry;\n// TODO: remove this in the next major version\nmodule.exports.default = pRetry;\n\nmodule.exports.AbortError = AbortError;\n", "'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n", "'use strict';\nmodule.exports = (promise, onFinally) => {\n\tonFinally = onFinally || (() => {});\n\n\treturn promise.then(\n\t\tval => new Promise(resolve => {\n\t\t\tresolve(onFinally());\n\t\t}).then(() => val),\n\t\terr => new Promise(resolve => {\n\t\t\tresolve(onFinally());\n\t\t}).then(() => {\n\t\t\tthrow err;\n\t\t})\n\t);\n};\n", "'use strict';\n\nconst pFinally = require('p-finally');\n\nclass TimeoutError extends Error {\n\tconstructor(message) {\n\t\tsuper(message);\n\t\tthis.name = 'TimeoutError';\n\t}\n}\n\nconst pTimeout = (promise, milliseconds, fallback) => new Promise((resolve, reject) => {\n\tif (typeof milliseconds !== 'number' || milliseconds < 0) {\n\t\tthrow new TypeError('Expected `milliseconds` to be a positive number');\n\t}\n\n\tif (milliseconds === Infinity) {\n\t\tresolve(promise);\n\t\treturn;\n\t}\n\n\tconst timer = setTimeout(() => {\n\t\tif (typeof fallback === 'function') {\n\t\t\ttry {\n\t\t\t\tresolve(fallback());\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst message = typeof fallback === 'string' ? fallback : `Promise timed out after ${milliseconds} milliseconds`;\n\t\tconst timeoutError = fallback instanceof Error ? fallback : new TimeoutError(message);\n\n\t\tif (typeof promise.cancel === 'function') {\n\t\t\tpromise.cancel();\n\t\t}\n\n\t\treject(timeoutError);\n\t}, milliseconds);\n\n\t// TODO: Use native `finally` keyword when targeting Node.js 10\n\tpFinally(\n\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\tpromise.then(resolve, reject),\n\t\t() => {\n\t\t\tclearTimeout(timer);\n\t\t}\n\t);\n});\n\nmodule.exports = pTimeout;\n// TODO: Remove this for the next major release\nmodule.exports.default = pTimeout;\n\nmodule.exports.TimeoutError = TimeoutError;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Port of lower_bound from https://en.cppreference.com/w/cpp/algorithm/lower_bound\n// Used to compute insertion index to keep queue sorted after insertion\nfunction lowerBound(array, value, comparator) {\n    let first = 0;\n    let count = array.length;\n    while (count > 0) {\n        const step = (count / 2) | 0;\n        let it = first + step;\n        if (comparator(array[it], value) <= 0) {\n            first = ++it;\n            count -= step + 1;\n        }\n        else {\n            count = step;\n        }\n    }\n    return first;\n}\nexports.default = lowerBound;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst lower_bound_1 = require(\"./lower-bound\");\nclass PriorityQueue {\n    constructor() {\n        this._queue = [];\n    }\n    enqueue(run, options) {\n        options = Object.assign({ priority: 0 }, options);\n        const element = {\n            priority: options.priority,\n            run\n        };\n        if (this.size && this._queue[this.size - 1].priority >= options.priority) {\n            this._queue.push(element);\n            return;\n        }\n        const index = lower_bound_1.default(this._queue, element, (a, b) => b.priority - a.priority);\n        this._queue.splice(index, 0, element);\n    }\n    dequeue() {\n        const item = this._queue.shift();\n        return item === null || item === void 0 ? void 0 : item.run;\n    }\n    filter(options) {\n        return this._queue.filter((element) => element.priority === options.priority).map((element) => element.run);\n    }\n    get size() {\n        return this._queue.length;\n    }\n}\nexports.default = PriorityQueue;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst EventEmitter = require(\"eventemitter3\");\nconst p_timeout_1 = require(\"p-timeout\");\nconst priority_queue_1 = require(\"./priority-queue\");\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst empty = () => { };\nconst timeoutError = new p_timeout_1.TimeoutError();\n/**\nPromise queue with concurrency control.\n*/\nclass PQueue extends EventEmitter {\n    constructor(options) {\n        var _a, _b, _c, _d;\n        super();\n        this._intervalCount = 0;\n        this._intervalEnd = 0;\n        this._pendingCount = 0;\n        this._resolveEmpty = empty;\n        this._resolveIdle = empty;\n        // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n        options = Object.assign({ carryoverConcurrencyCount: false, intervalCap: Infinity, interval: 0, concurrency: Infinity, autoStart: true, queueClass: priority_queue_1.default }, options);\n        if (!(typeof options.intervalCap === 'number' && options.intervalCap >= 1)) {\n            throw new TypeError(`Expected \\`intervalCap\\` to be a number from 1 and up, got \\`${(_b = (_a = options.intervalCap) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : ''}\\` (${typeof options.intervalCap})`);\n        }\n        if (options.interval === undefined || !(Number.isFinite(options.interval) && options.interval >= 0)) {\n            throw new TypeError(`Expected \\`interval\\` to be a finite number >= 0, got \\`${(_d = (_c = options.interval) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : ''}\\` (${typeof options.interval})`);\n        }\n        this._carryoverConcurrencyCount = options.carryoverConcurrencyCount;\n        this._isIntervalIgnored = options.intervalCap === Infinity || options.interval === 0;\n        this._intervalCap = options.intervalCap;\n        this._interval = options.interval;\n        this._queue = new options.queueClass();\n        this._queueClass = options.queueClass;\n        this.concurrency = options.concurrency;\n        this._timeout = options.timeout;\n        this._throwOnTimeout = options.throwOnTimeout === true;\n        this._isPaused = options.autoStart === false;\n    }\n    get _doesIntervalAllowAnother() {\n        return this._isIntervalIgnored || this._intervalCount < this._intervalCap;\n    }\n    get _doesConcurrentAllowAnother() {\n        return this._pendingCount < this._concurrency;\n    }\n    _next() {\n        this._pendingCount--;\n        this._tryToStartAnother();\n        this.emit('next');\n    }\n    _resolvePromises() {\n        this._resolveEmpty();\n        this._resolveEmpty = empty;\n        if (this._pendingCount === 0) {\n            this._resolveIdle();\n            this._resolveIdle = empty;\n            this.emit('idle');\n        }\n    }\n    _onResumeInterval() {\n        this._onInterval();\n        this._initializeIntervalIfNeeded();\n        this._timeoutId = undefined;\n    }\n    _isIntervalPaused() {\n        const now = Date.now();\n        if (this._intervalId === undefined) {\n            const delay = this._intervalEnd - now;\n            if (delay < 0) {\n                // Act as the interval was done\n                // We don't need to resume it here because it will be resumed on line 160\n                this._intervalCount = (this._carryoverConcurrencyCount) ? this._pendingCount : 0;\n            }\n            else {\n                // Act as the interval is pending\n                if (this._timeoutId === undefined) {\n                    this._timeoutId = setTimeout(() => {\n                        this._onResumeInterval();\n                    }, delay);\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n    _tryToStartAnother() {\n        if (this._queue.size === 0) {\n            // We can clear the interval (\"pause\")\n            // Because we can redo it later (\"resume\")\n            if (this._intervalId) {\n                clearInterval(this._intervalId);\n            }\n            this._intervalId = undefined;\n            this._resolvePromises();\n            return false;\n        }\n        if (!this._isPaused) {\n            const canInitializeInterval = !this._isIntervalPaused();\n            if (this._doesIntervalAllowAnother && this._doesConcurrentAllowAnother) {\n                const job = this._queue.dequeue();\n                if (!job) {\n                    return false;\n                }\n                this.emit('active');\n                job();\n                if (canInitializeInterval) {\n                    this._initializeIntervalIfNeeded();\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n    _initializeIntervalIfNeeded() {\n        if (this._isIntervalIgnored || this._intervalId !== undefined) {\n            return;\n        }\n        this._intervalId = setInterval(() => {\n            this._onInterval();\n        }, this._interval);\n        this._intervalEnd = Date.now() + this._interval;\n    }\n    _onInterval() {\n        if (this._intervalCount === 0 && this._pendingCount === 0 && this._intervalId) {\n            clearInterval(this._intervalId);\n            this._intervalId = undefined;\n        }\n        this._intervalCount = this._carryoverConcurrencyCount ? this._pendingCount : 0;\n        this._processQueue();\n    }\n    /**\n    Executes all queued functions until it reaches the limit.\n    */\n    _processQueue() {\n        // eslint-disable-next-line no-empty\n        while (this._tryToStartAnother()) { }\n    }\n    get concurrency() {\n        return this._concurrency;\n    }\n    set concurrency(newConcurrency) {\n        if (!(typeof newConcurrency === 'number' && newConcurrency >= 1)) {\n            throw new TypeError(`Expected \\`concurrency\\` to be a number from 1 and up, got \\`${newConcurrency}\\` (${typeof newConcurrency})`);\n        }\n        this._concurrency = newConcurrency;\n        this._processQueue();\n    }\n    /**\n    Adds a sync or async task to the queue. Always returns a promise.\n    */\n    async add(fn, options = {}) {\n        return new Promise((resolve, reject) => {\n            const run = async () => {\n                this._pendingCount++;\n                this._intervalCount++;\n                try {\n                    const operation = (this._timeout === undefined && options.timeout === undefined) ? fn() : p_timeout_1.default(Promise.resolve(fn()), (options.timeout === undefined ? this._timeout : options.timeout), () => {\n                        if (options.throwOnTimeout === undefined ? this._throwOnTimeout : options.throwOnTimeout) {\n                            reject(timeoutError);\n                        }\n                        return undefined;\n                    });\n                    resolve(await operation);\n                }\n                catch (error) {\n                    reject(error);\n                }\n                this._next();\n            };\n            this._queue.enqueue(run, options);\n            this._tryToStartAnother();\n            this.emit('add');\n        });\n    }\n    /**\n    Same as `.add()`, but accepts an array of sync or async functions.\n\n    @returns A promise that resolves when all functions are resolved.\n    */\n    async addAll(functions, options) {\n        return Promise.all(functions.map(async (function_) => this.add(function_, options)));\n    }\n    /**\n    Start (or resume) executing enqueued tasks within concurrency limit. No need to call this if queue is not paused (via `options.autoStart = false` or by `.pause()` method.)\n    */\n    start() {\n        if (!this._isPaused) {\n            return this;\n        }\n        this._isPaused = false;\n        this._processQueue();\n        return this;\n    }\n    /**\n    Put queue execution on hold.\n    */\n    pause() {\n        this._isPaused = true;\n    }\n    /**\n    Clear the queue.\n    */\n    clear() {\n        this._queue = new this._queueClass();\n    }\n    /**\n    Can be called multiple times. Useful if you for example add additional items at a later time.\n\n    @returns A promise that settles when the queue becomes empty.\n    */\n    async onEmpty() {\n        // Instantly resolve if the queue is empty\n        if (this._queue.size === 0) {\n            return;\n        }\n        return new Promise(resolve => {\n            const existingResolve = this._resolveEmpty;\n            this._resolveEmpty = () => {\n                existingResolve();\n                resolve();\n            };\n        });\n    }\n    /**\n    The difference with `.onEmpty` is that `.onIdle` guarantees that all work from the queue has finished. `.onEmpty` merely signals that the queue is empty, but it could mean that some promises haven't completed yet.\n\n    @returns A promise that settles when the queue becomes empty, and all promises have completed; `queue.size === 0 && queue.pending === 0`.\n    */\n    async onIdle() {\n        // Instantly resolve if none pending and if nothing else is queued\n        if (this._pendingCount === 0 && this._queue.size === 0) {\n            return;\n        }\n        return new Promise(resolve => {\n            const existingResolve = this._resolveIdle;\n            this._resolveIdle = () => {\n                existingResolve();\n                resolve();\n            };\n        });\n    }\n    /**\n    Size of the queue.\n    */\n    get size() {\n        return this._queue.size;\n    }\n    /**\n    Size of the queue, filtered by the given options.\n\n    For example, this can be used to find the number of items remaining in the queue with a specific priority level.\n    */\n    sizeBy(options) {\n        // eslint-disable-next-line unicorn/no-fn-reference-in-iterator\n        return this._queue.filter(options).length;\n    }\n    /**\n    Number of pending promises.\n    */\n    get pending() {\n        return this._pendingCount;\n    }\n    /**\n    Whether the queue is currently paused.\n    */\n    get isPaused() {\n        return this._isPaused;\n    }\n    get timeout() {\n        return this._timeout;\n    }\n    /**\n    Set the timeout for future operations.\n    */\n    set timeout(milliseconds) {\n        this._timeout = milliseconds;\n    }\n}\nexports.default = PQueue;\n", "import pRetry from \"p-retry\";\nimport PQueueMod from \"p-queue\";\nconst STATUS_NO_RETRY = [\n    400,\n    401,\n    403,\n    404,\n    405,\n    406,\n    407,\n    408,\n    409, // Conflict\n];\n/**\n * A class that can be used to make async calls with concurrency and retry logic.\n *\n * This is useful for making calls to any kind of \"expensive\" external resource,\n * be it because it's rate-limited, subject to network issues, etc.\n *\n * Concurrent calls are limited by the `maxConcurrency` parameter, which defaults\n * to `Infinity`. This means that by default, all calls will be made in parallel.\n *\n * Retries are limited by the `maxRetries` parameter, which defaults to 6. This\n * means that by default, each call will be retried up to 6 times, with an\n * exponential backoff between each attempt.\n */\nexport class AsyncCaller {\n    constructor(params) {\n        Object.defineProperty(this, \"maxConcurrency\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"maxRetries\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"queue\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.maxConcurrency = params.maxConcurrency ?? Infinity;\n        this.maxRetries = params.maxRetries ?? 6;\n        const PQueue = \"default\" in PQueueMod ? PQueueMod.default : PQueueMod;\n        this.queue = new PQueue({ concurrency: this.maxConcurrency });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    call(callable, ...args) {\n        return this.queue.add(() => pRetry(() => callable(...args).catch((error) => {\n            // eslint-disable-next-line no-instanceof/no-instanceof\n            if (error instanceof Error) {\n                throw error;\n            }\n            else {\n                throw new Error(error);\n            }\n        }), {\n            onFailedAttempt(error) {\n                if (error.message.startsWith(\"Cancel\") ||\n                    error.message.startsWith(\"TimeoutError\") ||\n                    error.message.startsWith(\"AbortError\")) {\n                    throw error;\n                }\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                if (error?.code === \"ECONNABORTED\") {\n                    throw error;\n                }\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                const status = error?.response?.status;\n                if (status && STATUS_NO_RETRY.includes(+status)) {\n                    throw error;\n                }\n            },\n            retries: this.maxRetries,\n            randomize: true,\n            // If needed we can change some of the defaults here,\n            // but they're quite sensible.\n        }), { throwOnTimeout: true });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    callWithOptions(options, callable, ...args) {\n        // Note this doesn't cancel the underlying request,\n        // when available prefer to use the signal option of the underlying call\n        if (options.signal) {\n            return Promise.race([\n                this.call(callable, ...args),\n                new Promise((_, reject) => {\n                    options.signal?.addEventListener(\"abort\", () => {\n                        reject(new Error(\"AbortError\"));\n                    });\n                }),\n            ]);\n        }\n        return this.call(callable, ...args);\n    }\n    fetch(...args) {\n        return this.call(() => fetch(...args).then((res) => (res.ok ? res : Promise.reject(res))));\n    }\n}\n", "export const isBrowser = () => typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\nexport const isWebWorker = () => typeof globalThis === \"object\" &&\n    globalThis.constructor &&\n    globalThis.constructor.name === \"DedicatedWorkerGlobalScope\";\nexport const isJsDom = () => (typeof window !== \"undefined\" && window.name === \"nodejs\") ||\n    (typeof navigator !== \"undefined\" &&\n        (navigator.userAgent.includes(\"Node.js\") ||\n            navigator.userAgent.includes(\"jsdom\")));\n// Supabase Edge Function provides a `Deno` global object\n// without `version` property\nexport const isDeno = () => typeof Deno !== \"undefined\";\n// Mark not-as-node if in Supabase Edge Function\nexport const isNode = () => typeof process !== \"undefined\" &&\n    typeof process.versions !== \"undefined\" &&\n    typeof process.versions.node !== \"undefined\" &&\n    !isDeno();\nexport const getEnv = () => {\n    let env;\n    if (isBrowser()) {\n        env = \"browser\";\n    }\n    else if (isNode()) {\n        env = \"node\";\n    }\n    else if (isWebWorker()) {\n        env = \"webworker\";\n    }\n    else if (isJsDom()) {\n        env = \"jsdom\";\n    }\n    else if (isDeno()) {\n        env = \"deno\";\n    }\n    else {\n        env = \"other\";\n    }\n    return env;\n};\nlet runtimeEnvironment;\nexport async function getRuntimeEnvironment() {\n    if (runtimeEnvironment === undefined) {\n        const env = getEnv();\n        runtimeEnvironment = {\n            library: \"langsmith\",\n            runtime: env,\n        };\n    }\n    return runtimeEnvironment;\n}\nexport function getEnvironmentVariable(name) {\n    // Certain Deno setups will throw an error if you try to access environment variables\n    // https://github.com/hwchase17/langchainjs/issues/1412\n    try {\n        return typeof process !== \"undefined\"\n            ? // eslint-disable-next-line no-process-env\n                process.env?.[name]\n            : undefined;\n    }\n    catch (e) {\n        return undefined;\n    }\n}\nexport function setEnvironmentVariable(name, value) {\n    if (typeof process !== \"undefined\") {\n        // eslint-disable-next-line no-process-env\n        process.env[name] = value;\n    }\n}\n", "import * as uuid from \"uuid\";\nimport { AsyncCaller } from \"./utils/async_caller.js\";\nimport { getEnvironmentVariable, getRuntimeEnvironment } from \"./utils/env.js\";\n// utility functions\nconst isLocalhost = (url) => {\n    const strippedUrl = url.replace(\"http://\", \"\").replace(\"https://\", \"\");\n    const hostname = strippedUrl.split(\"/\")[0].split(\":\")[0];\n    return (hostname === \"localhost\" || hostname === \"127.0.0.1\" || hostname === \"::1\");\n};\nconst raiseForStatus = async (response, operation) => {\n    // consume the response body to release the connection\n    // https://undici.nodejs.org/#/?id=garbage-collection\n    const body = await response.text();\n    if (!response.ok) {\n        throw new Error(`Failed to ${operation}: ${response.status} ${response.statusText} ${body}`);\n    }\n};\nasync function toArray(iterable) {\n    const result = [];\n    for await (const item of iterable) {\n        result.push(item);\n    }\n    return result;\n}\nfunction trimQuotes(str) {\n    if (str === undefined) {\n        return undefined;\n    }\n    return str\n        .trim()\n        .replace(/^\"(.*)\"$/, \"$1\")\n        .replace(/^'(.*)'$/, \"$1\");\n}\nexport class Client {\n    constructor(config = {}) {\n        Object.defineProperty(this, \"apiKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"apiUrl\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"caller\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"timeout_ms\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        const defaultConfig = Client.getDefaultClientConfig();\n        this.apiUrl = trimQuotes(config.apiUrl ?? defaultConfig.apiUrl) ?? \"\";\n        this.apiKey = trimQuotes(config.apiKey ?? defaultConfig.apiKey);\n        this.validateApiKeyIfHosted();\n        this.timeout_ms = config.timeout_ms ?? 4000;\n        this.caller = new AsyncCaller(config.callerOptions ?? {});\n    }\n    static getDefaultClientConfig() {\n        const apiKey = getEnvironmentVariable(\"LANGCHAIN_API_KEY\");\n        const apiUrl = getEnvironmentVariable(\"LANGCHAIN_ENDPOINT\") ??\n            (apiKey ? \"https://api.smith.langchain.com\" : \"http://localhost:1984\");\n        return {\n            apiUrl: apiUrl,\n            apiKey: apiKey,\n        };\n    }\n    validateApiKeyIfHosted() {\n        const isLocal = isLocalhost(this.apiUrl);\n        if (!isLocal && !this.apiKey) {\n            throw new Error(\"API key must be provided when using hosted LangSmith API\");\n        }\n    }\n    getHostUrl() {\n        if (isLocalhost(this.apiUrl)) {\n            return \"http://localhost\";\n        }\n        else if (this.apiUrl.split(\".\", 1)[0].includes(\"dev\")) {\n            return \"https://dev.smith.langchain.com\";\n        }\n        else {\n            return \"https://smith.langchain.com\";\n        }\n    }\n    get headers() {\n        const headers = {};\n        if (this.apiKey) {\n            headers[\"x-api-key\"] = `${this.apiKey}`;\n        }\n        return headers;\n    }\n    async _get(path, queryParams) {\n        const paramsString = queryParams?.toString() ?? \"\";\n        const url = `${this.apiUrl}${path}?${paramsString}`;\n        const response = await this.caller.call(fetch, url, {\n            method: \"GET\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n        });\n        if (!response.ok) {\n            throw new Error(`Failed to fetch ${path}: ${response.status} ${response.statusText}`);\n        }\n        return response.json();\n    }\n    async *_getPaginated(path, queryParams = new URLSearchParams()) {\n        let offset = Number(queryParams.get(\"offset\")) || 0;\n        const limit = Number(queryParams.get(\"limit\")) || 100;\n        while (true) {\n            queryParams.set(\"offset\", String(offset));\n            queryParams.set(\"limit\", String(limit));\n            const url = `${this.apiUrl}${path}?${queryParams}`;\n            const response = await this.caller.call(fetch, url, {\n                method: \"GET\",\n                headers: this.headers,\n                signal: AbortSignal.timeout(this.timeout_ms),\n            });\n            if (!response.ok) {\n                throw new Error(`Failed to fetch ${path}: ${response.status} ${response.statusText}`);\n            }\n            const items = await response.json();\n            if (items.length === 0) {\n                break;\n            }\n            yield items;\n            if (items.length < limit) {\n                break;\n            }\n            offset += items.length;\n        }\n    }\n    async createRun(run) {\n        const headers = { ...this.headers, \"Content-Type\": \"application/json\" };\n        const extra = run.extra ?? {};\n        const runtimeEnv = await getRuntimeEnvironment();\n        const session_name = run.project_name;\n        delete run.project_name;\n        const runCreate = {\n            session_name,\n            ...run,\n            extra: {\n                ...run.extra,\n                runtime: {\n                    ...runtimeEnv,\n                    ...extra.runtime,\n                },\n            },\n        };\n        const response = await this.caller.call(fetch, `${this.apiUrl}/runs`, {\n            method: \"POST\",\n            headers,\n            body: JSON.stringify(runCreate),\n            signal: AbortSignal.timeout(this.timeout_ms),\n        });\n        await raiseForStatus(response, \"create run\");\n    }\n    async updateRun(runId, run) {\n        const headers = { ...this.headers, \"Content-Type\": \"application/json\" };\n        const response = await this.caller.call(fetch, `${this.apiUrl}/runs/${runId}`, {\n            method: \"PATCH\",\n            headers,\n            body: JSON.stringify(run),\n            signal: AbortSignal.timeout(this.timeout_ms),\n        });\n        await raiseForStatus(response, \"update run\");\n    }\n    async readRun(runId, { loadChildRuns } = { loadChildRuns: false }) {\n        let run = await this._get(`/runs/${runId}`);\n        if (loadChildRuns && run.child_run_ids) {\n            run = await this._loadChildRuns(run);\n        }\n        return run;\n    }\n    async getRunUrl({ runId, }) {\n        const run = await this.readRun(runId);\n        if (!run.app_path) {\n            return undefined;\n        }\n        const baseUrl = this.getHostUrl();\n        return `${baseUrl}${run.app_path}`;\n    }\n    async _loadChildRuns(run) {\n        const childRuns = await toArray(this.listRuns({ id: run.child_run_ids }));\n        const treemap = {};\n        const runs = {};\n        childRuns.sort((a, b) => a.execution_order - b.execution_order);\n        for (const childRun of childRuns) {\n            if (childRun.parent_run_id === null ||\n                childRun.parent_run_id === undefined) {\n                throw new Error(`Child run ${childRun.id} has no parent`);\n            }\n            if (!(childRun.parent_run_id in treemap)) {\n                treemap[childRun.parent_run_id] = [];\n            }\n            treemap[childRun.parent_run_id].push(childRun);\n            runs[childRun.id] = childRun;\n        }\n        run.child_runs = treemap[run.id] || [];\n        for (const runId in treemap) {\n            if (runId !== run.id) {\n                runs[runId].child_runs = treemap[runId];\n            }\n        }\n        return run;\n    }\n    async *listRuns({ projectId, projectName, parentRunId, referenceExampleId, datasetId, startTime, endTime, executionOrder, runType, error, id, limit, offset, query, filter, orderBy, }) {\n        const queryParams = new URLSearchParams();\n        let projectId_ = projectId;\n        if (projectName) {\n            if (projectId) {\n                throw new Error(\"Only one of projectId or projectName may be given\");\n            }\n            projectId_ = (await this.readProject({ projectName })).id;\n        }\n        if (projectId_) {\n            queryParams.append(\"session\", projectId_);\n        }\n        if (parentRunId) {\n            queryParams.append(\"parent_run\", parentRunId);\n        }\n        if (referenceExampleId) {\n            queryParams.append(\"reference_example\", referenceExampleId);\n        }\n        if (datasetId) {\n            queryParams.append(\"dataset\", datasetId);\n        }\n        if (startTime) {\n            queryParams.append(\"start_time\", startTime.toISOString());\n        }\n        if (endTime) {\n            queryParams.append(\"end_time\", endTime.toISOString());\n        }\n        if (executionOrder) {\n            queryParams.append(\"execution_order\", executionOrder.toString());\n        }\n        if (runType) {\n            queryParams.append(\"run_type\", runType);\n        }\n        if (error !== undefined) {\n            queryParams.append(\"error\", error.toString());\n        }\n        if (id !== undefined) {\n            for (const id_ of id) {\n                queryParams.append(\"id\", id_);\n            }\n        }\n        if (limit !== undefined) {\n            queryParams.append(\"limit\", limit.toString());\n        }\n        if (offset !== undefined) {\n            queryParams.append(\"offset\", offset.toString());\n        }\n        if (query !== undefined) {\n            queryParams.append(\"query\", query);\n        }\n        if (filter !== undefined) {\n            queryParams.append(\"filter\", filter);\n        }\n        if (orderBy !== undefined) {\n            orderBy.map((order) => queryParams.append(\"order_by\", order));\n        }\n        for await (const runs of this._getPaginated(\"/runs\", queryParams)) {\n            yield* runs;\n        }\n    }\n    async deleteRun(runId) {\n        const response = await this.caller.call(fetch, `${this.apiUrl}/runs/${runId}`, {\n            method: \"DELETE\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n        });\n        await raiseForStatus(response, \"delete run\");\n    }\n    async createProject({ projectName, projectExtra, upsert, }) {\n        const upsert_ = upsert ? `?upsert=true` : \"\";\n        const endpoint = `${this.apiUrl}/sessions${upsert_}`;\n        const body = {\n            name: projectName,\n        };\n        if (projectExtra !== undefined) {\n            body[\"extra\"] = projectExtra;\n        }\n        const response = await this.caller.call(fetch, endpoint, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(body),\n            signal: AbortSignal.timeout(this.timeout_ms),\n        });\n        const result = await response.json();\n        if (!response.ok) {\n            throw new Error(`Failed to create session ${projectName}: ${response.status} ${response.statusText}`);\n        }\n        return result;\n    }\n    async readProject({ projectId, projectName, }) {\n        let path = \"/sessions\";\n        const params = new URLSearchParams();\n        if (projectId !== undefined && projectName !== undefined) {\n            throw new Error(\"Must provide either projectName or projectId, not both\");\n        }\n        else if (projectId !== undefined) {\n            path += `/${projectId}`;\n        }\n        else if (projectName !== undefined) {\n            params.append(\"name\", projectName);\n        }\n        else {\n            throw new Error(\"Must provide projectName or projectId\");\n        }\n        const response = await this._get(path, params);\n        let result;\n        if (Array.isArray(response)) {\n            if (response.length === 0) {\n                throw new Error(`Project[id=${projectId}, name=${projectName}] not found`);\n            }\n            result = response[0];\n        }\n        else {\n            result = response;\n        }\n        return result;\n    }\n    async *listProjects() {\n        for await (const projects of this._getPaginated(\"/sessions\")) {\n            yield* projects;\n        }\n    }\n    async deleteProject({ projectId, projectName, }) {\n        let projectId_;\n        if (projectId === undefined && projectName === undefined) {\n            throw new Error(\"Must provide projectName or projectId\");\n        }\n        else if (projectId !== undefined && projectName !== undefined) {\n            throw new Error(\"Must provide either projectName or projectId, not both\");\n        }\n        else if (projectId === undefined) {\n            projectId_ = (await this.readProject({ projectName })).id;\n        }\n        else {\n            projectId_ = projectId;\n        }\n        const response = await this.caller.call(fetch, `${this.apiUrl}/sessions/${projectId_}`, {\n            method: \"DELETE\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n        });\n        await raiseForStatus(response, `delete session ${projectId_} (${projectName})`);\n    }\n    async uploadCsv({ csvFile, fileName, inputKeys, outputKeys, description, dataType, name, }) {\n        const url = `${this.apiUrl}/datasets/upload`;\n        const formData = new FormData();\n        formData.append(\"file\", csvFile, fileName);\n        inputKeys.forEach((key) => {\n            formData.append(\"input_keys\", key);\n        });\n        outputKeys.forEach((key) => {\n            formData.append(\"output_keys\", key);\n        });\n        if (description) {\n            formData.append(\"description\", description);\n        }\n        if (dataType) {\n            formData.append(\"data_type\", dataType);\n        }\n        if (name) {\n            formData.append(\"name\", name);\n        }\n        const response = await this.caller.call(fetch, url, {\n            method: \"POST\",\n            headers: this.headers,\n            body: formData,\n            signal: AbortSignal.timeout(this.timeout_ms),\n        });\n        if (!response.ok) {\n            const result = await response.json();\n            if (result.detail && result.detail.includes(\"already exists\")) {\n                throw new Error(`Dataset ${fileName} already exists`);\n            }\n            throw new Error(`Failed to upload CSV: ${response.status} ${response.statusText}`);\n        }\n        const result = await response.json();\n        return result;\n    }\n    async createDataset(name, { description, dataType, } = {}) {\n        const body = {\n            name,\n            description,\n        };\n        if (dataType) {\n            body.data_type = dataType;\n        }\n        const response = await this.caller.call(fetch, `${this.apiUrl}/datasets`, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(body),\n            signal: AbortSignal.timeout(this.timeout_ms),\n        });\n        if (!response.ok) {\n            const result = await response.json();\n            if (result.detail && result.detail.includes(\"already exists\")) {\n                throw new Error(`Dataset ${name} already exists`);\n            }\n            throw new Error(`Failed to create dataset ${response.status} ${response.statusText}`);\n        }\n        const result = await response.json();\n        return result;\n    }\n    async readDataset({ datasetId, datasetName, }) {\n        let path = \"/datasets\";\n        // limit to 1 result\n        const params = new URLSearchParams({ limit: \"1\" });\n        if (datasetId !== undefined && datasetName !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetId !== undefined) {\n            path += `/${datasetId}`;\n        }\n        else if (datasetName !== undefined) {\n            params.append(\"name\", datasetName);\n        }\n        else {\n            throw new Error(\"Must provide datasetName or datasetId\");\n        }\n        const response = await this._get(path, params);\n        let result;\n        if (Array.isArray(response)) {\n            if (response.length === 0) {\n                throw new Error(`Dataset[id=${datasetId}, name=${datasetName}] not found`);\n            }\n            result = response[0];\n        }\n        else {\n            result = response;\n        }\n        return result;\n    }\n    async *listDatasets({ limit = 100, offset = 0, } = {}) {\n        const path = \"/datasets\";\n        const params = new URLSearchParams({\n            limit: limit.toString(),\n            offset: offset.toString(),\n        });\n        for await (const datasets of this._getPaginated(path, params)) {\n            yield* datasets;\n        }\n    }\n    async deleteDataset({ datasetId, datasetName, }) {\n        let path = \"/datasets\";\n        let datasetId_ = datasetId;\n        if (datasetId !== undefined && datasetName !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetName !== undefined) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId_ = dataset.id;\n        }\n        if (datasetId_ !== undefined) {\n            path += `/${datasetId_}`;\n        }\n        else {\n            throw new Error(\"Must provide datasetName or datasetId\");\n        }\n        const response = await this.caller.call(fetch, this.apiUrl + path, {\n            method: \"DELETE\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n        });\n        if (!response.ok) {\n            throw new Error(`Failed to delete ${path}: ${response.status} ${response.statusText}`);\n        }\n        await response.json();\n    }\n    async createExample(inputs, outputs, { datasetId, datasetName, createdAt, }) {\n        let datasetId_ = datasetId;\n        if (datasetId_ === undefined && datasetName === undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId\");\n        }\n        else if (datasetId_ !== undefined && datasetName !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetId_ === undefined) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId_ = dataset.id;\n        }\n        const createdAt_ = createdAt || new Date();\n        const data = {\n            dataset_id: datasetId_,\n            inputs,\n            outputs,\n            created_at: createdAt_.toISOString(),\n        };\n        const response = await this.caller.call(fetch, `${this.apiUrl}/examples`, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(data),\n            signal: AbortSignal.timeout(this.timeout_ms),\n        });\n        if (!response.ok) {\n            throw new Error(`Failed to create example: ${response.status} ${response.statusText}`);\n        }\n        const result = await response.json();\n        return result;\n    }\n    async readExample(exampleId) {\n        const path = `/examples/${exampleId}`;\n        return await this._get(path);\n    }\n    async *listExamples({ datasetId, datasetName, } = {}) {\n        let datasetId_;\n        if (datasetId !== undefined && datasetName !== undefined) {\n            throw new Error(\"Must provide either datasetName or datasetId, not both\");\n        }\n        else if (datasetId !== undefined) {\n            datasetId_ = datasetId;\n        }\n        else if (datasetName !== undefined) {\n            const dataset = await this.readDataset({ datasetName });\n            datasetId_ = dataset.id;\n        }\n        else {\n            throw new Error(\"Must provide a datasetName or datasetId\");\n        }\n        const params = new URLSearchParams({ dataset: datasetId_ });\n        for await (const examples of this._getPaginated(\"/examples\", params)) {\n            yield* examples;\n        }\n    }\n    async deleteExample(exampleId) {\n        const path = `/examples/${exampleId}`;\n        const response = await this.caller.call(fetch, this.apiUrl + path, {\n            method: \"DELETE\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n        });\n        if (!response.ok) {\n            throw new Error(`Failed to delete ${path}: ${response.status} ${response.statusText}`);\n        }\n        await response.json();\n    }\n    async updateExample(exampleId, update) {\n        const response = await this.caller.call(fetch, `${this.apiUrl}/examples/${exampleId}`, {\n            method: \"PATCH\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(update),\n            signal: AbortSignal.timeout(this.timeout_ms),\n        });\n        if (!response.ok) {\n            throw new Error(`Failed to update example ${exampleId}: ${response.status} ${response.statusText}`);\n        }\n        const result = await response.json();\n        return result;\n    }\n    async evaluateRun(run, evaluator, { sourceInfo, loadChildRuns, } = { loadChildRuns: false }) {\n        let run_;\n        if (typeof run === \"string\") {\n            run_ = await this.readRun(run, { loadChildRuns });\n        }\n        else if (typeof run === \"object\" && \"id\" in run) {\n            run_ = run;\n        }\n        else {\n            throw new Error(`Invalid run type: ${typeof run}`);\n        }\n        let referenceExample = undefined;\n        if (run_.reference_example_id !== null &&\n            run_.reference_example_id !== undefined) {\n            referenceExample = await this.readExample(run_.reference_example_id);\n        }\n        const feedbackResult = await evaluator.evaluateRun(run_, referenceExample);\n        let sourceInfo_ = sourceInfo ?? {};\n        if (feedbackResult.evaluatorInfo) {\n            sourceInfo_ = { ...sourceInfo_, ...feedbackResult.evaluatorInfo };\n        }\n        return await this.createFeedback(run_.id, feedbackResult.key, {\n            score: feedbackResult.score,\n            value: feedbackResult.value,\n            comment: feedbackResult.comment,\n            correction: feedbackResult.correction,\n            sourceInfo: sourceInfo_,\n            feedbackSourceType: \"MODEL\",\n        });\n    }\n    async createFeedback(runId, key, { score, value, correction, comment, sourceInfo, feedbackSourceType = \"API\", }) {\n        let feedback_source;\n        if (feedbackSourceType === \"API\") {\n            feedback_source = { type: \"api\", metadata: sourceInfo ?? {} };\n        }\n        else if (feedbackSourceType === \"MODEL\") {\n            feedback_source = { type: \"model\", metadata: sourceInfo ?? {} };\n        }\n        else {\n            throw new Error(`Unknown feedback source type ${feedbackSourceType}`);\n        }\n        const feedback = {\n            id: uuid.v4(),\n            run_id: runId,\n            key,\n            score,\n            value,\n            correction,\n            comment,\n            feedback_source: feedback_source,\n        };\n        const response = await this.caller.call(fetch, `${this.apiUrl}/feedback`, {\n            method: \"POST\",\n            headers: { ...this.headers, \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(feedback),\n            signal: AbortSignal.timeout(this.timeout_ms),\n        });\n        if (!response.ok) {\n            throw new Error(`Failed to create feedback for run ${runId}: ${response.status} ${response.statusText}`);\n        }\n        const result = await response.json();\n        return result;\n    }\n    async readFeedback(feedbackId) {\n        const path = `/feedback/${feedbackId}`;\n        const response = await this._get(path);\n        return response;\n    }\n    async deleteFeedback(feedbackId) {\n        const path = `/feedback/${feedbackId}`;\n        const response = await this.caller.call(fetch, this.apiUrl + path, {\n            method: \"DELETE\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(this.timeout_ms),\n        });\n        if (!response.ok) {\n            throw new Error(`Failed to delete ${path}: ${response.status} ${response.statusText}`);\n        }\n        await response.json();\n    }\n    async *listFeedback({ runIds, } = {}) {\n        const queryParams = new URLSearchParams();\n        if (runIds) {\n            queryParams.append(\"run\", runIds.join(\",\"));\n        }\n        for await (const feedbacks of this._getPaginated(\"/feedback\", queryParams)) {\n            yield* feedbacks;\n        }\n    }\n}\n", "import * as uuid from \"uuid\";\nimport { getEnvironmentVariable, getRuntimeEnvironment } from \"./utils/env.js\";\nimport { Client } from \"./client.js\";\nexport class RunTree {\n    constructor(config) {\n        Object.defineProperty(this, \"id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"run_type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"project_name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"parent_run\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"child_runs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"execution_order\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"child_execution_order\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"start_time\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"end_time\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"extra\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"error\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"serialized\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"inputs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"reference_example_id\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"events\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        const defaultConfig = RunTree.getDefaultConfig();\n        Object.assign(this, { ...defaultConfig, ...config });\n    }\n    static getDefaultConfig() {\n        return {\n            id: uuid.v4(),\n            project_name: getEnvironmentVariable(\"LANGCHAIN_PROJECT\") ??\n                getEnvironmentVariable(\"LANGCHAIN_SESSION\") ?? // TODO: Deprecate\n                \"default\",\n            child_runs: [],\n            execution_order: 1,\n            child_execution_order: 1,\n            api_url: getEnvironmentVariable(\"LANGCHAIN_ENDPOINT\") ?? \"http://localhost:1984\",\n            api_key: getEnvironmentVariable(\"LANGCHAIN_API_KEY\"),\n            caller_options: {},\n            start_time: Date.now(),\n            serialized: {},\n            inputs: {},\n            extra: {},\n            client: new Client({}),\n        };\n    }\n    async createChild(config) {\n        const child = new RunTree({\n            ...config,\n            parent_run: this,\n            project_name: this.project_name,\n            client: this.client,\n            execution_order: this.child_execution_order + 1,\n            child_execution_order: this.child_execution_order + 1,\n        });\n        this.child_runs.push(child);\n        return child;\n    }\n    async end(outputs, error, endTime = Date.now()) {\n        this.outputs = outputs;\n        this.error = error;\n        this.end_time = endTime;\n        if (this.parent_run) {\n            this.parent_run.child_execution_order = Math.max(this.parent_run.child_execution_order, this.child_execution_order);\n        }\n    }\n    async _convertToCreate(run, excludeChildRuns = true) {\n        const runExtra = run.extra ?? {};\n        if (!runExtra.runtime) {\n            runExtra.runtime = {};\n        }\n        const runtimeEnv = await getRuntimeEnvironment();\n        for (const [k, v] of Object.entries(runtimeEnv)) {\n            if (!runExtra.runtime[k]) {\n                runExtra.runtime[k] = v;\n            }\n        }\n        let child_runs;\n        let parent_run_id;\n        if (!excludeChildRuns) {\n            child_runs = await Promise.all(run.child_runs.map((child_run) => this._convertToCreate(child_run, excludeChildRuns)));\n            parent_run_id = undefined;\n        }\n        else {\n            parent_run_id = run.parent_run?.id;\n            child_runs = [];\n        }\n        const persistedRun = {\n            id: run.id,\n            name: run.name,\n            start_time: run.start_time,\n            end_time: run.end_time,\n            run_type: run.run_type,\n            reference_example_id: run.reference_example_id,\n            extra: runExtra,\n            execution_order: run.execution_order,\n            serialized: run.serialized,\n            error: run.error,\n            inputs: run.inputs,\n            outputs: run.outputs,\n            session_name: run.project_name,\n            child_runs: child_runs,\n            parent_run_id: parent_run_id,\n        };\n        return persistedRun;\n    }\n    async postRun(excludeChildRuns = true) {\n        const runCreate = await this._convertToCreate(this, excludeChildRuns);\n        await this.client.createRun(runCreate);\n    }\n    async patchRun() {\n        const runUpdate = {\n            end_time: this.end_time,\n            error: this.error,\n            outputs: this.outputs,\n            parent_run_id: this.parent_run?.id,\n            reference_example_id: this.reference_example_id,\n            extra: this.extra,\n            events: this.events,\n        };\n        await this.client.updateRun(this.id, runUpdate);\n    }\n}\n", "export { Client } from \"./client.js\";\nexport { RunTree } from \"./run_trees.js\";\n", "export * from './dist/index.js'", "export const isBrowser = () => typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\nexport const isWebWorker = () => typeof globalThis === \"object\" &&\n    globalThis.constructor &&\n    globalThis.constructor.name === \"DedicatedWorkerGlobalScope\";\nexport const isJsDom = () => (typeof window !== \"undefined\" && window.name === \"nodejs\") ||\n    (typeof navigator !== \"undefined\" &&\n        (navigator.userAgent.includes(\"Node.js\") ||\n            navigator.userAgent.includes(\"jsdom\")));\n// Supabase Edge Function provides a `Deno` global object\n// without `version` property\nexport const isDeno = () => typeof Deno !== \"undefined\";\n// Mark not-as-node if in Supabase Edge Function\nexport const isNode = () => typeof process !== \"undefined\" &&\n    typeof process.versions !== \"undefined\" &&\n    typeof process.versions.node !== \"undefined\" &&\n    !isDeno();\nexport const getEnv = () => {\n    let env;\n    if (isBrowser()) {\n        env = \"browser\";\n    }\n    else if (isNode()) {\n        env = \"node\";\n    }\n    else if (isWebWorker()) {\n        env = \"webworker\";\n    }\n    else if (isJsDom()) {\n        env = \"jsdom\";\n    }\n    else if (isDeno()) {\n        env = \"deno\";\n    }\n    else {\n        env = \"other\";\n    }\n    return env;\n};\nlet runtimeEnvironment;\nexport async function getRuntimeEnvironment() {\n    if (runtimeEnvironment === undefined) {\n        const env = getEnv();\n        runtimeEnvironment = {\n            library: \"langchain-js\",\n            runtime: env,\n        };\n    }\n    return runtimeEnvironment;\n}\nexport function getEnvironmentVariable(name) {\n    // Certain Deno setups will throw an error if you try to access environment variables\n    // https://github.com/hwchase17/langchainjs/issues/1412\n    try {\n        return typeof process !== \"undefined\"\n            ? // eslint-disable-next-line no-process-env\n                process.env?.[name]\n            : undefined;\n    }\n    catch (e) {\n        return undefined;\n    }\n}\n", "import { Client } from \"langsmith\";\nimport { getEnvironmentVariable, getRuntimeEnvironment, } from \"../../util/env.js\";\nimport { BaseTracer } from \"./tracer.js\";\nexport class LangChainTracer extends BaseTracer {\n    constructor(fields = {}) {\n        super(fields);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"langchain_tracer\"\n        });\n        Object.defineProperty(this, \"projectName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"exampleId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        const { exampleId, projectName, client } = fields;\n        this.projectName =\n            projectName ??\n                getEnvironmentVariable(\"LANGCHAIN_PROJECT\") ??\n                getEnvironmentVariable(\"LANGCHAIN_SESSION\");\n        this.exampleId = exampleId;\n        this.client = client ?? new Client({});\n    }\n    async _convertToCreate(run, example_id = undefined) {\n        return {\n            ...run,\n            extra: {\n                ...run.extra,\n                runtime: await getRuntimeEnvironment(),\n            },\n            child_runs: undefined,\n            session_name: this.projectName,\n            reference_example_id: run.parent_run_id ? undefined : example_id,\n        };\n    }\n    async persistRun(_run) { }\n    async _persistRunSingle(run) {\n        const persistedRun = await this._convertToCreate(run, this.exampleId);\n        await this.client.createRun(persistedRun);\n    }\n    async _updateRunSingle(run) {\n        const runUpdate = {\n            end_time: run.end_time,\n            error: run.error,\n            outputs: run.outputs,\n            events: run.events,\n        };\n        await this.client.updateRun(run.id, runUpdate);\n    }\n    async onRetrieverStart(run) {\n        await this._persistRunSingle(run);\n    }\n    async onRetrieverEnd(run) {\n        await this._updateRunSingle(run);\n    }\n    async onRetrieverError(run) {\n        await this._updateRunSingle(run);\n    }\n    async onLLMStart(run) {\n        await this._persistRunSingle(run);\n    }\n    async onLLMEnd(run) {\n        await this._updateRunSingle(run);\n    }\n    async onLLMError(run) {\n        await this._updateRunSingle(run);\n    }\n    async onChainStart(run) {\n        await this._persistRunSingle(run);\n    }\n    async onChainEnd(run) {\n        await this._updateRunSingle(run);\n    }\n    async onChainError(run) {\n        await this._updateRunSingle(run);\n    }\n    async onToolStart(run) {\n        await this._persistRunSingle(run);\n    }\n    async onToolEnd(run) {\n        await this._updateRunSingle(run);\n    }\n    async onToolError(run) {\n        await this._updateRunSingle(run);\n    }\n}\n", "export class BaseMemory {\n}\nconst getValue = (values, key) => {\n    if (key !== undefined) {\n        return values[key];\n    }\n    const keys = Object.keys(values);\n    if (keys.length === 1) {\n        return values[keys[0]];\n    }\n};\n/**\n * This function is used by memory classes to select the input value\n * to use for the memory. If there is only one input value, it is used.\n * If there are multiple input values, the inputKey must be specified.\n */\nexport const getInputValue = (inputValues, inputKey) => {\n    const value = getValue(inputValues, inputKey);\n    if (!value) {\n        const keys = Object.keys(inputValues);\n        throw new Error(`input values have ${keys.length} keys, you must specify an input key or pass only 1 key as input`);\n    }\n    return value;\n};\n/**\n * This function is used by memory classes to select the output value\n * to use for the memory. If there is only one output value, it is used.\n * If there are multiple output values, the outputKey must be specified.\n * If no outputKey is specified, an error is thrown.\n */\nexport const getOutputValue = (outputValues, outputKey) => {\n    const value = getValue(outputValues, outputKey);\n    if (!value) {\n        const keys = Object.keys(outputValues);\n        throw new Error(`output values have ${keys.length} keys, you must specify an output key or pass only 1 key as output`);\n    }\n    return value;\n};\n/**\n * This function is used by memory classes to get a string representation\n * of the chat message history, based on the message content and role.\n */\nexport function getBufferString(messages, humanPrefix = \"Human\", aiPrefix = \"AI\") {\n    const string_messages = [];\n    for (const m of messages) {\n        let role;\n        if (m._getType() === \"human\") {\n            role = humanPrefix;\n        }\n        else if (m._getType() === \"ai\") {\n            role = aiPrefix;\n        }\n        else if (m._getType() === \"system\") {\n            role = \"System\";\n        }\n        else if (m._getType() === \"function\") {\n            role = \"Function\";\n        }\n        else if (m._getType() === \"generic\") {\n            role = m.role;\n        }\n        else {\n            throw new Error(`Got unsupported message type: ${m}`);\n        }\n        const nameStr = m.name ? `${m.name}, ` : \"\";\n        string_messages.push(`${role}: ${nameStr}${m.content}`);\n    }\n    return string_messages.join(\"\\n\");\n}\nexport function getPromptInputKey(inputs, memoryVariables) {\n    const promptInputKeys = Object.keys(inputs).filter((key) => !memoryVariables.includes(key) && key !== \"stop\");\n    if (promptInputKeys.length !== 1) {\n        throw new Error(`One input key expected, but got ${promptInputKeys.length}`);\n    }\n    return promptInputKeys[0];\n}\n", "import { getBufferString } from \"../../memory/base.js\";\nimport { getEnvironmentVariable } from \"../../util/env.js\";\nimport { BaseTracer } from \"./tracer.js\";\nexport class LangChainTracerV1 extends BaseTracer {\n    constructor() {\n        super();\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"langchain_tracer\"\n        });\n        Object.defineProperty(this, \"endpoint\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: getEnvironmentVariable(\"LANGCHAIN_ENDPOINT\") || \"http://localhost:1984\"\n        });\n        Object.defineProperty(this, \"headers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {\n                \"Content-Type\": \"application/json\",\n            }\n        });\n        Object.defineProperty(this, \"session\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        const apiKey = getEnvironmentVariable(\"LANGCHAIN_API_KEY\");\n        if (apiKey) {\n            this.headers[\"x-api-key\"] = apiKey;\n        }\n    }\n    async newSession(sessionName) {\n        const sessionCreate = {\n            start_time: Date.now(),\n            name: sessionName,\n        };\n        const session = await this.persistSession(sessionCreate);\n        this.session = session;\n        return session;\n    }\n    async loadSession(sessionName) {\n        const endpoint = `${this.endpoint}/sessions?name=${sessionName}`;\n        return this._handleSessionResponse(endpoint);\n    }\n    async loadDefaultSession() {\n        const endpoint = `${this.endpoint}/sessions?name=default`;\n        return this._handleSessionResponse(endpoint);\n    }\n    async convertV2RunToRun(run) {\n        const session = this.session ?? (await this.loadDefaultSession());\n        const serialized = run.serialized;\n        let runResult;\n        if (run.run_type === \"llm\") {\n            const prompts = run.inputs.prompts\n                ? run.inputs.prompts\n                : run.inputs.messages.map((x) => getBufferString(x));\n            const llmRun = {\n                uuid: run.id,\n                start_time: run.start_time,\n                end_time: run.end_time,\n                execution_order: run.execution_order,\n                child_execution_order: run.child_execution_order,\n                serialized,\n                type: run.run_type,\n                session_id: session.id,\n                prompts,\n                response: run.outputs,\n            };\n            runResult = llmRun;\n        }\n        else if (run.run_type === \"chain\") {\n            const child_runs = await Promise.all(run.child_runs.map((child_run) => this.convertV2RunToRun(child_run)));\n            const chainRun = {\n                uuid: run.id,\n                start_time: run.start_time,\n                end_time: run.end_time,\n                execution_order: run.execution_order,\n                child_execution_order: run.child_execution_order,\n                serialized,\n                type: run.run_type,\n                session_id: session.id,\n                inputs: run.inputs,\n                outputs: run.outputs,\n                child_llm_runs: child_runs.filter((child_run) => child_run.type === \"llm\"),\n                child_chain_runs: child_runs.filter((child_run) => child_run.type === \"chain\"),\n                child_tool_runs: child_runs.filter((child_run) => child_run.type === \"tool\"),\n            };\n            runResult = chainRun;\n        }\n        else if (run.run_type === \"tool\") {\n            const child_runs = await Promise.all(run.child_runs.map((child_run) => this.convertV2RunToRun(child_run)));\n            const toolRun = {\n                uuid: run.id,\n                start_time: run.start_time,\n                end_time: run.end_time,\n                execution_order: run.execution_order,\n                child_execution_order: run.child_execution_order,\n                serialized,\n                type: run.run_type,\n                session_id: session.id,\n                tool_input: run.inputs.input,\n                output: run.outputs?.output,\n                action: JSON.stringify(serialized),\n                child_llm_runs: child_runs.filter((child_run) => child_run.type === \"llm\"),\n                child_chain_runs: child_runs.filter((child_run) => child_run.type === \"chain\"),\n                child_tool_runs: child_runs.filter((child_run) => child_run.type === \"tool\"),\n            };\n            runResult = toolRun;\n        }\n        else {\n            throw new Error(`Unknown run type: ${run.run_type}`);\n        }\n        return runResult;\n    }\n    async persistRun(run) {\n        let endpoint;\n        let v1Run;\n        if (run.run_type !== undefined) {\n            v1Run = await this.convertV2RunToRun(run);\n        }\n        else {\n            v1Run = run;\n        }\n        if (v1Run.type === \"llm\") {\n            endpoint = `${this.endpoint}/llm-runs`;\n        }\n        else if (v1Run.type === \"chain\") {\n            endpoint = `${this.endpoint}/chain-runs`;\n        }\n        else {\n            endpoint = `${this.endpoint}/tool-runs`;\n        }\n        const response = await fetch(endpoint, {\n            method: \"POST\",\n            headers: this.headers,\n            body: JSON.stringify(v1Run),\n        });\n        if (!response.ok) {\n            console.error(`Failed to persist run: ${response.status} ${response.statusText}`);\n        }\n    }\n    async persistSession(sessionCreate) {\n        const endpoint = `${this.endpoint}/sessions`;\n        const response = await fetch(endpoint, {\n            method: \"POST\",\n            headers: this.headers,\n            body: JSON.stringify(sessionCreate),\n        });\n        if (!response.ok) {\n            console.error(`Failed to persist session: ${response.status} ${response.statusText}, using default session.`);\n            return {\n                id: 1,\n                ...sessionCreate,\n            };\n        }\n        return {\n            id: (await response.json()).id,\n            ...sessionCreate,\n        };\n    }\n    async _handleSessionResponse(endpoint) {\n        const response = await fetch(endpoint, {\n            method: \"GET\",\n            headers: this.headers,\n        });\n        let tracerSession;\n        if (!response.ok) {\n            console.error(`Failed to load session: ${response.status} ${response.statusText}`);\n            tracerSession = {\n                id: 1,\n                start_time: Date.now(),\n            };\n            this.session = tracerSession;\n            return tracerSession;\n        }\n        const resp = (await response.json());\n        if (resp.length === 0) {\n            tracerSession = {\n                id: 1,\n                start_time: Date.now(),\n            };\n            this.session = tracerSession;\n            return tracerSession;\n        }\n        [tracerSession] = resp;\n        this.session = tracerSession;\n        return tracerSession;\n    }\n}\n", "import { LangChainTracer } from \"./tracer_langchain.js\";\nimport { LangChainTracerV1 } from \"./tracer_langchain_v1.js\";\nexport async function getTracingCallbackHandler(session) {\n    const tracer = new LangChainTracerV1();\n    if (session) {\n        await tracer.loadSession(session);\n    }\n    else {\n        await tracer.loadDefaultSession();\n    }\n    return tracer;\n}\nexport async function getTracingV2CallbackHandler() {\n    return new LangChainTracer();\n}\n", "import PQueueMod from \"p-queue\";\nlet queue;\nfunction createQueue() {\n    const PQueue = \"default\" in PQueueMod ? PQueueMod.default : PQueueMod;\n    return new PQueue({\n        autoStart: true,\n        concurrency: 1,\n    });\n}\n/**\n * Consume a promise, either adding it to the queue or waiting for it to resolve\n * @param promise Promise to consume\n * @param wait Whether to wait for the promise to resolve or resolve immediately\n */\nexport async function consumeCallback(promiseFn, wait) {\n    if (wait === true) {\n        await promiseFn();\n    }\n    else {\n        if (typeof queue === \"undefined\") {\n            queue = createQueue();\n        }\n        void queue.add(promiseFn);\n    }\n}\nexport function awaitAllCallbacks() {\n    return typeof queue !== \"undefined\" ? queue.onIdle() : Promise.resolve();\n}\n", "import { v4 as uuidv4 } from \"uuid\";\nimport { BaseCallbackHandler, } from \"./base.js\";\nimport { ConsoleCallbackHandler } from \"./handlers/console.js\";\nimport { getTracingCallbackHandler, getTracingV2CallbackHandler, } from \"./handlers/initialize.js\";\nimport { getBufferString } from \"../memory/base.js\";\nimport { getEnvironmentVariable } from \"../util/env.js\";\nimport { LangChainTracer, } from \"./handlers/tracer_langchain.js\";\nimport { consumeCallback } from \"./promises.js\";\nexport function parseCallbackConfigArg(arg) {\n    if (!arg) {\n        return {};\n    }\n    else if (Array.isArray(arg) || \"name\" in arg) {\n        return { callbacks: arg };\n    }\n    else {\n        return arg;\n    }\n}\nexport class BaseCallbackManager {\n    setHandler(handler) {\n        return this.setHandlers([handler]);\n    }\n}\nclass BaseRunManager {\n    constructor(runId, handlers, inheritableHandlers, tags, inheritableTags, metadata, inheritableMetadata, _parentRunId) {\n        Object.defineProperty(this, \"runId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: runId\n        });\n        Object.defineProperty(this, \"handlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: handlers\n        });\n        Object.defineProperty(this, \"inheritableHandlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: inheritableHandlers\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: tags\n        });\n        Object.defineProperty(this, \"inheritableTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: inheritableTags\n        });\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: metadata\n        });\n        Object.defineProperty(this, \"inheritableMetadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: inheritableMetadata\n        });\n        Object.defineProperty(this, \"_parentRunId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: _parentRunId\n        });\n    }\n    async handleText(text) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            try {\n                await handler.handleText?.(text, this.runId, this._parentRunId, this.tags);\n            }\n            catch (err) {\n                console.error(`Error in handler ${handler.constructor.name}, handleText: ${err}`);\n            }\n        }, handler.awaitHandlers)));\n    }\n}\nexport class CallbackManagerForRetrieverRun extends BaseRunManager {\n    getChild(tag) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        const manager = new CallbackManager(this.runId);\n        manager.setHandlers(this.inheritableHandlers);\n        manager.addTags(this.inheritableTags);\n        manager.addMetadata(this.inheritableMetadata);\n        if (tag) {\n            manager.addTags([tag], false);\n        }\n        return manager;\n    }\n    async handleRetrieverEnd(documents) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreRetriever) {\n                try {\n                    await handler.handleRetrieverEnd?.(documents, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleRetriever`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleRetrieverError(err) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreRetriever) {\n                try {\n                    await handler.handleRetrieverError?.(err, this.runId, this._parentRunId, this.tags);\n                }\n                catch (error) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleRetrieverError: ${error}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\nexport class CallbackManagerForLLMRun extends BaseRunManager {\n    async handleLLMNewToken(token, idx = { prompt: 0, completion: 0 }) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreLLM) {\n                try {\n                    await handler.handleLLMNewToken?.(token, idx, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleLLMNewToken: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleLLMError(err) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreLLM) {\n                try {\n                    await handler.handleLLMError?.(err, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleLLMError: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleLLMEnd(output) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreLLM) {\n                try {\n                    await handler.handleLLMEnd?.(output, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleLLMEnd: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\nexport class CallbackManagerForChainRun extends BaseRunManager {\n    getChild(tag) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        const manager = new CallbackManager(this.runId);\n        manager.setHandlers(this.inheritableHandlers);\n        manager.addTags(this.inheritableTags);\n        manager.addMetadata(this.inheritableMetadata);\n        if (tag) {\n            manager.addTags([tag], false);\n        }\n        return manager;\n    }\n    async handleChainError(err) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreChain) {\n                try {\n                    await handler.handleChainError?.(err, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleChainError: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleChainEnd(output) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreChain) {\n                try {\n                    await handler.handleChainEnd?.(output, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleChainEnd: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleAgentAction(action) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleAgentAction?.(action, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleAgentAction: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleAgentEnd(action) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleAgentEnd?.(action, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleAgentEnd: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\nexport class CallbackManagerForToolRun extends BaseRunManager {\n    getChild(tag) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        const manager = new CallbackManager(this.runId);\n        manager.setHandlers(this.inheritableHandlers);\n        manager.addTags(this.inheritableTags);\n        manager.addMetadata(this.inheritableMetadata);\n        if (tag) {\n            manager.addTags([tag], false);\n        }\n        return manager;\n    }\n    async handleToolError(err) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleToolError?.(err, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleToolError: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n    async handleToolEnd(output) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleToolEnd?.(output, this.runId, this._parentRunId, this.tags);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleToolEnd: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n    }\n}\nexport class CallbackManager extends BaseCallbackManager {\n    constructor(parentRunId) {\n        super();\n        Object.defineProperty(this, \"handlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"inheritableHandlers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"inheritableTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"inheritableMetadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"callback_manager\"\n        });\n        Object.defineProperty(this, \"_parentRunId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.handlers = [];\n        this.inheritableHandlers = [];\n        this._parentRunId = parentRunId;\n    }\n    async handleLLMStart(llm, prompts, _runId = undefined, _parentRunId = undefined, extraParams = undefined) {\n        return Promise.all(prompts.map(async (prompt) => {\n            const runId = uuidv4();\n            await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n                if (!handler.ignoreLLM) {\n                    try {\n                        await handler.handleLLMStart?.(llm, [prompt], runId, this._parentRunId, extraParams, this.tags, this.metadata);\n                    }\n                    catch (err) {\n                        console.error(`Error in handler ${handler.constructor.name}, handleLLMStart: ${err}`);\n                    }\n                }\n            }, handler.awaitHandlers)));\n            return new CallbackManagerForLLMRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n        }));\n    }\n    async handleChatModelStart(llm, messages, _runId = undefined, _parentRunId = undefined, extraParams = undefined) {\n        return Promise.all(messages.map(async (messageGroup) => {\n            const runId = uuidv4();\n            await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n                if (!handler.ignoreLLM) {\n                    try {\n                        if (handler.handleChatModelStart)\n                            await handler.handleChatModelStart?.(llm, [messageGroup], runId, this._parentRunId, extraParams, this.tags, this.metadata);\n                        else if (handler.handleLLMStart) {\n                            const messageString = getBufferString(messageGroup);\n                            await handler.handleLLMStart?.(llm, [messageString], runId, this._parentRunId, extraParams, this.tags, this.metadata);\n                        }\n                    }\n                    catch (err) {\n                        console.error(`Error in handler ${handler.constructor.name}, handleLLMStart: ${err}`);\n                    }\n                }\n            }, handler.awaitHandlers)));\n            return new CallbackManagerForLLMRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n        }));\n    }\n    async handleChainStart(chain, inputs, runId = uuidv4()) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreChain) {\n                try {\n                    await handler.handleChainStart?.(chain, inputs, runId, this._parentRunId, this.tags, this.metadata);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleChainStart: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n        return new CallbackManagerForChainRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n    }\n    async handleToolStart(tool, input, runId = uuidv4()) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreAgent) {\n                try {\n                    await handler.handleToolStart?.(tool, input, runId, this._parentRunId, this.tags, this.metadata);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleToolStart: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n        return new CallbackManagerForToolRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n    }\n    async handleRetrieverStart(retriever, query, runId = uuidv4(), _parentRunId = undefined) {\n        await Promise.all(this.handlers.map((handler) => consumeCallback(async () => {\n            if (!handler.ignoreRetriever) {\n                try {\n                    await handler.handleRetrieverStart?.(retriever, query, runId, this._parentRunId, this.tags, this.metadata);\n                }\n                catch (err) {\n                    console.error(`Error in handler ${handler.constructor.name}, handleRetrieverStart: ${err}`);\n                }\n            }\n        }, handler.awaitHandlers)));\n        return new CallbackManagerForRetrieverRun(runId, this.handlers, this.inheritableHandlers, this.tags, this.inheritableTags, this.metadata, this.inheritableMetadata, this._parentRunId);\n    }\n    addHandler(handler, inherit = true) {\n        this.handlers.push(handler);\n        if (inherit) {\n            this.inheritableHandlers.push(handler);\n        }\n    }\n    removeHandler(handler) {\n        this.handlers = this.handlers.filter((_handler) => _handler !== handler);\n        this.inheritableHandlers = this.inheritableHandlers.filter((_handler) => _handler !== handler);\n    }\n    setHandlers(handlers, inherit = true) {\n        this.handlers = [];\n        this.inheritableHandlers = [];\n        for (const handler of handlers) {\n            this.addHandler(handler, inherit);\n        }\n    }\n    addTags(tags, inherit = true) {\n        this.removeTags(tags); // Remove duplicates\n        this.tags.push(...tags);\n        if (inherit) {\n            this.inheritableTags.push(...tags);\n        }\n    }\n    removeTags(tags) {\n        this.tags = this.tags.filter((tag) => !tags.includes(tag));\n        this.inheritableTags = this.inheritableTags.filter((tag) => !tags.includes(tag));\n    }\n    addMetadata(metadata, inherit = true) {\n        this.metadata = { ...this.metadata, ...metadata };\n        if (inherit) {\n            this.inheritableMetadata = { ...this.inheritableMetadata, ...metadata };\n        }\n    }\n    removeMetadata(metadata) {\n        for (const key of Object.keys(metadata)) {\n            delete this.metadata[key];\n            delete this.inheritableMetadata[key];\n        }\n    }\n    copy(additionalHandlers = [], inherit = true) {\n        const manager = new CallbackManager(this._parentRunId);\n        for (const handler of this.handlers) {\n            const inheritable = this.inheritableHandlers.includes(handler);\n            manager.addHandler(handler, inheritable);\n        }\n        for (const tag of this.tags) {\n            const inheritable = this.inheritableTags.includes(tag);\n            manager.addTags([tag], inheritable);\n        }\n        for (const key of Object.keys(this.metadata)) {\n            const inheritable = Object.keys(this.inheritableMetadata).includes(key);\n            manager.addMetadata({ [key]: this.metadata[key] }, inheritable);\n        }\n        for (const handler of additionalHandlers) {\n            if (\n            // Prevent multiple copies of console_callback_handler\n            manager.handlers\n                .filter((h) => h.name === \"console_callback_handler\")\n                .some((h) => h.name === handler.name)) {\n                continue;\n            }\n            manager.addHandler(handler, inherit);\n        }\n        return manager;\n    }\n    static fromHandlers(handlers) {\n        class Handler extends BaseCallbackHandler {\n            constructor() {\n                super();\n                Object.defineProperty(this, \"name\", {\n                    enumerable: true,\n                    configurable: true,\n                    writable: true,\n                    value: uuidv4()\n                });\n                Object.assign(this, handlers);\n            }\n        }\n        const manager = new this();\n        manager.addHandler(new Handler());\n        return manager;\n    }\n    static async configure(inheritableHandlers, localHandlers, inheritableTags, localTags, inheritableMetadata, localMetadata, options) {\n        let callbackManager;\n        if (inheritableHandlers || localHandlers) {\n            if (Array.isArray(inheritableHandlers) || !inheritableHandlers) {\n                callbackManager = new CallbackManager();\n                callbackManager.setHandlers(inheritableHandlers?.map(ensureHandler) ?? [], true);\n            }\n            else {\n                callbackManager = inheritableHandlers;\n            }\n            callbackManager = callbackManager.copy(Array.isArray(localHandlers)\n                ? localHandlers.map(ensureHandler)\n                : localHandlers?.handlers, false);\n        }\n        const verboseEnabled = getEnvironmentVariable(\"LANGCHAIN_VERBOSE\") || options?.verbose;\n        const tracingV2Enabled = getEnvironmentVariable(\"LANGCHAIN_TRACING_V2\") ?? false;\n        const tracingEnabled = tracingV2Enabled ||\n            (getEnvironmentVariable(\"LANGCHAIN_TRACING\") ?? false);\n        if (verboseEnabled || tracingEnabled) {\n            if (!callbackManager) {\n                callbackManager = new CallbackManager();\n            }\n            if (verboseEnabled &&\n                !callbackManager.handlers.some((handler) => handler.name === ConsoleCallbackHandler.prototype.name)) {\n                const consoleHandler = new ConsoleCallbackHandler();\n                callbackManager.addHandler(consoleHandler, true);\n            }\n            if (tracingEnabled &&\n                !callbackManager.handlers.some((handler) => handler.name === \"langchain_tracer\")) {\n                if (tracingV2Enabled) {\n                    callbackManager.addHandler(await getTracingV2CallbackHandler(), true);\n                }\n                else {\n                    const session = getEnvironmentVariable(\"LANGCHAIN_PROJECT\") &&\n                        getEnvironmentVariable(\"LANGCHAIN_SESSION\");\n                    callbackManager.addHandler(await getTracingCallbackHandler(session), true);\n                }\n            }\n        }\n        if (inheritableTags || localTags) {\n            if (callbackManager) {\n                callbackManager.addTags(inheritableTags ?? []);\n                callbackManager.addTags(localTags ?? [], false);\n            }\n        }\n        if (inheritableMetadata || localMetadata) {\n            if (callbackManager) {\n                callbackManager.addMetadata(inheritableMetadata ?? {});\n                callbackManager.addMetadata(localMetadata ?? {}, false);\n            }\n        }\n        return callbackManager;\n    }\n}\nfunction ensureHandler(handler) {\n    if (\"name\" in handler) {\n        return handler;\n    }\n    return BaseCallbackHandler.fromMethods(handler);\n}\nexport class TraceGroup {\n    constructor(groupName, options) {\n        Object.defineProperty(this, \"groupName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: groupName\n        });\n        Object.defineProperty(this, \"options\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: options\n        });\n        Object.defineProperty(this, \"runManager\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n    }\n    async getTraceGroupCallbackManager(group_name, options) {\n        const cb = new LangChainTracer(options);\n        const cm = await CallbackManager.configure([cb]);\n        const runManager = await cm?.handleChainStart({\n            lc: 1,\n            type: \"not_implemented\",\n            id: [\"langchain\", \"callbacks\", \"groups\", group_name],\n        }, {});\n        if (!runManager) {\n            throw new Error(\"Failed to create run group callback manager.\");\n        }\n        return runManager;\n    }\n    async start() {\n        if (!this.runManager) {\n            this.runManager = await this.getTraceGroupCallbackManager(this.groupName, this.options);\n        }\n        return this.runManager.getChild();\n    }\n    async end() {\n        if (this.runManager) {\n            await this.runManager.handleChainEnd({});\n            this.runManager = undefined;\n        }\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport async function traceAsGroup(groupOptions, enclosedCode, ...args) {\n    const traceGroup = new TraceGroup(groupOptions.name, groupOptions);\n    const callbackManager = await traceGroup.start();\n    try {\n        return await enclosedCode(callbackManager, ...args);\n    }\n    finally {\n        await traceGroup.end();\n    }\n}\n", "import pRetry from \"p-retry\";\nimport PQueueMod from \"p-queue\";\nconst STATUS_NO_RETRY = [\n    400,\n    401,\n    403,\n    404,\n    405,\n    406,\n    407,\n    408,\n    409, // Conflict\n];\n/**\n * A class that can be used to make async calls with concurrency and retry logic.\n *\n * This is useful for making calls to any kind of \"expensive\" external resource,\n * be it because it's rate-limited, subject to network issues, etc.\n *\n * Concurrent calls are limited by the `maxConcurrency` parameter, which defaults\n * to `Infinity`. This means that by default, all calls will be made in parallel.\n *\n * Retries are limited by the `maxRetries` parameter, which defaults to 6. This\n * means that by default, each call will be retried up to 6 times, with an\n * exponential backoff between each attempt.\n */\nexport class AsyncCaller {\n    constructor(params) {\n        Object.defineProperty(this, \"maxConcurrency\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"maxRetries\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"queue\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.maxConcurrency = params.maxConcurrency ?? Infinity;\n        this.maxRetries = params.maxRetries ?? 6;\n        const PQueue = \"default\" in PQueueMod ? PQueueMod.default : PQueueMod;\n        this.queue = new PQueue({ concurrency: this.maxConcurrency });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    call(callable, ...args) {\n        return this.queue.add(() => pRetry(() => callable(...args).catch((error) => {\n            // eslint-disable-next-line no-instanceof/no-instanceof\n            if (error instanceof Error) {\n                throw error;\n            }\n            else {\n                throw new Error(error);\n            }\n        }), {\n            onFailedAttempt(error) {\n                if (error.message.startsWith(\"Cancel\") ||\n                    error.message.startsWith(\"TimeoutError\") ||\n                    error.message.startsWith(\"AbortError\")) {\n                    throw error;\n                }\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                if (error?.code === \"ECONNABORTED\") {\n                    throw error;\n                }\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                const status = error?.response?.status;\n                if (status && STATUS_NO_RETRY.includes(+status)) {\n                    throw error;\n                }\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                const data = error?.response?.data;\n                if (data?.error?.code === \"insufficient_quota\") {\n                    const error = new Error(data?.error?.message);\n                    error.name = \"InsufficientQuotaError\";\n                    throw error;\n                }\n            },\n            retries: this.maxRetries,\n            randomize: true,\n            // If needed we can change some of the defaults here,\n            // but they're quite sensible.\n        }), { throwOnTimeout: true });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    callWithOptions(options, callable, ...args) {\n        // Note this doesn't cancel the underlying request,\n        // when available prefer to use the signal option of the underlying call\n        if (options.signal) {\n            return Promise.race([\n                this.call(callable, ...args),\n                new Promise((_, reject) => {\n                    options.signal?.addEventListener(\"abort\", () => {\n                        reject(new Error(\"AbortError\"));\n                    });\n                }),\n            ]);\n        }\n        return this.call(callable, ...args);\n    }\n    fetch(...args) {\n        return this.call(() => fetch(...args).then((res) => (res.ok ? res : Promise.reject(res))));\n    }\n}\n", "var __defProp = Object.defineProperty;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __publicField = (obj, key, value) => {\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\n  return value;\n};\n\nexport { __publicField };\n", "'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n", "import { __publicField } from './chunk-XXPGZHWZ.js';\nimport base64 from 'base64-js';\n\n// src/utils.ts\nfunction never(_) {\n}\nfunction bytePairMerge(piece, ranks) {\n  let parts = Array.from(\n    { length: piece.length },\n    (_, i) => ({ start: i, end: i + 1 })\n  );\n  while (parts.length > 1) {\n    let minRank = null;\n    for (let i = 0; i < parts.length - 1; i++) {\n      const slice = piece.slice(parts[i].start, parts[i + 1].end);\n      const rank = ranks.get(slice.join(\",\"));\n      if (rank == null)\n        continue;\n      if (minRank == null || rank < minRank[0]) {\n        minRank = [rank, i];\n      }\n    }\n    if (minRank != null) {\n      const i = minRank[1];\n      parts[i] = { start: parts[i].start, end: parts[i + 1].end };\n      parts.splice(i + 1, 1);\n    } else {\n      break;\n    }\n  }\n  return parts;\n}\nfunction bytePairEncode(piece, ranks) {\n  if (piece.length === 1)\n    return [ranks.get(piece.join(\",\"))];\n  return bytePairMerge(piece, ranks).map((p) => ranks.get(piece.slice(p.start, p.end).join(\",\"))).filter((x) => x != null);\n}\nfunction escapeRegex(str) {\n  return str.replace(/[\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n}\nvar _Tiktoken = class {\n  /** @internal */\n  specialTokens;\n  /** @internal */\n  inverseSpecialTokens;\n  /** @internal */\n  patStr;\n  /** @internal */\n  textEncoder = new TextEncoder();\n  /** @internal */\n  textDecoder = new TextDecoder(\"utf-8\");\n  /** @internal */\n  rankMap = /* @__PURE__ */ new Map();\n  /** @internal */\n  textMap = /* @__PURE__ */ new Map();\n  constructor(ranks, extendedSpecialTokens) {\n    this.patStr = ranks.pat_str;\n    const uncompressed = ranks.bpe_ranks.split(\"\\n\").filter(Boolean).reduce((memo, x) => {\n      const [_, offsetStr, ...tokens] = x.split(\" \");\n      const offset = Number.parseInt(offsetStr, 10);\n      tokens.forEach((token, i) => memo[token] = offset + i);\n      return memo;\n    }, {});\n    for (const [token, rank] of Object.entries(uncompressed)) {\n      const bytes = base64.toByteArray(token);\n      this.rankMap.set(bytes.join(\",\"), rank);\n      this.textMap.set(rank, bytes);\n    }\n    this.specialTokens = { ...ranks.special_tokens, ...extendedSpecialTokens };\n    this.inverseSpecialTokens = Object.entries(this.specialTokens).reduce((memo, [text, rank]) => {\n      memo[rank] = this.textEncoder.encode(text);\n      return memo;\n    }, {});\n  }\n  encode(text, allowedSpecial = [], disallowedSpecial = \"all\") {\n    const regexes = new RegExp(this.patStr, \"ug\");\n    const specialRegex = _Tiktoken.specialTokenRegex(\n      Object.keys(this.specialTokens)\n    );\n    const ret = [];\n    const allowedSpecialSet = new Set(\n      allowedSpecial === \"all\" ? Object.keys(this.specialTokens) : allowedSpecial\n    );\n    const disallowedSpecialSet = new Set(\n      disallowedSpecial === \"all\" ? Object.keys(this.specialTokens).filter(\n        (x) => !allowedSpecialSet.has(x)\n      ) : disallowedSpecial\n    );\n    if (disallowedSpecialSet.size > 0) {\n      const disallowedSpecialRegex = _Tiktoken.specialTokenRegex([\n        ...disallowedSpecialSet\n      ]);\n      const specialMatch = text.match(disallowedSpecialRegex);\n      if (specialMatch != null) {\n        throw new Error(\n          `The text contains a special token that is not allowed: ${specialMatch[0]}`\n        );\n      }\n    }\n    let start = 0;\n    while (true) {\n      let nextSpecial = null;\n      let startFind = start;\n      while (true) {\n        specialRegex.lastIndex = startFind;\n        nextSpecial = specialRegex.exec(text);\n        if (nextSpecial == null || allowedSpecialSet.has(nextSpecial[0]))\n          break;\n        startFind = nextSpecial.index + 1;\n      }\n      const end = nextSpecial?.index ?? text.length;\n      for (const match of text.substring(start, end).matchAll(regexes)) {\n        const piece = this.textEncoder.encode(match[0]);\n        const token2 = this.rankMap.get(piece.join(\",\"));\n        if (token2 != null) {\n          ret.push(token2);\n          continue;\n        }\n        ret.push(...bytePairEncode(piece, this.rankMap));\n      }\n      if (nextSpecial == null)\n        break;\n      let token = this.specialTokens[nextSpecial[0]];\n      ret.push(token);\n      start = nextSpecial.index + nextSpecial[0].length;\n    }\n    return ret;\n  }\n  decode(tokens) {\n    const res = [];\n    let length = 0;\n    for (let i2 = 0; i2 < tokens.length; ++i2) {\n      const token = tokens[i2];\n      const bytes = this.textMap.get(token) ?? this.inverseSpecialTokens[token];\n      if (bytes != null) {\n        res.push(bytes);\n        length += bytes.length;\n      }\n    }\n    const mergedArray = new Uint8Array(length);\n    let i = 0;\n    for (const bytes of res) {\n      mergedArray.set(bytes, i);\n      i += bytes.length;\n    }\n    return this.textDecoder.decode(mergedArray);\n  }\n};\nvar Tiktoken = _Tiktoken;\n__publicField(Tiktoken, \"specialTokenRegex\", (tokens) => {\n  return new RegExp(tokens.map((i) => escapeRegex(i)).join(\"|\"), \"g\");\n});\nfunction getEncodingNameForModel(model) {\n  switch (model) {\n    case \"gpt2\": {\n      return \"gpt2\";\n    }\n    case \"code-cushman-001\":\n    case \"code-cushman-002\":\n    case \"code-davinci-001\":\n    case \"code-davinci-002\":\n    case \"cushman-codex\":\n    case \"davinci-codex\":\n    case \"text-davinci-002\":\n    case \"text-davinci-003\": {\n      return \"p50k_base\";\n    }\n    case \"code-davinci-edit-001\":\n    case \"text-davinci-edit-001\": {\n      return \"p50k_edit\";\n    }\n    case \"ada\":\n    case \"babbage\":\n    case \"code-search-ada-code-001\":\n    case \"code-search-babbage-code-001\":\n    case \"curie\":\n    case \"davinci\":\n    case \"text-ada-001\":\n    case \"text-babbage-001\":\n    case \"text-curie-001\":\n    case \"text-davinci-001\":\n    case \"text-search-ada-doc-001\":\n    case \"text-search-babbage-doc-001\":\n    case \"text-search-curie-doc-001\":\n    case \"text-search-davinci-doc-001\":\n    case \"text-similarity-ada-001\":\n    case \"text-similarity-babbage-001\":\n    case \"text-similarity-curie-001\":\n    case \"text-similarity-davinci-001\": {\n      return \"r50k_base\";\n    }\n    case \"gpt-3.5-turbo-16k-0613\":\n    case \"gpt-3.5-turbo-16k\":\n    case \"gpt-3.5-turbo-0613\":\n    case \"gpt-3.5-turbo-0301\":\n    case \"gpt-3.5-turbo\":\n    case \"gpt-4-32k-0613\":\n    case \"gpt-4-32k-0314\":\n    case \"gpt-4-32k\":\n    case \"gpt-4-0613\":\n    case \"gpt-4-0314\":\n    case \"gpt-4\":\n    case \"text-embedding-ada-002\": {\n      return \"cl100k_base\";\n    }\n    default:\n      throw new Error(\"Unknown model\");\n  }\n}\n\nexport { Tiktoken, getEncodingNameForModel, never };\n", "export { Tiktoken, getEncodingNameForModel } from './chunk-THGZSONF.js';\nimport './chunk-XXPGZHWZ.js';\n", "import { Tiktoken, getEncodingNameForModel, } from \"js-tiktoken/lite\";\nimport { AsyncCaller } from \"./async_caller.js\";\nconst cache = {};\nconst caller = /* #__PURE__ */ new AsyncCaller({});\nexport async function getEncoding(encoding, options) {\n    if (!(encoding in cache)) {\n        cache[encoding] = caller\n            .fetch(`https://tiktoken.pages.dev/js/${encoding}.json`, {\n            signal: options?.signal,\n        })\n            .then((res) => res.json())\n            .catch((e) => {\n            delete cache[encoding];\n            throw e;\n        });\n    }\n    return new Tiktoken(await cache[encoding], options?.extendedSpecialTokens);\n}\nexport async function encodingForModel(model, options) {\n    return getEncoding(getEncodingNameForModel(model), options);\n}\n", "import { encodingForModel } from \"../util/tiktoken.js\";\n// https://www.npmjs.com/package/js-tiktoken\nexport const getModelNameForTiktoken = (modelName) => {\n    if (modelName.startsWith(\"gpt-3.5-turbo-16k\")) {\n        return \"gpt-3.5-turbo-16k\";\n    }\n    if (modelName.startsWith(\"gpt-3.5-turbo-\")) {\n        return \"gpt-3.5-turbo\";\n    }\n    if (modelName.startsWith(\"gpt-4-32k\")) {\n        return \"gpt-4-32k\";\n    }\n    if (modelName.startsWith(\"gpt-4-\")) {\n        return \"gpt-4\";\n    }\n    return modelName;\n};\nexport const getEmbeddingContextSize = (modelName) => {\n    switch (modelName) {\n        case \"text-embedding-ada-002\":\n            return 8191;\n        default:\n            return 2046;\n    }\n};\nexport const getModelContextSize = (modelName) => {\n    switch (getModelNameForTiktoken(modelName)) {\n        case \"gpt-3.5-turbo-16k\":\n            return 16384;\n        case \"gpt-3.5-turbo\":\n            return 4096;\n        case \"gpt-4-32k\":\n            return 32768;\n        case \"gpt-4\":\n            return 8192;\n        case \"text-davinci-003\":\n            return 4097;\n        case \"text-curie-001\":\n            return 2048;\n        case \"text-babbage-001\":\n            return 2048;\n        case \"text-ada-001\":\n            return 2048;\n        case \"code-davinci-002\":\n            return 8000;\n        case \"code-cushman-001\":\n            return 2048;\n        default:\n            return 4097;\n    }\n};\nexport const calculateMaxTokens = async ({ prompt, modelName, }) => {\n    let numTokens;\n    try {\n        numTokens = (await encodingForModel(modelName)).encode(prompt).length;\n    }\n    catch (error) {\n        console.warn(\"Failed to calculate number of tokens, falling back to approximate count\");\n        // fallback to approximate calculation if tiktoken is not available\n        numTokens = Math.ceil(prompt.length / 4);\n    }\n    const maxTokens = getModelContextSize(modelName);\n    return maxTokens - numTokens;\n};\n", "'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n", "'use strict';\n\nvar bind = require('./helpers/bind');\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return Array.isArray(val);\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return toString.call(val) === '[object FormData]';\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return toString.call(val) === '[object URLSearchParams]';\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n", "'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n", "'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  };\n  return error;\n};\n", "'use strict';\n\nmodule.exports = {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n", "'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n", "'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n", "'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n};\n", "'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n", "'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n", "'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n", "'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\nvar transitionalDefaults = require('../defaults/transitional');\nvar Cancel = require('../cancel/Cancel');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n    var onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      var transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(\n        timeoutErrorMessage,\n        config,\n        transitional.clarifyTimeoutError ? 'ETIMEDOUT' : 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function(cancel) {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || (cancel && cancel.type) ? new Cancel('canceled') : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n", "'use strict';\n\nvar utils = require('../utils');\nvar normalizeHeaderName = require('../helpers/normalizeHeaderName');\nvar enhanceError = require('../core/enhanceError');\nvar transitionalDefaults = require('./transitional');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('../adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('../adapters/http');\n  }\n  return adapter;\n}\n\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nvar defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data) || (headers && headers['Content-Type'] === 'application/json')) {\n      setContentTypeIfUnset(headers, 'application/json');\n      return stringifySafely(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional || defaults.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw enhanceError(e, this, 'E_JSON_PARSE');\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n", "'use strict';\n\nvar utils = require('./../utils');\nvar defaults = require('../defaults');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  var context = this || defaults;\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(context, data, headers);\n  });\n\n  return data;\n};\n", "'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n", "'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar Cancel = require('../cancel/Cancel');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new Cancel('canceled');\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n", "'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(prop) {\n    if (prop in config2) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  var mergeMap = {\n    'url': valueFromConfig2,\n    'method': valueFromConfig2,\n    'data': valueFromConfig2,\n    'baseURL': defaultToConfig2,\n    'transformRequest': defaultToConfig2,\n    'transformResponse': defaultToConfig2,\n    'paramsSerializer': defaultToConfig2,\n    'timeout': defaultToConfig2,\n    'timeoutMessage': defaultToConfig2,\n    'withCredentials': defaultToConfig2,\n    'adapter': defaultToConfig2,\n    'responseType': defaultToConfig2,\n    'xsrfCookieName': defaultToConfig2,\n    'xsrfHeaderName': defaultToConfig2,\n    'onUploadProgress': defaultToConfig2,\n    'onDownloadProgress': defaultToConfig2,\n    'decompress': defaultToConfig2,\n    'maxContentLength': defaultToConfig2,\n    'maxBodyLength': defaultToConfig2,\n    'transport': defaultToConfig2,\n    'httpAgent': defaultToConfig2,\n    'httpsAgent': defaultToConfig2,\n    'cancelToken': defaultToConfig2,\n    'socketPath': defaultToConfig2,\n    'responseEncoding': defaultToConfig2,\n    'validateStatus': mergeDirectKeys\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    var merge = mergeMap[prop] || mergeDeepProperties;\n    var configValue = merge(prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n};\n", "module.exports = {\n  \"version\": \"0.26.1\"\n};", "'use strict';\n\nvar VERSION = require('../env/data').version;\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new Error(formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')));\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new TypeError('options must be an object');\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new TypeError('option ' + opt + ' must be ' + result);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw Error('Unknown option ' + opt);\n    }\n  }\n}\n\nmodule.exports = {\n  assertOptions: assertOptions,\n  validators: validators\n};\n", "'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\nvar validator = require('../helpers/validator');\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(configOrUrl, config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof configOrUrl === 'string') {\n    config = config || {};\n    config.url = configOrUrl;\n  } else {\n    config = configOrUrl || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean),\n      forcedJSONParsing: validators.transitional(validators.boolean),\n      clarifyTimeoutError: validators.transitional(validators.boolean)\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n", "'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n\n  // eslint-disable-next-line func-names\n  this.promise.then(function(cancel) {\n    if (!token._listeners) return;\n\n    var i;\n    var l = token._listeners.length;\n\n    for (i = 0; i < l; i++) {\n      token._listeners[i](cancel);\n    }\n    token._listeners = null;\n  });\n\n  // eslint-disable-next-line func-names\n  this.promise.then = function(onfulfilled) {\n    var _resolve;\n    // eslint-disable-next-line func-names\n    var promise = new Promise(function(resolve) {\n      token.subscribe(resolve);\n      _resolve = resolve;\n    }).then(onfulfilled);\n\n    promise.cancel = function reject() {\n      token.unsubscribe(_resolve);\n    };\n\n    return promise;\n  };\n\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Subscribe to the cancel signal\n */\n\nCancelToken.prototype.subscribe = function subscribe(listener) {\n  if (this.reason) {\n    listener(this.reason);\n    return;\n  }\n\n  if (this._listeners) {\n    this._listeners.push(listener);\n  } else {\n    this._listeners = [listener];\n  }\n};\n\n/**\n * Unsubscribe from the cancel signal\n */\n\nCancelToken.prototype.unsubscribe = function unsubscribe(listener) {\n  if (!this._listeners) {\n    return;\n  }\n  var index = this._listeners.indexOf(listener);\n  if (index !== -1) {\n    this._listeners.splice(index, 1);\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n", "'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n", "'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n};\n", "'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\naxios.VERSION = require('./env/data').version;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n", "module.exports = require('./lib/axios');", "\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * OpenAI API\n * APIs for sampling from and fine-tuning language models\n *\n * The version of the OpenAPI document: 1.3.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RequiredError = exports.BaseAPI = exports.COLLECTION_FORMATS = exports.BASE_PATH = void 0;\nconst axios_1 = require(\"axios\");\nexports.BASE_PATH = \"https://api.openai.com/v1\".replace(/\\/+$/, \"\");\n/**\n *\n * @export\n */\nexports.COLLECTION_FORMATS = {\n    csv: \",\",\n    ssv: \" \",\n    tsv: \"\\t\",\n    pipes: \"|\",\n};\n/**\n *\n * @export\n * @class BaseAPI\n */\nclass BaseAPI {\n    constructor(configuration, basePath = exports.BASE_PATH, axios = axios_1.default) {\n        this.basePath = basePath;\n        this.axios = axios;\n        if (configuration) {\n            this.configuration = configuration;\n            this.basePath = configuration.basePath || this.basePath;\n        }\n    }\n}\nexports.BaseAPI = BaseAPI;\n;\n/**\n *\n * @export\n * @class RequiredError\n * @extends {Error}\n */\nclass RequiredError extends Error {\n    constructor(field, msg) {\n        super(msg);\n        this.field = field;\n        this.name = \"RequiredError\";\n    }\n}\nexports.RequiredError = RequiredError;\n", "\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * OpenAI API\n * APIs for sampling from and fine-tuning language models\n *\n * The version of the OpenAPI document: 1.3.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createRequestFunction = exports.toPathString = exports.serializeDataIfNeeded = exports.setSearchParams = exports.setOAuthToObject = exports.setBearerAuthToObject = exports.setBasicAuthToObject = exports.setApiKeyToObject = exports.assertParamExists = exports.DUMMY_BASE_URL = void 0;\nconst base_1 = require(\"./base\");\n/**\n *\n * @export\n */\nexports.DUMMY_BASE_URL = 'https://example.com';\n/**\n *\n * @throws {RequiredError}\n * @export\n */\nexports.assertParamExists = function (functionName, paramName, paramValue) {\n    if (paramValue === null || paramValue === undefined) {\n        throw new base_1.RequiredError(paramName, `Required parameter ${paramName} was null or undefined when calling ${functionName}.`);\n    }\n};\n/**\n *\n * @export\n */\nexports.setApiKeyToObject = function (object, keyParamName, configuration) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (configuration && configuration.apiKey) {\n            const localVarApiKeyValue = typeof configuration.apiKey === 'function'\n                ? yield configuration.apiKey(keyParamName)\n                : yield configuration.apiKey;\n            object[keyParamName] = localVarApiKeyValue;\n        }\n    });\n};\n/**\n *\n * @export\n */\nexports.setBasicAuthToObject = function (object, configuration) {\n    if (configuration && (configuration.username || configuration.password)) {\n        object[\"auth\"] = { username: configuration.username, password: configuration.password };\n    }\n};\n/**\n *\n * @export\n */\nexports.setBearerAuthToObject = function (object, configuration) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (configuration && configuration.accessToken) {\n            const accessToken = typeof configuration.accessToken === 'function'\n                ? yield configuration.accessToken()\n                : yield configuration.accessToken;\n            object[\"Authorization\"] = \"Bearer \" + accessToken;\n        }\n    });\n};\n/**\n *\n * @export\n */\nexports.setOAuthToObject = function (object, name, scopes, configuration) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (configuration && configuration.accessToken) {\n            const localVarAccessTokenValue = typeof configuration.accessToken === 'function'\n                ? yield configuration.accessToken(name, scopes)\n                : yield configuration.accessToken;\n            object[\"Authorization\"] = \"Bearer \" + localVarAccessTokenValue;\n        }\n    });\n};\nfunction setFlattenedQueryParams(urlSearchParams, parameter, key = \"\") {\n    if (parameter == null)\n        return;\n    if (typeof parameter === \"object\") {\n        if (Array.isArray(parameter)) {\n            parameter.forEach(item => setFlattenedQueryParams(urlSearchParams, item, key));\n        }\n        else {\n            Object.keys(parameter).forEach(currentKey => setFlattenedQueryParams(urlSearchParams, parameter[currentKey], `${key}${key !== '' ? '.' : ''}${currentKey}`));\n        }\n    }\n    else {\n        if (urlSearchParams.has(key)) {\n            urlSearchParams.append(key, parameter);\n        }\n        else {\n            urlSearchParams.set(key, parameter);\n        }\n    }\n}\n/**\n *\n * @export\n */\nexports.setSearchParams = function (url, ...objects) {\n    const searchParams = new URLSearchParams(url.search);\n    setFlattenedQueryParams(searchParams, objects);\n    url.search = searchParams.toString();\n};\n/**\n *\n * @export\n */\nexports.serializeDataIfNeeded = function (value, requestOptions, configuration) {\n    const nonString = typeof value !== 'string';\n    const needsSerialization = nonString && configuration && configuration.isJsonMime\n        ? configuration.isJsonMime(requestOptions.headers['Content-Type'])\n        : nonString;\n    return needsSerialization\n        ? JSON.stringify(value !== undefined ? value : {})\n        : (value || \"\");\n};\n/**\n *\n * @export\n */\nexports.toPathString = function (url) {\n    return url.pathname + url.search + url.hash;\n};\n/**\n *\n * @export\n */\nexports.createRequestFunction = function (axiosArgs, globalAxios, BASE_PATH, configuration) {\n    return (axios = globalAxios, basePath = BASE_PATH) => {\n        const axiosRequestArgs = Object.assign(Object.assign({}, axiosArgs.options), { url: ((configuration === null || configuration === void 0 ? void 0 : configuration.basePath) || basePath) + axiosArgs.url });\n        return axios.request(axiosRequestArgs);\n    };\n};\n", "\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * OpenAI API\n * APIs for sampling from and fine-tuning language models\n *\n * The version of the OpenAPI document: 1.3.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OpenAIApi = exports.OpenAIApiFactory = exports.OpenAIApiFp = exports.OpenAIApiAxiosParamCreator = exports.CreateImageRequestResponseFormatEnum = exports.CreateImageRequestSizeEnum = exports.ChatCompletionResponseMessageRoleEnum = exports.ChatCompletionRequestMessageRoleEnum = void 0;\nconst axios_1 = require(\"axios\");\n// Some imports not used depending on template conditions\n// @ts-ignore\nconst common_1 = require(\"./common\");\n// @ts-ignore\nconst base_1 = require(\"./base\");\nexports.ChatCompletionRequestMessageRoleEnum = {\n    System: 'system',\n    User: 'user',\n    Assistant: 'assistant',\n    Function: 'function'\n};\nexports.ChatCompletionResponseMessageRoleEnum = {\n    System: 'system',\n    User: 'user',\n    Assistant: 'assistant',\n    Function: 'function'\n};\nexports.CreateImageRequestSizeEnum = {\n    _256x256: '256x256',\n    _512x512: '512x512',\n    _1024x1024: '1024x1024'\n};\nexports.CreateImageRequestResponseFormatEnum = {\n    Url: 'url',\n    B64Json: 'b64_json'\n};\n/**\n * OpenAIApi - axios parameter creator\n * @export\n */\nexports.OpenAIApiAxiosParamCreator = function (configuration) {\n    return {\n        /**\n         *\n         * @summary Immediately cancel a fine-tune job.\n         * @param {string} fineTuneId The ID of the fine-tune job to cancel\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        cancelFineTune: (fineTuneId, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'fineTuneId' is not null or undefined\n            common_1.assertParamExists('cancelFineTune', 'fineTuneId', fineTuneId);\n            const localVarPath = `/fine-tunes/{fine_tune_id}/cancel`\n                .replace(`{${\"fine_tune_id\"}}`, encodeURIComponent(String(fineTuneId)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Answers the specified question using the provided documents and examples.  The endpoint first [searches](/docs/api-reference/searches) over provided documents or files to find relevant context. The relevant context is combined with the provided examples and question to create the prompt for [completion](/docs/api-reference/completions).\n         * @param {CreateAnswerRequest} createAnswerRequest\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        createAnswer: (createAnswerRequest, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'createAnswerRequest' is not null or undefined\n            common_1.assertParamExists('createAnswer', 'createAnswerRequest', createAnswerRequest);\n            const localVarPath = `/answers`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            localVarRequestOptions.data = common_1.serializeDataIfNeeded(createAnswerRequest, localVarRequestOptions, configuration);\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Creates a model response for the given chat conversation.\n         * @param {CreateChatCompletionRequest} createChatCompletionRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createChatCompletion: (createChatCompletionRequest, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'createChatCompletionRequest' is not null or undefined\n            common_1.assertParamExists('createChatCompletion', 'createChatCompletionRequest', createChatCompletionRequest);\n            const localVarPath = `/chat/completions`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            localVarRequestOptions.data = common_1.serializeDataIfNeeded(createChatCompletionRequest, localVarRequestOptions, configuration);\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Classifies the specified `query` using provided examples.  The endpoint first [searches](/docs/api-reference/searches) over the labeled examples to select the ones most relevant for the particular query. Then, the relevant examples are combined with the query to construct a prompt to produce the final label via the [completions](/docs/api-reference/completions) endpoint.  Labeled examples can be provided via an uploaded `file`, or explicitly listed in the request using the `examples` parameter for quick tests and small scale use cases.\n         * @param {CreateClassificationRequest} createClassificationRequest\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        createClassification: (createClassificationRequest, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'createClassificationRequest' is not null or undefined\n            common_1.assertParamExists('createClassification', 'createClassificationRequest', createClassificationRequest);\n            const localVarPath = `/classifications`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            localVarRequestOptions.data = common_1.serializeDataIfNeeded(createClassificationRequest, localVarRequestOptions, configuration);\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Creates a completion for the provided prompt and parameters.\n         * @param {CreateCompletionRequest} createCompletionRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createCompletion: (createCompletionRequest, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'createCompletionRequest' is not null or undefined\n            common_1.assertParamExists('createCompletion', 'createCompletionRequest', createCompletionRequest);\n            const localVarPath = `/completions`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            localVarRequestOptions.data = common_1.serializeDataIfNeeded(createCompletionRequest, localVarRequestOptions, configuration);\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Creates a new edit for the provided input, instruction, and parameters.\n         * @param {CreateEditRequest} createEditRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createEdit: (createEditRequest, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'createEditRequest' is not null or undefined\n            common_1.assertParamExists('createEdit', 'createEditRequest', createEditRequest);\n            const localVarPath = `/edits`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            localVarRequestOptions.data = common_1.serializeDataIfNeeded(createEditRequest, localVarRequestOptions, configuration);\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Creates an embedding vector representing the input text.\n         * @param {CreateEmbeddingRequest} createEmbeddingRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createEmbedding: (createEmbeddingRequest, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'createEmbeddingRequest' is not null or undefined\n            common_1.assertParamExists('createEmbedding', 'createEmbeddingRequest', createEmbeddingRequest);\n            const localVarPath = `/embeddings`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            localVarRequestOptions.data = common_1.serializeDataIfNeeded(createEmbeddingRequest, localVarRequestOptions, configuration);\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Upload a file that contains document(s) to be used across various endpoints/features. Currently, the size of all the files uploaded by one organization can be up to 1 GB. Please contact us if you need to increase the storage limit.\n         * @param {File} file Name of the [JSON Lines](https://jsonlines.readthedocs.io/en/latest/) file to be uploaded.  If the &#x60;purpose&#x60; is set to \\\\\\&quot;fine-tune\\\\\\&quot;, each line is a JSON record with \\\\\\&quot;prompt\\\\\\&quot; and \\\\\\&quot;completion\\\\\\&quot; fields representing your [training examples](/docs/guides/fine-tuning/prepare-training-data).\n         * @param {string} purpose The intended purpose of the uploaded documents.  Use \\\\\\&quot;fine-tune\\\\\\&quot; for [Fine-tuning](/docs/api-reference/fine-tunes). This allows us to validate the format of the uploaded file.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createFile: (file, purpose, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'file' is not null or undefined\n            common_1.assertParamExists('createFile', 'file', file);\n            // verify required parameter 'purpose' is not null or undefined\n            common_1.assertParamExists('createFile', 'purpose', purpose);\n            const localVarPath = `/files`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            const localVarFormParams = new ((configuration && configuration.formDataCtor) || FormData)();\n            if (file !== undefined) {\n                localVarFormParams.append('file', file);\n            }\n            if (purpose !== undefined) {\n                localVarFormParams.append('purpose', purpose);\n            }\n            localVarHeaderParameter['Content-Type'] = 'multipart/form-data';\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), localVarFormParams.getHeaders()), headersFromBaseOptions), options.headers);\n            localVarRequestOptions.data = localVarFormParams;\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Creates a job that fine-tunes a specified model from a given dataset.  Response includes details of the enqueued job including job status and the name of the fine-tuned models once complete.  [Learn more about Fine-tuning](/docs/guides/fine-tuning)\n         * @param {CreateFineTuneRequest} createFineTuneRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createFineTune: (createFineTuneRequest, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'createFineTuneRequest' is not null or undefined\n            common_1.assertParamExists('createFineTune', 'createFineTuneRequest', createFineTuneRequest);\n            const localVarPath = `/fine-tunes`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            localVarRequestOptions.data = common_1.serializeDataIfNeeded(createFineTuneRequest, localVarRequestOptions, configuration);\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Creates an image given a prompt.\n         * @param {CreateImageRequest} createImageRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createImage: (createImageRequest, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'createImageRequest' is not null or undefined\n            common_1.assertParamExists('createImage', 'createImageRequest', createImageRequest);\n            const localVarPath = `/images/generations`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            localVarRequestOptions.data = common_1.serializeDataIfNeeded(createImageRequest, localVarRequestOptions, configuration);\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Creates an edited or extended image given an original image and a prompt.\n         * @param {File} image The image to edit. Must be a valid PNG file, less than 4MB, and square. If mask is not provided, image must have transparency, which will be used as the mask.\n         * @param {string} prompt A text description of the desired image(s). The maximum length is 1000 characters.\n         * @param {File} [mask] An additional image whose fully transparent areas (e.g. where alpha is zero) indicate where &#x60;image&#x60; should be edited. Must be a valid PNG file, less than 4MB, and have the same dimensions as &#x60;image&#x60;.\n         * @param {number} [n] The number of images to generate. Must be between 1 and 10.\n         * @param {string} [size] The size of the generated images. Must be one of &#x60;256x256&#x60;, &#x60;512x512&#x60;, or &#x60;1024x1024&#x60;.\n         * @param {string} [responseFormat] The format in which the generated images are returned. Must be one of &#x60;url&#x60; or &#x60;b64_json&#x60;.\n         * @param {string} [user] A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createImageEdit: (image, prompt, mask, n, size, responseFormat, user, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'image' is not null or undefined\n            common_1.assertParamExists('createImageEdit', 'image', image);\n            // verify required parameter 'prompt' is not null or undefined\n            common_1.assertParamExists('createImageEdit', 'prompt', prompt);\n            const localVarPath = `/images/edits`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            const localVarFormParams = new ((configuration && configuration.formDataCtor) || FormData)();\n            if (image !== undefined) {\n                localVarFormParams.append('image', image);\n            }\n            if (mask !== undefined) {\n                localVarFormParams.append('mask', mask);\n            }\n            if (prompt !== undefined) {\n                localVarFormParams.append('prompt', prompt);\n            }\n            if (n !== undefined) {\n                localVarFormParams.append('n', n);\n            }\n            if (size !== undefined) {\n                localVarFormParams.append('size', size);\n            }\n            if (responseFormat !== undefined) {\n                localVarFormParams.append('response_format', responseFormat);\n            }\n            if (user !== undefined) {\n                localVarFormParams.append('user', user);\n            }\n            localVarHeaderParameter['Content-Type'] = 'multipart/form-data';\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), localVarFormParams.getHeaders()), headersFromBaseOptions), options.headers);\n            localVarRequestOptions.data = localVarFormParams;\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Creates a variation of a given image.\n         * @param {File} image The image to use as the basis for the variation(s). Must be a valid PNG file, less than 4MB, and square.\n         * @param {number} [n] The number of images to generate. Must be between 1 and 10.\n         * @param {string} [size] The size of the generated images. Must be one of &#x60;256x256&#x60;, &#x60;512x512&#x60;, or &#x60;1024x1024&#x60;.\n         * @param {string} [responseFormat] The format in which the generated images are returned. Must be one of &#x60;url&#x60; or &#x60;b64_json&#x60;.\n         * @param {string} [user] A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createImageVariation: (image, n, size, responseFormat, user, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'image' is not null or undefined\n            common_1.assertParamExists('createImageVariation', 'image', image);\n            const localVarPath = `/images/variations`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            const localVarFormParams = new ((configuration && configuration.formDataCtor) || FormData)();\n            if (image !== undefined) {\n                localVarFormParams.append('image', image);\n            }\n            if (n !== undefined) {\n                localVarFormParams.append('n', n);\n            }\n            if (size !== undefined) {\n                localVarFormParams.append('size', size);\n            }\n            if (responseFormat !== undefined) {\n                localVarFormParams.append('response_format', responseFormat);\n            }\n            if (user !== undefined) {\n                localVarFormParams.append('user', user);\n            }\n            localVarHeaderParameter['Content-Type'] = 'multipart/form-data';\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), localVarFormParams.getHeaders()), headersFromBaseOptions), options.headers);\n            localVarRequestOptions.data = localVarFormParams;\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Classifies if text violates OpenAI\\'s Content Policy\n         * @param {CreateModerationRequest} createModerationRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createModeration: (createModerationRequest, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'createModerationRequest' is not null or undefined\n            common_1.assertParamExists('createModeration', 'createModerationRequest', createModerationRequest);\n            const localVarPath = `/moderations`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            localVarRequestOptions.data = common_1.serializeDataIfNeeded(createModerationRequest, localVarRequestOptions, configuration);\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary The search endpoint computes similarity scores between provided query and documents. Documents can be passed directly to the API if there are no more than 200 of them.  To go beyond the 200 document limit, documents can be processed offline and then used for efficient retrieval at query time. When `file` is set, the search endpoint searches over all the documents in the given file and returns up to the `max_rerank` number of documents. These documents will be returned along with their search scores.  The similarity score is a positive score that usually ranges from 0 to 300 (but can sometimes go higher), where a score above 200 usually means the document is semantically similar to the query.\n         * @param {string} engineId The ID of the engine to use for this request.  You can select one of &#x60;ada&#x60;, &#x60;babbage&#x60;, &#x60;curie&#x60;, or &#x60;davinci&#x60;.\n         * @param {CreateSearchRequest} createSearchRequest\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        createSearch: (engineId, createSearchRequest, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'engineId' is not null or undefined\n            common_1.assertParamExists('createSearch', 'engineId', engineId);\n            // verify required parameter 'createSearchRequest' is not null or undefined\n            common_1.assertParamExists('createSearch', 'createSearchRequest', createSearchRequest);\n            const localVarPath = `/engines/{engine_id}/search`\n                .replace(`{${\"engine_id\"}}`, encodeURIComponent(String(engineId)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            localVarHeaderParameter['Content-Type'] = 'application/json';\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            localVarRequestOptions.data = common_1.serializeDataIfNeeded(createSearchRequest, localVarRequestOptions, configuration);\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Transcribes audio into the input language.\n         * @param {File} file The audio file object (not file name) to transcribe, in one of these formats: mp3, mp4, mpeg, mpga, m4a, wav, or webm.\n         * @param {string} model ID of the model to use. Only &#x60;whisper-1&#x60; is currently available.\n         * @param {string} [prompt] An optional text to guide the model\\\\\\&#39;s style or continue a previous audio segment. The [prompt](/docs/guides/speech-to-text/prompting) should match the audio language.\n         * @param {string} [responseFormat] The format of the transcript output, in one of these options: json, text, srt, verbose_json, or vtt.\n         * @param {number} [temperature] The sampling temperature, between 0 and 1. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. If set to 0, the model will use [log probability](https://en.wikipedia.org/wiki/Log_probability) to automatically increase the temperature until certain thresholds are hit.\n         * @param {string} [language] The language of the input audio. Supplying the input language in [ISO-639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format will improve accuracy and latency.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createTranscription: (file, model, prompt, responseFormat, temperature, language, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'file' is not null or undefined\n            common_1.assertParamExists('createTranscription', 'file', file);\n            // verify required parameter 'model' is not null or undefined\n            common_1.assertParamExists('createTranscription', 'model', model);\n            const localVarPath = `/audio/transcriptions`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            const localVarFormParams = new ((configuration && configuration.formDataCtor) || FormData)();\n            if (file !== undefined) {\n                localVarFormParams.append('file', file);\n            }\n            if (model !== undefined) {\n                localVarFormParams.append('model', model);\n            }\n            if (prompt !== undefined) {\n                localVarFormParams.append('prompt', prompt);\n            }\n            if (responseFormat !== undefined) {\n                localVarFormParams.append('response_format', responseFormat);\n            }\n            if (temperature !== undefined) {\n                localVarFormParams.append('temperature', temperature);\n            }\n            if (language !== undefined) {\n                localVarFormParams.append('language', language);\n            }\n            localVarHeaderParameter['Content-Type'] = 'multipart/form-data';\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), localVarFormParams.getHeaders()), headersFromBaseOptions), options.headers);\n            localVarRequestOptions.data = localVarFormParams;\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Translates audio into into English.\n         * @param {File} file The audio file object (not file name) translate, in one of these formats: mp3, mp4, mpeg, mpga, m4a, wav, or webm.\n         * @param {string} model ID of the model to use. Only &#x60;whisper-1&#x60; is currently available.\n         * @param {string} [prompt] An optional text to guide the model\\\\\\&#39;s style or continue a previous audio segment. The [prompt](/docs/guides/speech-to-text/prompting) should be in English.\n         * @param {string} [responseFormat] The format of the transcript output, in one of these options: json, text, srt, verbose_json, or vtt.\n         * @param {number} [temperature] The sampling temperature, between 0 and 1. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. If set to 0, the model will use [log probability](https://en.wikipedia.org/wiki/Log_probability) to automatically increase the temperature until certain thresholds are hit.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createTranslation: (file, model, prompt, responseFormat, temperature, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'file' is not null or undefined\n            common_1.assertParamExists('createTranslation', 'file', file);\n            // verify required parameter 'model' is not null or undefined\n            common_1.assertParamExists('createTranslation', 'model', model);\n            const localVarPath = `/audio/translations`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'POST' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            const localVarFormParams = new ((configuration && configuration.formDataCtor) || FormData)();\n            if (file !== undefined) {\n                localVarFormParams.append('file', file);\n            }\n            if (model !== undefined) {\n                localVarFormParams.append('model', model);\n            }\n            if (prompt !== undefined) {\n                localVarFormParams.append('prompt', prompt);\n            }\n            if (responseFormat !== undefined) {\n                localVarFormParams.append('response_format', responseFormat);\n            }\n            if (temperature !== undefined) {\n                localVarFormParams.append('temperature', temperature);\n            }\n            localVarHeaderParameter['Content-Type'] = 'multipart/form-data';\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), localVarFormParams.getHeaders()), headersFromBaseOptions), options.headers);\n            localVarRequestOptions.data = localVarFormParams;\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Delete a file.\n         * @param {string} fileId The ID of the file to use for this request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteFile: (fileId, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'fileId' is not null or undefined\n            common_1.assertParamExists('deleteFile', 'fileId', fileId);\n            const localVarPath = `/files/{file_id}`\n                .replace(`{${\"file_id\"}}`, encodeURIComponent(String(fileId)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'DELETE' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Delete a fine-tuned model. You must have the Owner role in your organization.\n         * @param {string} model The model to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteModel: (model, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'model' is not null or undefined\n            common_1.assertParamExists('deleteModel', 'model', model);\n            const localVarPath = `/models/{model}`\n                .replace(`{${\"model\"}}`, encodeURIComponent(String(model)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'DELETE' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Returns the contents of the specified file\n         * @param {string} fileId The ID of the file to use for this request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        downloadFile: (fileId, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'fileId' is not null or undefined\n            common_1.assertParamExists('downloadFile', 'fileId', fileId);\n            const localVarPath = `/files/{file_id}/content`\n                .replace(`{${\"file_id\"}}`, encodeURIComponent(String(fileId)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Lists the currently available (non-finetuned) models, and provides basic information about each one such as the owner and availability.\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        listEngines: (options = {}) => __awaiter(this, void 0, void 0, function* () {\n            const localVarPath = `/engines`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Returns a list of files that belong to the user\\'s organization.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listFiles: (options = {}) => __awaiter(this, void 0, void 0, function* () {\n            const localVarPath = `/files`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Get fine-grained status updates for a fine-tune job.\n         * @param {string} fineTuneId The ID of the fine-tune job to get events for.\n         * @param {boolean} [stream] Whether to stream events for the fine-tune job. If set to true, events will be sent as data-only [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format) as they become available. The stream will terminate with a &#x60;data: [DONE]&#x60; message when the job is finished (succeeded, cancelled, or failed).  If set to false, only events generated so far will be returned.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listFineTuneEvents: (fineTuneId, stream, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'fineTuneId' is not null or undefined\n            common_1.assertParamExists('listFineTuneEvents', 'fineTuneId', fineTuneId);\n            const localVarPath = `/fine-tunes/{fine_tune_id}/events`\n                .replace(`{${\"fine_tune_id\"}}`, encodeURIComponent(String(fineTuneId)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            if (stream !== undefined) {\n                localVarQueryParameter['stream'] = stream;\n            }\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary List your organization\\'s fine-tuning jobs\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listFineTunes: (options = {}) => __awaiter(this, void 0, void 0, function* () {\n            const localVarPath = `/fine-tunes`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Lists the currently available models, and provides basic information about each one such as the owner and availability.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listModels: (options = {}) => __awaiter(this, void 0, void 0, function* () {\n            const localVarPath = `/models`;\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Retrieves a model instance, providing basic information about it such as the owner and availability.\n         * @param {string} engineId The ID of the engine to use for this request\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        retrieveEngine: (engineId, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'engineId' is not null or undefined\n            common_1.assertParamExists('retrieveEngine', 'engineId', engineId);\n            const localVarPath = `/engines/{engine_id}`\n                .replace(`{${\"engine_id\"}}`, encodeURIComponent(String(engineId)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Returns information about a specific file.\n         * @param {string} fileId The ID of the file to use for this request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        retrieveFile: (fileId, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'fileId' is not null or undefined\n            common_1.assertParamExists('retrieveFile', 'fileId', fileId);\n            const localVarPath = `/files/{file_id}`\n                .replace(`{${\"file_id\"}}`, encodeURIComponent(String(fileId)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Gets info about the fine-tune job.  [Learn more about Fine-tuning](/docs/guides/fine-tuning)\n         * @param {string} fineTuneId The ID of the fine-tune job\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        retrieveFineTune: (fineTuneId, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'fineTuneId' is not null or undefined\n            common_1.assertParamExists('retrieveFineTune', 'fineTuneId', fineTuneId);\n            const localVarPath = `/fine-tunes/{fine_tune_id}`\n                .replace(`{${\"fine_tune_id\"}}`, encodeURIComponent(String(fineTuneId)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n        /**\n         *\n         * @summary Retrieves a model instance, providing basic information about the model such as the owner and permissioning.\n         * @param {string} model The ID of the model to use for this request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        retrieveModel: (model, options = {}) => __awaiter(this, void 0, void 0, function* () {\n            // verify required parameter 'model' is not null or undefined\n            common_1.assertParamExists('retrieveModel', 'model', model);\n            const localVarPath = `/models/{model}`\n                .replace(`{${\"model\"}}`, encodeURIComponent(String(model)));\n            // use dummy base URL string because the URL constructor only accepts absolute URLs.\n            const localVarUrlObj = new URL(localVarPath, common_1.DUMMY_BASE_URL);\n            let baseOptions;\n            if (configuration) {\n                baseOptions = configuration.baseOptions;\n            }\n            const localVarRequestOptions = Object.assign(Object.assign({ method: 'GET' }, baseOptions), options);\n            const localVarHeaderParameter = {};\n            const localVarQueryParameter = {};\n            common_1.setSearchParams(localVarUrlObj, localVarQueryParameter);\n            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};\n            localVarRequestOptions.headers = Object.assign(Object.assign(Object.assign({}, localVarHeaderParameter), headersFromBaseOptions), options.headers);\n            return {\n                url: common_1.toPathString(localVarUrlObj),\n                options: localVarRequestOptions,\n            };\n        }),\n    };\n};\n/**\n * OpenAIApi - functional programming interface\n * @export\n */\nexports.OpenAIApiFp = function (configuration) {\n    const localVarAxiosParamCreator = exports.OpenAIApiAxiosParamCreator(configuration);\n    return {\n        /**\n         *\n         * @summary Immediately cancel a fine-tune job.\n         * @param {string} fineTuneId The ID of the fine-tune job to cancel\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        cancelFineTune(fineTuneId, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.cancelFineTune(fineTuneId, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Answers the specified question using the provided documents and examples.  The endpoint first [searches](/docs/api-reference/searches) over provided documents or files to find relevant context. The relevant context is combined with the provided examples and question to create the prompt for [completion](/docs/api-reference/completions).\n         * @param {CreateAnswerRequest} createAnswerRequest\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        createAnswer(createAnswerRequest, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.createAnswer(createAnswerRequest, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Creates a model response for the given chat conversation.\n         * @param {CreateChatCompletionRequest} createChatCompletionRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createChatCompletion(createChatCompletionRequest, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.createChatCompletion(createChatCompletionRequest, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Classifies the specified `query` using provided examples.  The endpoint first [searches](/docs/api-reference/searches) over the labeled examples to select the ones most relevant for the particular query. Then, the relevant examples are combined with the query to construct a prompt to produce the final label via the [completions](/docs/api-reference/completions) endpoint.  Labeled examples can be provided via an uploaded `file`, or explicitly listed in the request using the `examples` parameter for quick tests and small scale use cases.\n         * @param {CreateClassificationRequest} createClassificationRequest\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        createClassification(createClassificationRequest, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.createClassification(createClassificationRequest, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Creates a completion for the provided prompt and parameters.\n         * @param {CreateCompletionRequest} createCompletionRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createCompletion(createCompletionRequest, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.createCompletion(createCompletionRequest, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Creates a new edit for the provided input, instruction, and parameters.\n         * @param {CreateEditRequest} createEditRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createEdit(createEditRequest, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.createEdit(createEditRequest, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Creates an embedding vector representing the input text.\n         * @param {CreateEmbeddingRequest} createEmbeddingRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createEmbedding(createEmbeddingRequest, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.createEmbedding(createEmbeddingRequest, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Upload a file that contains document(s) to be used across various endpoints/features. Currently, the size of all the files uploaded by one organization can be up to 1 GB. Please contact us if you need to increase the storage limit.\n         * @param {File} file Name of the [JSON Lines](https://jsonlines.readthedocs.io/en/latest/) file to be uploaded.  If the &#x60;purpose&#x60; is set to \\\\\\&quot;fine-tune\\\\\\&quot;, each line is a JSON record with \\\\\\&quot;prompt\\\\\\&quot; and \\\\\\&quot;completion\\\\\\&quot; fields representing your [training examples](/docs/guides/fine-tuning/prepare-training-data).\n         * @param {string} purpose The intended purpose of the uploaded documents.  Use \\\\\\&quot;fine-tune\\\\\\&quot; for [Fine-tuning](/docs/api-reference/fine-tunes). This allows us to validate the format of the uploaded file.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createFile(file, purpose, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.createFile(file, purpose, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Creates a job that fine-tunes a specified model from a given dataset.  Response includes details of the enqueued job including job status and the name of the fine-tuned models once complete.  [Learn more about Fine-tuning](/docs/guides/fine-tuning)\n         * @param {CreateFineTuneRequest} createFineTuneRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createFineTune(createFineTuneRequest, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.createFineTune(createFineTuneRequest, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Creates an image given a prompt.\n         * @param {CreateImageRequest} createImageRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createImage(createImageRequest, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.createImage(createImageRequest, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Creates an edited or extended image given an original image and a prompt.\n         * @param {File} image The image to edit. Must be a valid PNG file, less than 4MB, and square. If mask is not provided, image must have transparency, which will be used as the mask.\n         * @param {string} prompt A text description of the desired image(s). The maximum length is 1000 characters.\n         * @param {File} [mask] An additional image whose fully transparent areas (e.g. where alpha is zero) indicate where &#x60;image&#x60; should be edited. Must be a valid PNG file, less than 4MB, and have the same dimensions as &#x60;image&#x60;.\n         * @param {number} [n] The number of images to generate. Must be between 1 and 10.\n         * @param {string} [size] The size of the generated images. Must be one of &#x60;256x256&#x60;, &#x60;512x512&#x60;, or &#x60;1024x1024&#x60;.\n         * @param {string} [responseFormat] The format in which the generated images are returned. Must be one of &#x60;url&#x60; or &#x60;b64_json&#x60;.\n         * @param {string} [user] A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createImageEdit(image, prompt, mask, n, size, responseFormat, user, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.createImageEdit(image, prompt, mask, n, size, responseFormat, user, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Creates a variation of a given image.\n         * @param {File} image The image to use as the basis for the variation(s). Must be a valid PNG file, less than 4MB, and square.\n         * @param {number} [n] The number of images to generate. Must be between 1 and 10.\n         * @param {string} [size] The size of the generated images. Must be one of &#x60;256x256&#x60;, &#x60;512x512&#x60;, or &#x60;1024x1024&#x60;.\n         * @param {string} [responseFormat] The format in which the generated images are returned. Must be one of &#x60;url&#x60; or &#x60;b64_json&#x60;.\n         * @param {string} [user] A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createImageVariation(image, n, size, responseFormat, user, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.createImageVariation(image, n, size, responseFormat, user, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Classifies if text violates OpenAI\\'s Content Policy\n         * @param {CreateModerationRequest} createModerationRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createModeration(createModerationRequest, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.createModeration(createModerationRequest, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary The search endpoint computes similarity scores between provided query and documents. Documents can be passed directly to the API if there are no more than 200 of them.  To go beyond the 200 document limit, documents can be processed offline and then used for efficient retrieval at query time. When `file` is set, the search endpoint searches over all the documents in the given file and returns up to the `max_rerank` number of documents. These documents will be returned along with their search scores.  The similarity score is a positive score that usually ranges from 0 to 300 (but can sometimes go higher), where a score above 200 usually means the document is semantically similar to the query.\n         * @param {string} engineId The ID of the engine to use for this request.  You can select one of &#x60;ada&#x60;, &#x60;babbage&#x60;, &#x60;curie&#x60;, or &#x60;davinci&#x60;.\n         * @param {CreateSearchRequest} createSearchRequest\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        createSearch(engineId, createSearchRequest, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.createSearch(engineId, createSearchRequest, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Transcribes audio into the input language.\n         * @param {File} file The audio file object (not file name) to transcribe, in one of these formats: mp3, mp4, mpeg, mpga, m4a, wav, or webm.\n         * @param {string} model ID of the model to use. Only &#x60;whisper-1&#x60; is currently available.\n         * @param {string} [prompt] An optional text to guide the model\\\\\\&#39;s style or continue a previous audio segment. The [prompt](/docs/guides/speech-to-text/prompting) should match the audio language.\n         * @param {string} [responseFormat] The format of the transcript output, in one of these options: json, text, srt, verbose_json, or vtt.\n         * @param {number} [temperature] The sampling temperature, between 0 and 1. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. If set to 0, the model will use [log probability](https://en.wikipedia.org/wiki/Log_probability) to automatically increase the temperature until certain thresholds are hit.\n         * @param {string} [language] The language of the input audio. Supplying the input language in [ISO-639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format will improve accuracy and latency.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createTranscription(file, model, prompt, responseFormat, temperature, language, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.createTranscription(file, model, prompt, responseFormat, temperature, language, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Translates audio into into English.\n         * @param {File} file The audio file object (not file name) translate, in one of these formats: mp3, mp4, mpeg, mpga, m4a, wav, or webm.\n         * @param {string} model ID of the model to use. Only &#x60;whisper-1&#x60; is currently available.\n         * @param {string} [prompt] An optional text to guide the model\\\\\\&#39;s style or continue a previous audio segment. The [prompt](/docs/guides/speech-to-text/prompting) should be in English.\n         * @param {string} [responseFormat] The format of the transcript output, in one of these options: json, text, srt, verbose_json, or vtt.\n         * @param {number} [temperature] The sampling temperature, between 0 and 1. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. If set to 0, the model will use [log probability](https://en.wikipedia.org/wiki/Log_probability) to automatically increase the temperature until certain thresholds are hit.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createTranslation(file, model, prompt, responseFormat, temperature, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.createTranslation(file, model, prompt, responseFormat, temperature, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Delete a file.\n         * @param {string} fileId The ID of the file to use for this request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteFile(fileId, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.deleteFile(fileId, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Delete a fine-tuned model. You must have the Owner role in your organization.\n         * @param {string} model The model to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteModel(model, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.deleteModel(model, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Returns the contents of the specified file\n         * @param {string} fileId The ID of the file to use for this request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        downloadFile(fileId, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.downloadFile(fileId, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Lists the currently available (non-finetuned) models, and provides basic information about each one such as the owner and availability.\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        listEngines(options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.listEngines(options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Returns a list of files that belong to the user\\'s organization.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listFiles(options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.listFiles(options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Get fine-grained status updates for a fine-tune job.\n         * @param {string} fineTuneId The ID of the fine-tune job to get events for.\n         * @param {boolean} [stream] Whether to stream events for the fine-tune job. If set to true, events will be sent as data-only [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format) as they become available. The stream will terminate with a &#x60;data: [DONE]&#x60; message when the job is finished (succeeded, cancelled, or failed).  If set to false, only events generated so far will be returned.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listFineTuneEvents(fineTuneId, stream, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.listFineTuneEvents(fineTuneId, stream, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary List your organization\\'s fine-tuning jobs\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listFineTunes(options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.listFineTunes(options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Lists the currently available models, and provides basic information about each one such as the owner and availability.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listModels(options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.listModels(options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Retrieves a model instance, providing basic information about it such as the owner and availability.\n         * @param {string} engineId The ID of the engine to use for this request\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        retrieveEngine(engineId, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.retrieveEngine(engineId, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Returns information about a specific file.\n         * @param {string} fileId The ID of the file to use for this request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        retrieveFile(fileId, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.retrieveFile(fileId, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Gets info about the fine-tune job.  [Learn more about Fine-tuning](/docs/guides/fine-tuning)\n         * @param {string} fineTuneId The ID of the fine-tune job\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        retrieveFineTune(fineTuneId, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.retrieveFineTune(fineTuneId, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n        /**\n         *\n         * @summary Retrieves a model instance, providing basic information about the model such as the owner and permissioning.\n         * @param {string} model The ID of the model to use for this request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        retrieveModel(model, options) {\n            return __awaiter(this, void 0, void 0, function* () {\n                const localVarAxiosArgs = yield localVarAxiosParamCreator.retrieveModel(model, options);\n                return common_1.createRequestFunction(localVarAxiosArgs, axios_1.default, base_1.BASE_PATH, configuration);\n            });\n        },\n    };\n};\n/**\n * OpenAIApi - factory interface\n * @export\n */\nexports.OpenAIApiFactory = function (configuration, basePath, axios) {\n    const localVarFp = exports.OpenAIApiFp(configuration);\n    return {\n        /**\n         *\n         * @summary Immediately cancel a fine-tune job.\n         * @param {string} fineTuneId The ID of the fine-tune job to cancel\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        cancelFineTune(fineTuneId, options) {\n            return localVarFp.cancelFineTune(fineTuneId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Answers the specified question using the provided documents and examples.  The endpoint first [searches](/docs/api-reference/searches) over provided documents or files to find relevant context. The relevant context is combined with the provided examples and question to create the prompt for [completion](/docs/api-reference/completions).\n         * @param {CreateAnswerRequest} createAnswerRequest\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        createAnswer(createAnswerRequest, options) {\n            return localVarFp.createAnswer(createAnswerRequest, options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Creates a model response for the given chat conversation.\n         * @param {CreateChatCompletionRequest} createChatCompletionRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createChatCompletion(createChatCompletionRequest, options) {\n            return localVarFp.createChatCompletion(createChatCompletionRequest, options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Classifies the specified `query` using provided examples.  The endpoint first [searches](/docs/api-reference/searches) over the labeled examples to select the ones most relevant for the particular query. Then, the relevant examples are combined with the query to construct a prompt to produce the final label via the [completions](/docs/api-reference/completions) endpoint.  Labeled examples can be provided via an uploaded `file`, or explicitly listed in the request using the `examples` parameter for quick tests and small scale use cases.\n         * @param {CreateClassificationRequest} createClassificationRequest\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        createClassification(createClassificationRequest, options) {\n            return localVarFp.createClassification(createClassificationRequest, options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Creates a completion for the provided prompt and parameters.\n         * @param {CreateCompletionRequest} createCompletionRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createCompletion(createCompletionRequest, options) {\n            return localVarFp.createCompletion(createCompletionRequest, options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Creates a new edit for the provided input, instruction, and parameters.\n         * @param {CreateEditRequest} createEditRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createEdit(createEditRequest, options) {\n            return localVarFp.createEdit(createEditRequest, options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Creates an embedding vector representing the input text.\n         * @param {CreateEmbeddingRequest} createEmbeddingRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createEmbedding(createEmbeddingRequest, options) {\n            return localVarFp.createEmbedding(createEmbeddingRequest, options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Upload a file that contains document(s) to be used across various endpoints/features. Currently, the size of all the files uploaded by one organization can be up to 1 GB. Please contact us if you need to increase the storage limit.\n         * @param {File} file Name of the [JSON Lines](https://jsonlines.readthedocs.io/en/latest/) file to be uploaded.  If the &#x60;purpose&#x60; is set to \\\\\\&quot;fine-tune\\\\\\&quot;, each line is a JSON record with \\\\\\&quot;prompt\\\\\\&quot; and \\\\\\&quot;completion\\\\\\&quot; fields representing your [training examples](/docs/guides/fine-tuning/prepare-training-data).\n         * @param {string} purpose The intended purpose of the uploaded documents.  Use \\\\\\&quot;fine-tune\\\\\\&quot; for [Fine-tuning](/docs/api-reference/fine-tunes). This allows us to validate the format of the uploaded file.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createFile(file, purpose, options) {\n            return localVarFp.createFile(file, purpose, options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Creates a job that fine-tunes a specified model from a given dataset.  Response includes details of the enqueued job including job status and the name of the fine-tuned models once complete.  [Learn more about Fine-tuning](/docs/guides/fine-tuning)\n         * @param {CreateFineTuneRequest} createFineTuneRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createFineTune(createFineTuneRequest, options) {\n            return localVarFp.createFineTune(createFineTuneRequest, options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Creates an image given a prompt.\n         * @param {CreateImageRequest} createImageRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createImage(createImageRequest, options) {\n            return localVarFp.createImage(createImageRequest, options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Creates an edited or extended image given an original image and a prompt.\n         * @param {File} image The image to edit. Must be a valid PNG file, less than 4MB, and square. If mask is not provided, image must have transparency, which will be used as the mask.\n         * @param {string} prompt A text description of the desired image(s). The maximum length is 1000 characters.\n         * @param {File} [mask] An additional image whose fully transparent areas (e.g. where alpha is zero) indicate where &#x60;image&#x60; should be edited. Must be a valid PNG file, less than 4MB, and have the same dimensions as &#x60;image&#x60;.\n         * @param {number} [n] The number of images to generate. Must be between 1 and 10.\n         * @param {string} [size] The size of the generated images. Must be one of &#x60;256x256&#x60;, &#x60;512x512&#x60;, or &#x60;1024x1024&#x60;.\n         * @param {string} [responseFormat] The format in which the generated images are returned. Must be one of &#x60;url&#x60; or &#x60;b64_json&#x60;.\n         * @param {string} [user] A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createImageEdit(image, prompt, mask, n, size, responseFormat, user, options) {\n            return localVarFp.createImageEdit(image, prompt, mask, n, size, responseFormat, user, options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Creates a variation of a given image.\n         * @param {File} image The image to use as the basis for the variation(s). Must be a valid PNG file, less than 4MB, and square.\n         * @param {number} [n] The number of images to generate. Must be between 1 and 10.\n         * @param {string} [size] The size of the generated images. Must be one of &#x60;256x256&#x60;, &#x60;512x512&#x60;, or &#x60;1024x1024&#x60;.\n         * @param {string} [responseFormat] The format in which the generated images are returned. Must be one of &#x60;url&#x60; or &#x60;b64_json&#x60;.\n         * @param {string} [user] A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createImageVariation(image, n, size, responseFormat, user, options) {\n            return localVarFp.createImageVariation(image, n, size, responseFormat, user, options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Classifies if text violates OpenAI\\'s Content Policy\n         * @param {CreateModerationRequest} createModerationRequest\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createModeration(createModerationRequest, options) {\n            return localVarFp.createModeration(createModerationRequest, options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary The search endpoint computes similarity scores between provided query and documents. Documents can be passed directly to the API if there are no more than 200 of them.  To go beyond the 200 document limit, documents can be processed offline and then used for efficient retrieval at query time. When `file` is set, the search endpoint searches over all the documents in the given file and returns up to the `max_rerank` number of documents. These documents will be returned along with their search scores.  The similarity score is a positive score that usually ranges from 0 to 300 (but can sometimes go higher), where a score above 200 usually means the document is semantically similar to the query.\n         * @param {string} engineId The ID of the engine to use for this request.  You can select one of &#x60;ada&#x60;, &#x60;babbage&#x60;, &#x60;curie&#x60;, or &#x60;davinci&#x60;.\n         * @param {CreateSearchRequest} createSearchRequest\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        createSearch(engineId, createSearchRequest, options) {\n            return localVarFp.createSearch(engineId, createSearchRequest, options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Transcribes audio into the input language.\n         * @param {File} file The audio file object (not file name) to transcribe, in one of these formats: mp3, mp4, mpeg, mpga, m4a, wav, or webm.\n         * @param {string} model ID of the model to use. Only &#x60;whisper-1&#x60; is currently available.\n         * @param {string} [prompt] An optional text to guide the model\\\\\\&#39;s style or continue a previous audio segment. The [prompt](/docs/guides/speech-to-text/prompting) should match the audio language.\n         * @param {string} [responseFormat] The format of the transcript output, in one of these options: json, text, srt, verbose_json, or vtt.\n         * @param {number} [temperature] The sampling temperature, between 0 and 1. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. If set to 0, the model will use [log probability](https://en.wikipedia.org/wiki/Log_probability) to automatically increase the temperature until certain thresholds are hit.\n         * @param {string} [language] The language of the input audio. Supplying the input language in [ISO-639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format will improve accuracy and latency.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createTranscription(file, model, prompt, responseFormat, temperature, language, options) {\n            return localVarFp.createTranscription(file, model, prompt, responseFormat, temperature, language, options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Translates audio into into English.\n         * @param {File} file The audio file object (not file name) translate, in one of these formats: mp3, mp4, mpeg, mpga, m4a, wav, or webm.\n         * @param {string} model ID of the model to use. Only &#x60;whisper-1&#x60; is currently available.\n         * @param {string} [prompt] An optional text to guide the model\\\\\\&#39;s style or continue a previous audio segment. The [prompt](/docs/guides/speech-to-text/prompting) should be in English.\n         * @param {string} [responseFormat] The format of the transcript output, in one of these options: json, text, srt, verbose_json, or vtt.\n         * @param {number} [temperature] The sampling temperature, between 0 and 1. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. If set to 0, the model will use [log probability](https://en.wikipedia.org/wiki/Log_probability) to automatically increase the temperature until certain thresholds are hit.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        createTranslation(file, model, prompt, responseFormat, temperature, options) {\n            return localVarFp.createTranslation(file, model, prompt, responseFormat, temperature, options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Delete a file.\n         * @param {string} fileId The ID of the file to use for this request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteFile(fileId, options) {\n            return localVarFp.deleteFile(fileId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Delete a fine-tuned model. You must have the Owner role in your organization.\n         * @param {string} model The model to delete\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        deleteModel(model, options) {\n            return localVarFp.deleteModel(model, options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Returns the contents of the specified file\n         * @param {string} fileId The ID of the file to use for this request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        downloadFile(fileId, options) {\n            return localVarFp.downloadFile(fileId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Lists the currently available (non-finetuned) models, and provides basic information about each one such as the owner and availability.\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        listEngines(options) {\n            return localVarFp.listEngines(options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Returns a list of files that belong to the user\\'s organization.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listFiles(options) {\n            return localVarFp.listFiles(options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Get fine-grained status updates for a fine-tune job.\n         * @param {string} fineTuneId The ID of the fine-tune job to get events for.\n         * @param {boolean} [stream] Whether to stream events for the fine-tune job. If set to true, events will be sent as data-only [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format) as they become available. The stream will terminate with a &#x60;data: [DONE]&#x60; message when the job is finished (succeeded, cancelled, or failed).  If set to false, only events generated so far will be returned.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listFineTuneEvents(fineTuneId, stream, options) {\n            return localVarFp.listFineTuneEvents(fineTuneId, stream, options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary List your organization\\'s fine-tuning jobs\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listFineTunes(options) {\n            return localVarFp.listFineTunes(options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Lists the currently available models, and provides basic information about each one such as the owner and availability.\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        listModels(options) {\n            return localVarFp.listModels(options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Retrieves a model instance, providing basic information about it such as the owner and availability.\n         * @param {string} engineId The ID of the engine to use for this request\n         * @param {*} [options] Override http request option.\n         * @deprecated\n         * @throws {RequiredError}\n         */\n        retrieveEngine(engineId, options) {\n            return localVarFp.retrieveEngine(engineId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Returns information about a specific file.\n         * @param {string} fileId The ID of the file to use for this request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        retrieveFile(fileId, options) {\n            return localVarFp.retrieveFile(fileId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Gets info about the fine-tune job.  [Learn more about Fine-tuning](/docs/guides/fine-tuning)\n         * @param {string} fineTuneId The ID of the fine-tune job\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        retrieveFineTune(fineTuneId, options) {\n            return localVarFp.retrieveFineTune(fineTuneId, options).then((request) => request(axios, basePath));\n        },\n        /**\n         *\n         * @summary Retrieves a model instance, providing basic information about the model such as the owner and permissioning.\n         * @param {string} model The ID of the model to use for this request\n         * @param {*} [options] Override http request option.\n         * @throws {RequiredError}\n         */\n        retrieveModel(model, options) {\n            return localVarFp.retrieveModel(model, options).then((request) => request(axios, basePath));\n        },\n    };\n};\n/**\n * OpenAIApi - object-oriented interface\n * @export\n * @class OpenAIApi\n * @extends {BaseAPI}\n */\nclass OpenAIApi extends base_1.BaseAPI {\n    /**\n     *\n     * @summary Immediately cancel a fine-tune job.\n     * @param {string} fineTuneId The ID of the fine-tune job to cancel\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    cancelFineTune(fineTuneId, options) {\n        return exports.OpenAIApiFp(this.configuration).cancelFineTune(fineTuneId, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Answers the specified question using the provided documents and examples.  The endpoint first [searches](/docs/api-reference/searches) over provided documents or files to find relevant context. The relevant context is combined with the provided examples and question to create the prompt for [completion](/docs/api-reference/completions).\n     * @param {CreateAnswerRequest} createAnswerRequest\n     * @param {*} [options] Override http request option.\n     * @deprecated\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    createAnswer(createAnswerRequest, options) {\n        return exports.OpenAIApiFp(this.configuration).createAnswer(createAnswerRequest, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Creates a model response for the given chat conversation.\n     * @param {CreateChatCompletionRequest} createChatCompletionRequest\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    createChatCompletion(createChatCompletionRequest, options) {\n        return exports.OpenAIApiFp(this.configuration).createChatCompletion(createChatCompletionRequest, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Classifies the specified `query` using provided examples.  The endpoint first [searches](/docs/api-reference/searches) over the labeled examples to select the ones most relevant for the particular query. Then, the relevant examples are combined with the query to construct a prompt to produce the final label via the [completions](/docs/api-reference/completions) endpoint.  Labeled examples can be provided via an uploaded `file`, or explicitly listed in the request using the `examples` parameter for quick tests and small scale use cases.\n     * @param {CreateClassificationRequest} createClassificationRequest\n     * @param {*} [options] Override http request option.\n     * @deprecated\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    createClassification(createClassificationRequest, options) {\n        return exports.OpenAIApiFp(this.configuration).createClassification(createClassificationRequest, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Creates a completion for the provided prompt and parameters.\n     * @param {CreateCompletionRequest} createCompletionRequest\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    createCompletion(createCompletionRequest, options) {\n        return exports.OpenAIApiFp(this.configuration).createCompletion(createCompletionRequest, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Creates a new edit for the provided input, instruction, and parameters.\n     * @param {CreateEditRequest} createEditRequest\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    createEdit(createEditRequest, options) {\n        return exports.OpenAIApiFp(this.configuration).createEdit(createEditRequest, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Creates an embedding vector representing the input text.\n     * @param {CreateEmbeddingRequest} createEmbeddingRequest\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    createEmbedding(createEmbeddingRequest, options) {\n        return exports.OpenAIApiFp(this.configuration).createEmbedding(createEmbeddingRequest, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Upload a file that contains document(s) to be used across various endpoints/features. Currently, the size of all the files uploaded by one organization can be up to 1 GB. Please contact us if you need to increase the storage limit.\n     * @param {File} file Name of the [JSON Lines](https://jsonlines.readthedocs.io/en/latest/) file to be uploaded.  If the &#x60;purpose&#x60; is set to \\\\\\&quot;fine-tune\\\\\\&quot;, each line is a JSON record with \\\\\\&quot;prompt\\\\\\&quot; and \\\\\\&quot;completion\\\\\\&quot; fields representing your [training examples](/docs/guides/fine-tuning/prepare-training-data).\n     * @param {string} purpose The intended purpose of the uploaded documents.  Use \\\\\\&quot;fine-tune\\\\\\&quot; for [Fine-tuning](/docs/api-reference/fine-tunes). This allows us to validate the format of the uploaded file.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    createFile(file, purpose, options) {\n        return exports.OpenAIApiFp(this.configuration).createFile(file, purpose, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Creates a job that fine-tunes a specified model from a given dataset.  Response includes details of the enqueued job including job status and the name of the fine-tuned models once complete.  [Learn more about Fine-tuning](/docs/guides/fine-tuning)\n     * @param {CreateFineTuneRequest} createFineTuneRequest\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    createFineTune(createFineTuneRequest, options) {\n        return exports.OpenAIApiFp(this.configuration).createFineTune(createFineTuneRequest, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Creates an image given a prompt.\n     * @param {CreateImageRequest} createImageRequest\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    createImage(createImageRequest, options) {\n        return exports.OpenAIApiFp(this.configuration).createImage(createImageRequest, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Creates an edited or extended image given an original image and a prompt.\n     * @param {File} image The image to edit. Must be a valid PNG file, less than 4MB, and square. If mask is not provided, image must have transparency, which will be used as the mask.\n     * @param {string} prompt A text description of the desired image(s). The maximum length is 1000 characters.\n     * @param {File} [mask] An additional image whose fully transparent areas (e.g. where alpha is zero) indicate where &#x60;image&#x60; should be edited. Must be a valid PNG file, less than 4MB, and have the same dimensions as &#x60;image&#x60;.\n     * @param {number} [n] The number of images to generate. Must be between 1 and 10.\n     * @param {string} [size] The size of the generated images. Must be one of &#x60;256x256&#x60;, &#x60;512x512&#x60;, or &#x60;1024x1024&#x60;.\n     * @param {string} [responseFormat] The format in which the generated images are returned. Must be one of &#x60;url&#x60; or &#x60;b64_json&#x60;.\n     * @param {string} [user] A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    createImageEdit(image, prompt, mask, n, size, responseFormat, user, options) {\n        return exports.OpenAIApiFp(this.configuration).createImageEdit(image, prompt, mask, n, size, responseFormat, user, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Creates a variation of a given image.\n     * @param {File} image The image to use as the basis for the variation(s). Must be a valid PNG file, less than 4MB, and square.\n     * @param {number} [n] The number of images to generate. Must be between 1 and 10.\n     * @param {string} [size] The size of the generated images. Must be one of &#x60;256x256&#x60;, &#x60;512x512&#x60;, or &#x60;1024x1024&#x60;.\n     * @param {string} [responseFormat] The format in which the generated images are returned. Must be one of &#x60;url&#x60; or &#x60;b64_json&#x60;.\n     * @param {string} [user] A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. [Learn more](/docs/guides/safety-best-practices/end-user-ids).\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    createImageVariation(image, n, size, responseFormat, user, options) {\n        return exports.OpenAIApiFp(this.configuration).createImageVariation(image, n, size, responseFormat, user, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Classifies if text violates OpenAI\\'s Content Policy\n     * @param {CreateModerationRequest} createModerationRequest\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    createModeration(createModerationRequest, options) {\n        return exports.OpenAIApiFp(this.configuration).createModeration(createModerationRequest, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary The search endpoint computes similarity scores between provided query and documents. Documents can be passed directly to the API if there are no more than 200 of them.  To go beyond the 200 document limit, documents can be processed offline and then used for efficient retrieval at query time. When `file` is set, the search endpoint searches over all the documents in the given file and returns up to the `max_rerank` number of documents. These documents will be returned along with their search scores.  The similarity score is a positive score that usually ranges from 0 to 300 (but can sometimes go higher), where a score above 200 usually means the document is semantically similar to the query.\n     * @param {string} engineId The ID of the engine to use for this request.  You can select one of &#x60;ada&#x60;, &#x60;babbage&#x60;, &#x60;curie&#x60;, or &#x60;davinci&#x60;.\n     * @param {CreateSearchRequest} createSearchRequest\n     * @param {*} [options] Override http request option.\n     * @deprecated\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    createSearch(engineId, createSearchRequest, options) {\n        return exports.OpenAIApiFp(this.configuration).createSearch(engineId, createSearchRequest, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Transcribes audio into the input language.\n     * @param {File} file The audio file object (not file name) to transcribe, in one of these formats: mp3, mp4, mpeg, mpga, m4a, wav, or webm.\n     * @param {string} model ID of the model to use. Only &#x60;whisper-1&#x60; is currently available.\n     * @param {string} [prompt] An optional text to guide the model\\\\\\&#39;s style or continue a previous audio segment. The [prompt](/docs/guides/speech-to-text/prompting) should match the audio language.\n     * @param {string} [responseFormat] The format of the transcript output, in one of these options: json, text, srt, verbose_json, or vtt.\n     * @param {number} [temperature] The sampling temperature, between 0 and 1. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. If set to 0, the model will use [log probability](https://en.wikipedia.org/wiki/Log_probability) to automatically increase the temperature until certain thresholds are hit.\n     * @param {string} [language] The language of the input audio. Supplying the input language in [ISO-639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) format will improve accuracy and latency.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    createTranscription(file, model, prompt, responseFormat, temperature, language, options) {\n        return exports.OpenAIApiFp(this.configuration).createTranscription(file, model, prompt, responseFormat, temperature, language, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Translates audio into into English.\n     * @param {File} file The audio file object (not file name) translate, in one of these formats: mp3, mp4, mpeg, mpga, m4a, wav, or webm.\n     * @param {string} model ID of the model to use. Only &#x60;whisper-1&#x60; is currently available.\n     * @param {string} [prompt] An optional text to guide the model\\\\\\&#39;s style or continue a previous audio segment. The [prompt](/docs/guides/speech-to-text/prompting) should be in English.\n     * @param {string} [responseFormat] The format of the transcript output, in one of these options: json, text, srt, verbose_json, or vtt.\n     * @param {number} [temperature] The sampling temperature, between 0 and 1. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. If set to 0, the model will use [log probability](https://en.wikipedia.org/wiki/Log_probability) to automatically increase the temperature until certain thresholds are hit.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    createTranslation(file, model, prompt, responseFormat, temperature, options) {\n        return exports.OpenAIApiFp(this.configuration).createTranslation(file, model, prompt, responseFormat, temperature, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Delete a file.\n     * @param {string} fileId The ID of the file to use for this request\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    deleteFile(fileId, options) {\n        return exports.OpenAIApiFp(this.configuration).deleteFile(fileId, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Delete a fine-tuned model. You must have the Owner role in your organization.\n     * @param {string} model The model to delete\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    deleteModel(model, options) {\n        return exports.OpenAIApiFp(this.configuration).deleteModel(model, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Returns the contents of the specified file\n     * @param {string} fileId The ID of the file to use for this request\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    downloadFile(fileId, options) {\n        return exports.OpenAIApiFp(this.configuration).downloadFile(fileId, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Lists the currently available (non-finetuned) models, and provides basic information about each one such as the owner and availability.\n     * @param {*} [options] Override http request option.\n     * @deprecated\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    listEngines(options) {\n        return exports.OpenAIApiFp(this.configuration).listEngines(options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Returns a list of files that belong to the user\\'s organization.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    listFiles(options) {\n        return exports.OpenAIApiFp(this.configuration).listFiles(options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Get fine-grained status updates for a fine-tune job.\n     * @param {string} fineTuneId The ID of the fine-tune job to get events for.\n     * @param {boolean} [stream] Whether to stream events for the fine-tune job. If set to true, events will be sent as data-only [server-sent events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format) as they become available. The stream will terminate with a &#x60;data: [DONE]&#x60; message when the job is finished (succeeded, cancelled, or failed).  If set to false, only events generated so far will be returned.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    listFineTuneEvents(fineTuneId, stream, options) {\n        return exports.OpenAIApiFp(this.configuration).listFineTuneEvents(fineTuneId, stream, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary List your organization\\'s fine-tuning jobs\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    listFineTunes(options) {\n        return exports.OpenAIApiFp(this.configuration).listFineTunes(options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Lists the currently available models, and provides basic information about each one such as the owner and availability.\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    listModels(options) {\n        return exports.OpenAIApiFp(this.configuration).listModels(options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Retrieves a model instance, providing basic information about it such as the owner and availability.\n     * @param {string} engineId The ID of the engine to use for this request\n     * @param {*} [options] Override http request option.\n     * @deprecated\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    retrieveEngine(engineId, options) {\n        return exports.OpenAIApiFp(this.configuration).retrieveEngine(engineId, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Returns information about a specific file.\n     * @param {string} fileId The ID of the file to use for this request\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    retrieveFile(fileId, options) {\n        return exports.OpenAIApiFp(this.configuration).retrieveFile(fileId, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Gets info about the fine-tune job.  [Learn more about Fine-tuning](/docs/guides/fine-tuning)\n     * @param {string} fineTuneId The ID of the fine-tune job\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    retrieveFineTune(fineTuneId, options) {\n        return exports.OpenAIApiFp(this.configuration).retrieveFineTune(fineTuneId, options).then((request) => request(this.axios, this.basePath));\n    }\n    /**\n     *\n     * @summary Retrieves a model instance, providing basic information about the model such as the owner and permissioning.\n     * @param {string} model The ID of the model to use for this request\n     * @param {*} [options] Override http request option.\n     * @throws {RequiredError}\n     * @memberof OpenAIApi\n     */\n    retrieveModel(model, options) {\n        return exports.OpenAIApiFp(this.configuration).retrieveModel(model, options).then((request) => request(this.axios, this.basePath));\n    }\n}\nexports.OpenAIApi = OpenAIApi;\n", "/* eslint-env browser */\nmodule.exports = typeof self == 'object' ? self.FormData : window.FormData;\n", "\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * OpenAI API\n * APIs for sampling from and fine-tuning language models\n *\n * The version of the OpenAPI document: 1.3.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Configuration = void 0;\nconst packageJson = require(\"../package.json\");\nclass Configuration {\n    constructor(param = {}) {\n        this.apiKey = param.apiKey;\n        this.organization = param.organization;\n        this.username = param.username;\n        this.password = param.password;\n        this.accessToken = param.accessToken;\n        this.basePath = param.basePath;\n        this.baseOptions = param.baseOptions;\n        this.formDataCtor = param.formDataCtor;\n        if (!this.baseOptions) {\n            this.baseOptions = {};\n        }\n        this.baseOptions.headers = Object.assign({ 'User-Agent': `OpenAI/NodeJS/${packageJson.version}`, 'Authorization': `Bearer ${this.apiKey}` }, this.baseOptions.headers);\n        if (this.organization) {\n            this.baseOptions.headers['OpenAI-Organization'] = this.organization;\n        }\n        if (!this.formDataCtor) {\n            this.formDataCtor = require(\"form-data\");\n        }\n    }\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    isJsonMime(mime) {\n        const jsonMime = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n}\nexports.Configuration = Configuration;\n", "\"use strict\";\n/* tslint:disable */\n/* eslint-disable */\n/**\n * OpenAI API\n * APIs for sampling from and fine-tuning language models\n *\n * The version of the OpenAPI document: 1.3.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./api\"), exports);\n__exportStar(require(\"./configuration\"), exports);\n", "/* eslint-disable prefer-template */\n/* eslint-disable default-case */\n/* eslint-disable no-plusplus */\n// Adapted from https://github.com/gfortaine/fetch-event-source/blob/main/src/parse.ts\n// due to a packaging issue in the original.\n// MIT License\nexport const EventStreamContentType = \"text/event-stream\";\n/**\n * Converts a ReadableStream into a callback pattern.\n * @param stream The input ReadableStream.\n * @param onChunk A function that will be called on each new byte chunk in the stream.\n * @returns {Promise<void>} A promise that will be resolved when the stream closes.\n */\nexport async function getBytes(stream, onChunk) {\n    const reader = stream.getReader();\n    // CHANGED: Introduced a \"flush\" mechanism to process potential pending messages when the stream ends.\n    //          This change is essential to ensure that we capture every last piece of information from streams,\n    //          such as those from Azure OpenAI, which may not terminate with a blank line. Without this\n    //          mechanism, we risk ignoring a possibly significant last message.\n    //          See https://github.com/hwchase17/langchainjs/issues/1299 for details.\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        const result = await reader.read();\n        if (result.done) {\n            onChunk(new Uint8Array(), true);\n            break;\n        }\n        onChunk(result.value);\n    }\n}\n/**\n * Parses arbitary byte chunks into EventSource line buffers.\n * Each line should be of the format \"field: value\" and ends with \\r, \\n, or \\r\\n.\n * @param onLine A function that will be called on each new EventSource line.\n * @returns A function that should be called for each incoming byte chunk.\n */\nexport function getLines(onLine) {\n    let buffer;\n    let position; // current read position\n    let fieldLength; // length of the `field` portion of the line\n    let discardTrailingNewline = false;\n    // return a function that can process each incoming byte chunk:\n    return function onChunk(arr, flush) {\n        if (flush) {\n            onLine(arr, 0, true);\n            return;\n        }\n        if (buffer === undefined) {\n            buffer = arr;\n            position = 0;\n            fieldLength = -1;\n        }\n        else {\n            // we're still parsing the old line. Append the new bytes into buffer:\n            buffer = concat(buffer, arr);\n        }\n        const bufLength = buffer.length;\n        let lineStart = 0; // index where the current line starts\n        while (position < bufLength) {\n            if (discardTrailingNewline) {\n                if (buffer[position] === 10 /* ControlChars.NewLine */) {\n                    lineStart = ++position; // skip to next char\n                }\n                discardTrailingNewline = false;\n            }\n            // start looking forward till the end of line:\n            let lineEnd = -1; // index of the \\r or \\n char\n            for (; position < bufLength && lineEnd === -1; ++position) {\n                switch (buffer[position]) {\n                    case 58 /* ControlChars.Colon */:\n                        if (fieldLength === -1) {\n                            // first colon in line\n                            fieldLength = position - lineStart;\n                        }\n                        break;\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore:7029 \\r case below should fallthrough to \\n:\n                    case 13 /* ControlChars.CarriageReturn */:\n                        discardTrailingNewline = true;\n                    // eslint-disable-next-line no-fallthrough\n                    case 10 /* ControlChars.NewLine */:\n                        lineEnd = position;\n                        break;\n                }\n            }\n            if (lineEnd === -1) {\n                // We reached the end of the buffer but the line hasn't ended.\n                // Wait for the next arr and then continue parsing:\n                break;\n            }\n            // we've reached the line end, send it out:\n            onLine(buffer.subarray(lineStart, lineEnd), fieldLength);\n            lineStart = position; // we're now on the next line\n            fieldLength = -1;\n        }\n        if (lineStart === bufLength) {\n            buffer = undefined; // we've finished reading it\n        }\n        else if (lineStart !== 0) {\n            // Create a new view into buffer beginning at lineStart so we don't\n            // need to copy over the previous lines when we get the new arr:\n            buffer = buffer.subarray(lineStart);\n            position -= lineStart;\n        }\n    };\n}\n/**\n * Parses line buffers into EventSourceMessages.\n * @param onId A function that will be called on each `id` field.\n * @param onRetry A function that will be called on each `retry` field.\n * @param onMessage A function that will be called on each message.\n * @returns A function that should be called for each incoming line buffer.\n */\nexport function getMessages(onMessage, onId, onRetry) {\n    let message = newMessage();\n    const decoder = new TextDecoder();\n    // return a function that can process each incoming line buffer:\n    return function onLine(line, fieldLength, flush) {\n        if (flush) {\n            if (!isEmpty(message)) {\n                onMessage?.(message);\n                message = newMessage();\n            }\n            return;\n        }\n        if (line.length === 0) {\n            // empty line denotes end of message. Trigger the callback and start a new message:\n            onMessage?.(message);\n            message = newMessage();\n        }\n        else if (fieldLength > 0) {\n            // exclude comments and lines with no values\n            // line is of format \"<field>:<value>\" or \"<field>: <value>\"\n            // https://html.spec.whatwg.org/multipage/server-sent-events.html#event-stream-interpretation\n            const field = decoder.decode(line.subarray(0, fieldLength));\n            const valueOffset = fieldLength + (line[fieldLength + 1] === 32 /* ControlChars.Space */ ? 2 : 1);\n            const value = decoder.decode(line.subarray(valueOffset));\n            switch (field) {\n                case \"data\":\n                    // if this message already has data, append the new value to the old.\n                    // otherwise, just set to the new value:\n                    message.data = message.data ? message.data + \"\\n\" + value : value; // otherwise,\n                    break;\n                case \"event\":\n                    message.event = value;\n                    break;\n                case \"id\":\n                    onId?.((message.id = value));\n                    break;\n                case \"retry\": {\n                    const retry = parseInt(value, 10);\n                    if (!Number.isNaN(retry)) {\n                        // per spec, ignore non-integers\n                        onRetry?.((message.retry = retry));\n                    }\n                    break;\n                }\n            }\n        }\n    };\n}\nfunction concat(a, b) {\n    const res = new Uint8Array(a.length + b.length);\n    res.set(a);\n    res.set(b, a.length);\n    return res;\n}\nfunction newMessage() {\n    // data, event, and id must be initialized to empty strings:\n    // https://html.spec.whatwg.org/multipage/server-sent-events.html#event-stream-interpretation\n    // retry should be initialized to undefined so we return a consistent shape\n    // to the js engine all the time: https://mathiasbynens.be/notes/shapes-ics#takeaways\n    return {\n        data: \"\",\n        event: \"\",\n        id: \"\",\n        retry: undefined,\n    };\n}\nfunction isEmpty(message) {\n    return (message.data === \"\" &&\n        message.event === \"\" &&\n        message.id === \"\" &&\n        message.retry === undefined);\n}\n", "/* eslint-disable no-plusplus */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-arrow-callback */\n/* eslint-disable no-var */\n/* eslint-disable vars-on-top */\n/* eslint-disable no-param-reassign */\n/* eslint-disable import/no-extraneous-dependencies */\n/**\n * This is copied from @vespaiach/axios-fetch-adapter, which exposes an ESM\n * module without setting the \"type\" field in package.json.\n */\nimport axios from \"axios\";\nimport { EventStreamContentType, getLines, getBytes, getMessages, } from \"./event-source-parse.js\";\nfunction tryJsonStringify(data) {\n    try {\n        return JSON.stringify(data);\n    }\n    catch (e) {\n        return data;\n    }\n}\n/**\n * In order to avoid import issues with axios 1.x, copying here the internal\n * utility functions that we used to import directly from axios.\n */\n// Copied from axios/lib/core/settle.js\nfunction settle(resolve, reject, response) {\n    const { validateStatus } = response.config;\n    if (!response.status || !validateStatus || validateStatus(response.status)) {\n        resolve(response);\n    }\n    else {\n        reject(createError(`Request failed with status code ${response.status} and body ${typeof response.data === \"string\"\n            ? response.data\n            : tryJsonStringify(response.data)}`, response.config, null, response.request, response));\n    }\n}\n// Copied from axios/lib/helpers/isAbsoluteURL.js\nfunction isAbsoluteURL(url) {\n    // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n    // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n    // by any combination of letters, digits, plus, period, or hyphen.\n    return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n// Copied from axios/lib/helpers/combineURLs.js\nfunction combineURLs(baseURL, relativeURL) {\n    return relativeURL\n        ? baseURL.replace(/\\/+$/, \"\") + \"/\" + relativeURL.replace(/^\\/+/, \"\")\n        : baseURL;\n}\n// Copied from axios/lib/helpers/buildURL.js\nfunction encode(val) {\n    return encodeURIComponent(val)\n        .replace(/%3A/gi, \":\")\n        .replace(/%24/g, \"$\")\n        .replace(/%2C/gi, \",\")\n        .replace(/%20/g, \"+\")\n        .replace(/%5B/gi, \"[\")\n        .replace(/%5D/gi, \"]\");\n}\nfunction buildURL(url, params, paramsSerializer) {\n    if (!params) {\n        return url;\n    }\n    var serializedParams;\n    if (paramsSerializer) {\n        serializedParams = paramsSerializer(params);\n    }\n    else if (isURLSearchParams(params)) {\n        serializedParams = params.toString();\n    }\n    else {\n        var parts = [];\n        forEach(params, function serialize(val, key) {\n            if (val === null || typeof val === \"undefined\") {\n                return;\n            }\n            if (isArray(val)) {\n                key = `${key}[]`;\n            }\n            else {\n                val = [val];\n            }\n            forEach(val, function parseValue(v) {\n                if (isDate(v)) {\n                    v = v.toISOString();\n                }\n                else if (isObject(v)) {\n                    v = JSON.stringify(v);\n                }\n                parts.push(`${encode(key)}=${encode(v)}`);\n            });\n        });\n        serializedParams = parts.join(\"&\");\n    }\n    if (serializedParams) {\n        var hashmarkIndex = url.indexOf(\"#\");\n        if (hashmarkIndex !== -1) {\n            url = url.slice(0, hashmarkIndex);\n        }\n        url += (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + serializedParams;\n    }\n    return url;\n}\n// Copied from axios/lib/core/buildFullPath.js\nfunction buildFullPath(baseURL, requestedURL) {\n    if (baseURL && !isAbsoluteURL(requestedURL)) {\n        return combineURLs(baseURL, requestedURL);\n    }\n    return requestedURL;\n}\n// Copied from axios/lib/utils.js\nfunction isUndefined(val) {\n    return typeof val === \"undefined\";\n}\nfunction isObject(val) {\n    return val !== null && typeof val === \"object\";\n}\nfunction isDate(val) {\n    return toString.call(val) === \"[object Date]\";\n}\nfunction isURLSearchParams(val) {\n    return toString.call(val) === \"[object URLSearchParams]\";\n}\nfunction isArray(val) {\n    return Array.isArray(val);\n}\nfunction forEach(obj, fn) {\n    // Don't bother if no value provided\n    if (obj === null || typeof obj === \"undefined\") {\n        return;\n    }\n    // Force an array if not already something iterable\n    if (typeof obj !== \"object\") {\n        obj = [obj];\n    }\n    if (isArray(obj)) {\n        // Iterate over array values\n        for (var i = 0, l = obj.length; i < l; i++) {\n            fn.call(null, obj[i], i, obj);\n        }\n    }\n    else {\n        // Iterate over object keys\n        for (var key in obj) {\n            if (Object.prototype.hasOwnProperty.call(obj, key)) {\n                fn.call(null, obj[key], key, obj);\n            }\n        }\n    }\n}\nfunction isFormData(val) {\n    return toString.call(val) === \"[object FormData]\";\n}\n// TODO this needs to be fixed to run in newer browser-like environments\n// https://github.com/vespaiach/axios-fetch-adapter/issues/20#issue-1396365322\nfunction isStandardBrowserEnv() {\n    if (typeof navigator !== \"undefined\" &&\n        // eslint-disable-next-line no-undef\n        (navigator.product === \"ReactNative\" ||\n            // eslint-disable-next-line no-undef\n            navigator.product === \"NativeScript\" ||\n            // eslint-disable-next-line no-undef\n            navigator.product === \"NS\")) {\n        return false;\n    }\n    return typeof window !== \"undefined\" && typeof document !== \"undefined\";\n}\n/**\n * - Create a request object\n * - Get response body\n * - Check if timeout\n */\nexport default async function fetchAdapter(config) {\n    const request = createRequest(config);\n    const data = await getResponse(request, config);\n    return new Promise((resolve, reject) => {\n        if (data instanceof Error) {\n            reject(data);\n        }\n        else {\n            // eslint-disable-next-line no-unused-expressions\n            Object.prototype.toString.call(config.settle) === \"[object Function]\"\n                ? config.settle(resolve, reject, data)\n                : settle(resolve, reject, data);\n        }\n    });\n}\n/**\n * Fetch API stage two is to get response body. This funtion tries to retrieve\n * response body based on response's type\n */\nasync function getResponse(request, config) {\n    let stageOne;\n    try {\n        stageOne = await fetch(request);\n    }\n    catch (e) {\n        if (e && e.name === \"AbortError\") {\n            return createError(\"Request aborted\", config, \"ECONNABORTED\", request);\n        }\n        if (e && e.name === \"TimeoutError\") {\n            return createError(\"Request timeout\", config, \"ECONNABORTED\", request);\n        }\n        return createError(\"Network Error\", config, \"ERR_NETWORK\", request);\n    }\n    const headers = {};\n    stageOne.headers.forEach((value, key) => {\n        headers[key] = value;\n    });\n    const response = {\n        ok: stageOne.ok,\n        status: stageOne.status,\n        statusText: stageOne.statusText,\n        headers,\n        config,\n        request,\n    };\n    if (stageOne.status >= 200 && stageOne.status !== 204) {\n        if (config.responseType === \"stream\") {\n            const contentType = stageOne.headers.get(\"content-type\");\n            if (!contentType?.startsWith(EventStreamContentType)) {\n                // If the content-type is not stream, response is most likely an error\n                if (stageOne.status >= 400) {\n                    // If the error is a JSON, parse it. Otherwise, return as text\n                    if (contentType?.startsWith(\"application/json\")) {\n                        response.data = await stageOne.json();\n                        return response;\n                    }\n                    else {\n                        response.data = await stageOne.text();\n                        return response;\n                    }\n                }\n                // If the non-stream response is also not an error, throw\n                throw new Error(`Expected content-type to be ${EventStreamContentType}, Actual: ${contentType}`);\n            }\n            await getBytes(stageOne.body, getLines(getMessages(config.onmessage)));\n        }\n        else {\n            switch (config.responseType) {\n                case \"arraybuffer\":\n                    response.data = await stageOne.arrayBuffer();\n                    break;\n                case \"blob\":\n                    response.data = await stageOne.blob();\n                    break;\n                case \"json\":\n                    response.data = await stageOne.json();\n                    break;\n                case \"formData\":\n                    response.data = await stageOne.formData();\n                    break;\n                default:\n                    response.data = await stageOne.text();\n                    break;\n            }\n        }\n    }\n    return response;\n}\n/**\n * This function will create a Request object based on configuration's axios\n */\nfunction createRequest(config) {\n    const headers = new Headers(config.headers);\n    // HTTP basic authentication\n    if (config.auth) {\n        const username = config.auth.username || \"\";\n        const password = config.auth.password\n            ? decodeURI(encodeURIComponent(config.auth.password))\n            : \"\";\n        headers.set(\"Authorization\", `Basic ${btoa(`${username}:${password}`)}`);\n    }\n    const method = config.method.toUpperCase();\n    const options = {\n        headers,\n        method,\n    };\n    if (method !== \"GET\" && method !== \"HEAD\") {\n        options.body = config.data;\n        // In these cases the browser will automatically set the correct Content-Type,\n        // but only if that header hasn't been set yet. So that's why we're deleting it.\n        if (isFormData(options.body) && isStandardBrowserEnv()) {\n            headers.delete(\"Content-Type\");\n        }\n    }\n    // Some `fetch` implementations will override the Content-Type to text/plain\n    // when body is a string.\n    // See https://github.com/hwchase17/langchainjs/issues/1010\n    if (typeof options.body === \"string\") {\n        options.body = new TextEncoder().encode(options.body);\n    }\n    if (config.mode) {\n        options.mode = config.mode;\n    }\n    if (config.cache) {\n        options.cache = config.cache;\n    }\n    if (config.integrity) {\n        options.integrity = config.integrity;\n    }\n    if (config.redirect) {\n        options.redirect = config.redirect;\n    }\n    if (config.referrer) {\n        options.referrer = config.referrer;\n    }\n    if (config.timeout && config.timeout > 0) {\n        options.signal = AbortSignal.timeout(config.timeout);\n    }\n    if (config.signal) {\n        // this overrides the timeout signal if both are set\n        options.signal = config.signal;\n    }\n    // This config is similar to XHR\u2019s withCredentials flag, but with three available values instead of two.\n    // So if withCredentials is not set, default value 'same-origin' will be used\n    if (!isUndefined(config.withCredentials)) {\n        options.credentials = config.withCredentials ? \"include\" : \"omit\";\n    }\n    // for streaming\n    if (config.responseType === \"stream\") {\n        options.headers.set(\"Accept\", EventStreamContentType);\n    }\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    const url = buildURL(fullPath, config.params, config.paramsSerializer);\n    // Expected browser to throw error if there is any wrong configuration value\n    return new Request(url, options);\n}\n/**\n * Note:\n *\n *   From version >= 0.27.0, createError function is replaced by AxiosError class.\n *   So I copy the old createError function here for backward compatible.\n *\n *\n *\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nfunction createError(message, config, code, request, response) {\n    if (axios.AxiosError && typeof axios.AxiosError === \"function\") {\n        return new axios.AxiosError(message, axios.AxiosError[code], config, request, response);\n    }\n    const error = new Error(message);\n    return enhanceError(error, config, code, request, response);\n}\n/**\n *\n * Note:\n *\n *   This function is for backward compatible.\n *\n *\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nfunction enhanceError(error, config, code, request, response) {\n    error.config = config;\n    if (code) {\n        error.code = code;\n    }\n    error.request = request;\n    error.response = response;\n    error.isAxiosError = true;\n    error.toJSON = function toJSON() {\n        return {\n            // Standard\n            message: this.message,\n            name: this.name,\n            // Microsoft\n            description: this.description,\n            number: this.number,\n            // Mozilla\n            fileName: this.fileName,\n            lineNumber: this.lineNumber,\n            columnNumber: this.columnNumber,\n            stack: this.stack,\n            // Axios\n            config: this.config,\n            code: this.code,\n            status: this.response && this.response.status ? this.response.status : null,\n        };\n    };\n    return error;\n}\n", "import { Serializable } from \"../load/serializable.js\";\nexport const RUN_KEY = \"__run\";\nexport class BaseMessage extends Serializable {\n    /**\n     * @deprecated\n     * Use {@link BaseMessage.content} instead.\n     */\n    get text() {\n        return this.content;\n    }\n    constructor(fields, \n    /** @deprecated */\n    kwargs) {\n        if (typeof fields === \"string\") {\n            // eslint-disable-next-line no-param-reassign\n            fields = { content: fields, additional_kwargs: kwargs };\n        }\n        // Make sure the default value for additional_kwargs is passed into super() for serialization\n        if (!fields.additional_kwargs) {\n            // eslint-disable-next-line no-param-reassign\n            fields.additional_kwargs = {};\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"schema\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        /** The text of the message. */\n        Object.defineProperty(this, \"content\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** The name of the message sender in a multi-user chat. */\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** Additional keyword arguments */\n        Object.defineProperty(this, \"additional_kwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = fields.name;\n        this.content = fields.content;\n        this.additional_kwargs = fields.additional_kwargs;\n    }\n    toDict() {\n        return {\n            type: this._getType(),\n            data: this.toJSON()\n                .kwargs,\n        };\n    }\n}\nexport class HumanMessage extends BaseMessage {\n    _getType() {\n        return \"human\";\n    }\n}\nexport class AIMessage extends BaseMessage {\n    _getType() {\n        return \"ai\";\n    }\n}\nexport class SystemMessage extends BaseMessage {\n    _getType() {\n        return \"system\";\n    }\n}\n/**\n * @deprecated\n * Use {@link BaseMessage} instead.\n */\nexport const BaseChatMessage = BaseMessage;\n/**\n * @deprecated\n * Use {@link HumanMessage} instead.\n */\nexport const HumanChatMessage = HumanMessage;\n/**\n * @deprecated\n * Use {@link AIMessage} instead.\n */\nexport const AIChatMessage = AIMessage;\n/**\n * @deprecated\n * Use {@link SystemMessage} instead.\n */\nexport const SystemChatMessage = SystemMessage;\nexport class FunctionMessage extends BaseMessage {\n    constructor(fields, \n    /** @deprecated */\n    name) {\n        if (typeof fields === \"string\") {\n            // eslint-disable-next-line no-param-reassign\n            fields = { content: fields, name };\n        }\n        super(fields);\n    }\n    _getType() {\n        return \"function\";\n    }\n}\nexport class ChatMessage extends BaseMessage {\n    constructor(fields, role) {\n        if (typeof fields === \"string\") {\n            // eslint-disable-next-line no-param-reassign, @typescript-eslint/no-non-null-assertion\n            fields = { content: fields, role: role };\n        }\n        super(fields);\n        Object.defineProperty(this, \"role\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.role = fields.role;\n    }\n    _getType() {\n        return \"generic\";\n    }\n}\n/**\n * Base PromptValue class. All prompt values should extend this class.\n */\nexport class BasePromptValue extends Serializable {\n}\nexport class BaseChatMessageHistory extends Serializable {\n}\nexport class BaseListChatMessageHistory extends Serializable {\n    addUserMessage(message) {\n        return this.addMessage(new HumanMessage(message));\n    }\n    addAIChatMessage(message) {\n        return this.addMessage(new AIMessage(message));\n    }\n}\nexport class BaseCache {\n}\nexport class BaseFileStore extends Serializable {\n}\nexport class BaseEntityStore extends Serializable {\n}\nexport class Docstore {\n}\n", "import { AIMessage, HumanMessage, RUN_KEY, } from \"../schema/index.js\";\nimport { BaseLanguageModel, } from \"../base_language/index.js\";\nimport { CallbackManager, } from \"../callbacks/manager.js\";\nexport class BaseChatModel extends BaseLanguageModel {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"chat_models\", this._llmType()]\n        });\n    }\n    async generate(messages, options, callbacks) {\n        // parse call options\n        let parsedOptions;\n        if (Array.isArray(options)) {\n            parsedOptions = { stop: options };\n        }\n        else if (options?.timeout && !options.signal) {\n            parsedOptions = {\n                ...options,\n                signal: AbortSignal.timeout(options.timeout),\n            };\n        }\n        else {\n            parsedOptions = options ?? {};\n        }\n        const handledOptions = {\n            tags: parsedOptions.tags,\n            metadata: parsedOptions.metadata,\n            callbacks: parsedOptions.callbacks ?? callbacks,\n        };\n        delete parsedOptions.tags;\n        delete parsedOptions.metadata;\n        delete parsedOptions.callbacks;\n        // create callback manager and start run\n        const callbackManager_ = await CallbackManager.configure(handledOptions.callbacks, this.callbacks, handledOptions.tags, this.tags, handledOptions.metadata, this.metadata, { verbose: this.verbose });\n        const extra = {\n            options: parsedOptions,\n            invocation_params: this?.invocationParams(parsedOptions),\n        };\n        const runManagers = await callbackManager_?.handleChatModelStart(this.toJSON(), messages, undefined, undefined, extra);\n        // generate results\n        const results = await Promise.allSettled(messages.map((messageList, i) => this._generate(messageList, { ...parsedOptions, promptIndex: i }, runManagers?.[i])));\n        // handle results\n        const generations = [];\n        const llmOutputs = [];\n        await Promise.all(results.map(async (pResult, i) => {\n            if (pResult.status === \"fulfilled\") {\n                const result = pResult.value;\n                generations[i] = result.generations;\n                llmOutputs[i] = result.llmOutput;\n                return runManagers?.[i]?.handleLLMEnd({\n                    generations: [result.generations],\n                    llmOutput: result.llmOutput,\n                });\n            }\n            else {\n                // status === \"rejected\"\n                await runManagers?.[i]?.handleLLMError(pResult.reason);\n                return Promise.reject(pResult.reason);\n            }\n        }));\n        // create combined output\n        const output = {\n            generations,\n            llmOutput: llmOutputs.length\n                ? this._combineLLMOutput?.(...llmOutputs)\n                : undefined,\n        };\n        Object.defineProperty(output, RUN_KEY, {\n            value: runManagers\n                ? { runIds: runManagers?.map((manager) => manager.runId) }\n                : undefined,\n            configurable: true,\n        });\n        return output;\n    }\n    /**\n     * Get the parameters used to invoke the model\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    invocationParams(_options) {\n        return {};\n    }\n    _modelType() {\n        return \"base_chat_model\";\n    }\n    async generatePrompt(promptValues, options, callbacks) {\n        const promptMessages = promptValues.map((promptValue) => promptValue.toChatMessages());\n        return this.generate(promptMessages, options, callbacks);\n    }\n    async call(messages, options, callbacks) {\n        const result = await this.generate([messages], options, callbacks);\n        const generations = result.generations;\n        return generations[0][0].message;\n    }\n    async callPrompt(promptValue, options, callbacks) {\n        const promptMessages = promptValue.toChatMessages();\n        return this.call(promptMessages, options, callbacks);\n    }\n    async predictMessages(messages, options, callbacks) {\n        return this.call(messages, options, callbacks);\n    }\n    async predict(text, options, callbacks) {\n        const message = new HumanMessage(text);\n        const result = await this.call([message], options, callbacks);\n        return result.content;\n    }\n}\nexport class SimpleChatModel extends BaseChatModel {\n    async _generate(messages, options, runManager) {\n        const text = await this._call(messages, options, runManager);\n        const message = new AIMessage(text);\n        return {\n            generations: [\n                {\n                    text: message.content,\n                    message,\n                },\n            ],\n        };\n    }\n}\n", "export const promptLayerTrackRequest = async (callerFunc, functionName, prompt, kwargs, plTags, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nrequestResponse, startTime, endTime, apiKey) => {\n    // https://github.com/MagnivOrg/promptlayer-js-helper\n    const promptLayerResp = await callerFunc.call(fetch, \"https://api.promptlayer.com/track-request\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n        },\n        body: JSON.stringify({\n            function_name: functionName,\n            provider: \"langchain\",\n            args: prompt,\n            kwargs,\n            tags: plTags,\n            request_response: requestResponse,\n            request_start_time: Math.floor(startTime / 1000),\n            request_end_time: Math.floor(endTime / 1000),\n            api_key: apiKey,\n        }),\n    });\n    return promptLayerResp.json();\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getParsedType = exports.ZodParsedType = exports.objectUtil = exports.util = void 0;\nvar util;\n(function (util) {\n    util.assertEqual = (val) => val;\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\"\n        ? (obj) => Object.keys(obj)\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val)\n        : (val) => typeof val === \"number\" && isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array\n            .map((val) => (typeof val === \"string\" ? `'${val}'` : val))\n            .join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util = exports.util || (exports.util = {}));\nvar objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second,\n        };\n    };\n})(objectUtil = exports.objectUtil || (exports.objectUtil = {}));\nexports.ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nconst getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return exports.ZodParsedType.undefined;\n        case \"string\":\n            return exports.ZodParsedType.string;\n        case \"number\":\n            return isNaN(data) ? exports.ZodParsedType.nan : exports.ZodParsedType.number;\n        case \"boolean\":\n            return exports.ZodParsedType.boolean;\n        case \"function\":\n            return exports.ZodParsedType.function;\n        case \"bigint\":\n            return exports.ZodParsedType.bigint;\n        case \"symbol\":\n            return exports.ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return exports.ZodParsedType.array;\n            }\n            if (data === null) {\n                return exports.ZodParsedType.null;\n            }\n            if (data.then &&\n                typeof data.then === \"function\" &&\n                data.catch &&\n                typeof data.catch === \"function\") {\n                return exports.ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return exports.ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return exports.ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return exports.ZodParsedType.date;\n            }\n            return exports.ZodParsedType.object;\n        default:\n            return exports.ZodParsedType.unknown;\n    }\n};\nexports.getParsedType = getParsedType;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ZodError = exports.quotelessJson = exports.ZodIssueCode = void 0;\nconst util_1 = require(\"./helpers/util\");\nexports.ZodIssueCode = util_1.util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nconst quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nexports.quotelessJson = quotelessJson;\nclass ZodError extends Error {\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    get errors() {\n        return this.issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util_1.util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nexports.ZodError = ZodError;\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst util_1 = require(\"../helpers/util\");\nconst ZodError_1 = require(\"../ZodError\");\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodError_1.ZodIssueCode.invalid_type:\n            if (issue.received === util_1.ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodError_1.ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util_1.util.jsonStringifyReplacer)}`;\n            break;\n        case ZodError_1.ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util_1.util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util_1.util.joinValues(issue.options)}`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util_1.util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"includes\" in issue.validation) {\n                    message = `Invalid input: must include \"${issue.validation.includes}\"`;\n                    if (typeof issue.validation.position === \"number\") {\n                        message = `${message} at one or more positions greater than or equal to ${issue.validation.position}`;\n                    }\n                }\n                else if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util_1.util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodError_1.ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${new Date(Number(issue.minimum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodError_1.ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"bigint\")\n                message = `BigInt must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `smaller than or equal to`\n                        : `smaller than`} ${new Date(Number(issue.maximum))}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodError_1.ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodError_1.ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodError_1.ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodError_1.ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util_1.util.assertNever(issue);\n    }\n    return { message };\n};\nexports.default = errorMap;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getErrorMap = exports.setErrorMap = exports.defaultErrorMap = void 0;\nconst en_1 = __importDefault(require(\"./locales/en\"));\nexports.defaultErrorMap = en_1.default;\nlet overrideErrorMap = en_1.default;\nfunction setErrorMap(map) {\n    overrideErrorMap = map;\n}\nexports.setErrorMap = setErrorMap;\nfunction getErrorMap() {\n    return overrideErrorMap;\n}\nexports.getErrorMap = getErrorMap;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isAsync = exports.isValid = exports.isDirty = exports.isAborted = exports.OK = exports.DIRTY = exports.INVALID = exports.ParseStatus = exports.addIssueToContext = exports.EMPTY_PATH = exports.makeIssue = void 0;\nconst errors_1 = require(\"../errors\");\nconst en_1 = __importDefault(require(\"../locales/en\"));\nconst makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: issueData.message || errorMessage,\n    };\n};\nexports.makeIssue = makeIssue;\nexports.EMPTY_PATH = [];\nfunction addIssueToContext(ctx, issueData) {\n    const issue = (0, exports.makeIssue)({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap,\n            ctx.schemaErrorMap,\n            (0, errors_1.getErrorMap)(),\n            en_1.default,\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nexports.addIssueToContext = addIssueToContext;\nclass ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return exports.INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            syncPairs.push({\n                key: await pair.key,\n                value: await pair.value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return exports.INVALID;\n            if (value.status === \"aborted\")\n                return exports.INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (typeof value.value !== \"undefined\" || pair.alwaysSet) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nexports.ParseStatus = ParseStatus;\nexports.INVALID = Object.freeze({\n    status: \"aborted\",\n});\nconst DIRTY = (value) => ({ status: \"dirty\", value });\nexports.DIRTY = DIRTY;\nconst OK = (value) => ({ status: \"valid\", value });\nexports.OK = OK;\nconst isAborted = (x) => x.status === \"aborted\";\nexports.isAborted = isAborted;\nconst isDirty = (x) => x.status === \"dirty\";\nexports.isDirty = isDirty;\nconst isValid = (x) => x.status === \"valid\";\nexports.isValid = isValid;\nconst isAsync = (x) => typeof Promise !== \"undefined\" && x instanceof Promise;\nexports.isAsync = isAsync;\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.errorUtil = void 0;\nvar errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message === null || message === void 0 ? void 0 : message.message;\n})(errorUtil = exports.errorUtil || (exports.errorUtil = {}));\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.discriminatedUnion = exports.date = exports.boolean = exports.bigint = exports.array = exports.any = exports.coerce = exports.ZodFirstPartyTypeKind = exports.late = exports.ZodSchema = exports.Schema = exports.custom = exports.ZodPipeline = exports.ZodBranded = exports.BRAND = exports.ZodNaN = exports.ZodCatch = exports.ZodDefault = exports.ZodNullable = exports.ZodOptional = exports.ZodTransformer = exports.ZodEffects = exports.ZodPromise = exports.ZodNativeEnum = exports.ZodEnum = exports.ZodLiteral = exports.ZodLazy = exports.ZodFunction = exports.ZodSet = exports.ZodMap = exports.ZodRecord = exports.ZodTuple = exports.ZodIntersection = exports.ZodDiscriminatedUnion = exports.ZodUnion = exports.ZodObject = exports.ZodArray = exports.ZodVoid = exports.ZodNever = exports.ZodUnknown = exports.ZodAny = exports.ZodNull = exports.ZodUndefined = exports.ZodSymbol = exports.ZodDate = exports.ZodBoolean = exports.ZodBigInt = exports.ZodNumber = exports.ZodString = exports.ZodType = void 0;\nexports.NEVER = exports.void = exports.unknown = exports.union = exports.undefined = exports.tuple = exports.transformer = exports.symbol = exports.string = exports.strictObject = exports.set = exports.record = exports.promise = exports.preprocess = exports.pipeline = exports.ostring = exports.optional = exports.onumber = exports.oboolean = exports.object = exports.number = exports.nullable = exports.null = exports.never = exports.nativeEnum = exports.nan = exports.map = exports.literal = exports.lazy = exports.intersection = exports.instanceof = exports.function = exports.enum = exports.effect = void 0;\nconst errors_1 = require(\"./errors\");\nconst errorUtil_1 = require(\"./helpers/errorUtil\");\nconst parseUtil_1 = require(\"./helpers/parseUtil\");\nconst util_1 = require(\"./helpers/util\");\nconst ZodError_1 = require(\"./ZodError\");\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this._cachedPath = [];\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        if (!this._cachedPath.length) {\n            if (this._key instanceof Array) {\n                this._cachedPath.push(...this._path, ...this._key);\n            }\n            else {\n                this._cachedPath.push(...this._path, this._key);\n            }\n        }\n        return this._cachedPath;\n    }\n}\nconst handleResult = (ctx, result) => {\n    if ((0, parseUtil_1.isValid)(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        return {\n            success: false,\n            get error() {\n                if (this._error)\n                    return this._error;\n                const error = new ZodError_1.ZodError(ctx.common.issues);\n                this._error = error;\n                return this._error;\n            },\n        };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        if (typeof ctx.data === \"undefined\") {\n            return { message: required_error !== null && required_error !== void 0 ? required_error : ctx.defaultError };\n        }\n        return { message: invalid_type_error !== null && invalid_type_error !== void 0 ? invalid_type_error : ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nclass ZodType {\n    constructor(def) {\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n    }\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return (0, util_1.getParsedType)(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: (0, util_1.getParsedType)(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new parseUtil_1.ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: (0, util_1.getParsedType)(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if ((0, parseUtil_1.isAsync)(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        var _a;\n        const ctx = {\n            common: {\n                issues: [],\n                async: (_a = params === null || params === void 0 ? void 0 : params.async) !== null && _a !== void 0 ? _a : false,\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: (0, util_1.getParsedType)(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n                async: true,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: (0, util_1.getParsedType)(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await ((0, parseUtil_1.isAsync)(maybeAsyncResult)\n            ? maybeAsyncResult\n            : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodError_1.ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\"\n                    ? refinementData(val, ctx)\n                    : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    optional() {\n        return ZodOptional.create(this, this._def);\n    }\n    nullable() {\n        return ZodNullable.create(this, this._def);\n    }\n    nullish() {\n        return this.nullable().optional();\n    }\n    array() {\n        return ZodArray.create(this, this._def);\n    }\n    promise() {\n        return ZodPromise.create(this, this._def);\n    }\n    or(option) {\n        return ZodUnion.create([this, option], this._def);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming, this._def);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            ...processCreateParams(this._def),\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            ...processCreateParams(this._def),\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(this._def),\n        });\n    }\n    catch(def) {\n        const catchValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            ...processCreateParams(this._def),\n            innerType: this,\n            catchValue: catchValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nexports.ZodType = ZodType;\nexports.Schema = ZodType;\nexports.ZodSchema = ZodType;\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst cuid2Regex = /^[a-z][a-z0-9]*$/;\nconst ulidRegex = /[0-9A-HJKMNP-TV-Z]{26}/;\nconst uuidRegex = /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\nconst emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\])|(\\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\\.[A-Za-z]{2,})+))$/;\nconst emojiRegex = /^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$/u;\nconst ipv4Regex = /^(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))$/;\nconst ipv6Regex = /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/;\nconst datetimeRegex = (args) => {\n    if (args.precision) {\n        if (args.offset) {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{${args.precision}}(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$`);\n        }\n        else {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{${args.precision}}Z$`);\n        }\n    }\n    else if (args.precision === 0) {\n        if (args.offset) {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$`);\n        }\n        else {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}Z$`);\n        }\n    }\n    else {\n        if (args.offset) {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(\\\\.\\\\d+)?(([+-]\\\\d{2}(:?\\\\d{2})?)|Z)$`);\n        }\n        else {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(\\\\.\\\\d+)?Z$`);\n        }\n    }\n};\nfunction isValidIP(ip, version) {\n    if ((version === \"v4\" || !version) && ipv4Regex.test(ip)) {\n        return true;\n    }\n    if ((version === \"v6\" || !version) && ipv6Regex.test(ip)) {\n        return true;\n    }\n    return false;\n}\nclass ZodString extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._regex = (regex, validation, message) => this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodError_1.ZodIssueCode.invalid_string,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n        this.nonempty = (message) => this.min(1, errorUtil_1.errorUtil.errToObj(message));\n        this.trim = () => new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n        this.toLowerCase = () => new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toLowerCase\" }],\n        });\n        this.toUpperCase = () => new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"toUpperCase\" }],\n        });\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.string,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const status = new parseUtil_1.ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        (0, parseUtil_1.addIssueToContext)(ctx, {\n                            code: ZodError_1.ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        (0, parseUtil_1.addIssueToContext)(ctx, {\n                            code: ZodError_1.ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"email\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"emoji\") {\n                if (!emojiRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"emoji\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"uuid\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"cuid\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid2\") {\n                if (!cuid2Regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"cuid2\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ulid\") {\n                if (!ulidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"ulid\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch (_a) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"url\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"regex\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"includes\") {\n                if (!input.data.includes(check.value, check.position)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        validation: { includes: check.value, position: check.position },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"toLowerCase\") {\n                input.data = input.data.toLowerCase();\n            }\n            else if (check.kind === \"toUpperCase\") {\n                input.data = input.data.toUpperCase();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"ip\") {\n                if (!isValidIP(input.data, check.version)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        validation: \"ip\",\n                        code: ZodError_1.ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util_1.util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    emoji(message) {\n        return this._addCheck({ kind: \"emoji\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    cuid2(message) {\n        return this._addCheck({ kind: \"cuid2\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    ulid(message) {\n        return this._addCheck({ kind: \"ulid\", ...errorUtil_1.errorUtil.errToObj(message) });\n    }\n    ip(options) {\n        return this._addCheck({ kind: \"ip\", ...errorUtil_1.errorUtil.errToObj(options) });\n    }\n    datetime(options) {\n        var _a;\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            offset: (_a = options === null || options === void 0 ? void 0 : options.offset) !== null && _a !== void 0 ? _a : false,\n            ...errorUtil_1.errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    includes(value, options) {\n        return this._addCheck({\n            kind: \"includes\",\n            value: value,\n            position: options === null || options === void 0 ? void 0 : options.position,\n            ...errorUtil_1.errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil_1.errorUtil.errToObj(message),\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isEmoji() {\n        return !!this._def.checks.find((ch) => ch.kind === \"emoji\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get isCUID2() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid2\");\n    }\n    get isULID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ulid\");\n    }\n    get isIP() {\n        return !!this._def.checks.find((ch) => ch.kind === \"ip\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nexports.ZodString = ZodString;\nZodString.create = (params) => {\n    var _a;\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / Math.pow(10, decCount);\n}\nclass ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        let ctx = undefined;\n        const status = new parseUtil_1.ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util_1.util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util_1.util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil_1.errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil_1.errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil_1.errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil_1.errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil_1.errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    safe(message) {\n        return this._addCheck({\n            kind: \"min\",\n            inclusive: true,\n            value: Number.MIN_SAFE_INTEGER,\n            message: errorUtil_1.errorUtil.toString(message),\n        })._addCheck({\n            kind: \"max\",\n            inclusive: true,\n            value: Number.MAX_SAFE_INTEGER,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\" ||\n            (ch.kind === \"multipleOf\" && util_1.util.isInteger(ch.value)));\n    }\n    get isFinite() {\n        let max = null, min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"finite\" ||\n                ch.kind === \"int\" ||\n                ch.kind === \"multipleOf\") {\n                return true;\n            }\n            else if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n            else if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return Number.isFinite(min) && Number.isFinite(max);\n    }\n}\nexports.ZodNumber = ZodNumber;\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBigInt extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = BigInt(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.bigint) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.bigint,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        let ctx = undefined;\n        const status = new parseUtil_1.ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_small,\n                        type: \"bigint\",\n                        minimum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_big,\n                        type: \"bigint\",\n                        maximum: check.value,\n                        inclusive: check.inclusive,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (input.data % check.value !== BigInt(0)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util_1.util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil_1.errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil_1.errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil_1.errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil_1.errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil_1.errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodBigInt({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: false,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: BigInt(0),\n            inclusive: true,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value,\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nexports.ZodBigInt = ZodBigInt;\nZodBigInt.create = (params) => {\n    var _a;\n    return new ZodBigInt({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodBoolean = ZodBoolean;\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_date,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const status = new parseUtil_1.ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util_1.util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil_1.errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nexports.ZodDate = ZodDate;\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodSymbol = ZodSymbol;\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodUndefined = ZodUndefined;\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodNull = ZodNull;\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nclass ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._any = true;\n    }\n    _parse(input) {\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodAny = ZodAny;\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._unknown = true;\n    }\n    _parse(input) {\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodUnknown = ZodUnknown;\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        (0, parseUtil_1.addIssueToContext)(ctx, {\n            code: ZodError_1.ZodIssueCode.invalid_type,\n            expected: util_1.ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return parseUtil_1.INVALID;\n    }\n}\nexports.ZodNever = ZodNever;\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nclass ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n}\nexports.ZodVoid = ZodVoid;\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nclass ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== util_1.ZodParsedType.array) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                (0, parseUtil_1.addIssueToContext)(ctx, {\n                    code: tooBig ? ZodError_1.ZodIssueCode.too_big : ZodError_1.ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                (0, parseUtil_1.addIssueToContext)(ctx, {\n                    code: ZodError_1.ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                (0, parseUtil_1.addIssueToContext)(ctx, {\n                    code: ZodError_1.ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all([...ctx.data].map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return parseUtil_1.ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = [...ctx.data].map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return parseUtil_1.ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nexports.ZodArray = ZodArray;\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return new ZodArray({\n            ...schema._def,\n            type: deepPartialify(schema.element),\n        });\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nclass ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        this.nonstrict = this.passthrough;\n        this.augment = this.extend;\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util_1.util.objectKeys(shape);\n        return (this._cached = { shape, keys });\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever &&\n            this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    (0, parseUtil_1.addIssueToContext)(ctx, {\n                        code: ZodError_1.ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") {\n            }\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    syncPairs.push({\n                        key,\n                        value: await pair.value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return parseUtil_1.ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return parseUtil_1.ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil_1.errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        var _a, _b, _c, _d;\n                        const defaultError = (_c = (_b = (_a = this._def).errorMap) === null || _b === void 0 ? void 0 : _b.call(_a, issue, ctx).message) !== null && _c !== void 0 ? _c : ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: (_d = errorUtil_1.errorUtil.errToObj(message).message) !== null && _d !== void 0 ? _d : defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    extend(augmentation) {\n        return new ZodObject({\n            ...this._def,\n            shape: () => ({\n                ...this._def.shape(),\n                ...augmentation,\n            }),\n        });\n    }\n    merge(merging) {\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => ({\n                ...this._def.shape(),\n                ...merging._def.shape(),\n            }),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        util_1.util.objectKeys(mask).forEach((key) => {\n            if (mask[key] && this.shape[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        util_1.util.objectKeys(this.shape).forEach((key) => {\n            if (!mask[key]) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        util_1.util.objectKeys(this.shape).forEach((key) => {\n            const fieldSchema = this.shape[key];\n            if (mask && !mask[key]) {\n                newShape[key] = fieldSchema;\n            }\n            else {\n                newShape[key] = fieldSchema.optional();\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        util_1.util.objectKeys(this.shape).forEach((key) => {\n            if (mask && !mask[key]) {\n                newShape[key] = this.shape[key];\n            }\n            else {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util_1.util.objectKeys(this.shape));\n    }\n}\nexports.ZodObject = ZodObject;\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            const unionErrors = results.map((result) => new ZodError_1.ZodError(result.ctx.common.issues));\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError_1.ZodError(issues));\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return parseUtil_1.INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nexports.ZodUnion = ZodUnion;\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        return Object.keys(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else {\n        return null;\n    }\n};\nclass ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.object) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    static create(discriminator, options, params) {\n        const optionsMap = new Map();\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nexports.ZodDiscriminatedUnion = ZodDiscriminatedUnion;\nfunction mergeValues(a, b) {\n    const aType = (0, util_1.getParsedType)(a);\n    const bType = (0, util_1.getParsedType)(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === util_1.ZodParsedType.object && bType === util_1.ZodParsedType.object) {\n        const bKeys = util_1.util.objectKeys(b);\n        const sharedKeys = util_1.util\n            .objectKeys(a)\n            .filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === util_1.ZodParsedType.array && bType === util_1.ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === util_1.ZodParsedType.date &&\n        bType === util_1.ZodParsedType.date &&\n        +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nclass ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if ((0, parseUtil_1.isAborted)(parsedLeft) || (0, parseUtil_1.isAborted)(parsedRight)) {\n                return parseUtil_1.INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                (0, parseUtil_1.addIssueToContext)(ctx, {\n                    code: ZodError_1.ZodIssueCode.invalid_intersection_types,\n                });\n                return parseUtil_1.INVALID;\n            }\n            if ((0, parseUtil_1.isDirty)(parsedLeft) || (0, parseUtil_1.isDirty)(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nexports.ZodIntersection = ZodIntersection;\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\nclass ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.array) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return parseUtil_1.INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = [...ctx.data]\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x);\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return parseUtil_1.ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return parseUtil_1.ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nexports.ZodTuple = ZodTuple;\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nclass ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.object) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n            });\n        }\n        if (ctx.common.async) {\n            return parseUtil_1.ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return parseUtil_1.ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nexports.ZodRecord = ZodRecord;\nclass ZodMap extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.map) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return parseUtil_1.INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return parseUtil_1.INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nexports.ZodMap = ZodMap;\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.set) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                (0, parseUtil_1.addIssueToContext)(ctx, {\n                    code: ZodError_1.ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                (0, parseUtil_1.addIssueToContext)(ctx, {\n                    code: ZodError_1.ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return parseUtil_1.INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil_1.errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nexports.ZodSet = ZodSet;\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nclass ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.function) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return (0, parseUtil_1.makeIssue)({\n                data: args,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    (0, errors_1.getErrorMap)(),\n                    errors_1.defaultErrorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodError_1.ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return (0, parseUtil_1.makeIssue)({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    (0, errors_1.getErrorMap)(),\n                    errors_1.defaultErrorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodError_1.ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            return (0, parseUtil_1.OK)(async (...args) => {\n                const error = new ZodError_1.ZodError([]);\n                const parsedArgs = await this._def.args\n                    .parseAsync(args, params)\n                    .catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await fn(...parsedArgs);\n                const parsedReturns = await this._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            return (0, parseUtil_1.OK)((...args) => {\n                const parsedArgs = this._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError_1.ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = fn(...parsedArgs.data);\n                const parsedReturns = this._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError_1.ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args\n                ? args\n                : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nexports.ZodFunction = ZodFunction;\nclass ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nexports.ZodLazy = ZodLazy;\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nclass ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                received: ctx.data,\n                code: ZodError_1.ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nexports.ZodLiteral = ZodLiteral;\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nclass ZodEnum extends ZodType {\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                expected: util_1.util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodError_1.ZodIssueCode.invalid_type,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (this._def.values.indexOf(input.data) === -1) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                received: ctx.data,\n                code: ZodError_1.ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    extract(values) {\n        return ZodEnum.create(values);\n    }\n    exclude(values) {\n        return ZodEnum.create(this.options.filter((opt) => !values.includes(opt)));\n    }\n}\nexports.ZodEnum = ZodEnum;\nZodEnum.create = createZodEnum;\nclass ZodNativeEnum extends ZodType {\n    _parse(input) {\n        const nativeEnumValues = util_1.util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.string &&\n            ctx.parsedType !== util_1.ZodParsedType.number) {\n            const expectedValues = util_1.util.objectValues(nativeEnumValues);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                expected: util_1.util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodError_1.ZodIssueCode.invalid_type,\n            });\n            return parseUtil_1.INVALID;\n        }\n        if (nativeEnumValues.indexOf(input.data) === -1) {\n            const expectedValues = util_1.util.objectValues(nativeEnumValues);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                received: ctx.data,\n                code: ZodError_1.ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return (0, parseUtil_1.OK)(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\nexports.ZodNativeEnum = ZodNativeEnum;\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nclass ZodPromise extends ZodType {\n    unwrap() {\n        return this._def.type;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== util_1.ZodParsedType.promise &&\n            ctx.common.async === false) {\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        const promisified = ctx.parsedType === util_1.ZodParsedType.promise\n            ? ctx.data\n            : Promise.resolve(ctx.data);\n        return (0, parseUtil_1.OK)(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nexports.ZodPromise = ZodPromise;\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nclass ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then((processed) => {\n                    return this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                });\n            }\n            else {\n                return this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n        const checkCtx = {\n            addIssue: (arg) => {\n                (0, parseUtil_1.addIssueToContext)(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return parseUtil_1.INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return parseUtil_1.INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (!(0, parseUtil_1.isValid)(base))\n                    return base;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((base) => {\n                    if (!(0, parseUtil_1.isValid)(base))\n                        return base;\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({ status: status.value, value: result }));\n                });\n            }\n        }\n        util_1.util.assertNever(effect);\n    }\n}\nexports.ZodEffects = ZodEffects;\nexports.ZodTransformer = ZodEffects;\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nclass ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === util_1.ZodParsedType.undefined) {\n            return (0, parseUtil_1.OK)(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nexports.ZodOptional = ZodOptional;\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === util_1.ZodParsedType.null) {\n            return (0, parseUtil_1.OK)(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nexports.ZodNullable = ZodNullable;\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === util_1.ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nexports.ZodDefault = ZodDefault;\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\"\n            ? params.default\n            : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nclass ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const newCtx = {\n            ...ctx,\n            common: {\n                ...ctx.common,\n                issues: [],\n            },\n        };\n        const result = this._def.innerType._parse({\n            data: newCtx.data,\n            path: newCtx.path,\n            parent: {\n                ...newCtx,\n            },\n        });\n        if ((0, parseUtil_1.isAsync)(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\"\n                        ? result.value\n                        : this._def.catchValue({\n                            get error() {\n                                return new ZodError_1.ZodError(newCtx.common.issues);\n                            },\n                            input: newCtx.data,\n                        }),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\"\n                    ? result.value\n                    : this._def.catchValue({\n                        get error() {\n                            return new ZodError_1.ZodError(newCtx.common.issues);\n                        },\n                        input: newCtx.data,\n                    }),\n            };\n        }\n    }\n    removeCatch() {\n        return this._def.innerType;\n    }\n}\nexports.ZodCatch = ZodCatch;\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        catchValue: typeof params.catch === \"function\" ? params.catch : () => params.catch,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== util_1.ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            (0, parseUtil_1.addIssueToContext)(ctx, {\n                code: ZodError_1.ZodIssueCode.invalid_type,\n                expected: util_1.ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return parseUtil_1.INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nexports.ZodNaN = ZodNaN;\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nexports.BRAND = Symbol(\"zod_brand\");\nclass ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nexports.ZodBranded = ZodBranded;\nclass ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return parseUtil_1.INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return (0, parseUtil_1.DIRTY)(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return parseUtil_1.INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nexports.ZodPipeline = ZodPipeline;\nconst custom = (check, params = {}, fatal) => {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            var _a, _b;\n            if (!check(data)) {\n                const p = typeof params === \"function\"\n                    ? params(data)\n                    : typeof params === \"string\"\n                        ? { message: params }\n                        : params;\n                const _fatal = (_b = (_a = p.fatal) !== null && _a !== void 0 ? _a : fatal) !== null && _b !== void 0 ? _b : true;\n                const p2 = typeof p === \"string\" ? { message: p } : p;\n                ctx.addIssue({ code: \"custom\", ...p2, fatal: _fatal });\n            }\n        });\n    return ZodAny.create();\n};\nexports.custom = custom;\nexports.late = {\n    object: ZodObject.lazycreate,\n};\nvar ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n})(ZodFirstPartyTypeKind = exports.ZodFirstPartyTypeKind || (exports.ZodFirstPartyTypeKind = {}));\nclass Class {\n    constructor(..._) { }\n}\nconst instanceOfType = (cls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => (0, exports.custom)((data) => data instanceof cls, params);\nexports.instanceof = instanceOfType;\nconst stringType = ZodString.create;\nexports.string = stringType;\nconst numberType = ZodNumber.create;\nexports.number = numberType;\nconst nanType = ZodNaN.create;\nexports.nan = nanType;\nconst bigIntType = ZodBigInt.create;\nexports.bigint = bigIntType;\nconst booleanType = ZodBoolean.create;\nexports.boolean = booleanType;\nconst dateType = ZodDate.create;\nexports.date = dateType;\nconst symbolType = ZodSymbol.create;\nexports.symbol = symbolType;\nconst undefinedType = ZodUndefined.create;\nexports.undefined = undefinedType;\nconst nullType = ZodNull.create;\nexports.null = nullType;\nconst anyType = ZodAny.create;\nexports.any = anyType;\nconst unknownType = ZodUnknown.create;\nexports.unknown = unknownType;\nconst neverType = ZodNever.create;\nexports.never = neverType;\nconst voidType = ZodVoid.create;\nexports.void = voidType;\nconst arrayType = ZodArray.create;\nexports.array = arrayType;\nconst objectType = ZodObject.create;\nexports.object = objectType;\nconst strictObjectType = ZodObject.strictCreate;\nexports.strictObject = strictObjectType;\nconst unionType = ZodUnion.create;\nexports.union = unionType;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nexports.discriminatedUnion = discriminatedUnionType;\nconst intersectionType = ZodIntersection.create;\nexports.intersection = intersectionType;\nconst tupleType = ZodTuple.create;\nexports.tuple = tupleType;\nconst recordType = ZodRecord.create;\nexports.record = recordType;\nconst mapType = ZodMap.create;\nexports.map = mapType;\nconst setType = ZodSet.create;\nexports.set = setType;\nconst functionType = ZodFunction.create;\nexports.function = functionType;\nconst lazyType = ZodLazy.create;\nexports.lazy = lazyType;\nconst literalType = ZodLiteral.create;\nexports.literal = literalType;\nconst enumType = ZodEnum.create;\nexports.enum = enumType;\nconst nativeEnumType = ZodNativeEnum.create;\nexports.nativeEnum = nativeEnumType;\nconst promiseType = ZodPromise.create;\nexports.promise = promiseType;\nconst effectsType = ZodEffects.create;\nexports.effect = effectsType;\nexports.transformer = effectsType;\nconst optionalType = ZodOptional.create;\nexports.optional = optionalType;\nconst nullableType = ZodNullable.create;\nexports.nullable = nullableType;\nconst preprocessType = ZodEffects.createWithPreprocess;\nexports.preprocess = preprocessType;\nconst pipelineType = ZodPipeline.create;\nexports.pipeline = pipelineType;\nconst ostring = () => stringType().optional();\nexports.ostring = ostring;\nconst onumber = () => numberType().optional();\nexports.onumber = onumber;\nconst oboolean = () => booleanType().optional();\nexports.oboolean = oboolean;\nexports.coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({\n        ...arg,\n        coerce: true,\n    })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nexports.NEVER = parseUtil_1.INVALID;\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./errors\"), exports);\n__exportStar(require(\"./helpers/parseUtil\"), exports);\n__exportStar(require(\"./helpers/typeAliases\"), exports);\n__exportStar(require(\"./helpers/util\"), exports);\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./ZodError\"), exports);\n", "\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.z = void 0;\nconst z = __importStar(require(\"./external\"));\nexports.z = z;\n__exportStar(require(\"./external\"), exports);\nexports.default = z;\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseAnyDef = void 0;\r\nfunction parseAnyDef() {\r\n    return {};\r\n}\r\nexports.parseAnyDef = parseAnyDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.setResponseValueAndErrors = exports.addErrorMessage = void 0;\r\nfunction addErrorMessage(res, key, errorMessage, refs) {\r\n    if (!(refs === null || refs === void 0 ? void 0 : refs.errorMessages))\r\n        return;\r\n    if (errorMessage) {\r\n        res.errorMessage = Object.assign(Object.assign({}, res.errorMessage), { [key]: errorMessage });\r\n    }\r\n}\r\nexports.addErrorMessage = addErrorMessage;\r\nfunction setResponseValueAndErrors(res, key, value, errorMessage, refs) {\r\n    res[key] = value;\r\n    addErrorMessage(res, key, errorMessage, refs);\r\n}\r\nexports.setResponseValueAndErrors = setResponseValueAndErrors;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseArrayDef = void 0;\r\nconst zod_1 = require(\"zod\");\r\nconst errorMessages_1 = require(\"../errorMessages\");\r\nconst parseDef_1 = require(\"../parseDef\");\r\nfunction parseArrayDef(def, refs) {\r\n    var _a, _b;\r\n    const res = {\r\n        type: \"array\",\r\n    };\r\n    if (((_b = (_a = def.type) === null || _a === void 0 ? void 0 : _a._def) === null || _b === void 0 ? void 0 : _b.typeName) !== zod_1.ZodFirstPartyTypeKind.ZodAny) {\r\n        res.items = (0, parseDef_1.parseDef)(def.type._def, Object.assign(Object.assign({}, refs), { currentPath: [...refs.currentPath, \"items\"] }));\r\n    }\r\n    if (def.minLength) {\r\n        (0, errorMessages_1.setResponseValueAndErrors)(res, \"minItems\", def.minLength.value, def.minLength.message, refs);\r\n    }\r\n    if (def.maxLength) {\r\n        (0, errorMessages_1.setResponseValueAndErrors)(res, \"maxItems\", def.maxLength.value, def.maxLength.message, refs);\r\n    }\r\n    return res;\r\n}\r\nexports.parseArrayDef = parseArrayDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseBigintDef = void 0;\r\nfunction parseBigintDef() {\r\n    return {\r\n        type: \"integer\",\r\n        format: \"int64\",\r\n    };\r\n}\r\nexports.parseBigintDef = parseBigintDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseBooleanDef = void 0;\r\nfunction parseBooleanDef() {\r\n    return {\r\n        type: \"boolean\",\r\n    };\r\n}\r\nexports.parseBooleanDef = parseBooleanDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseBrandedDef = void 0;\r\nconst parseDef_1 = require(\"../parseDef\");\r\nfunction parseBrandedDef(_def, refs) {\r\n    return (0, parseDef_1.parseDef)(_def.type._def, refs);\r\n}\r\nexports.parseBrandedDef = parseBrandedDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseCatchDef = void 0;\r\nconst parseDef_1 = require(\"../parseDef\");\r\nconst parseCatchDef = (def, refs) => {\r\n    return (0, parseDef_1.parseDef)(def.innerType._def, refs);\r\n};\r\nexports.parseCatchDef = parseCatchDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseDateDef = void 0;\r\nfunction parseDateDef() {\r\n    return {\r\n        type: \"string\",\r\n        format: \"date-time\",\r\n    };\r\n}\r\nexports.parseDateDef = parseDateDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseDefaultDef = void 0;\r\nconst parseDef_1 = require(\"../parseDef\");\r\nfunction parseDefaultDef(_def, refs) {\r\n    return Object.assign(Object.assign({}, (0, parseDef_1.parseDef)(_def.innerType._def, refs)), { default: _def.defaultValue() });\r\n}\r\nexports.parseDefaultDef = parseDefaultDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseEffectsDef = void 0;\r\nconst parseDef_1 = require(\"../parseDef\");\r\nfunction parseEffectsDef(_def, refs) {\r\n    return refs.effectStrategy === \"input\"\r\n        ? (0, parseDef_1.parseDef)(_def.schema._def, refs)\r\n        : {};\r\n}\r\nexports.parseEffectsDef = parseEffectsDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseEnumDef = void 0;\r\nfunction parseEnumDef(def) {\r\n    return {\r\n        type: \"string\",\r\n        enum: def.values,\r\n    };\r\n}\r\nexports.parseEnumDef = parseEnumDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseIntersectionDef = void 0;\r\nconst parseDef_1 = require(\"../parseDef\");\r\nfunction parseIntersectionDef(def, refs) {\r\n    const allOf = [\r\n        (0, parseDef_1.parseDef)(def.left._def, Object.assign(Object.assign({}, refs), { currentPath: [...refs.currentPath, \"allOf\", \"0\"] })),\r\n        (0, parseDef_1.parseDef)(def.right._def, Object.assign(Object.assign({}, refs), { currentPath: [...refs.currentPath, \"allOf\", \"1\"] })),\r\n    ].filter((x) => !!x);\r\n    return allOf.length ? { allOf } : undefined;\r\n}\r\nexports.parseIntersectionDef = parseIntersectionDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseLiteralDef = void 0;\r\nfunction parseLiteralDef(def, refs) {\r\n    const parsedType = typeof def.value;\r\n    if (parsedType !== \"bigint\" &&\r\n        parsedType !== \"number\" &&\r\n        parsedType !== \"boolean\" &&\r\n        parsedType !== \"string\") {\r\n        return {\r\n            type: Array.isArray(def.value) ? \"array\" : \"object\",\r\n        };\r\n    }\r\n    if (refs.target === \"openApi3\") {\r\n        return {\r\n            type: parsedType === \"bigint\" ? \"integer\" : parsedType,\r\n            enum: [def.value],\r\n        };\r\n    }\r\n    return {\r\n        type: parsedType === \"bigint\" ? \"integer\" : parsedType,\r\n        const: def.value,\r\n    };\r\n}\r\nexports.parseLiteralDef = parseLiteralDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseMapDef = void 0;\r\nconst parseDef_1 = require(\"../parseDef\");\r\nfunction parseMapDef(def, refs) {\r\n    const keys = (0, parseDef_1.parseDef)(def.keyType._def, Object.assign(Object.assign({}, refs), { currentPath: [...refs.currentPath, \"items\", \"items\", \"0\"] })) || {};\r\n    const values = (0, parseDef_1.parseDef)(def.valueType._def, Object.assign(Object.assign({}, refs), { currentPath: [...refs.currentPath, \"items\", \"items\", \"1\"] })) || {};\r\n    return {\r\n        type: \"array\",\r\n        maxItems: 125,\r\n        items: {\r\n            type: \"array\",\r\n            items: [keys, values],\r\n            minItems: 2,\r\n            maxItems: 2,\r\n        },\r\n    };\r\n}\r\nexports.parseMapDef = parseMapDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseNativeEnumDef = void 0;\r\nfunction parseNativeEnumDef(def) {\r\n    const object = def.values;\r\n    const actualKeys = Object.keys(def.values).filter((key) => {\r\n        return typeof object[object[key]] !== \"number\";\r\n    });\r\n    const actualValues = actualKeys.map((key) => object[key]);\r\n    const parsedTypes = Array.from(new Set(actualValues.map((values) => typeof values)));\r\n    return {\r\n        type: parsedTypes.length === 1\r\n            ? parsedTypes[0] === \"string\"\r\n                ? \"string\"\r\n                : \"number\"\r\n            : [\"string\", \"number\"],\r\n        enum: actualValues,\r\n    };\r\n}\r\nexports.parseNativeEnumDef = parseNativeEnumDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseNeverDef = void 0;\r\nfunction parseNeverDef() {\r\n    return {\r\n        not: {},\r\n    };\r\n}\r\nexports.parseNeverDef = parseNeverDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseNullDef = void 0;\r\nfunction parseNullDef(refs) {\r\n    return refs.target === \"openApi3\"\r\n        ? {\r\n            enum: [\"null\"],\r\n            nullable: true,\r\n        }\r\n        : {\r\n            type: \"null\",\r\n        };\r\n}\r\nexports.parseNullDef = parseNullDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseUnionDef = exports.primitiveMappings = void 0;\r\nconst parseDef_1 = require(\"../parseDef\");\r\nexports.primitiveMappings = {\r\n    ZodString: \"string\",\r\n    ZodNumber: \"number\",\r\n    ZodBigInt: \"integer\",\r\n    ZodBoolean: \"boolean\",\r\n    ZodNull: \"null\",\r\n};\r\nfunction parseUnionDef(def, refs) {\r\n    if (refs.target === \"openApi3\")\r\n        return asAnyOf(def, refs);\r\n    const options = def.options instanceof Map ? Array.from(def.options.values()) : def.options;\r\n    // This blocks tries to look ahead a bit to produce nicer looking schemas with type array instead of anyOf.\r\n    if (options.every((x) => x._def.typeName in exports.primitiveMappings &&\r\n        (!x._def.checks || !x._def.checks.length))) {\r\n        // all types in union are primitive and lack checks, so might as well squash into {type: [...]}\r\n        const types = options.reduce((types, x) => {\r\n            const type = exports.primitiveMappings[x._def.typeName]; //Can be safely casted due to row 43\r\n            return type && !types.includes(type) ? [...types, type] : types;\r\n        }, []);\r\n        return {\r\n            type: types.length > 1 ? types : types[0],\r\n        };\r\n    }\r\n    else if (options.every((x) => x._def.typeName === \"ZodLiteral\")) {\r\n        // all options literals\r\n        const types = options.reduce((acc, x) => {\r\n            const type = typeof x._def.value;\r\n            switch (type) {\r\n                case \"string\":\r\n                case \"number\":\r\n                case \"boolean\":\r\n                    return [...acc, type];\r\n                case \"bigint\":\r\n                    return [...acc, \"integer\"];\r\n                case \"object\":\r\n                    if (x._def.value === null)\r\n                        return [...acc, \"null\"];\r\n                case \"symbol\":\r\n                case \"undefined\":\r\n                case \"function\":\r\n                default:\r\n                    return acc;\r\n            }\r\n        }, []);\r\n        if (types.length === options.length) {\r\n            // all the literals are primitive, as far as null can be considered primitive\r\n            const uniqueTypes = types.filter((x, i, a) => a.indexOf(x) === i);\r\n            return {\r\n                type: uniqueTypes.length > 1 ? uniqueTypes : uniqueTypes[0],\r\n                enum: options.reduce((acc, x) => {\r\n                    return acc.includes(x._def.value) ? acc : [...acc, x._def.value];\r\n                }, []),\r\n            };\r\n        }\r\n    }\r\n    else if (options.every((x) => x._def.typeName === \"ZodEnum\")) {\r\n        return {\r\n            type: \"string\",\r\n            enum: options.reduce((acc, x) => [\r\n                ...acc,\r\n                ...x._def.values.filter((x) => !acc.includes(x)),\r\n            ], []),\r\n        };\r\n    }\r\n    return asAnyOf(def, refs);\r\n}\r\nexports.parseUnionDef = parseUnionDef;\r\nconst asAnyOf = (def, refs) => {\r\n    const anyOf = (def.options instanceof Map\r\n        ? Array.from(def.options.values())\r\n        : def.options)\r\n        .map((x, i) => (0, parseDef_1.parseDef)(x._def, Object.assign(Object.assign({}, refs), { currentPath: [...refs.currentPath, \"anyOf\", `${i}`] })))\r\n        .filter((x) => !!x &&\r\n        (!refs.strictUnions ||\r\n            (typeof x === \"object\" && Object.keys(x).length > 0)));\r\n    return anyOf.length ? { anyOf } : undefined;\r\n};\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseNullableDef = void 0;\r\nconst parseDef_1 = require(\"../parseDef\");\r\nconst union_1 = require(\"./union\");\r\nfunction parseNullableDef(def, refs) {\r\n    if ([\"ZodString\", \"ZodNumber\", \"ZodBigInt\", \"ZodBoolean\", \"ZodNull\"].includes(def.innerType._def.typeName) &&\r\n        (!def.innerType._def.checks || !def.innerType._def.checks.length)) {\r\n        if (refs.target === \"openApi3\") {\r\n            return {\r\n                type: union_1.primitiveMappings[def.innerType._def.typeName],\r\n                nullable: true,\r\n            };\r\n        }\r\n        return {\r\n            type: [\r\n                union_1.primitiveMappings[def.innerType._def.typeName],\r\n                \"null\",\r\n            ],\r\n        };\r\n    }\r\n    const type = (0, parseDef_1.parseDef)(def.innerType._def, Object.assign(Object.assign({}, refs), { currentPath: [...refs.currentPath, \"anyOf\", \"0\"] }));\r\n    return type\r\n        ? refs.target === \"openApi3\"\r\n            ? Object.assign(Object.assign({}, type), { nullable: true })\r\n            : {\r\n                anyOf: [\r\n                    type,\r\n                    {\r\n                        type: \"null\",\r\n                    },\r\n                ],\r\n            }\r\n        : undefined;\r\n}\r\nexports.parseNullableDef = parseNullableDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseNumberDef = void 0;\r\nconst errorMessages_1 = require(\"../errorMessages\");\r\nfunction parseNumberDef(def, refs) {\r\n    const res = {\r\n        type: \"number\",\r\n    };\r\n    if (!def.checks)\r\n        return res;\r\n    for (const check of def.checks) {\r\n        switch (check.kind) {\r\n            case \"int\":\r\n                res.type = \"integer\";\r\n                (0, errorMessages_1.addErrorMessage)(res, \"type\", check.message, refs);\r\n                break;\r\n            case \"min\":\r\n                if (refs.target === \"jsonSchema7\") {\r\n                    if (check.inclusive) {\r\n                        (0, errorMessages_1.setResponseValueAndErrors)(res, \"minimum\", check.value, check.message, refs);\r\n                    }\r\n                    else {\r\n                        (0, errorMessages_1.setResponseValueAndErrors)(res, \"exclusiveMinimum\", check.value, check.message, refs);\r\n                    }\r\n                }\r\n                else {\r\n                    if (!check.inclusive) {\r\n                        res.exclusiveMinimum = true;\r\n                    }\r\n                    (0, errorMessages_1.setResponseValueAndErrors)(res, \"minimum\", check.value, check.message, refs);\r\n                }\r\n                break;\r\n            case \"max\":\r\n                if (refs.target === \"jsonSchema7\") {\r\n                    if (check.inclusive) {\r\n                        (0, errorMessages_1.setResponseValueAndErrors)(res, \"maximum\", check.value, check.message, refs);\r\n                    }\r\n                    else {\r\n                        (0, errorMessages_1.setResponseValueAndErrors)(res, \"exclusiveMaximum\", check.value, check.message, refs);\r\n                    }\r\n                }\r\n                else {\r\n                    if (!check.inclusive) {\r\n                        res.exclusiveMaximum = true;\r\n                    }\r\n                    (0, errorMessages_1.setResponseValueAndErrors)(res, \"maximum\", check.value, check.message, refs);\r\n                }\r\n                break;\r\n            case \"multipleOf\":\r\n                (0, errorMessages_1.setResponseValueAndErrors)(res, \"multipleOf\", check.value, check.message, refs);\r\n                break;\r\n        }\r\n    }\r\n    return res;\r\n}\r\nexports.parseNumberDef = parseNumberDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseObjectDef = void 0;\r\nconst parseDef_1 = require(\"../parseDef\");\r\nfunction parseObjectDef(def, refs) {\r\n    var _a;\r\n    const result = Object.assign(Object.assign({ type: \"object\" }, Object.entries(def.shape()).reduce((acc, [propName, propDef]) => {\r\n        if (propDef === undefined || propDef._def === undefined)\r\n            return acc;\r\n        const parsedDef = (0, parseDef_1.parseDef)(propDef._def, Object.assign(Object.assign({}, refs), { currentPath: [...refs.currentPath, \"properties\", propName], propertyPath: [...refs.currentPath, \"properties\", propName] }));\r\n        if (parsedDef === undefined)\r\n            return acc;\r\n        return {\r\n            properties: Object.assign(Object.assign({}, acc.properties), { [propName]: parsedDef }),\r\n            required: propDef.isOptional()\r\n                ? acc.required\r\n                : [...acc.required, propName],\r\n        };\r\n    }, { properties: {}, required: [] })), { additionalProperties: def.catchall._def.typeName === \"ZodNever\"\r\n            ? def.unknownKeys === \"passthrough\"\r\n            : (_a = (0, parseDef_1.parseDef)(def.catchall._def, Object.assign(Object.assign({}, refs), { currentPath: [...refs.currentPath, \"additionalProperties\"] }))) !== null && _a !== void 0 ? _a : true });\r\n    if (!result.required.length)\r\n        delete result.required;\r\n    return result;\r\n}\r\nexports.parseObjectDef = parseObjectDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseOptionalDef = void 0;\r\nconst parseDef_1 = require(\"../parseDef\");\r\nconst parseOptionalDef = (def, refs) => {\r\n    var _a;\r\n    if (refs.currentPath.toString() === ((_a = refs.propertyPath) === null || _a === void 0 ? void 0 : _a.toString())) {\r\n        return (0, parseDef_1.parseDef)(def.innerType._def, refs);\r\n    }\r\n    const innerSchema = (0, parseDef_1.parseDef)(def.innerType._def, Object.assign(Object.assign({}, refs), { currentPath: [...refs.currentPath, \"anyOf\", \"1\"] }));\r\n    return innerSchema\r\n        ? {\r\n            anyOf: [\r\n                {\r\n                    not: {},\r\n                },\r\n                innerSchema,\r\n            ],\r\n        }\r\n        : {};\r\n};\r\nexports.parseOptionalDef = parseOptionalDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parsePipelineDef = void 0;\r\nconst parseDef_1 = require(\"../parseDef\");\r\nconst parsePipelineDef = (def, refs) => {\r\n    const a = (0, parseDef_1.parseDef)(def.in._def, Object.assign(Object.assign({}, refs), { currentPath: [...refs.currentPath, \"allOf\", \"0\"] }));\r\n    const b = (0, parseDef_1.parseDef)(def.out._def, Object.assign(Object.assign({}, refs), { currentPath: [...refs.currentPath, \"allOf\", a ? \"1\" : \"0\"] }));\r\n    return {\r\n        allOf: [a, b].filter((x) => x !== undefined),\r\n    };\r\n};\r\nexports.parsePipelineDef = parsePipelineDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parsePromiseDef = void 0;\r\nconst parseDef_1 = require(\"../parseDef\");\r\nfunction parsePromiseDef(def, refs) {\r\n    return (0, parseDef_1.parseDef)(def.type._def, refs);\r\n}\r\nexports.parsePromiseDef = parsePromiseDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseStringDef = void 0;\r\nconst errorMessages_1 = require(\"../errorMessages\");\r\nfunction parseStringDef(def, refs) {\r\n    const res = {\r\n        type: \"string\",\r\n    };\r\n    if (def.checks) {\r\n        for (const check of def.checks) {\r\n            switch (check.kind) {\r\n                case \"min\":\r\n                    (0, errorMessages_1.setResponseValueAndErrors)(res, \"minLength\", typeof res.minLength === \"number\"\r\n                        ? Math.max(res.minLength, check.value)\r\n                        : check.value, check.message, refs);\r\n                    break;\r\n                case \"max\":\r\n                    (0, errorMessages_1.setResponseValueAndErrors)(res, \"maxLength\", typeof res.maxLength === \"number\"\r\n                        ? Math.min(res.maxLength, check.value)\r\n                        : check.value, check.message, refs);\r\n                    break;\r\n                case \"email\":\r\n                    (0, errorMessages_1.setResponseValueAndErrors)(res, \"format\", \"email\", check.message, refs);\r\n                    break;\r\n                case \"url\":\r\n                    (0, errorMessages_1.setResponseValueAndErrors)(res, \"format\", \"uri\", check.message, refs);\r\n                    break;\r\n                case \"uuid\":\r\n                    (0, errorMessages_1.setResponseValueAndErrors)(res, \"format\", \"uuid\", check.message, refs);\r\n                    break;\r\n                case \"regex\":\r\n                    addPattern(res, check.regex.source, check.message, refs);\r\n                    break;\r\n                case \"cuid\":\r\n                    addPattern(res, \"^c[^\\\\s-]{8,}$\", check.message, refs);\r\n                    break;\r\n                case \"cuid2\":\r\n                    addPattern(res, \"^[a-z][a-z0-9]*$\", check.message, refs);\r\n                    break;\r\n                case \"startsWith\":\r\n                    addPattern(res, \"^\" + escapeNonAlphaNumeric(check.value), check.message, refs);\r\n                    break;\r\n                case \"endsWith\":\r\n                    addPattern(res, escapeNonAlphaNumeric(check.value) + \"$\", check.message, refs);\r\n                    break;\r\n                case \"trim\":\r\n                    // I have no idea why this is a check in Zod. It's a runtime string manipulation method.\r\n                    break;\r\n                case \"datetime\":\r\n                    (0, errorMessages_1.setResponseValueAndErrors)(res, \"format\", \"date-time\", check.message, refs);\r\n                    break;\r\n                case \"length\":\r\n                    (0, errorMessages_1.setResponseValueAndErrors)(res, \"minLength\", typeof res.minLength === \"number\"\r\n                        ? Math.max(res.minLength, check.value)\r\n                        : check.value, check.message, refs);\r\n                    (0, errorMessages_1.setResponseValueAndErrors)(res, \"maxLength\", typeof res.maxLength === \"number\"\r\n                        ? Math.min(res.maxLength, check.value)\r\n                        : check.value, check.message, refs);\r\n                    break;\r\n                default:\r\n                    ((_) => { })(check);\r\n            }\r\n        }\r\n    }\r\n    return res;\r\n}\r\nexports.parseStringDef = parseStringDef;\r\nconst escapeNonAlphaNumeric = (value) => Array.from(value)\r\n    .map((c) => (/[a-zA-Z0-9]/.test(c) ? c : `\\\\${c}`))\r\n    .join(\"\");\r\nconst addPattern = (schema, value, message, refs) => {\r\n    var _a;\r\n    if (schema.pattern || ((_a = schema.allOf) === null || _a === void 0 ? void 0 : _a.some((x) => x.pattern))) {\r\n        if (!schema.allOf) {\r\n            schema.allOf = [];\r\n        }\r\n        if (schema.pattern) {\r\n            schema.allOf.push(Object.assign({ pattern: schema.pattern }, (schema.errorMessage &&\r\n                refs.errorMessages && {\r\n                errorMessage: { pattern: schema.errorMessage.pattern },\r\n            })));\r\n            delete schema.pattern;\r\n            if (schema.errorMessage) {\r\n                delete schema.errorMessage.pattern;\r\n                if (Object.keys(schema.errorMessage).length === 0) {\r\n                    delete schema.errorMessage;\r\n                }\r\n            }\r\n        }\r\n        schema.allOf.push(Object.assign({ pattern: value }, (message &&\r\n            refs.errorMessages && { errorMessage: { pattern: message } })));\r\n    }\r\n    else {\r\n        (0, errorMessages_1.setResponseValueAndErrors)(schema, \"pattern\", value, message, refs);\r\n    }\r\n};\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseRecordDef = void 0;\r\nconst zod_1 = require(\"zod\");\r\nconst parseDef_1 = require(\"../parseDef\");\r\nconst string_1 = require(\"./string\");\r\nfunction parseRecordDef(def, refs) {\r\n    var _a, _b, _c, _d, _e;\r\n    if (refs.target === \"openApi3\" &&\r\n        ((_a = def.keyType) === null || _a === void 0 ? void 0 : _a._def.typeName) === zod_1.ZodFirstPartyTypeKind.ZodEnum) {\r\n        return {\r\n            type: \"object\",\r\n            required: def.keyType._def.values,\r\n            properties: def.keyType._def.values.reduce((acc, key) => {\r\n                var _a;\r\n                return (Object.assign(Object.assign({}, acc), { [key]: (_a = (0, parseDef_1.parseDef)(def.valueType._def, Object.assign(Object.assign({}, refs), { currentPath: [...refs.currentPath, \"properties\", key] }))) !== null && _a !== void 0 ? _a : {} }));\r\n            }, {}),\r\n            additionalProperties: false,\r\n        };\r\n    }\r\n    const schema = {\r\n        type: \"object\",\r\n        additionalProperties: (_b = (0, parseDef_1.parseDef)(def.valueType._def, Object.assign(Object.assign({}, refs), { currentPath: [...refs.currentPath, \"additionalProperties\"] }))) !== null && _b !== void 0 ? _b : {},\r\n    };\r\n    if (refs.target === \"openApi3\") {\r\n        return schema;\r\n    }\r\n    if (((_c = def.keyType) === null || _c === void 0 ? void 0 : _c._def.typeName) === zod_1.ZodFirstPartyTypeKind.ZodString &&\r\n        ((_d = def.keyType._def.checks) === null || _d === void 0 ? void 0 : _d.length)) {\r\n        const keyType = Object.entries((0, string_1.parseStringDef)(def.keyType._def, refs)).reduce((acc, [key, value]) => (key === \"type\" ? acc : Object.assign(Object.assign({}, acc), { [key]: value })), {});\r\n        return Object.assign(Object.assign({}, schema), { propertyNames: keyType });\r\n    }\r\n    else if (((_e = def.keyType) === null || _e === void 0 ? void 0 : _e._def.typeName) === zod_1.ZodFirstPartyTypeKind.ZodEnum) {\r\n        return Object.assign(Object.assign({}, schema), { propertyNames: {\r\n                enum: def.keyType._def.values,\r\n            } });\r\n    }\r\n    return schema;\r\n}\r\nexports.parseRecordDef = parseRecordDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseSetDef = void 0;\r\nconst errorMessages_1 = require(\"../errorMessages\");\r\nconst parseDef_1 = require(\"../parseDef\");\r\nfunction parseSetDef(def, refs) {\r\n    const items = (0, parseDef_1.parseDef)(def.valueType._def, Object.assign(Object.assign({}, refs), { currentPath: [...refs.currentPath, \"items\"] }));\r\n    const schema = {\r\n        type: \"array\",\r\n        items,\r\n    };\r\n    if (def.minSize) {\r\n        (0, errorMessages_1.setResponseValueAndErrors)(schema, \"minItems\", def.minSize.value, def.minSize.message, refs);\r\n    }\r\n    if (def.maxSize) {\r\n        (0, errorMessages_1.setResponseValueAndErrors)(schema, \"maxItems\", def.maxSize.value, def.maxSize.message, refs);\r\n    }\r\n    return schema;\r\n}\r\nexports.parseSetDef = parseSetDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseTupleDef = void 0;\r\nconst parseDef_1 = require(\"../parseDef\");\r\nfunction parseTupleDef(def, refs) {\r\n    if (def.rest) {\r\n        return {\r\n            type: \"array\",\r\n            minItems: def.items.length,\r\n            items: def.items\r\n                .map((x, i) => (0, parseDef_1.parseDef)(x._def, Object.assign(Object.assign({}, refs), { currentPath: [...refs.currentPath, \"items\", `${i}`] })))\r\n                .reduce((acc, x) => (x === undefined ? acc : [...acc, x]), []),\r\n            additionalItems: (0, parseDef_1.parseDef)(def.rest._def, Object.assign(Object.assign({}, refs), { currentPath: [...refs.currentPath, \"additionalItems\"] })),\r\n        };\r\n    }\r\n    else {\r\n        return {\r\n            type: \"array\",\r\n            minItems: def.items.length,\r\n            maxItems: def.items.length,\r\n            items: def.items\r\n                .map((x, i) => (0, parseDef_1.parseDef)(x._def, Object.assign(Object.assign({}, refs), { currentPath: [...refs.currentPath, \"items\", `${i}`] })))\r\n                .reduce((acc, x) => (x === undefined ? acc : [...acc, x]), []),\r\n        };\r\n    }\r\n}\r\nexports.parseTupleDef = parseTupleDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseUndefinedDef = void 0;\r\nfunction parseUndefinedDef() {\r\n    return {\r\n        not: {},\r\n    };\r\n}\r\nexports.parseUndefinedDef = parseUndefinedDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseUnknownDef = void 0;\r\nfunction parseUnknownDef() {\r\n    return {};\r\n}\r\nexports.parseUnknownDef = parseUnknownDef;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parseDef = void 0;\r\nconst zod_1 = require(\"zod\");\r\nconst any_1 = require(\"./parsers/any\");\r\nconst array_1 = require(\"./parsers/array\");\r\nconst bigint_1 = require(\"./parsers/bigint\");\r\nconst boolean_1 = require(\"./parsers/boolean\");\r\nconst branded_1 = require(\"./parsers/branded\");\r\nconst catch_1 = require(\"./parsers/catch\");\r\nconst date_1 = require(\"./parsers/date\");\r\nconst default_1 = require(\"./parsers/default\");\r\nconst effects_1 = require(\"./parsers/effects\");\r\nconst enum_1 = require(\"./parsers/enum\");\r\nconst intersection_1 = require(\"./parsers/intersection\");\r\nconst literal_1 = require(\"./parsers/literal\");\r\nconst map_1 = require(\"./parsers/map\");\r\nconst nativeEnum_1 = require(\"./parsers/nativeEnum\");\r\nconst never_1 = require(\"./parsers/never\");\r\nconst null_1 = require(\"./parsers/null\");\r\nconst nullable_1 = require(\"./parsers/nullable\");\r\nconst number_1 = require(\"./parsers/number\");\r\nconst object_1 = require(\"./parsers/object\");\r\nconst optional_1 = require(\"./parsers/optional\");\r\nconst pipeline_1 = require(\"./parsers/pipeline\");\r\nconst promise_1 = require(\"./parsers/promise\");\r\nconst record_1 = require(\"./parsers/record\");\r\nconst set_1 = require(\"./parsers/set\");\r\nconst string_1 = require(\"./parsers/string\");\r\nconst tuple_1 = require(\"./parsers/tuple\");\r\nconst undefined_1 = require(\"./parsers/undefined\");\r\nconst union_1 = require(\"./parsers/union\");\r\nconst unknown_1 = require(\"./parsers/unknown\");\r\nfunction parseDef(def, refs) {\r\n    const seenItem = refs.seen.find((x) => Object.is(x.def, def));\r\n    if (seenItem) {\r\n        return get$ref(seenItem, refs);\r\n    }\r\n    const newItem = { def, path: refs.currentPath, jsonSchema: undefined };\r\n    refs.seen.push(newItem);\r\n    const jsonSchema = selectParser(def, def.typeName, refs);\r\n    if (jsonSchema) {\r\n        addMeta(def, jsonSchema);\r\n    }\r\n    newItem.jsonSchema = jsonSchema;\r\n    return jsonSchema;\r\n}\r\nexports.parseDef = parseDef;\r\nconst get$ref = (item, refs) => {\r\n    switch (refs.$refStrategy) {\r\n        case \"root\":\r\n            return {\r\n                $ref: item.path.length === 0\r\n                    ? \"\"\r\n                    : item.path.length === 1\r\n                        ? `${item.path[0]}/`\r\n                        : item.path.join(\"/\"),\r\n            };\r\n        case \"relative\":\r\n            return { $ref: getRelativePath(refs.currentPath, item.path) };\r\n        case \"none\": {\r\n            if (item.path.length < refs.currentPath.length &&\r\n                item.path.every((value, index) => refs.currentPath[index] === value)) {\r\n                console.warn(`Recursive reference detected at ${refs.currentPath.join(\"/\")}! Defaulting to any`);\r\n                return {};\r\n            }\r\n            else {\r\n                return item.jsonSchema;\r\n            }\r\n        }\r\n    }\r\n};\r\nconst getRelativePath = (pathA, pathB) => {\r\n    let i = 0;\r\n    for (; i < pathA.length && i < pathB.length; i++) {\r\n        if (pathA[i] !== pathB[i])\r\n            break;\r\n    }\r\n    return [(pathA.length - i).toString(), ...pathB.slice(i)].join(\"/\");\r\n};\r\nconst selectParser = (def, typeName, refs) => {\r\n    switch (typeName) {\r\n        case zod_1.ZodFirstPartyTypeKind.ZodString:\r\n            return (0, string_1.parseStringDef)(def, refs);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodNumber:\r\n            return (0, number_1.parseNumberDef)(def, refs);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodObject:\r\n            return (0, object_1.parseObjectDef)(def, refs);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodBigInt:\r\n            return (0, bigint_1.parseBigintDef)();\r\n        case zod_1.ZodFirstPartyTypeKind.ZodBoolean:\r\n            return (0, boolean_1.parseBooleanDef)();\r\n        case zod_1.ZodFirstPartyTypeKind.ZodDate:\r\n            return (0, date_1.parseDateDef)();\r\n        case zod_1.ZodFirstPartyTypeKind.ZodUndefined:\r\n            return (0, undefined_1.parseUndefinedDef)();\r\n        case zod_1.ZodFirstPartyTypeKind.ZodNull:\r\n            return (0, null_1.parseNullDef)(refs);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodArray:\r\n            return (0, array_1.parseArrayDef)(def, refs);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodUnion:\r\n        case zod_1.ZodFirstPartyTypeKind.ZodDiscriminatedUnion:\r\n            return (0, union_1.parseUnionDef)(def, refs);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodIntersection:\r\n            return (0, intersection_1.parseIntersectionDef)(def, refs);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodTuple:\r\n            return (0, tuple_1.parseTupleDef)(def, refs);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodRecord:\r\n            return (0, record_1.parseRecordDef)(def, refs);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodLiteral:\r\n            return (0, literal_1.parseLiteralDef)(def, refs);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodEnum:\r\n            return (0, enum_1.parseEnumDef)(def);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodNativeEnum:\r\n            return (0, nativeEnum_1.parseNativeEnumDef)(def);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodNullable:\r\n            return (0, nullable_1.parseNullableDef)(def, refs);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodOptional:\r\n            return (0, optional_1.parseOptionalDef)(def, refs);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodMap:\r\n            return (0, map_1.parseMapDef)(def, refs);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodSet:\r\n            return (0, set_1.parseSetDef)(def, refs);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodLazy:\r\n            return parseDef(def.getter()._def, refs);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodPromise:\r\n            return (0, promise_1.parsePromiseDef)(def, refs);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodNaN:\r\n        case zod_1.ZodFirstPartyTypeKind.ZodNever:\r\n            return (0, never_1.parseNeverDef)();\r\n        case zod_1.ZodFirstPartyTypeKind.ZodEffects:\r\n            return (0, effects_1.parseEffectsDef)(def, refs);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodAny:\r\n            return (0, any_1.parseAnyDef)();\r\n        case zod_1.ZodFirstPartyTypeKind.ZodUnknown:\r\n            return (0, unknown_1.parseUnknownDef)();\r\n        case zod_1.ZodFirstPartyTypeKind.ZodDefault:\r\n            return (0, default_1.parseDefaultDef)(def, refs);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodBranded:\r\n            return (0, branded_1.parseBrandedDef)(def, refs);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodCatch:\r\n            return (0, catch_1.parseCatchDef)(def, refs);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodPipeline:\r\n            return (0, pipeline_1.parsePipelineDef)(def, refs);\r\n        case zod_1.ZodFirstPartyTypeKind.ZodFunction:\r\n        case zod_1.ZodFirstPartyTypeKind.ZodVoid:\r\n        case zod_1.ZodFirstPartyTypeKind.ZodSymbol:\r\n            return undefined;\r\n        default:\r\n            return ((_) => undefined)(typeName);\r\n    }\r\n};\r\nconst addMeta = (def, jsonSchema) => {\r\n    if (def.description)\r\n        jsonSchema.description = def.description;\r\n    return jsonSchema;\r\n};\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getDefaultOptions = exports.defaultOptions = void 0;\r\nexports.defaultOptions = {\r\n    name: undefined,\r\n    $refStrategy: \"root\",\r\n    basePath: [\"#\"],\r\n    effectStrategy: \"input\",\r\n    definitionPath: \"definitions\",\r\n    target: \"jsonSchema7\",\r\n    strictUnions: false,\r\n    definitions: {},\r\n    errorMessages: false,\r\n};\r\nconst getDefaultOptions = (options) => (typeof options === \"string\"\r\n    ? Object.assign(Object.assign({}, exports.defaultOptions), { name: options }) : Object.assign(Object.assign({}, exports.defaultOptions), options));\r\nexports.getDefaultOptions = getDefaultOptions;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getRefs = void 0;\r\nconst Options_1 = require(\"./Options\");\r\nconst getRefs = (options) => {\r\n    const _options = (0, Options_1.getDefaultOptions)(options);\r\n    const currentPath = _options.name !== undefined\r\n        ? [..._options.basePath, _options.definitionPath, _options.name]\r\n        : _options.basePath;\r\n    return Object.assign(Object.assign({}, _options), { currentPath: currentPath, propertyPath: undefined, seen: [] });\r\n};\r\nexports.getRefs = getRefs;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.zodToJsonSchema = void 0;\r\nconst parseDef_1 = require(\"./parseDef\");\r\nconst Refs_1 = require(\"./Refs\");\r\nconst zodToJsonSchema = (schema, options) => {\r\n    var _a;\r\n    const refs = (0, Refs_1.getRefs)(options);\r\n    const definitions = typeof options === \"object\" && options.definitions\r\n        ? Object.entries(options.definitions).reduce((acc, [name, schema]) => {\r\n            var _a;\r\n            return (Object.assign(Object.assign({}, acc), { [name]: (_a = (0, parseDef_1.parseDef)(schema._def, Object.assign(Object.assign({}, refs), { currentPath: [...refs.basePath, refs.definitionPath, name] }))) !== null && _a !== void 0 ? _a : {} }));\r\n        }, {})\r\n        : undefined;\r\n    const name = typeof options === \"string\" ? options : options === null || options === void 0 ? void 0 : options.name;\r\n    const main = (_a = (0, parseDef_1.parseDef)(schema._def, name === undefined\r\n        ? refs\r\n        : Object.assign(Object.assign({}, refs), { currentPath: [...refs.basePath, refs.definitionPath, name] }))) !== null && _a !== void 0 ? _a : {};\r\n    const combined = name === undefined\r\n        ? definitions\r\n            ? Object.assign(Object.assign({}, main), { [refs.definitionPath]: definitions }) : main\r\n        : {\r\n            $ref: [\r\n                ...(refs.$refStrategy === \"relative\" ? [] : refs.basePath),\r\n                refs.definitionPath,\r\n                name,\r\n            ].join(\"/\"),\r\n            [refs.definitionPath]: Object.assign(Object.assign({}, definitions), { [name]: main }),\r\n        };\r\n    if (refs.target === \"jsonSchema7\") {\r\n        combined.$schema = \"http://json-schema.org/draft-07/schema#\";\r\n    }\r\n    return combined;\r\n};\r\nexports.zodToJsonSchema = zodToJsonSchema;\r\n", "\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.zodToJsonSchema = void 0;\r\nconst zodToJsonSchema_1 = require(\"./src/zodToJsonSchema\");\r\nObject.defineProperty(exports, \"zodToJsonSchema\", { enumerable: true, get: function () { return zodToJsonSchema_1.zodToJsonSchema; } });\r\nexports.default = zodToJsonSchema_1.zodToJsonSchema;\r\n", "import { zodToJsonSchema } from \"zod-to-json-schema\";\nexport function formatToOpenAIFunction(tool) {\n    return {\n        name: tool.name,\n        description: tool.description,\n        parameters: zodToJsonSchema(tool.schema),\n    };\n}\n", "/**\n * This function generates an endpoint URL for (Azure) OpenAI\n * based on the configuration parameters provided.\n *\n * @param {OpenAIEndpointConfig} config - The configuration object for the (Azure) endpoint.\n *\n * @property {string} config.azureOpenAIApiDeploymentName - The deployment name of Azure OpenAI.\n * @property {string} config.azureOpenAIApiInstanceName - The instance name of Azure OpenAI.\n * @property {string} config.azureOpenAIApiKey - The API Key for Azure OpenAI.\n * @property {string} config.azureOpenAIBasePath - The base path for Azure OpenAI.\n * @property {string} config.basePath - Some other custom base path URL.\n *\n * The function operates as follows:\n * - If both `azureOpenAIBasePath` and `azureOpenAIApiDeploymentName` (plus `azureOpenAIApiKey`) are provided, it returns an URL combining these two parameters (`${azureOpenAIBasePath}/${azureOpenAIApiDeploymentName}`).\n * - If `azureOpenAIApiKey` is provided, it checks for `azureOpenAIApiInstanceName` and `azureOpenAIApiDeploymentName` and throws an error if any of these is missing. If both are provided, it generates an URL incorporating these parameters.\n * - If none of the above conditions are met, return any custom `basePath`.\n * - The function returns the generated URL as a string, or undefined if no custom paths are specified.\n *\n * @throws Will throw an error if the necessary parameters for generating the URL are missing.\n *\n * @returns {string | undefined} The generated (Azure) OpenAI endpoint URL.\n */\nexport function getEndpoint(config) {\n    const { azureOpenAIApiDeploymentName, azureOpenAIApiInstanceName, azureOpenAIApiKey, azureOpenAIBasePath, basePath, } = config;\n    if (azureOpenAIApiKey &&\n        azureOpenAIBasePath &&\n        azureOpenAIApiDeploymentName) {\n        return `${azureOpenAIBasePath}/${azureOpenAIApiDeploymentName}`;\n    }\n    if (azureOpenAIApiKey) {\n        if (!azureOpenAIApiInstanceName) {\n            throw new Error(\"azureOpenAIApiInstanceName is required when using azureOpenAIApiKey\");\n        }\n        if (!azureOpenAIApiDeploymentName) {\n            throw new Error(\"azureOpenAIApiDeploymentName is a required parameter when using azureOpenAIApiKey\");\n        }\n        return `https://${azureOpenAIApiInstanceName}.openai.azure.com/openai/deployments/${azureOpenAIApiDeploymentName}`;\n    }\n    return basePath;\n}\n", "import { Configuration, OpenAIApi, } from \"openai\";\nimport { getEnvironmentVariable, isNode } from \"../util/env.js\";\nimport fetchAdapter from \"../util/axios-fetch-adapter.js\";\nimport { BaseChatModel } from \"./base.js\";\nimport { AIMessage, ChatMessage, HumanMessage, SystemMessage, } from \"../schema/index.js\";\nimport { getModelNameForTiktoken } from \"../base_language/count_tokens.js\";\nimport { promptLayerTrackRequest } from \"../util/prompt-layer.js\";\nimport { formatToOpenAIFunction } from \"../tools/convert_to_openai.js\";\nimport { getEndpoint } from \"../util/azure.js\";\nfunction messageTypeToOpenAIRole(type) {\n    switch (type) {\n        case \"system\":\n            return \"system\";\n        case \"ai\":\n            return \"assistant\";\n        case \"human\":\n            return \"user\";\n        case \"function\":\n            return \"function\";\n        default:\n            throw new Error(`Unknown message type: ${type}`);\n    }\n}\nfunction openAIResponseToChatMessage(message) {\n    switch (message.role) {\n        case \"user\":\n            return new HumanMessage(message.content || \"\");\n        case \"assistant\":\n            return new AIMessage(message.content || \"\", {\n                function_call: message.function_call,\n            });\n        case \"system\":\n            return new SystemMessage(message.content || \"\");\n        default:\n            return new ChatMessage(message.content || \"\", message.role ?? \"unknown\");\n    }\n}\n/**\n * Wrapper around OpenAI large language models that use the Chat endpoint.\n *\n * To use you should have the `openai` package installed, with the\n * `OPENAI_API_KEY` environment variable set.\n *\n * To use with Azure you should have the `openai` package installed, with the\n * `AZURE_OPENAI_API_KEY`,\n * `AZURE_OPENAI_API_INSTANCE_NAME`,\n * `AZURE_OPENAI_API_DEPLOYMENT_NAME`\n * and `AZURE_OPENAI_API_VERSION` environment variable set.\n * `AZURE_OPENAI_BASE_PATH` is optional and will override `AZURE_OPENAI_API_INSTANCE_NAME` if you need to use a custom endpoint.\n *\n * @remarks\n * Any parameters that are valid to be passed to {@link\n * https://platform.openai.com/docs/api-reference/chat/create |\n * `openai.createCompletion`} can be passed through {@link modelKwargs}, even\n * if not explicitly available on this class.\n */\nexport class ChatOpenAI extends BaseChatModel {\n    get callKeys() {\n        return [\n            ...super.callKeys,\n            \"options\",\n            \"function_call\",\n            \"functions\",\n            \"tools\",\n            \"promptIndex\",\n        ];\n    }\n    get lc_secrets() {\n        return {\n            openAIApiKey: \"OPENAI_API_KEY\",\n            azureOpenAIApiKey: \"AZURE_OPENAI_API_KEY\",\n        };\n    }\n    get lc_aliases() {\n        return {\n            modelName: \"model\",\n            openAIApiKey: \"openai_api_key\",\n            azureOpenAIApiVersion: \"azure_openai_api_version\",\n            azureOpenAIApiKey: \"azure_openai_api_key\",\n            azureOpenAIApiInstanceName: \"azure_openai_api_instance_name\",\n            azureOpenAIApiDeploymentName: \"azure_openai_api_deployment_name\",\n        };\n    }\n    constructor(fields, \n    /** @deprecated */\n    configuration) {\n        super(fields ?? {});\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"temperature\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 1\n        });\n        Object.defineProperty(this, \"topP\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 1\n        });\n        Object.defineProperty(this, \"frequencyPenalty\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"presencePenalty\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"n\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 1\n        });\n        Object.defineProperty(this, \"logitBias\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"modelName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"gpt-3.5-turbo\"\n        });\n        Object.defineProperty(this, \"modelKwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"stop\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"timeout\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"streaming\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"maxTokens\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"openAIApiKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"azureOpenAIApiVersion\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"azureOpenAIApiKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"azureOpenAIApiInstanceName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"azureOpenAIApiDeploymentName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"azureOpenAIBasePath\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"clientConfig\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.openAIApiKey =\n            fields?.openAIApiKey ?? getEnvironmentVariable(\"OPENAI_API_KEY\");\n        this.azureOpenAIApiKey =\n            fields?.azureOpenAIApiKey ??\n                getEnvironmentVariable(\"AZURE_OPENAI_API_KEY\");\n        if (!this.azureOpenAIApiKey && !this.openAIApiKey) {\n            throw new Error(\"OpenAI or Azure OpenAI API key not found\");\n        }\n        this.azureOpenAIApiInstanceName =\n            fields?.azureOpenAIApiInstanceName ??\n                getEnvironmentVariable(\"AZURE_OPENAI_API_INSTANCE_NAME\");\n        this.azureOpenAIApiDeploymentName =\n            fields?.azureOpenAIApiDeploymentName ??\n                getEnvironmentVariable(\"AZURE_OPENAI_API_DEPLOYMENT_NAME\");\n        this.azureOpenAIApiVersion =\n            fields?.azureOpenAIApiVersion ??\n                getEnvironmentVariable(\"AZURE_OPENAI_API_VERSION\");\n        this.azureOpenAIBasePath =\n            fields?.azureOpenAIBasePath ??\n                getEnvironmentVariable(\"AZURE_OPENAI_BASE_PATH\");\n        this.modelName = fields?.modelName ?? this.modelName;\n        this.modelKwargs = fields?.modelKwargs ?? {};\n        this.timeout = fields?.timeout;\n        this.temperature = fields?.temperature ?? this.temperature;\n        this.topP = fields?.topP ?? this.topP;\n        this.frequencyPenalty = fields?.frequencyPenalty ?? this.frequencyPenalty;\n        this.presencePenalty = fields?.presencePenalty ?? this.presencePenalty;\n        this.maxTokens = fields?.maxTokens;\n        this.n = fields?.n ?? this.n;\n        this.logitBias = fields?.logitBias;\n        this.stop = fields?.stop;\n        this.streaming = fields?.streaming ?? false;\n        if (this.azureOpenAIApiKey) {\n            if (!this.azureOpenAIApiInstanceName) {\n                throw new Error(\"Azure OpenAI API instance name not found\");\n            }\n            if (!this.azureOpenAIApiDeploymentName) {\n                throw new Error(\"Azure OpenAI API deployment name not found\");\n            }\n            if (!this.azureOpenAIApiVersion) {\n                throw new Error(\"Azure OpenAI API version not found\");\n            }\n        }\n        this.clientConfig = {\n            apiKey: this.openAIApiKey,\n            ...configuration,\n            ...fields?.configuration,\n        };\n    }\n    /**\n     * Get the parameters used to invoke the model\n     */\n    invocationParams(options) {\n        return {\n            model: this.modelName,\n            temperature: this.temperature,\n            top_p: this.topP,\n            frequency_penalty: this.frequencyPenalty,\n            presence_penalty: this.presencePenalty,\n            max_tokens: this.maxTokens === -1 ? undefined : this.maxTokens,\n            n: this.n,\n            logit_bias: this.logitBias,\n            stop: options?.stop ?? this.stop,\n            stream: this.streaming,\n            functions: options?.functions ??\n                (options?.tools\n                    ? options?.tools.map(formatToOpenAIFunction)\n                    : undefined),\n            function_call: options?.function_call,\n            ...this.modelKwargs,\n        };\n    }\n    /** @ignore */\n    _identifyingParams() {\n        return {\n            model_name: this.modelName,\n            ...this.invocationParams(),\n            ...this.clientConfig,\n        };\n    }\n    /**\n     * Get the identifying parameters for the model\n     */\n    identifyingParams() {\n        return this._identifyingParams();\n    }\n    /** @ignore */\n    async _generate(messages, options, runManager) {\n        const tokenUsage = {};\n        const params = this.invocationParams(options);\n        const messagesMapped = messages.map((message) => ({\n            role: messageTypeToOpenAIRole(message._getType()),\n            content: message.content,\n            name: message.name,\n            function_call: message.additional_kwargs\n                .function_call,\n        }));\n        const data = params.stream\n            ? await new Promise((resolve, reject) => {\n                let response;\n                let rejected = false;\n                let resolved = false;\n                this.completionWithRetry({\n                    ...params,\n                    messages: messagesMapped,\n                }, {\n                    signal: options?.signal,\n                    ...options?.options,\n                    adapter: fetchAdapter,\n                    responseType: \"stream\",\n                    onmessage: (event) => {\n                        if (event.data?.trim?.() === \"[DONE]\") {\n                            if (resolved || rejected) {\n                                return;\n                            }\n                            resolved = true;\n                            resolve(response);\n                        }\n                        else {\n                            const data = JSON.parse(event.data);\n                            if (data?.error) {\n                                if (rejected) {\n                                    return;\n                                }\n                                rejected = true;\n                                reject(data.error);\n                                return;\n                            }\n                            const message = data;\n                            // on the first message set the response properties\n                            if (!response) {\n                                response = {\n                                    id: message.id,\n                                    object: message.object,\n                                    created: message.created,\n                                    model: message.model,\n                                    choices: [],\n                                };\n                            }\n                            // on all messages, update choice\n                            for (const part of message.choices ?? []) {\n                                if (part != null) {\n                                    let choice = response.choices.find((c) => c.index === part.index);\n                                    if (!choice) {\n                                        choice = {\n                                            index: part.index,\n                                            finish_reason: part.finish_reason ?? undefined,\n                                        };\n                                        response.choices[part.index] = choice;\n                                    }\n                                    if (!choice.message) {\n                                        choice.message = {\n                                            role: part.delta\n                                                ?.role,\n                                            content: \"\",\n                                        };\n                                    }\n                                    if (part.delta.function_call &&\n                                        !choice.message.function_call) {\n                                        choice.message.function_call = {\n                                            name: \"\",\n                                            arguments: \"\",\n                                        };\n                                    }\n                                    choice.message.content += part.delta?.content ?? \"\";\n                                    if (choice.message.function_call) {\n                                        choice.message.function_call.name +=\n                                            part.delta?.function_call?.name ?? \"\";\n                                        choice.message.function_call.arguments +=\n                                            part.delta?.function_call?.arguments ?? \"\";\n                                    }\n                                    // eslint-disable-next-line no-void\n                                    void runManager?.handleLLMNewToken(part.delta?.content ?? \"\", {\n                                        prompt: options.promptIndex ?? 0,\n                                        completion: part.index,\n                                    });\n                                    // TODO we don't currently have a callback method for\n                                    // sending the function call arguments\n                                }\n                            }\n                            // when all messages are finished, resolve\n                            if (!resolved &&\n                                !rejected &&\n                                message.choices?.every((c) => c.finish_reason != null)) {\n                                resolved = true;\n                                resolve(response);\n                            }\n                        }\n                    },\n                }).catch((error) => {\n                    if (!rejected) {\n                        rejected = true;\n                        reject(error);\n                    }\n                });\n            })\n            : await this.completionWithRetry({\n                ...params,\n                messages: messagesMapped,\n            }, {\n                signal: options?.signal,\n                ...options?.options,\n            });\n        const { completion_tokens: completionTokens, prompt_tokens: promptTokens, total_tokens: totalTokens, } = data.usage ?? {};\n        if (completionTokens) {\n            tokenUsage.completionTokens =\n                (tokenUsage.completionTokens ?? 0) + completionTokens;\n        }\n        if (promptTokens) {\n            tokenUsage.promptTokens = (tokenUsage.promptTokens ?? 0) + promptTokens;\n        }\n        if (totalTokens) {\n            tokenUsage.totalTokens = (tokenUsage.totalTokens ?? 0) + totalTokens;\n        }\n        const generations = [];\n        for (const part of data.choices) {\n            const text = part.message?.content ?? \"\";\n            generations.push({\n                text,\n                message: openAIResponseToChatMessage(part.message ?? { role: \"assistant\" }),\n            });\n        }\n        return {\n            generations,\n            llmOutput: { tokenUsage },\n        };\n    }\n    async getNumTokensFromMessages(messages) {\n        let totalCount = 0;\n        let tokensPerMessage = 0;\n        let tokensPerName = 0;\n        // From: https://github.com/openai/openai-cookbook/blob/main/examples/How_to_format_inputs_to_ChatGPT_models.ipynb\n        if (getModelNameForTiktoken(this.modelName) === \"gpt-3.5-turbo\") {\n            tokensPerMessage = 4;\n            tokensPerName = -1;\n        }\n        else if (getModelNameForTiktoken(this.modelName).startsWith(\"gpt-4\")) {\n            tokensPerMessage = 3;\n            tokensPerName = 1;\n        }\n        const countPerMessage = await Promise.all(messages.map(async (message) => {\n            const textCount = await this.getNumTokens(message.content);\n            const roleCount = await this.getNumTokens(messageTypeToOpenAIRole(message._getType()));\n            const nameCount = message.name !== undefined\n                ? tokensPerName + (await this.getNumTokens(message.name))\n                : 0;\n            const count = textCount + tokensPerMessage + roleCount + nameCount;\n            totalCount += count;\n            return count;\n        }));\n        totalCount += 3; // every reply is primed with <|start|>assistant<|message|>\n        return { totalCount, countPerMessage };\n    }\n    /** @ignore */\n    async completionWithRetry(request, options) {\n        if (!this.client) {\n            const openAIEndpointConfig = {\n                azureOpenAIApiDeploymentName: this.azureOpenAIApiDeploymentName,\n                azureOpenAIApiInstanceName: this.azureOpenAIApiInstanceName,\n                azureOpenAIApiKey: this.azureOpenAIApiKey,\n                azureOpenAIBasePath: this.azureOpenAIBasePath,\n                basePath: this.clientConfig.basePath,\n            };\n            const endpoint = getEndpoint(openAIEndpointConfig);\n            const clientConfig = new Configuration({\n                ...this.clientConfig,\n                basePath: endpoint,\n                baseOptions: {\n                    timeout: this.timeout,\n                    ...this.clientConfig.baseOptions,\n                },\n            });\n            this.client = new OpenAIApi(clientConfig);\n        }\n        const axiosOptions = {\n            adapter: isNode() ? undefined : fetchAdapter,\n            ...this.clientConfig.baseOptions,\n            ...options,\n        };\n        if (this.azureOpenAIApiKey) {\n            axiosOptions.headers = {\n                \"api-key\": this.azureOpenAIApiKey,\n                ...axiosOptions.headers,\n            };\n            axiosOptions.params = {\n                \"api-version\": this.azureOpenAIApiVersion,\n                ...axiosOptions.params,\n            };\n        }\n        return this.caller\n            .call(this.client.createChatCompletion.bind(this.client), request, axiosOptions)\n            .then((res) => res.data);\n    }\n    _llmType() {\n        return \"openai\";\n    }\n    /** @ignore */\n    _combineLLMOutput(...llmOutputs) {\n        return llmOutputs.reduce((acc, llmOutput) => {\n            if (llmOutput && llmOutput.tokenUsage) {\n                acc.tokenUsage.completionTokens +=\n                    llmOutput.tokenUsage.completionTokens ?? 0;\n                acc.tokenUsage.promptTokens += llmOutput.tokenUsage.promptTokens ?? 0;\n                acc.tokenUsage.totalTokens += llmOutput.tokenUsage.totalTokens ?? 0;\n            }\n            return acc;\n        }, {\n            tokenUsage: {\n                completionTokens: 0,\n                promptTokens: 0,\n                totalTokens: 0,\n            },\n        });\n    }\n}\nexport class PromptLayerChatOpenAI extends ChatOpenAI {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"promptLayerApiKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"plTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"returnPromptLayerId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.promptLayerApiKey =\n            fields?.promptLayerApiKey ??\n                (typeof process !== \"undefined\"\n                    ? // eslint-disable-next-line no-process-env\n                        process.env?.PROMPTLAYER_API_KEY\n                    : undefined);\n        this.plTags = fields?.plTags ?? [];\n        this.returnPromptLayerId = fields?.returnPromptLayerId ?? false;\n    }\n    async _generate(messages, options, runManager) {\n        const requestStartTime = Date.now();\n        let parsedOptions;\n        if (Array.isArray(options)) {\n            parsedOptions = { stop: options };\n        }\n        else if (options?.timeout && !options.signal) {\n            parsedOptions = {\n                ...options,\n                signal: AbortSignal.timeout(options.timeout),\n            };\n        }\n        else {\n            parsedOptions = options ?? {};\n        }\n        const generatedResponses = await super._generate(messages, parsedOptions, runManager);\n        const requestEndTime = Date.now();\n        const _convertMessageToDict = (message) => {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            let messageDict;\n            if (message._getType() === \"human\") {\n                messageDict = { role: \"user\", content: message.content };\n            }\n            else if (message._getType() === \"ai\") {\n                messageDict = { role: \"assistant\", content: message.content };\n            }\n            else if (message._getType() === \"function\") {\n                messageDict = { role: \"assistant\", content: message.content };\n            }\n            else if (message._getType() === \"system\") {\n                messageDict = { role: \"system\", content: message.content };\n            }\n            else if (message._getType() === \"generic\") {\n                messageDict = {\n                    role: message.role,\n                    content: message.content,\n                };\n            }\n            else {\n                throw new Error(`Got unknown type ${message}`);\n            }\n            return messageDict;\n        };\n        const _createMessageDicts = (messages, callOptions) => {\n            const params = {\n                ...this.invocationParams(),\n                model: this.modelName,\n            };\n            if (callOptions?.stop) {\n                if (Object.keys(params).includes(\"stop\")) {\n                    throw new Error(\"`stop` found in both the input and default params.\");\n                }\n            }\n            const messageDicts = messages.map((message) => _convertMessageToDict(message));\n            return messageDicts;\n        };\n        for (let i = 0; i < generatedResponses.generations.length; i += 1) {\n            const generation = generatedResponses.generations[i];\n            const messageDicts = _createMessageDicts(messages, parsedOptions);\n            let promptLayerRequestId;\n            const parsedResp = [\n                {\n                    content: generation.text,\n                    role: messageTypeToOpenAIRole(generation.message._getType()),\n                },\n            ];\n            const promptLayerRespBody = await promptLayerTrackRequest(this.caller, \"langchain.PromptLayerChatOpenAI\", messageDicts, this._identifyingParams(), this.plTags, parsedResp, requestStartTime, requestEndTime, this.promptLayerApiKey);\n            if (this.returnPromptLayerId === true) {\n                if (promptLayerRespBody.success === true) {\n                    promptLayerRequestId = promptLayerRespBody.request_id;\n                }\n                if (!generation.generationInfo ||\n                    typeof generation.generationInfo !== \"object\") {\n                    generation.generationInfo = {};\n                }\n                generation.generationInfo.promptLayerRequestId = promptLayerRequestId;\n            }\n        }\n        return generatedResponses;\n    }\n}\n", "import { AsyncCaller } from \"../util/async_caller.js\";\nimport { getModelNameForTiktoken } from \"./count_tokens.js\";\nimport { encodingForModel } from \"../util/tiktoken.js\";\nimport { Serializable } from \"../load/serializable.js\";\nconst getVerbosity = () => false;\n/**\n * Base class for language models, chains, tools.\n */\nexport class BaseLangChain extends Serializable {\n    get lc_attributes() {\n        return {\n            callbacks: undefined,\n            verbose: undefined,\n        };\n    }\n    constructor(params) {\n        super(params);\n        /**\n         * Whether to print out response text.\n         */\n        Object.defineProperty(this, \"verbose\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"callbacks\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.verbose = params.verbose ?? getVerbosity();\n        this.callbacks = params.callbacks;\n        this.tags = params.tags ?? [];\n        this.metadata = params.metadata ?? {};\n    }\n}\n/**\n * Base class for language models.\n */\nexport class BaseLanguageModel extends BaseLangChain {\n    /**\n     * Keys that the language model accepts as call options.\n     */\n    get callKeys() {\n        return [\"stop\", \"timeout\", \"signal\", \"tags\", \"metadata\", \"callbacks\"];\n    }\n    constructor({ callbacks, callbackManager, ...params }) {\n        super({\n            callbacks: callbacks ?? callbackManager,\n            ...params,\n        });\n        /**\n         * The async caller should be used by subclasses to make any async calls,\n         * which will thus benefit from the concurrency and retry logic.\n         */\n        Object.defineProperty(this, \"caller\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_encoding\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.caller = new AsyncCaller(params ?? {});\n    }\n    async getNumTokens(text) {\n        // fallback to approximate calculation if tiktoken is not available\n        let numTokens = Math.ceil(text.length / 4);\n        if (!this._encoding) {\n            try {\n                this._encoding = await encodingForModel(\"modelName\" in this\n                    ? getModelNameForTiktoken(this.modelName)\n                    : \"gpt2\");\n            }\n            catch (error) {\n                console.warn(\"Failed to calculate number of tokens, falling back to approximate count\", error);\n            }\n        }\n        if (this._encoding) {\n            numTokens = this._encoding.encode(text).length;\n        }\n        return numTokens;\n    }\n    /**\n     * Get the identifying parameters of the LLM.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _identifyingParams() {\n        return {};\n    }\n    /**\n     * @deprecated\n     * Return a json-like object representing this LLM.\n     */\n    serialize() {\n        return {\n            ...this._identifyingParams(),\n            _type: this._llmType(),\n            _model: this._modelType(),\n        };\n    }\n    /**\n     * @deprecated\n     * Load an LLM from a json-like object describing it.\n     */\n    static async deserialize(data) {\n        const { _type, _model, ...rest } = data;\n        if (_model && _model !== \"base_chat_model\") {\n            throw new Error(`Cannot load LLM with model ${_model}`);\n        }\n        const Cls = {\n            openai: (await import(\"../chat_models/openai.js\")).ChatOpenAI,\n        }[_type];\n        if (Cls === undefined) {\n            throw new Error(`Cannot load  LLM with type ${_type}`);\n        }\n        return new Cls(rest);\n    }\n}\n/*\n * Calculate max tokens for given model and prompt.\n * That is the model size - number of tokens in prompt.\n */\nexport { calculateMaxTokens } from \"./count_tokens.js\";\n", "/**\n * Source: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set#implementing_basic_set_operations\n */\n/**\n * returns intersection of two sets\n */\nexport function intersection(setA, setB) {\n    const _intersection = new Set();\n    for (const elem of setB) {\n        if (setA.has(elem)) {\n            _intersection.add(elem);\n        }\n    }\n    return _intersection;\n}\n/**\n * returns union of two sets\n */\nexport function union(setA, setB) {\n    const _union = new Set(setA);\n    for (const elem of setB) {\n        _union.add(elem);\n    }\n    return _union;\n}\n/**\n * returns difference of two sets\n */\nexport function difference(setA, setB) {\n    const _difference = new Set(setA);\n    for (const elem of setB) {\n        _difference.delete(elem);\n    }\n    return _difference;\n}\n", "import { BaseChain } from \"./base.js\";\nimport { intersection, union, difference } from \"../util/set.js\";\nfunction formatSet(input) {\n    return Array.from(input)\n        .map((i) => `\"${i}\"`)\n        .join(\", \");\n}\n/**\n * Chain where the outputs of one chain feed directly into next.\n */\nexport class SequentialChain extends BaseChain {\n    get inputKeys() {\n        return this.inputVariables;\n    }\n    get outputKeys() {\n        return this.outputVariables;\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"chains\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"inputVariables\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputVariables\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"returnAll\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.chains = fields.chains;\n        this.inputVariables = fields.inputVariables;\n        this.outputVariables = fields.outputVariables ?? [];\n        if (this.outputVariables.length > 0 && fields.returnAll) {\n            throw new Error(\"Either specify variables to return using `outputVariables` or use `returnAll` param. Cannot apply both conditions at the same time.\");\n        }\n        this.returnAll = fields.returnAll ?? false;\n        this._validateChains();\n    }\n    /** @ignore */\n    _validateChains() {\n        if (this.chains.length === 0) {\n            throw new Error(\"Sequential chain must have at least one chain.\");\n        }\n        const memoryKeys = this.memory?.memoryKeys ?? [];\n        const inputKeysSet = new Set(this.inputKeys);\n        const memoryKeysSet = new Set(memoryKeys);\n        const keysIntersection = intersection(inputKeysSet, memoryKeysSet);\n        if (keysIntersection.size > 0) {\n            throw new Error(`The following keys: ${formatSet(keysIntersection)} are overlapping between memory and input keys of the chain variables. This can lead to unexpected behaviour. Please use input and memory keys that don't overlap.`);\n        }\n        const availableKeys = union(inputKeysSet, memoryKeysSet);\n        for (const chain of this.chains) {\n            const missingKeys = difference(new Set(chain.inputKeys), availableKeys);\n            if (missingKeys.size > 0) {\n                throw new Error(`Missing variables for chain \"${chain._chainType()}\": ${formatSet(missingKeys)}. Only got the following variables: ${formatSet(availableKeys)}.`);\n            }\n            const outputKeysSet = new Set(chain.outputKeys);\n            const overlappingOutputKeys = intersection(availableKeys, outputKeysSet);\n            if (overlappingOutputKeys.size > 0) {\n                throw new Error(`The following output variables for chain \"${chain._chainType()}\" are overlapping: ${formatSet(overlappingOutputKeys)}. This can lead to unexpected behaviour.`);\n            }\n            for (const outputKey of outputKeysSet) {\n                availableKeys.add(outputKey);\n            }\n        }\n        if (this.outputVariables.length === 0) {\n            if (this.returnAll) {\n                const outputKeys = difference(availableKeys, inputKeysSet);\n                this.outputVariables = Array.from(outputKeys);\n            }\n            else {\n                this.outputVariables = this.chains[this.chains.length - 1].outputKeys;\n            }\n        }\n        else {\n            const missingKeys = difference(new Set(this.outputVariables), new Set(availableKeys));\n            if (missingKeys.size > 0) {\n                throw new Error(`The following output variables were expected to be in the final chain output but were not found: ${formatSet(missingKeys)}.`);\n            }\n        }\n    }\n    /** @ignore */\n    async _call(values, runManager) {\n        let input = {};\n        const allChainValues = values;\n        let i = 0;\n        for (const chain of this.chains) {\n            i += 1;\n            input = await chain.call(allChainValues, runManager?.getChild(`step_${i}`));\n            for (const key of Object.keys(input)) {\n                allChainValues[key] = input[key];\n            }\n        }\n        const output = {};\n        for (const key of this.outputVariables) {\n            output[key] = allChainValues[key];\n        }\n        return output;\n    }\n    _chainType() {\n        return \"sequential_chain\";\n    }\n    static async deserialize(data) {\n        const chains = [];\n        const inputVariables = data.input_variables;\n        const outputVariables = data.output_variables;\n        const serializedChains = data.chains;\n        for (const serializedChain of serializedChains) {\n            const deserializedChain = await BaseChain.deserialize(serializedChain);\n            chains.push(deserializedChain);\n        }\n        return new SequentialChain({ chains, inputVariables, outputVariables });\n    }\n    serialize() {\n        const chains = [];\n        for (const chain of this.chains) {\n            chains.push(chain.serialize());\n        }\n        return {\n            _type: this._chainType(),\n            input_variables: this.inputVariables,\n            output_variables: this.outputVariables,\n            chains,\n        };\n    }\n}\n/**\n * Simple chain where a single string output of one chain is fed directly into the next.\n * @augments BaseChain\n * @augments SimpleSequentialChainInput\n *\n * @example\n * ```ts\n * import { SimpleSequentialChain, LLMChain } from \"langchain/chains\";\n * import { OpenAI } from \"langchain/llms/openai\";\n * import { PromptTemplate } from \"langchain/prompts\";\n *\n * // This is an LLMChain to write a synopsis given a title of a play.\n * const llm = new OpenAI({ temperature: 0 });\n * const template = `You are a playwright. Given the title of play, it is your job to write a synopsis for that title.\n *\n * Title: {title}\n * Playwright: This is a synopsis for the above play:`\n * const promptTemplate = new PromptTemplate({ template, inputVariables: [\"title\"] });\n * const synopsisChain = new LLMChain({ llm, prompt: promptTemplate });\n *\n *\n * // This is an LLMChain to write a review of a play given a synopsis.\n * const reviewLLM = new OpenAI({ temperature: 0 })\n * const reviewTemplate = `You are a play critic from the New York Times. Given the synopsis of play, it is your job to write a review for that play.\n *\n * Play Synopsis:\n * {synopsis}\n * Review from a New York Times play critic of the above play:`\n * const reviewPromptTemplate = new PromptTemplate({ template: reviewTemplate, inputVariables: [\"synopsis\"] });\n * const reviewChain = new LLMChain({ llm: reviewLLM, prompt: reviewPromptTemplate });\n *\n * const overallChain = new SimpleSequentialChain({chains: [synopsisChain, reviewChain], verbose:true})\n * const review = await overallChain.run(\"Tragedy at sunset on the beach\")\n * // the variable review contains resulting play review.\n * ```\n */\nexport class SimpleSequentialChain extends BaseChain {\n    get inputKeys() {\n        return [this.inputKey];\n    }\n    get outputKeys() {\n        return [this.outputKey];\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"chains\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"inputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"input\"\n        });\n        Object.defineProperty(this, \"outputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"output\"\n        });\n        Object.defineProperty(this, \"trimOutputs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.chains = fields.chains;\n        this.trimOutputs = fields.trimOutputs ?? false;\n        this._validateChains();\n    }\n    /** @ignore */\n    _validateChains() {\n        for (const chain of this.chains) {\n            if (chain.inputKeys.filter((k) => !chain.memory?.memoryKeys.includes(k) ?? true).length !== 1) {\n                throw new Error(`Chains used in SimpleSequentialChain should all have one input, got ${chain.inputKeys.length} for ${chain._chainType()}.`);\n            }\n            if (chain.outputKeys.length !== 1) {\n                throw new Error(`Chains used in SimpleSequentialChain should all have one output, got ${chain.outputKeys.length} for ${chain._chainType()}.`);\n            }\n        }\n    }\n    /** @ignore */\n    async _call(values, runManager) {\n        let input = values[this.inputKey];\n        let i = 0;\n        for (const chain of this.chains) {\n            i += 1;\n            input = (await chain.call({ [chain.inputKeys[0]]: input, signal: values.signal }, runManager?.getChild(`step_${i}`)))[chain.outputKeys[0]];\n            if (this.trimOutputs) {\n                input = input.trim();\n            }\n            await runManager?.handleText(input);\n        }\n        return { [this.outputKey]: input };\n    }\n    _chainType() {\n        return \"simple_sequential_chain\";\n    }\n    static async deserialize(data) {\n        const chains = [];\n        const serializedChains = data.chains;\n        for (const serializedChain of serializedChains) {\n            const deserializedChain = await BaseChain.deserialize(serializedChain);\n            chains.push(deserializedChain);\n        }\n        return new SimpleSequentialChain({ chains });\n    }\n    serialize() {\n        const chains = [];\n        for (const chain of this.chains) {\n            chains.push(chain.serialize());\n        }\n        return {\n            _type: this._chainType(),\n            chains,\n        };\n    }\n}\n", "export const parseFString = (template) => {\n    // Core logic replicated from internals of pythons built in Formatter class.\n    // https://github.com/python/cpython/blob/135ec7cefbaffd516b77362ad2b2ad1025af462e/Objects/stringlib/unicode_format.h#L700-L706\n    const chars = template.split(\"\");\n    const nodes = [];\n    const nextBracket = (bracket, start) => {\n        for (let i = start; i < chars.length; i += 1) {\n            if (bracket.includes(chars[i])) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    let i = 0;\n    while (i < chars.length) {\n        if (chars[i] === \"{\" && i + 1 < chars.length && chars[i + 1] === \"{\") {\n            nodes.push({ type: \"literal\", text: \"{\" });\n            i += 2;\n        }\n        else if (chars[i] === \"}\" &&\n            i + 1 < chars.length &&\n            chars[i + 1] === \"}\") {\n            nodes.push({ type: \"literal\", text: \"}\" });\n            i += 2;\n        }\n        else if (chars[i] === \"{\") {\n            const j = nextBracket(\"}\", i);\n            if (j < 0) {\n                throw new Error(\"Unclosed '{' in template.\");\n            }\n            nodes.push({\n                type: \"variable\",\n                name: chars.slice(i + 1, j).join(\"\"),\n            });\n            i = j + 1;\n        }\n        else if (chars[i] === \"}\") {\n            throw new Error(\"Single '}' in template.\");\n        }\n        else {\n            const next = nextBracket(\"{}\", i);\n            const text = (next < 0 ? chars.slice(i) : chars.slice(i, next)).join(\"\");\n            nodes.push({ type: \"literal\", text });\n            i = next < 0 ? chars.length : next;\n        }\n    }\n    return nodes;\n};\nexport const interpolateFString = (template, values) => parseFString(template).reduce((res, node) => {\n    if (node.type === \"variable\") {\n        if (node.name in values) {\n            return res + values[node.name];\n        }\n        throw new Error(`Missing value for input ${node.name}`);\n    }\n    return res + node.text;\n}, \"\");\nexport const DEFAULT_FORMATTER_MAPPING = {\n    \"f-string\": interpolateFString,\n    jinja2: (_, __) => \"\",\n};\nexport const DEFAULT_PARSER_MAPPING = {\n    \"f-string\": parseFString,\n    jinja2: (_) => [],\n};\nexport const renderTemplate = (template, templateFormat, inputValues) => DEFAULT_FORMATTER_MAPPING[templateFormat](template, inputValues);\nexport const parseTemplate = (template, templateFormat) => DEFAULT_PARSER_MAPPING[templateFormat](template);\nexport const checkValidTemplate = (template, templateFormat, inputVariables) => {\n    if (!(templateFormat in DEFAULT_FORMATTER_MAPPING)) {\n        const validFormats = Object.keys(DEFAULT_FORMATTER_MAPPING);\n        throw new Error(`Invalid template format. Got \\`${templateFormat}\\`;\n                         should be one of ${validFormats}`);\n    }\n    try {\n        const dummyInputs = inputVariables.reduce((acc, v) => {\n            acc[v] = \"foo\";\n            return acc;\n        }, {});\n        renderTemplate(template, templateFormat, dummyInputs);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }\n    catch (e) {\n        throw new Error(`Invalid prompt schema: ${e.message}`);\n    }\n};\n", "import { BaseStringPromptTemplate, } from \"./base.js\";\nimport { checkValidTemplate, renderTemplate, } from \"./template.js\";\nimport { PromptTemplate } from \"./prompt.js\";\n/**\n * Prompt template that contains few-shot examples.\n * @augments BasePromptTemplate\n * @augments FewShotPromptTemplateInput\n */\nexport class FewShotPromptTemplate extends BaseStringPromptTemplate {\n    constructor(input) {\n        super(input);\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"examples\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"exampleSelector\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"examplePrompt\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"suffix\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"\"\n        });\n        Object.defineProperty(this, \"exampleSeparator\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"\\n\\n\"\n        });\n        Object.defineProperty(this, \"prefix\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"\"\n        });\n        Object.defineProperty(this, \"templateFormat\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"f-string\"\n        });\n        Object.defineProperty(this, \"validateTemplate\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.assign(this, input);\n        if (this.examples !== undefined && this.exampleSelector !== undefined) {\n            throw new Error(\"Only one of 'examples' and 'example_selector' should be provided\");\n        }\n        if (this.examples === undefined && this.exampleSelector === undefined) {\n            throw new Error(\"One of 'examples' and 'example_selector' should be provided\");\n        }\n        if (this.validateTemplate) {\n            let totalInputVariables = this.inputVariables;\n            if (this.partialVariables) {\n                totalInputVariables = totalInputVariables.concat(Object.keys(this.partialVariables));\n            }\n            checkValidTemplate(this.prefix + this.suffix, this.templateFormat, totalInputVariables);\n        }\n    }\n    _getPromptType() {\n        return \"few_shot\";\n    }\n    async getExamples(inputVariables) {\n        if (this.examples !== undefined) {\n            return this.examples;\n        }\n        if (this.exampleSelector !== undefined) {\n            return this.exampleSelector.selectExamples(inputVariables);\n        }\n        throw new Error(\"One of 'examples' and 'example_selector' should be provided\");\n    }\n    async partial(values) {\n        const promptDict = { ...this };\n        promptDict.inputVariables = this.inputVariables.filter((iv) => !(iv in values));\n        promptDict.partialVariables = {\n            ...(this.partialVariables ?? {}),\n            ...values,\n        };\n        return new FewShotPromptTemplate(promptDict);\n    }\n    async format(values) {\n        const allValues = await this.mergePartialAndUserVariables(values);\n        const examples = await this.getExamples(allValues);\n        const exampleStrings = await Promise.all(examples.map((example) => this.examplePrompt.format(example)));\n        const template = [this.prefix, ...exampleStrings, this.suffix].join(this.exampleSeparator);\n        return renderTemplate(template, this.templateFormat, allValues);\n    }\n    serialize() {\n        if (this.exampleSelector || !this.examples) {\n            throw new Error(\"Serializing an example selector is not currently supported\");\n        }\n        if (this.outputParser !== undefined) {\n            throw new Error(\"Serializing an output parser is not currently supported\");\n        }\n        return {\n            _type: this._getPromptType(),\n            input_variables: this.inputVariables,\n            example_prompt: this.examplePrompt.serialize(),\n            example_separator: this.exampleSeparator,\n            suffix: this.suffix,\n            prefix: this.prefix,\n            template_format: this.templateFormat,\n            examples: this.examples,\n        };\n    }\n    static async deserialize(data) {\n        const { example_prompt } = data;\n        if (!example_prompt) {\n            throw new Error(\"Missing example prompt\");\n        }\n        const examplePrompt = await PromptTemplate.deserialize(example_prompt);\n        let examples;\n        if (Array.isArray(data.examples)) {\n            examples = data.examples;\n        }\n        else {\n            throw new Error(\"Invalid examples format. Only list or string are supported.\");\n        }\n        return new FewShotPromptTemplate({\n            inputVariables: data.input_variables,\n            examplePrompt,\n            examples,\n            exampleSeparator: data.example_separator,\n            prefix: data.prefix,\n            suffix: data.suffix,\n            templateFormat: data.template_format,\n        });\n    }\n}\n", "import { BasePromptValue, HumanMessage, } from \"../schema/index.js\";\nimport { Serializable } from \"../load/serializable.js\";\nexport class StringPromptValue extends BasePromptValue {\n    constructor(value) {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"prompts\", \"base\"]\n        });\n        Object.defineProperty(this, \"value\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.value = value;\n    }\n    toString() {\n        return this.value;\n    }\n    toChatMessages() {\n        return [new HumanMessage(this.value)];\n    }\n}\n/**\n * Base class for prompt templates. Exposes a format method that returns a\n * string prompt given a set of input values.\n */\nexport class BasePromptTemplate extends Serializable {\n    get lc_attributes() {\n        return {\n            partialVariables: undefined, // python doesn't support this yet\n        };\n    }\n    constructor(input) {\n        super(input);\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"prompts\", this._getPromptType()]\n        });\n        Object.defineProperty(this, \"inputVariables\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputParser\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"partialVariables\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        const { inputVariables } = input;\n        if (inputVariables.includes(\"stop\")) {\n            throw new Error(\"Cannot have an input variable named 'stop', as it is used internally, please rename.\");\n        }\n        Object.assign(this, input);\n    }\n    async mergePartialAndUserVariables(userVariables) {\n        const partialVariables = this.partialVariables ?? {};\n        const partialValues = {};\n        for (const [key, value] of Object.entries(partialVariables)) {\n            if (typeof value === \"string\") {\n                partialValues[key] = value;\n            }\n            else {\n                partialValues[key] = await value();\n            }\n        }\n        const allKwargs = { ...partialValues, ...userVariables };\n        return allKwargs;\n    }\n    /**\n     * Return a json-like object representing this prompt template.\n     * @deprecated\n     */\n    serialize() {\n        throw new Error(\"Use .toJSON() instead\");\n    }\n    /**\n     * @deprecated\n     * Load a prompt template from a json-like object describing it.\n     *\n     * @remarks\n     * Deserializing needs to be async because templates (e.g. {@link FewShotPromptTemplate}) can\n     * reference remote resources that we read asynchronously with a web\n     * request.\n     */\n    static async deserialize(data) {\n        switch (data._type) {\n            case \"prompt\": {\n                const { PromptTemplate } = await import(\"./prompt.js\");\n                return PromptTemplate.deserialize(data);\n            }\n            case undefined: {\n                const { PromptTemplate } = await import(\"./prompt.js\");\n                return PromptTemplate.deserialize({ ...data, _type: \"prompt\" });\n            }\n            case \"few_shot\": {\n                const { FewShotPromptTemplate } = await import(\"./few_shot.js\");\n                return FewShotPromptTemplate.deserialize(data);\n            }\n            default:\n                throw new Error(`Invalid prompt type in config: ${data._type}`);\n        }\n    }\n}\nexport class BaseStringPromptTemplate extends BasePromptTemplate {\n    async formatPromptValue(values) {\n        const formattedPrompt = await this.format(values);\n        return new StringPromptValue(formattedPrompt);\n    }\n}\n/**\n * Base class for example selectors.\n */\nexport class BaseExampleSelector extends Serializable {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"prompts\", \"selectors\"]\n        });\n    }\n}\n", "import { BaseStringPromptTemplate } from \"./base.js\";\nimport { checkValidTemplate, parseTemplate, renderTemplate, } from \"./template.js\";\n/**\n * Schema to represent a basic prompt for an LLM.\n * @augments BasePromptTemplate\n * @augments PromptTemplateInput\n *\n * @example\n * ```ts\n * import { PromptTemplate } from \"langchain/prompts\";\n *\n * const prompt = new PromptTemplate({\n *   inputVariables: [\"foo\"],\n *   template: \"Say {foo}\",\n * });\n * ```\n */\nexport class PromptTemplate extends BaseStringPromptTemplate {\n    constructor(input) {\n        super(input);\n        Object.defineProperty(this, \"template\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"templateFormat\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"f-string\"\n        });\n        Object.defineProperty(this, \"validateTemplate\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.assign(this, input);\n        if (this.validateTemplate) {\n            let totalInputVariables = this.inputVariables;\n            if (this.partialVariables) {\n                totalInputVariables = totalInputVariables.concat(Object.keys(this.partialVariables));\n            }\n            checkValidTemplate(this.template, this.templateFormat, totalInputVariables);\n        }\n    }\n    _getPromptType() {\n        return \"prompt\";\n    }\n    async format(values) {\n        const allValues = await this.mergePartialAndUserVariables(values);\n        return renderTemplate(this.template, this.templateFormat, allValues);\n    }\n    /**\n     * Take examples in list format with prefix and suffix to create a prompt.\n     *\n     * Intendend to be used a a way to dynamically create a prompt from examples.\n     *\n     * @param examples - List of examples to use in the prompt.\n     * @param suffix - String to go after the list of examples. Should generally set up the user's input.\n     * @param inputVariables - A list of variable names the final prompt template will expect\n     * @param exampleSeparator - The separator to use in between examples\n     * @param prefix - String that should go before any examples. Generally includes examples.\n     *\n     * @returns The final prompt template generated.\n     */\n    static fromExamples(examples, suffix, inputVariables, exampleSeparator = \"\\n\\n\", prefix = \"\") {\n        const template = [prefix, ...examples, suffix].join(exampleSeparator);\n        return new PromptTemplate({\n            inputVariables,\n            template,\n        });\n    }\n    /**\n     * Load prompt template from a template f-string\n     */\n    static fromTemplate(template, { templateFormat = \"f-string\", ...rest } = {}) {\n        const names = new Set();\n        parseTemplate(template, templateFormat).forEach((node) => {\n            if (node.type === \"variable\") {\n                names.add(node.name);\n            }\n        });\n        return new PromptTemplate({\n            inputVariables: [...names],\n            templateFormat,\n            template,\n            ...rest,\n        });\n    }\n    async partial(values) {\n        const promptDict = { ...this };\n        promptDict.inputVariables = this.inputVariables.filter((iv) => !(iv in values));\n        promptDict.partialVariables = {\n            ...(this.partialVariables ?? {}),\n            ...values,\n        };\n        return new PromptTemplate(promptDict);\n    }\n    serialize() {\n        if (this.outputParser !== undefined) {\n            throw new Error(\"Cannot serialize a prompt template with an output parser\");\n        }\n        return {\n            _type: this._getPromptType(),\n            input_variables: this.inputVariables,\n            template: this.template,\n            template_format: this.templateFormat,\n        };\n    }\n    static async deserialize(data) {\n        if (!data.template) {\n            throw new Error(\"Prompt template must have a template\");\n        }\n        const res = new PromptTemplate({\n            inputVariables: data.input_variables,\n            template: data.template,\n            templateFormat: data.template_format,\n        });\n        return res;\n    }\n}\n", "import { BaseChain } from \"./base.js\";\nimport { LLMChain } from \"./llm_chain.js\";\nimport { PromptTemplate } from \"../prompts/prompt.js\";\n/**\n * Chain that combines documents by stuffing into context.\n * @augments BaseChain\n * @augments StuffDocumentsChainInput\n */\nexport class StuffDocumentsChain extends BaseChain {\n    get inputKeys() {\n        return [this.inputKey, ...this.llmChain.inputKeys].filter((key) => key !== this.documentVariableName);\n    }\n    get outputKeys() {\n        return this.llmChain.outputKeys;\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"llmChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"inputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"input_documents\"\n        });\n        Object.defineProperty(this, \"documentVariableName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"context\"\n        });\n        this.llmChain = fields.llmChain;\n        this.documentVariableName =\n            fields.documentVariableName ?? this.documentVariableName;\n        this.inputKey = fields.inputKey ?? this.inputKey;\n    }\n    /** @ignore */\n    _prepInputs(values) {\n        if (!(this.inputKey in values)) {\n            throw new Error(`Document key ${this.inputKey} not found.`);\n        }\n        const { [this.inputKey]: docs, ...rest } = values;\n        const texts = docs.map(({ pageContent }) => pageContent);\n        const text = texts.join(\"\\n\\n\");\n        return {\n            ...rest,\n            [this.documentVariableName]: text,\n        };\n    }\n    /** @ignore */\n    async _call(values, runManager) {\n        const result = await this.llmChain.call(this._prepInputs(values), runManager?.getChild(\"combine_documents\"));\n        return result;\n    }\n    _chainType() {\n        return \"stuff_documents_chain\";\n    }\n    static async deserialize(data) {\n        if (!data.llm_chain) {\n            throw new Error(\"Missing llm_chain\");\n        }\n        return new StuffDocumentsChain({\n            llmChain: await LLMChain.deserialize(data.llm_chain),\n        });\n    }\n    serialize() {\n        return {\n            _type: this._chainType(),\n            llm_chain: this.llmChain.serialize(),\n        };\n    }\n}\n/**\n * Combine documents by mapping a chain over them, then combining results.\n * @augments BaseChain\n * @augments StuffDocumentsChainInput\n */\nexport class MapReduceDocumentsChain extends BaseChain {\n    get inputKeys() {\n        return [this.inputKey, ...this.combineDocumentChain.inputKeys];\n    }\n    get outputKeys() {\n        return this.combineDocumentChain.outputKeys;\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"llmChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"inputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"input_documents\"\n        });\n        Object.defineProperty(this, \"documentVariableName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"context\"\n        });\n        Object.defineProperty(this, \"returnIntermediateSteps\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"maxTokens\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 3000\n        });\n        Object.defineProperty(this, \"maxIterations\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 10\n        });\n        Object.defineProperty(this, \"ensureMapStep\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"combineDocumentChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.llmChain = fields.llmChain;\n        this.combineDocumentChain = fields.combineDocumentChain;\n        this.documentVariableName =\n            fields.documentVariableName ?? this.documentVariableName;\n        this.ensureMapStep = fields.ensureMapStep ?? this.ensureMapStep;\n        this.inputKey = fields.inputKey ?? this.inputKey;\n        this.maxTokens = fields.maxTokens ?? this.maxTokens;\n        this.maxIterations = fields.maxIterations ?? this.maxIterations;\n        this.returnIntermediateSteps = fields.returnIntermediateSteps ?? false;\n    }\n    /** @ignore */\n    async _call(values, runManager) {\n        if (!(this.inputKey in values)) {\n            throw new Error(`Document key ${this.inputKey} not found.`);\n        }\n        const { [this.inputKey]: docs, ...rest } = values;\n        let currentDocs = docs;\n        let intermediateSteps = [];\n        // For each iteration, we'll use the `llmChain` to get a new result\n        for (let i = 0; i < this.maxIterations; i += 1) {\n            const inputs = currentDocs.map((d) => ({\n                [this.documentVariableName]: d.pageContent,\n                ...rest,\n            }));\n            const canSkipMapStep = i !== 0 || !this.ensureMapStep;\n            if (canSkipMapStep) {\n                // Calculate the total tokens required in the input\n                const formatted = await this.combineDocumentChain.llmChain.prompt.format(this.combineDocumentChain._prepInputs({\n                    [this.combineDocumentChain.inputKey]: currentDocs,\n                    ...rest,\n                }));\n                const length = await this.combineDocumentChain.llmChain.llm.getNumTokens(formatted);\n                const withinTokenLimit = length < this.maxTokens;\n                // If we can skip the map step, and we're within the token limit, we don't\n                // need to run the map step, so just break out of the loop.\n                if (withinTokenLimit) {\n                    break;\n                }\n            }\n            const results = await this.llmChain.apply(inputs, \n            // If we have a runManager, then we need to create a child for each input\n            // so that we can track the progress of each input.\n            runManager\n                ? Array.from({ length: inputs.length }, (_, i) => runManager.getChild(`map_${i + 1}`))\n                : undefined);\n            const { outputKey } = this.llmChain;\n            // If the flag is set, then concat that to the intermediate steps\n            if (this.returnIntermediateSteps) {\n                intermediateSteps = intermediateSteps.concat(results.map((r) => r[outputKey]));\n            }\n            currentDocs = results.map((r) => ({\n                pageContent: r[outputKey],\n                metadata: {},\n            }));\n        }\n        // Now, with the final result of all the inputs from the `llmChain`, we can\n        // run the `combineDocumentChain` over them.\n        const newInputs = {\n            [this.combineDocumentChain.inputKey]: currentDocs,\n            ...rest,\n        };\n        const result = await this.combineDocumentChain.call(newInputs, runManager?.getChild(\"combine_documents\"));\n        // Return the intermediate steps results if the flag is set\n        if (this.returnIntermediateSteps) {\n            return { ...result, intermediateSteps };\n        }\n        return result;\n    }\n    _chainType() {\n        return \"map_reduce_documents_chain\";\n    }\n    static async deserialize(data) {\n        if (!data.llm_chain) {\n            throw new Error(\"Missing llm_chain\");\n        }\n        if (!data.combine_document_chain) {\n            throw new Error(\"Missing combine_document_chain\");\n        }\n        return new MapReduceDocumentsChain({\n            llmChain: await LLMChain.deserialize(data.llm_chain),\n            combineDocumentChain: await StuffDocumentsChain.deserialize(data.combine_document_chain),\n        });\n    }\n    serialize() {\n        return {\n            _type: this._chainType(),\n            llm_chain: this.llmChain.serialize(),\n            combine_document_chain: this.combineDocumentChain.serialize(),\n        };\n    }\n}\n/**\n * Combine documents by doing a first pass and then refining on more documents.\n * @augments BaseChain\n * @augments RefineDocumentsChainInput\n */\nexport class RefineDocumentsChain extends BaseChain {\n    get defaultDocumentPrompt() {\n        return new PromptTemplate({\n            inputVariables: [\"page_content\"],\n            template: \"{page_content}\",\n        });\n    }\n    get inputKeys() {\n        return [\n            ...new Set([\n                this.inputKey,\n                ...this.llmChain.inputKeys,\n                ...this.refineLLMChain.inputKeys,\n            ]),\n        ].filter((key) => key !== this.documentVariableName && key !== this.initialResponseName);\n    }\n    get outputKeys() {\n        return [this.outputKey];\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"llmChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"inputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"input_documents\"\n        });\n        Object.defineProperty(this, \"outputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"output_text\"\n        });\n        Object.defineProperty(this, \"documentVariableName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"context\"\n        });\n        Object.defineProperty(this, \"initialResponseName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"existing_answer\"\n        });\n        Object.defineProperty(this, \"refineLLMChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"documentPrompt\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: this.defaultDocumentPrompt\n        });\n        this.llmChain = fields.llmChain;\n        this.refineLLMChain = fields.refineLLMChain;\n        this.documentVariableName =\n            fields.documentVariableName ?? this.documentVariableName;\n        this.inputKey = fields.inputKey ?? this.inputKey;\n        this.outputKey = fields.outputKey ?? this.outputKey;\n        this.documentPrompt = fields.documentPrompt ?? this.documentPrompt;\n        this.initialResponseName =\n            fields.initialResponseName ?? this.initialResponseName;\n    }\n    /** @ignore */\n    async _constructInitialInputs(doc, rest) {\n        const baseInfo = {\n            page_content: doc.pageContent,\n            ...doc.metadata,\n        };\n        const documentInfo = {};\n        this.documentPrompt.inputVariables.forEach((value) => {\n            documentInfo[value] = baseInfo[value];\n        });\n        const baseInputs = {\n            [this.documentVariableName]: await this.documentPrompt.format({\n                ...documentInfo,\n            }),\n        };\n        const inputs = { ...baseInputs, ...rest };\n        return inputs;\n    }\n    /** @ignore */\n    async _constructRefineInputs(doc, res) {\n        const baseInfo = {\n            page_content: doc.pageContent,\n            ...doc.metadata,\n        };\n        const documentInfo = {};\n        this.documentPrompt.inputVariables.forEach((value) => {\n            documentInfo[value] = baseInfo[value];\n        });\n        const baseInputs = {\n            [this.documentVariableName]: await this.documentPrompt.format({\n                ...documentInfo,\n            }),\n        };\n        const inputs = { [this.initialResponseName]: res, ...baseInputs };\n        return inputs;\n    }\n    /** @ignore */\n    async _call(values, runManager) {\n        if (!(this.inputKey in values)) {\n            throw new Error(`Document key ${this.inputKey} not found.`);\n        }\n        const { [this.inputKey]: docs, ...rest } = values;\n        const currentDocs = docs;\n        const initialInputs = await this._constructInitialInputs(currentDocs[0], rest);\n        let res = await this.llmChain.predict({ ...initialInputs }, runManager?.getChild(\"answer\"));\n        const refineSteps = [res];\n        for (let i = 1; i < currentDocs.length; i += 1) {\n            const refineInputs = await this._constructRefineInputs(currentDocs[i], res);\n            const inputs = { ...refineInputs, ...rest };\n            res = await this.refineLLMChain.predict({ ...inputs }, runManager?.getChild(\"refine\"));\n            refineSteps.push(res);\n        }\n        return { [this.outputKey]: res };\n    }\n    _chainType() {\n        return \"refine_documents_chain\";\n    }\n    static async deserialize(data) {\n        const SerializedLLMChain = data.llm_chain;\n        if (!SerializedLLMChain) {\n            throw new Error(\"Missing llm_chain\");\n        }\n        const SerializedRefineDocumentChain = data.refine_llm_chain;\n        if (!SerializedRefineDocumentChain) {\n            throw new Error(\"Missing refine_llm_chain\");\n        }\n        return new RefineDocumentsChain({\n            llmChain: await LLMChain.deserialize(SerializedLLMChain),\n            refineLLMChain: await LLMChain.deserialize(SerializedRefineDocumentChain),\n        });\n    }\n    serialize() {\n        return {\n            _type: this._chainType(),\n            llm_chain: this.llmChain.serialize(),\n            refine_llm_chain: this.refineLLMChain.serialize(),\n        };\n    }\n}\n", "import { AIMessage, BasePromptValue, ChatMessage, HumanMessage, SystemMessage, } from \"../schema/index.js\";\nimport { Serializable } from \"../load/serializable.js\";\nimport { BasePromptTemplate, } from \"./base.js\";\nimport { PromptTemplate } from \"./prompt.js\";\nexport class BaseMessagePromptTemplate extends Serializable {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"prompts\", \"chat\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n    }\n}\nexport class ChatPromptValue extends BasePromptValue {\n    constructor(fields) {\n        if (Array.isArray(fields)) {\n            // eslint-disable-next-line no-param-reassign\n            fields = { messages: fields };\n        }\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"prompts\", \"chat\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"messages\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.messages = fields.messages;\n    }\n    toString() {\n        return JSON.stringify(this.messages);\n    }\n    toChatMessages() {\n        return this.messages;\n    }\n}\nexport class MessagesPlaceholder extends BaseMessagePromptTemplate {\n    constructor(fields) {\n        if (typeof fields === \"string\") {\n            // eslint-disable-next-line no-param-reassign\n            fields = { variableName: fields };\n        }\n        super(fields);\n        Object.defineProperty(this, \"variableName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.variableName = fields.variableName;\n    }\n    get inputVariables() {\n        return [this.variableName];\n    }\n    formatMessages(values) {\n        return Promise.resolve(values[this.variableName]);\n    }\n}\nexport class BaseMessageStringPromptTemplate extends BaseMessagePromptTemplate {\n    constructor(fields) {\n        if (!(\"prompt\" in fields)) {\n            // eslint-disable-next-line no-param-reassign\n            fields = { prompt: fields };\n        }\n        super(fields);\n        Object.defineProperty(this, \"prompt\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.prompt = fields.prompt;\n    }\n    get inputVariables() {\n        return this.prompt.inputVariables;\n    }\n    async formatMessages(values) {\n        return [await this.format(values)];\n    }\n}\nexport class BaseChatPromptTemplate extends BasePromptTemplate {\n    constructor(input) {\n        super(input);\n    }\n    async format(values) {\n        return (await this.formatPromptValue(values)).toString();\n    }\n    async formatPromptValue(values) {\n        const resultMessages = await this.formatMessages(values);\n        return new ChatPromptValue(resultMessages);\n    }\n}\nexport class ChatMessagePromptTemplate extends BaseMessageStringPromptTemplate {\n    async format(values) {\n        return new ChatMessage(await this.prompt.format(values), this.role);\n    }\n    constructor(fields, role) {\n        if (!(\"prompt\" in fields)) {\n            // eslint-disable-next-line no-param-reassign, @typescript-eslint/no-non-null-assertion\n            fields = { prompt: fields, role: role };\n        }\n        super(fields);\n        Object.defineProperty(this, \"role\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.role = fields.role;\n    }\n    static fromTemplate(template, role) {\n        return new this(PromptTemplate.fromTemplate(template), role);\n    }\n}\nexport class HumanMessagePromptTemplate extends BaseMessageStringPromptTemplate {\n    async format(values) {\n        return new HumanMessage(await this.prompt.format(values));\n    }\n    static fromTemplate(template) {\n        return new this(PromptTemplate.fromTemplate(template));\n    }\n}\nexport class AIMessagePromptTemplate extends BaseMessageStringPromptTemplate {\n    async format(values) {\n        return new AIMessage(await this.prompt.format(values));\n    }\n    static fromTemplate(template) {\n        return new this(PromptTemplate.fromTemplate(template));\n    }\n}\nexport class SystemMessagePromptTemplate extends BaseMessageStringPromptTemplate {\n    async format(values) {\n        return new SystemMessage(await this.prompt.format(values));\n    }\n    static fromTemplate(template) {\n        return new this(PromptTemplate.fromTemplate(template));\n    }\n}\nexport class ChatPromptTemplate extends BaseChatPromptTemplate {\n    get lc_aliases() {\n        return {\n            promptMessages: \"messages\",\n        };\n    }\n    constructor(input) {\n        super(input);\n        Object.defineProperty(this, \"promptMessages\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"validateTemplate\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.assign(this, input);\n        if (this.validateTemplate) {\n            const inputVariablesMessages = new Set();\n            for (const promptMessage of this.promptMessages) {\n                for (const inputVariable of promptMessage.inputVariables) {\n                    inputVariablesMessages.add(inputVariable);\n                }\n            }\n            const inputVariablesInstance = new Set(this.partialVariables\n                ? this.inputVariables.concat(Object.keys(this.partialVariables))\n                : this.inputVariables);\n            const difference = new Set([...inputVariablesInstance].filter((x) => !inputVariablesMessages.has(x)));\n            if (difference.size > 0) {\n                throw new Error(`Input variables \\`${[\n                    ...difference,\n                ]}\\` are not used in any of the prompt messages.`);\n            }\n            const otherDifference = new Set([...inputVariablesMessages].filter((x) => !inputVariablesInstance.has(x)));\n            if (otherDifference.size > 0) {\n                throw new Error(`Input variables \\`${[\n                    ...otherDifference,\n                ]}\\` are used in prompt messages but not in the prompt template.`);\n            }\n        }\n    }\n    _getPromptType() {\n        return \"chat\";\n    }\n    async formatMessages(values) {\n        const allValues = await this.mergePartialAndUserVariables(values);\n        let resultMessages = [];\n        for (const promptMessage of this.promptMessages) {\n            const inputValues = promptMessage.inputVariables.reduce((acc, inputVariable) => {\n                if (!(inputVariable in allValues)) {\n                    throw new Error(`Missing value for input variable \\`${inputVariable}\\``);\n                }\n                acc[inputVariable] = allValues[inputVariable];\n                return acc;\n            }, {});\n            const message = await promptMessage.formatMessages(inputValues);\n            resultMessages = resultMessages.concat(message);\n        }\n        return resultMessages;\n    }\n    async partial(values) {\n        // This is implemented in a way it doesn't require making\n        // BaseMessagePromptTemplate aware of .partial()\n        const promptDict = { ...this };\n        promptDict.inputVariables = this.inputVariables.filter((iv) => !(iv in values));\n        promptDict.partialVariables = {\n            ...(this.partialVariables ?? {}),\n            ...values,\n        };\n        return new ChatPromptTemplate(promptDict);\n    }\n    static fromPromptMessages(promptMessages) {\n        const flattenedMessages = promptMessages.reduce((acc, promptMessage) => acc.concat(\n        // eslint-disable-next-line no-instanceof/no-instanceof\n        promptMessage instanceof ChatPromptTemplate\n            ? promptMessage.promptMessages\n            : [promptMessage]), []);\n        const flattenedPartialVariables = promptMessages.reduce((acc, promptMessage) => \n        // eslint-disable-next-line no-instanceof/no-instanceof\n        promptMessage instanceof ChatPromptTemplate\n            ? Object.assign(acc, promptMessage.partialVariables)\n            : acc, Object.create(null));\n        const inputVariables = new Set();\n        for (const promptMessage of flattenedMessages) {\n            for (const inputVariable of promptMessage.inputVariables) {\n                if (inputVariable in flattenedPartialVariables) {\n                    continue;\n                }\n                inputVariables.add(inputVariable);\n            }\n        }\n        return new ChatPromptTemplate({\n            inputVariables: [...inputVariables],\n            promptMessages: flattenedMessages,\n            partialVariables: flattenedPartialVariables,\n        });\n    }\n}\n", "export class BasePromptSelector {\n    async getPromptAsync(llm, options) {\n        const prompt = this.getPrompt(llm);\n        return prompt.partial(options?.partialVariables ?? {});\n    }\n}\nexport class ConditionalPromptSelector extends BasePromptSelector {\n    constructor(default_prompt, conditionals = []) {\n        super();\n        Object.defineProperty(this, \"defaultPrompt\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"conditionals\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.defaultPrompt = default_prompt;\n        this.conditionals = conditionals;\n    }\n    getPrompt(llm) {\n        for (const [condition, prompt] of this.conditionals) {\n            if (condition(llm)) {\n                return prompt;\n            }\n        }\n        return this.defaultPrompt;\n    }\n}\nexport function isLLM(llm) {\n    return llm._modelType() === \"base_llm\";\n}\nexport function isChatModel(llm) {\n    return llm._modelType() === \"base_chat_model\";\n}\n", "/* eslint-disable spaced-comment */\nimport { PromptTemplate } from \"../../prompts/prompt.js\";\nimport { ChatPromptTemplate, SystemMessagePromptTemplate, HumanMessagePromptTemplate, } from \"../../prompts/chat.js\";\nimport { ConditionalPromptSelector, isChatModel, } from \"../../prompts/selectors/conditional.js\";\nexport const DEFAULT_QA_PROMPT = /*#__PURE__*/ new PromptTemplate({\n    template: \"Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\\n\\n{context}\\n\\nQuestion: {question}\\nHelpful Answer:\",\n    inputVariables: [\"context\", \"question\"],\n});\nconst system_template = `Use the following pieces of context to answer the users question. \nIf you don't know the answer, just say that you don't know, don't try to make up an answer.\n----------------\n{context}`;\nconst messages = [\n    /*#__PURE__*/ SystemMessagePromptTemplate.fromTemplate(system_template),\n    /*#__PURE__*/ HumanMessagePromptTemplate.fromTemplate(\"{question}\"),\n];\nconst CHAT_PROMPT = \n/*#__PURE__*/ ChatPromptTemplate.fromPromptMessages(messages);\nexport const QA_PROMPT_SELECTOR = /*#__PURE__*/ new ConditionalPromptSelector(DEFAULT_QA_PROMPT, [[isChatModel, CHAT_PROMPT]]);\n", "/* eslint-disable spaced-comment */\nimport { PromptTemplate } from \"../../prompts/prompt.js\";\nimport { ChatPromptTemplate, SystemMessagePromptTemplate, HumanMessagePromptTemplate, } from \"../../prompts/chat.js\";\nimport { ConditionalPromptSelector, isChatModel, } from \"../../prompts/selectors/conditional.js\";\nconst qa_template = `Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n{context}\nQuestion: {question}\nRelevant text, if any:`;\nexport const DEFAULT_COMBINE_QA_PROMPT = \n/*#__PURE__*/\nPromptTemplate.fromTemplate(qa_template);\nconst system_template = `Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n----------------\n{context}`;\nconst messages = [\n    /*#__PURE__*/ SystemMessagePromptTemplate.fromTemplate(system_template),\n    /*#__PURE__*/ HumanMessagePromptTemplate.fromTemplate(\"{question}\"),\n];\nconst CHAT_QA_PROMPT = \n/*#__PURE__*/ ChatPromptTemplate.fromPromptMessages(messages);\nexport const COMBINE_QA_PROMPT_SELECTOR = \n/*#__PURE__*/ new ConditionalPromptSelector(DEFAULT_COMBINE_QA_PROMPT, [\n    [isChatModel, CHAT_QA_PROMPT],\n]);\nconst combine_prompt = `Given the following extracted parts of a long document and a question, create a final answer. \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\n\nQUESTION: Which state/country's law governs the interpretation of the contract?\n=========\nContent: This Agreement is governed by English law and the parties submit to the exclusive jurisdiction of the English courts in  relation to any dispute (contractual or non-contractual) concerning this Agreement save that either party may apply to any court for an  injunction or other relief to protect its Intellectual Property Rights.\n\nContent: No Waiver. Failure or delay in exercising any right or remedy under this Agreement shall not constitute a waiver of such (or any other)  right or remedy.\\n\\n11.7 Severability. The invalidity, illegality or unenforceability of any term (or part of a term) of this Agreement shall not affect the continuation  in force of the remainder of the term (if any) and this Agreement.\\n\\n11.8 No Agency. Except as expressly stated otherwise, nothing in this Agreement shall create an agency, partnership or joint venture of any  kind between the parties.\\n\\n11.9 No Third-Party Beneficiaries.\n\nContent: (b) if Google believes, in good faith, that the Distributor has violated or caused Google to violate any Anti-Bribery Laws (as  defined in Clause 8.5) or that such a violation is reasonably likely to occur,\n=========\nFINAL ANSWER: This Agreement is governed by English law.\n\nQUESTION: What did the president say about Michael Jackson?\n=========\nContent: Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.  \\n\\nLast year COVID-19 kept us apart. This year we are finally together again. \\n\\nTonight, we meet as Democrats Republicans and Independents. But most importantly as Americans. \\n\\nWith a duty to one another to the American people to the Constitution. \\n\\nAnd with an unwavering resolve that freedom will always triumph over tyranny. \\n\\nSix days ago, Russia\u2019s Vladimir Putin sought to shake the foundations of the free world thinking he could make it bend to his menacing ways. But he badly miscalculated. \\n\\nHe thought he could roll into Ukraine and the world would roll over. Instead he met a wall of strength he never imagined. \\n\\nHe met the Ukrainian people. \\n\\nFrom President Zelenskyy to every Ukrainian, their fearlessness, their courage, their determination, inspires the world. \\n\\nGroups of citizens blocking tanks with their bodies. Everyone from students to retirees teachers turned soldiers defending their homeland.\n\nContent: And we won\u2019t stop. \\n\\nWe have lost so much to COVID-19. Time with one another. And worst of all, so much loss of life. \\n\\nLet\u2019s use this moment to reset. Let\u2019s stop looking at COVID-19 as a partisan dividing line and see it for what it is: A God-awful disease.  \\n\\nLet\u2019s stop seeing each other as enemies, and start seeing each other for who we really are: Fellow Americans.  \\n\\nWe can\u2019t change how divided we\u2019ve been. But we can change how we move forward\u2014on COVID-19 and other issues we must face together. \\n\\nI recently visited the New York City Police Department days after the funerals of Officer Wilbert Mora and his partner, Officer Jason Rivera. \\n\\nThey were responding to a 9-1-1 call when a man shot and killed them with a stolen gun. \\n\\nOfficer Mora was 27 years old. \\n\\nOfficer Rivera was 22. \\n\\nBoth Dominican Americans who\u2019d grown up on the same streets they later chose to patrol as police officers. \\n\\nI spoke with their families and told them that we are forever in debt for their sacrifice, and we will carry on their mission to restore the trust and safety every community deserves.\n\nContent: And a proud Ukrainian people, who have known 30 years  of independence, have repeatedly shown that they will not tolerate anyone who tries to take their country backwards.  \\n\\nTo all Americans, I will be honest with you, as I\u2019ve always promised. A Russian dictator, invading a foreign country, has costs around the world. \\n\\nAnd I\u2019m taking robust action to make sure the pain of our sanctions  is targeted at Russia\u2019s economy. And I will use every tool at our disposal to protect American businesses and consumers. \\n\\nTonight, I can announce that the United States has worked with 30 other countries to release 60 Million barrels of oil from reserves around the world.  \\n\\nAmerica will lead that effort, releasing 30 Million barrels from our own Strategic Petroleum Reserve. And we stand ready to do more if necessary, unified with our allies.  \\n\\nThese steps will help blunt gas prices here at home. And I know the news about what\u2019s happening can seem alarming. \\n\\nBut I want you to know that we are going to be okay.\n\nContent: More support for patients and families. \\n\\nTo get there, I call on Congress to fund ARPA-H, the Advanced Research Projects Agency for Health. \\n\\nIt\u2019s based on DARPA\u2014the Defense Department project that led to the Internet, GPS, and so much more.  \\n\\nARPA-H will have a singular purpose\u2014to drive breakthroughs in cancer, Alzheimer\u2019s, diabetes, and more. \\n\\nA unity agenda for the nation. \\n\\nWe can do this. \\n\\nMy fellow Americans\u2014tonight , we have gathered in a sacred space\u2014the citadel of our democracy. \\n\\nIn this Capitol, generation after generation, Americans have debated great questions amid great strife, and have done great things. \\n\\nWe have fought for freedom, expanded liberty, defeated totalitarianism and terror. \\n\\nAnd built the strongest, freest, and most prosperous nation the world has ever known. \\n\\nNow is the hour. \\n\\nOur moment of responsibility. \\n\\nOur test of resolve and conscience, of history itself. \\n\\nIt is in this moment that our character is formed. Our purpose is found. Our future is forged. \\n\\nWell I know this nation.\n=========\nFINAL ANSWER: The president did not mention Michael Jackson.\n\nQUESTION: {question}\n=========\n{summaries}\n=========\nFINAL ANSWER:`;\nexport const COMBINE_PROMPT = \n/*#__PURE__*/ PromptTemplate.fromTemplate(combine_prompt);\nconst system_combine_template = `Given the following extracted parts of a long document and a question, create a final answer. \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\n----------------\n{summaries}`;\nconst combine_messages = [\n    /*#__PURE__*/ SystemMessagePromptTemplate.fromTemplate(system_combine_template),\n    /*#__PURE__*/ HumanMessagePromptTemplate.fromTemplate(\"{question}\"),\n];\nconst CHAT_COMBINE_PROMPT = \n/*#__PURE__*/ ChatPromptTemplate.fromPromptMessages(combine_messages);\nexport const COMBINE_PROMPT_SELECTOR = \n/*#__PURE__*/ new ConditionalPromptSelector(COMBINE_PROMPT, [\n    [isChatModel, CHAT_COMBINE_PROMPT],\n]);\n", "import { BaseExampleSelector } from \"../base.js\";\nfunction getLengthBased(text) {\n    return text.split(/\\n| /).length;\n}\nexport class LengthBasedExampleSelector extends BaseExampleSelector {\n    constructor(data) {\n        super(data);\n        Object.defineProperty(this, \"examples\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"examplePrompt\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"getTextLength\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: getLengthBased\n        });\n        Object.defineProperty(this, \"maxLength\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 2048\n        });\n        Object.defineProperty(this, \"exampleTextLengths\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        this.examplePrompt = data.examplePrompt;\n        this.maxLength = data.maxLength ?? 2048;\n        this.getTextLength = data.getTextLength ?? getLengthBased;\n    }\n    async addExample(example) {\n        this.examples.push(example);\n        const stringExample = await this.examplePrompt.format(example);\n        this.exampleTextLengths.push(this.getTextLength(stringExample));\n    }\n    async calculateExampleTextLengths(v, values) {\n        if (v.length > 0) {\n            return v;\n        }\n        const { examples, examplePrompt } = values;\n        const stringExamples = await Promise.all(examples.map((eg) => examplePrompt.format(eg)));\n        return stringExamples.map((eg) => this.getTextLength(eg));\n    }\n    async selectExamples(inputVariables) {\n        const inputs = Object.values(inputVariables).join(\" \");\n        let remainingLength = this.maxLength - this.getTextLength(inputs);\n        let i = 0;\n        const examples = [];\n        while (remainingLength > 0 && i < this.examples.length) {\n            const newLength = remainingLength - this.exampleTextLengths[i];\n            if (newLength < 0) {\n                break;\n            }\n            else {\n                examples.push(this.examples[i]);\n                remainingLength = newLength;\n            }\n            i += 1;\n        }\n        return examples;\n    }\n    static async fromExamples(examples, args) {\n        const selector = new LengthBasedExampleSelector(args);\n        await Promise.all(examples.map((eg) => selector.addExample(eg)));\n        return selector;\n    }\n}\n", "/**\n * Interface for interacting with a document.\n */\nexport class Document {\n    constructor(fields) {\n        Object.defineProperty(this, \"pageContent\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.pageContent = fields.pageContent\n            ? fields.pageContent.toString()\n            : this.pageContent;\n        this.metadata = fields.metadata ?? {};\n    }\n}\n", "import { Document } from \"../../document.js\";\nimport { BaseExampleSelector } from \"../base.js\";\nfunction sortedValues(values) {\n    return Object.keys(values)\n        .sort()\n        .map((key) => values[key]);\n}\nexport class SemanticSimilarityExampleSelector extends BaseExampleSelector {\n    constructor(data) {\n        super(data);\n        Object.defineProperty(this, \"vectorStore\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"k\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 4\n        });\n        Object.defineProperty(this, \"exampleKeys\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"inputKeys\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.vectorStore = data.vectorStore;\n        this.k = data.k ?? 4;\n        this.exampleKeys = data.exampleKeys;\n        this.inputKeys = data.inputKeys;\n    }\n    async addExample(example) {\n        const inputKeys = this.inputKeys ?? Object.keys(example);\n        const stringExample = sortedValues(inputKeys.reduce((acc, key) => ({ ...acc, [key]: example[key] }), {})).join(\" \");\n        await this.vectorStore.addDocuments([\n            new Document({\n                pageContent: stringExample,\n                metadata: { example },\n            }),\n        ]);\n    }\n    async selectExamples(inputVariables) {\n        const inputKeys = this.inputKeys ?? Object.keys(inputVariables);\n        const query = sortedValues(inputKeys.reduce((acc, key) => ({ ...acc, [key]: inputVariables[key] }), {})).join(\" \");\n        const exampleDocs = await this.vectorStore.similaritySearch(query, this.k);\n        const examples = exampleDocs.map((doc) => doc.metadata);\n        if (this.exampleKeys) {\n            // If example keys are provided, filter examples to those keys.\n            return examples.map((example) => this.exampleKeys.reduce((acc, key) => ({ ...acc, [key]: example[key] }), {}));\n        }\n        return examples;\n    }\n    static async fromExamples(examples, embeddings, vectorStoreCls, options = {}) {\n        const inputKeys = options.inputKeys ?? null;\n        const stringExamples = examples.map((example) => sortedValues(inputKeys\n            ? inputKeys.reduce((acc, key) => ({ ...acc, [key]: example[key] }), {})\n            : example).join(\" \"));\n        const vectorStore = await vectorStoreCls.fromTexts(stringExamples, examples, // metadatas\n        embeddings, options);\n        return new SemanticSimilarityExampleSelector({\n            vectorStore,\n            k: options.k ?? 4,\n            exampleKeys: options.exampleKeys,\n            inputKeys: options.inputKeys,\n        });\n    }\n}\n", "import { BasePromptTemplate } from \"./base.js\";\nimport { ChatPromptTemplate } from \"./chat.js\";\nexport class PipelinePromptTemplate extends BasePromptTemplate {\n    constructor(input) {\n        super({ ...input, inputVariables: [] });\n        Object.defineProperty(this, \"pipelinePrompts\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"finalPrompt\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.pipelinePrompts = input.pipelinePrompts;\n        this.finalPrompt = input.finalPrompt;\n        this.inputVariables = this.computeInputValues();\n    }\n    computeInputValues() {\n        const intermediateValues = this.pipelinePrompts.map((pipelinePrompt) => pipelinePrompt.name);\n        const inputValues = this.pipelinePrompts\n            .map((pipelinePrompt) => pipelinePrompt.prompt.inputVariables.filter((inputValue) => !intermediateValues.includes(inputValue)))\n            .flat();\n        return [...new Set(inputValues)];\n    }\n    static extractRequiredInputValues(allValues, requiredValueNames) {\n        return requiredValueNames.reduce((requiredValues, valueName) => {\n            // eslint-disable-next-line no-param-reassign\n            requiredValues[valueName] = allValues[valueName];\n            return requiredValues;\n        }, {});\n    }\n    async formatPipelinePrompts(values) {\n        const allValues = await this.mergePartialAndUserVariables(values);\n        for (const { name: pipelinePromptName, prompt: pipelinePrompt } of this\n            .pipelinePrompts) {\n            const pipelinePromptInputValues = PipelinePromptTemplate.extractRequiredInputValues(allValues, pipelinePrompt.inputVariables);\n            // eslint-disable-next-line no-instanceof/no-instanceof\n            if (pipelinePrompt instanceof ChatPromptTemplate) {\n                allValues[pipelinePromptName] = await pipelinePrompt.formatMessages(pipelinePromptInputValues);\n            }\n            else {\n                allValues[pipelinePromptName] = await pipelinePrompt.format(pipelinePromptInputValues);\n            }\n        }\n        return PipelinePromptTemplate.extractRequiredInputValues(allValues, this.finalPrompt.inputVariables);\n    }\n    async formatPromptValue(values) {\n        return this.finalPrompt.formatPromptValue(await this.formatPipelinePrompts(values));\n    }\n    async format(values) {\n        return this.finalPrompt.format(await this.formatPipelinePrompts(values));\n    }\n    async partial(values) {\n        const promptDict = { ...this };\n        promptDict.inputVariables = this.inputVariables.filter((iv) => !(iv in values));\n        promptDict.partialVariables = {\n            ...(this.partialVariables ?? {}),\n            ...values,\n        };\n        return new PipelinePromptTemplate(promptDict);\n    }\n    serialize() {\n        throw new Error(\"Not implemented.\");\n    }\n    _getPromptType() {\n        return \"pipeline\";\n    }\n}\n", "export { BaseExampleSelector, BasePromptTemplate, StringPromptValue, BaseStringPromptTemplate, } from \"./base.js\";\nexport { PromptTemplate } from \"./prompt.js\";\nexport { BasePromptSelector, ConditionalPromptSelector, isChatModel, isLLM, } from \"./selectors/conditional.js\";\nexport { LengthBasedExampleSelector, } from \"./selectors/LengthBasedExampleSelector.js\";\nexport { SemanticSimilarityExampleSelector, } from \"./selectors/SemanticSimilarityExampleSelector.js\";\nexport { FewShotPromptTemplate, } from \"./few_shot.js\";\nexport { ChatPromptTemplate, HumanMessagePromptTemplate, AIMessagePromptTemplate, SystemMessagePromptTemplate, ChatMessagePromptTemplate, MessagesPlaceholder, BaseChatPromptTemplate, } from \"./chat.js\";\nexport { parseTemplate, renderTemplate, checkValidTemplate, } from \"./template.js\";\nexport { PipelinePromptTemplate, } from \"./pipeline.js\";\n", "/* eslint-disable spaced-comment */\nimport { PromptTemplate, ChatPromptTemplate, SystemMessagePromptTemplate, HumanMessagePromptTemplate, AIMessagePromptTemplate, } from \"../../prompts/index.js\";\nimport { ConditionalPromptSelector, isChatModel, } from \"../../prompts/selectors/conditional.js\";\nexport const DEFAULT_REFINE_PROMPT_TMPL = `The original question is as follows: {question}\nWe have provided an existing answer: {existing_answer}\nWe have the opportunity to refine the existing answer\n(only if needed) with some more context below.\n------------\n{context}\n------------\nGiven the new context, refine the original answer to better answer the question. \nIf the context isn't useful, return the original answer.`;\nexport const DEFAULT_REFINE_PROMPT = /*#__PURE__*/ new PromptTemplate({\n    inputVariables: [\"question\", \"existing_answer\", \"context\"],\n    template: DEFAULT_REFINE_PROMPT_TMPL,\n});\nconst refineTemplate = `The original question is as follows: {question}\nWe have provided an existing answer: {existing_answer}\nWe have the opportunity to refine the existing answer\n(only if needed) with some more context below.\n------------\n{context}\n------------\nGiven the new context, refine the original answer to better answer the question. \nIf the context isn't useful, return the original answer.`;\nconst messages = [\n    /*#__PURE__*/ HumanMessagePromptTemplate.fromTemplate(\"{question}\"),\n    /*#__PURE__*/ AIMessagePromptTemplate.fromTemplate(\"{existing_answer}\"),\n    /*#__PURE__*/ HumanMessagePromptTemplate.fromTemplate(refineTemplate),\n];\nexport const CHAT_REFINE_PROMPT = \n/*#__PURE__*/ ChatPromptTemplate.fromPromptMessages(messages);\nexport const REFINE_PROMPT_SELECTOR = \n/*#__PURE__*/ new ConditionalPromptSelector(DEFAULT_REFINE_PROMPT, [\n    [isChatModel, CHAT_REFINE_PROMPT],\n]);\nexport const DEFAULT_TEXT_QA_PROMPT_TMPL = `Context information is below. \n---------------------\n{context}\n---------------------\nGiven the context information and not prior knowledge, answer the question: {question}`;\nexport const DEFAULT_TEXT_QA_PROMPT = /*#__PURE__*/ new PromptTemplate({\n    inputVariables: [\"context\", \"question\"],\n    template: DEFAULT_TEXT_QA_PROMPT_TMPL,\n});\nconst chat_qa_prompt_template = `Context information is below. \n---------------------\n{context}\n---------------------\nGiven the context information and not prior knowledge, answer any questions`;\nconst chat_messages = [\n    /*#__PURE__*/ SystemMessagePromptTemplate.fromTemplate(chat_qa_prompt_template),\n    /*#__PURE__*/ HumanMessagePromptTemplate.fromTemplate(\"{question}\"),\n];\nexport const CHAT_QUESTION_PROMPT = \n/*#__PURE__*/ ChatPromptTemplate.fromPromptMessages(chat_messages);\nexport const QUESTION_PROMPT_SELECTOR = \n/*#__PURE__*/ new ConditionalPromptSelector(DEFAULT_TEXT_QA_PROMPT, [\n    [isChatModel, CHAT_QUESTION_PROMPT],\n]);\n", "import { LLMChain } from \"../llm_chain.js\";\nimport { StuffDocumentsChain, MapReduceDocumentsChain, RefineDocumentsChain, } from \"../combine_docs_chain.js\";\nimport { QA_PROMPT_SELECTOR } from \"./stuff_prompts.js\";\nimport { COMBINE_PROMPT_SELECTOR, COMBINE_QA_PROMPT_SELECTOR, } from \"./map_reduce_prompts.js\";\nimport { QUESTION_PROMPT_SELECTOR, REFINE_PROMPT_SELECTOR, } from \"./refine_prompts.js\";\nexport const loadQAChain = (llm, params = { type: \"stuff\" }) => {\n    const { type } = params;\n    if (type === \"stuff\") {\n        return loadQAStuffChain(llm, params);\n    }\n    if (type === \"map_reduce\") {\n        return loadQAMapReduceChain(llm, params);\n    }\n    if (type === \"refine\") {\n        return loadQARefineChain(llm, params);\n    }\n    throw new Error(`Invalid _type: ${type}`);\n};\nexport function loadQAStuffChain(llm, params = {}) {\n    const { prompt = QA_PROMPT_SELECTOR.getPrompt(llm), verbose } = params;\n    const llmChain = new LLMChain({ prompt, llm, verbose });\n    const chain = new StuffDocumentsChain({ llmChain, verbose });\n    return chain;\n}\nexport function loadQAMapReduceChain(llm, params = {}) {\n    const { combineMapPrompt = COMBINE_QA_PROMPT_SELECTOR.getPrompt(llm), combinePrompt = COMBINE_PROMPT_SELECTOR.getPrompt(llm), verbose, returnIntermediateSteps, } = params;\n    const llmChain = new LLMChain({ prompt: combineMapPrompt, llm, verbose });\n    const combineLLMChain = new LLMChain({ prompt: combinePrompt, llm, verbose });\n    const combineDocumentChain = new StuffDocumentsChain({\n        llmChain: combineLLMChain,\n        documentVariableName: \"summaries\",\n        verbose,\n    });\n    const chain = new MapReduceDocumentsChain({\n        llmChain,\n        combineDocumentChain,\n        returnIntermediateSteps,\n        verbose,\n    });\n    return chain;\n}\nexport function loadQARefineChain(llm, params = {}) {\n    const { questionPrompt = QUESTION_PROMPT_SELECTOR.getPrompt(llm), refinePrompt = REFINE_PROMPT_SELECTOR.getPrompt(llm), verbose, } = params;\n    const llmChain = new LLMChain({ prompt: questionPrompt, llm, verbose });\n    const refineLLMChain = new LLMChain({ prompt: refinePrompt, llm, verbose });\n    const chain = new RefineDocumentsChain({\n        llmChain,\n        refineLLMChain,\n        verbose,\n    });\n    return chain;\n}\n", "import { BaseChain } from \"./base.js\";\nimport { loadQAStuffChain } from \"./question_answering/load.js\";\nexport class VectorDBQAChain extends BaseChain {\n    get inputKeys() {\n        return [this.inputKey];\n    }\n    get outputKeys() {\n        return this.combineDocumentsChain.outputKeys.concat(this.returnSourceDocuments ? [\"sourceDocuments\"] : []);\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"k\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 4\n        });\n        Object.defineProperty(this, \"inputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"query\"\n        });\n        Object.defineProperty(this, \"vectorstore\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"combineDocumentsChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"returnSourceDocuments\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        this.vectorstore = fields.vectorstore;\n        this.combineDocumentsChain = fields.combineDocumentsChain;\n        this.inputKey = fields.inputKey ?? this.inputKey;\n        this.k = fields.k ?? this.k;\n        this.returnSourceDocuments =\n            fields.returnSourceDocuments ?? this.returnSourceDocuments;\n    }\n    /** @ignore */\n    async _call(values, runManager) {\n        if (!(this.inputKey in values)) {\n            throw new Error(`Question key ${this.inputKey} not found.`);\n        }\n        const question = values[this.inputKey];\n        const docs = await this.vectorstore.similaritySearch(question, this.k, values.filter, runManager?.getChild(\"vectorstore\"));\n        const inputs = { question, input_documents: docs };\n        const result = await this.combineDocumentsChain.call(inputs, runManager?.getChild(\"combine_documents\"));\n        if (this.returnSourceDocuments) {\n            return {\n                ...result,\n                sourceDocuments: docs,\n            };\n        }\n        return result;\n    }\n    _chainType() {\n        return \"vector_db_qa\";\n    }\n    static async deserialize(data, values) {\n        if (!(\"vectorstore\" in values)) {\n            throw new Error(`Need to pass in a vectorstore to deserialize VectorDBQAChain`);\n        }\n        const { vectorstore } = values;\n        if (!data.combine_documents_chain) {\n            throw new Error(`VectorDBQAChain must have combine_documents_chain in serialized data`);\n        }\n        return new VectorDBQAChain({\n            combineDocumentsChain: await BaseChain.deserialize(data.combine_documents_chain),\n            k: data.k,\n            vectorstore,\n        });\n    }\n    serialize() {\n        return {\n            _type: this._chainType(),\n            combine_documents_chain: this.combineDocumentsChain.serialize(),\n            k: this.k,\n        };\n    }\n    static fromLLM(llm, vectorstore, options) {\n        const qaChain = loadQAStuffChain(llm);\n        return new this({\n            vectorstore,\n            combineDocumentsChain: qaChain,\n            ...options,\n        });\n    }\n}\n", "/* eslint-disable spaced-comment */\nimport { PromptTemplate } from \"../../prompts/prompt.js\";\nexport const API_URL_RAW_PROMPT_TEMPLATE = `You are given the below API Documentation:\n{api_docs}\nUsing this documentation, generate the full API url to call for answering the user question.\nYou should build the API url in order to get a response that is as short as possible, while still getting the necessary information to answer the question. Pay attention to deliberately exclude any unnecessary pieces of data in the API call.\n\nQuestion:{question}\nAPI url:`;\nexport const API_URL_PROMPT_TEMPLATE = /* #__PURE__ */ new PromptTemplate({\n    inputVariables: [\"api_docs\", \"question\"],\n    template: API_URL_RAW_PROMPT_TEMPLATE,\n});\nexport const API_RESPONSE_RAW_PROMPT_TEMPLATE = `${API_URL_RAW_PROMPT_TEMPLATE} {api_url}\n\nHere is the response from the API:\n\n{api_response}\n\nSummarize this response to answer the original question.\n\nSummary:`;\nexport const API_RESPONSE_PROMPT_TEMPLATE = /* #__PURE__ */ new PromptTemplate({\n    inputVariables: [\"api_docs\", \"question\", \"api_url\", \"api_response\"],\n    template: API_RESPONSE_RAW_PROMPT_TEMPLATE,\n});\n", "import { BaseChain } from \"../base.js\";\nimport { LLMChain } from \"../llm_chain.js\";\nimport { API_URL_PROMPT_TEMPLATE, API_RESPONSE_PROMPT_TEMPLATE, } from \"./prompts.js\";\nexport class APIChain extends BaseChain {\n    get inputKeys() {\n        return [this.inputKey];\n    }\n    get outputKeys() {\n        return [this.outputKey];\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"apiAnswerChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"apiRequestChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"apiDocs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"headers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"inputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"question\"\n        });\n        Object.defineProperty(this, \"outputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"output\"\n        });\n        this.apiRequestChain = fields.apiRequestChain;\n        this.apiAnswerChain = fields.apiAnswerChain;\n        this.apiDocs = fields.apiDocs;\n        this.inputKey = fields.inputKey ?? this.inputKey;\n        this.outputKey = fields.outputKey ?? this.outputKey;\n        this.headers = fields.headers ?? this.headers;\n    }\n    /** @ignore */\n    async _call(values, runManager) {\n        const question = values[this.inputKey];\n        const api_url = await this.apiRequestChain.predict({ question, api_docs: this.apiDocs }, runManager?.getChild(\"request\"));\n        const res = await fetch(api_url, { headers: this.headers });\n        const api_response = await res.text();\n        const answer = await this.apiAnswerChain.predict({ question, api_docs: this.apiDocs, api_url, api_response }, runManager?.getChild(\"response\"));\n        return { [this.outputKey]: answer };\n    }\n    _chainType() {\n        return \"api_chain\";\n    }\n    static async deserialize(data) {\n        const { api_request_chain, api_answer_chain, api_docs } = data;\n        if (!api_request_chain) {\n            throw new Error(\"LLMChain must have api_request_chain\");\n        }\n        if (!api_answer_chain) {\n            throw new Error(\"LLMChain must have api_answer_chain\");\n        }\n        if (!api_docs) {\n            throw new Error(\"LLMChain must have api_docs\");\n        }\n        return new APIChain({\n            apiAnswerChain: await LLMChain.deserialize(api_answer_chain),\n            apiRequestChain: await LLMChain.deserialize(api_request_chain),\n            apiDocs: api_docs,\n        });\n    }\n    serialize() {\n        return {\n            _type: this._chainType(),\n            api_answer_chain: this.apiAnswerChain.serialize(),\n            api_request_chain: this.apiRequestChain.serialize(),\n            api_docs: this.apiDocs,\n        };\n    }\n    static fromLLMAndAPIDocs(llm, apiDocs, options = {}) {\n        const { apiUrlPrompt = API_URL_PROMPT_TEMPLATE, apiResponsePrompt = API_RESPONSE_PROMPT_TEMPLATE, } = options;\n        const apiRequestChain = new LLMChain({ prompt: apiUrlPrompt, llm });\n        const apiAnswerChain = new LLMChain({ prompt: apiResponsePrompt, llm });\n        return new this({\n            apiAnswerChain,\n            apiRequestChain,\n            apiDocs,\n            ...options,\n        });\n    }\n}\n", "import { RUN_KEY } from \"../schema/index.js\";\nimport { CallbackManager, parseCallbackConfigArg, } from \"../callbacks/manager.js\";\nimport { BaseLangChain } from \"../base_language/index.js\";\n/**\n * Base interface that all chains must implement.\n */\nexport class BaseChain extends BaseLangChain {\n    get lc_namespace() {\n        return [\"langchain\", \"chains\", this._chainType()];\n    }\n    constructor(fields, \n    /** @deprecated */\n    verbose, \n    /** @deprecated */\n    callbacks) {\n        if (arguments.length === 1 &&\n            typeof fields === \"object\" &&\n            !(\"saveContext\" in fields)) {\n            // fields is not a BaseMemory\n            const { memory, callbackManager, ...rest } = fields;\n            super({ ...rest, callbacks: callbackManager ?? rest.callbacks });\n            this.memory = memory;\n        }\n        else {\n            // fields is a BaseMemory\n            super({ verbose, callbacks });\n            this.memory = fields;\n        }\n    }\n    /** @ignore */\n    _selectMemoryInputs(values) {\n        const valuesForMemory = { ...values };\n        if (\"signal\" in valuesForMemory) {\n            delete valuesForMemory.signal;\n        }\n        if (\"timeout\" in valuesForMemory) {\n            delete valuesForMemory.timeout;\n        }\n        return valuesForMemory;\n    }\n    /**\n     * Return a json-like object representing this chain.\n     */\n    serialize() {\n        throw new Error(\"Method not implemented.\");\n    }\n    async run(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    input, config) {\n        const inputKeys = this.inputKeys.filter((k) => !this.memory?.memoryKeys.includes(k) ?? true);\n        const isKeylessInput = inputKeys.length <= 1;\n        if (!isKeylessInput) {\n            throw new Error(`Chain ${this._chainType()} expects multiple inputs, cannot use 'run' `);\n        }\n        const values = inputKeys.length ? { [inputKeys[0]]: input } : {};\n        const returnValues = await this.call(values, config);\n        const keys = Object.keys(returnValues);\n        if (keys.length === 1) {\n            return returnValues[keys[0]];\n        }\n        throw new Error(\"return values have multiple keys, `run` only supported when one key currently\");\n    }\n    /**\n     * Run the core logic of this chain and add to output if desired.\n     *\n     * Wraps _call and handles memory.\n     */\n    async call(values, config, \n    /** @deprecated */\n    tags) {\n        const fullValues = { ...values };\n        if (fullValues.timeout && !fullValues.signal) {\n            fullValues.signal = AbortSignal.timeout(fullValues.timeout);\n            delete fullValues.timeout;\n        }\n        if (!(this.memory == null)) {\n            const newValues = await this.memory.loadMemoryVariables(this._selectMemoryInputs(values));\n            for (const [key, value] of Object.entries(newValues)) {\n                fullValues[key] = value;\n            }\n        }\n        const parsedConfig = parseCallbackConfigArg(config);\n        const callbackManager_ = await CallbackManager.configure(parsedConfig.callbacks, this.callbacks, parsedConfig.tags || tags, this.tags, parsedConfig.metadata, this.metadata, { verbose: this.verbose });\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), fullValues);\n        let outputValues;\n        try {\n            outputValues = await (values.signal\n                ? Promise.race([\n                    this._call(fullValues, runManager),\n                    new Promise((_, reject) => {\n                        values.signal?.addEventListener(\"abort\", () => {\n                            reject(new Error(\"AbortError\"));\n                        });\n                    }),\n                ])\n                : this._call(fullValues, runManager));\n        }\n        catch (e) {\n            await runManager?.handleChainError(e);\n            throw e;\n        }\n        if (!(this.memory == null)) {\n            await this.memory.saveContext(this._selectMemoryInputs(values), outputValues);\n        }\n        await runManager?.handleChainEnd(outputValues);\n        // add the runManager's currentRunId to the outputValues\n        Object.defineProperty(outputValues, RUN_KEY, {\n            value: runManager ? { runId: runManager?.runId } : undefined,\n            configurable: true,\n        });\n        return outputValues;\n    }\n    /**\n     * Call the chain on all inputs in the list\n     */\n    async apply(inputs, config) {\n        return Promise.all(inputs.map(async (i, idx) => this.call(i, config?.[idx])));\n    }\n    /**\n     * Load a chain from a json-like object describing it.\n     */\n    static async deserialize(data, values = {}) {\n        switch (data._type) {\n            case \"llm_chain\": {\n                const { LLMChain } = await import(\"./llm_chain.js\");\n                return LLMChain.deserialize(data);\n            }\n            case \"sequential_chain\": {\n                const { SequentialChain } = await import(\"./sequential_chain.js\");\n                return SequentialChain.deserialize(data);\n            }\n            case \"simple_sequential_chain\": {\n                const { SimpleSequentialChain } = await import(\"./sequential_chain.js\");\n                return SimpleSequentialChain.deserialize(data);\n            }\n            case \"stuff_documents_chain\": {\n                const { StuffDocumentsChain } = await import(\"./combine_docs_chain.js\");\n                return StuffDocumentsChain.deserialize(data);\n            }\n            case \"map_reduce_documents_chain\": {\n                const { MapReduceDocumentsChain } = await import(\"./combine_docs_chain.js\");\n                return MapReduceDocumentsChain.deserialize(data);\n            }\n            case \"refine_documents_chain\": {\n                const { RefineDocumentsChain } = await import(\"./combine_docs_chain.js\");\n                return RefineDocumentsChain.deserialize(data);\n            }\n            case \"vector_db_qa\": {\n                const { VectorDBQAChain } = await import(\"./vector_db_qa.js\");\n                return VectorDBQAChain.deserialize(data, values);\n            }\n            case \"api_chain\": {\n                const { APIChain } = await import(\"./api/api_chain.js\");\n                return APIChain.deserialize(data);\n            }\n            default:\n                throw new Error(`Invalid prompt type in config: ${data._type}`);\n        }\n    }\n}\n", "import { Serializable } from \"../load/serializable.js\";\nexport class BaseLLMOutputParser extends Serializable {\n    parseResultWithPrompt(generations, _prompt, callbacks) {\n        return this.parseResult(generations, callbacks);\n    }\n}\n/** Class to parse the output of an LLM call.\n */\nexport class BaseOutputParser extends BaseLLMOutputParser {\n    parseResult(generations, callbacks) {\n        return this.parse(generations[0].text, callbacks);\n    }\n    async parseWithPrompt(text, _prompt, callbacks) {\n        return this.parse(text, callbacks);\n    }\n    /**\n     * Return the string type key uniquely identifying this class of parser\n     */\n    _type() {\n        throw new Error(\"_type not implemented\");\n    }\n}\nexport class OutputParserException extends Error {\n    constructor(message, output) {\n        super(message);\n        Object.defineProperty(this, \"output\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.output = output;\n    }\n}\n", "import { BaseOutputParser } from \"../schema/output_parser.js\";\nexport class NoOpOutputParser extends BaseOutputParser {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"output_parsers\", \"default\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n    }\n    parse(text) {\n        return Promise.resolve(text);\n    }\n    getFormatInstructions() {\n        return \"\";\n    }\n}\n", "import { BaseChain } from \"./base.js\";\nimport { BasePromptTemplate } from \"../prompts/base.js\";\nimport { BaseLanguageModel } from \"../base_language/index.js\";\nimport { NoOpOutputParser } from \"../output_parsers/noop.js\";\n/**\n * Chain to run queries against LLMs.\n *\n * @example\n * ```ts\n * import { LLMChain } from \"langchain/chains\";\n * import { OpenAI } from \"langchain/llms/openai\";\n * import { PromptTemplate } from \"langchain/prompts\";\n *\n * const prompt = PromptTemplate.fromTemplate(\"Tell me a {adjective} joke\");\n * const llm = new LLMChain({ llm: new OpenAI(), prompt });\n * ```\n */\nexport class LLMChain extends BaseChain {\n    get inputKeys() {\n        return this.prompt.inputVariables;\n    }\n    get outputKeys() {\n        return [this.outputKey];\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"prompt\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"llm\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"llmKwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"text\"\n        });\n        Object.defineProperty(this, \"outputParser\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.prompt = fields.prompt;\n        this.llm = fields.llm;\n        this.llmKwargs = fields.llmKwargs;\n        this.outputKey = fields.outputKey ?? this.outputKey;\n        this.outputParser =\n            fields.outputParser ?? new NoOpOutputParser();\n        if (this.prompt.outputParser) {\n            if (fields.outputParser) {\n                throw new Error(\"Cannot set both outputParser and prompt.outputParser\");\n            }\n            this.outputParser = this.prompt.outputParser;\n        }\n    }\n    /** @ignore */\n    _selectMemoryInputs(values) {\n        const valuesForMemory = super._selectMemoryInputs(values);\n        for (const key of this.llm.callKeys) {\n            if (key in values) {\n                delete valuesForMemory[key];\n            }\n        }\n        return valuesForMemory;\n    }\n    /** @ignore */\n    async _getFinalOutput(generations, promptValue, runManager) {\n        let finalCompletion;\n        if (this.outputParser) {\n            finalCompletion = await this.outputParser.parseResultWithPrompt(generations, promptValue, runManager?.getChild());\n        }\n        else {\n            finalCompletion = generations[0].text;\n        }\n        return finalCompletion;\n    }\n    /**\n     * Run the core logic of this chain and add to output if desired.\n     *\n     * Wraps _call and handles memory.\n     */\n    call(values, callbacks) {\n        return super.call(values, callbacks);\n    }\n    /** @ignore */\n    async _call(values, runManager) {\n        const valuesForPrompt = { ...values };\n        const valuesForLLM = {\n            ...this.llmKwargs,\n        };\n        for (const key of this.llm.callKeys) {\n            if (key in values) {\n                valuesForLLM[key] = values[key];\n                delete valuesForPrompt[key];\n            }\n        }\n        const promptValue = await this.prompt.formatPromptValue(valuesForPrompt);\n        const { generations } = await this.llm.generatePrompt([promptValue], valuesForLLM, runManager?.getChild());\n        return {\n            [this.outputKey]: await this._getFinalOutput(generations[0], promptValue, runManager),\n        };\n    }\n    /**\n     * Format prompt with values and pass to LLM\n     *\n     * @param values - keys to pass to prompt template\n     * @param callbackManager - CallbackManager to use\n     * @returns Completion from LLM.\n     *\n     * @example\n     * ```ts\n     * llm.predict({ adjective: \"funny\" })\n     * ```\n     */\n    async predict(values, callbackManager) {\n        const output = await this.call(values, callbackManager);\n        return output[this.outputKey];\n    }\n    _chainType() {\n        return \"llm\";\n    }\n    static async deserialize(data) {\n        const { llm, prompt } = data;\n        if (!llm) {\n            throw new Error(\"LLMChain must have llm\");\n        }\n        if (!prompt) {\n            throw new Error(\"LLMChain must have prompt\");\n        }\n        return new LLMChain({\n            llm: await BaseLanguageModel.deserialize(llm),\n            prompt: await BasePromptTemplate.deserialize(prompt),\n        });\n    }\n    /** @deprecated */\n    serialize() {\n        return {\n            _type: `${this._chainType()}_chain`,\n            llm: this.llm.serialize(),\n            prompt: this.prompt.serialize(),\n        };\n    }\n}\n", "import { LLMChain } from \"../chains/llm_chain.js\";\nexport const deserializeHelper = async (llm, tools, data, fromLLMAndTools, fromConstructor) => {\n    if (data.load_from_llm_and_tools) {\n        if (!llm) {\n            throw new Error(\"Loading from llm and tools, llm must be provided.\");\n        }\n        if (!tools) {\n            throw new Error(\"Loading from llm and tools, tools must be provided.\");\n        }\n        return fromLLMAndTools(llm, tools, data);\n    }\n    if (!data.llm_chain) {\n        throw new Error(\"Loading from constructor, llm_chain must be provided.\");\n    }\n    const llmChain = await LLMChain.deserialize(data.llm_chain);\n    return fromConstructor({ ...data, llmChain });\n};\n", "import { BaseOutputParser } from \"../schema/output_parser.js\";\nexport class AgentActionOutputParser extends BaseOutputParser {\n}\n", "export const PREFIX = `Answer the following questions as best you can. You have access to the following tools:`;\nexport const FORMAT_INSTRUCTIONS = `Use the following format in your response:\n\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction: the action to take, should be one of [{tool_names}]\nAction Input: the input to the action\nObservation: the result of the action\n... (this Thought/Action/Action Input/Observation can repeat N times)\nThought: I now know the final answer\nFinal Answer: the final answer to the original input question`;\nexport const SUFFIX = `Begin!\n\nQuestion: {input}\nThought:{agent_scratchpad}`;\n", "import { AgentActionOutputParser } from \"../types.js\";\nimport { FORMAT_INSTRUCTIONS } from \"./prompt.js\";\nexport const FINAL_ANSWER_ACTION = \"Final Answer:\";\nexport class ZeroShotAgentOutputParser extends AgentActionOutputParser {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"mrkl\"]\n        });\n        Object.defineProperty(this, \"finishToolName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.finishToolName = fields?.finishToolName || FINAL_ANSWER_ACTION;\n    }\n    async parse(text) {\n        if (text.includes(this.finishToolName)) {\n            const parts = text.split(this.finishToolName);\n            const output = parts[parts.length - 1].trim();\n            return {\n                returnValues: { output },\n                log: text,\n            };\n        }\n        const match = /Action: ([\\s\\S]*?)(?:\\nAction Input: ([\\s\\S]*?))?$/.exec(text);\n        if (!match) {\n            throw new Error(`Could not parse LLM output: ${text}`);\n        }\n        return {\n            tool: match[1].trim(),\n            toolInput: match[2]\n                ? match[2].trim().replace(/^(\"+)(.*?)(\\1)$/, \"$2\")\n                : \"\",\n            log: text,\n        };\n    }\n    getFormatInstructions() {\n        return FORMAT_INSTRUCTIONS;\n    }\n}\n", "import { LLMChain } from \"../../chains/llm_chain.js\";\nimport { PromptTemplate } from \"../../prompts/prompt.js\";\nimport { renderTemplate } from \"../../prompts/template.js\";\nimport { Agent } from \"../agent.js\";\nimport { deserializeHelper } from \"../helpers.js\";\nimport { ZeroShotAgentOutputParser } from \"./outputParser.js\";\nimport { FORMAT_INSTRUCTIONS, PREFIX, SUFFIX } from \"./prompt.js\";\n/**\n * Agent for the MRKL chain.\n * @augments Agent\n */\nexport class ZeroShotAgent extends Agent {\n    constructor(input) {\n        const outputParser = input?.outputParser ?? ZeroShotAgent.getDefaultOutputParser();\n        super({ ...input, outputParser });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"mrkl\"]\n        });\n    }\n    _agentType() {\n        return \"zero-shot-react-description\";\n    }\n    observationPrefix() {\n        return \"Observation: \";\n    }\n    llmPrefix() {\n        return \"Thought:\";\n    }\n    static getDefaultOutputParser(fields) {\n        return new ZeroShotAgentOutputParser(fields);\n    }\n    static validateTools(tools) {\n        const descriptionlessTool = tools.find((tool) => !tool.description);\n        if (descriptionlessTool) {\n            const msg = `Got a tool ${descriptionlessTool.name} without a description.` +\n                ` This agent requires descriptions for all tools.`;\n            throw new Error(msg);\n        }\n    }\n    /**\n     * Create prompt in the style of the zero shot agent.\n     *\n     * @param tools - List of tools the agent will have access to, used to format the prompt.\n     * @param args - Arguments to create the prompt with.\n     * @param args.suffix - String to put after the list of tools.\n     * @param args.prefix - String to put before the list of tools.\n     * @param args.inputVariables - List of input variables the final prompt will expect.\n     */\n    static createPrompt(tools, args) {\n        const { prefix = PREFIX, suffix = SUFFIX, inputVariables = [\"input\", \"agent_scratchpad\"], } = args ?? {};\n        const toolStrings = tools\n            .map((tool) => `${tool.name}: ${tool.description}`)\n            .join(\"\\n\");\n        const toolNames = tools.map((tool) => tool.name);\n        const formatInstructions = renderTemplate(FORMAT_INSTRUCTIONS, \"f-string\", {\n            tool_names: toolNames,\n        });\n        const template = [prefix, toolStrings, formatInstructions, suffix].join(\"\\n\\n\");\n        return new PromptTemplate({\n            template,\n            inputVariables,\n        });\n    }\n    static fromLLMAndTools(llm, tools, args) {\n        ZeroShotAgent.validateTools(tools);\n        const prompt = ZeroShotAgent.createPrompt(tools, args);\n        const outputParser = args?.outputParser ?? ZeroShotAgent.getDefaultOutputParser();\n        const chain = new LLMChain({\n            prompt,\n            llm,\n            callbacks: args?.callbacks ?? args?.callbackManager,\n        });\n        return new ZeroShotAgent({\n            llmChain: chain,\n            allowedTools: tools.map((t) => t.name),\n            outputParser,\n        });\n    }\n    static async deserialize(data) {\n        const { llm, tools, ...rest } = data;\n        return deserializeHelper(llm, tools, rest, (llm, tools, args) => ZeroShotAgent.fromLLMAndTools(llm, tools, {\n            prefix: args.prefix,\n            suffix: args.suffix,\n            inputVariables: args.input_variables,\n        }), (args) => new ZeroShotAgent(args));\n    }\n}\n", "export const chunkArray = (arr, chunkSize) => arr.reduce((chunks, elem, index) => {\n    const chunkIndex = Math.floor(index / chunkSize);\n    const chunk = chunks[chunkIndex] || [];\n    // eslint-disable-next-line no-param-reassign\n    chunks[chunkIndex] = chunk.concat([elem]);\n    return chunks;\n}, []);\n", "!function(e){var t;\"object\"==typeof exports?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(\"undefined\"!=typeof window?t=window:\"undefined\"!=typeof global?t=global:\"undefined\"!=typeof self&&(t=self),t.objectHash=e())}(function(){return function r(o,i,u){function s(n,e){if(!i[n]){if(!o[n]){var t=\"function\"==typeof require&&require;if(!e&&t)return t(n,!0);if(a)return a(n,!0);throw new Error(\"Cannot find module '\"+n+\"'\")}e=i[n]={exports:{}};o[n][0].call(e.exports,function(e){var t=o[n][1][e];return s(t||e)},e,e.exports,r,o,i,u)}return i[n].exports}for(var a=\"function\"==typeof require&&require,e=0;e<u.length;e++)s(u[e]);return s}({1:[function(w,b,m){!function(e,n,s,c,d,h,p,g,y){\"use strict\";var r=w(\"crypto\");function t(e,t){t=u(e,t);var n;return void 0===(n=\"passthrough\"!==t.algorithm?r.createHash(t.algorithm):new l).write&&(n.write=n.update,n.end=n.update),f(t,n).dispatch(e),n.update||n.end(\"\"),n.digest?n.digest(\"buffer\"===t.encoding?void 0:t.encoding):(e=n.read(),\"buffer\"!==t.encoding?e.toString(t.encoding):e)}(m=b.exports=t).sha1=function(e){return t(e)},m.keys=function(e){return t(e,{excludeValues:!0,algorithm:\"sha1\",encoding:\"hex\"})},m.MD5=function(e){return t(e,{algorithm:\"md5\",encoding:\"hex\"})},m.keysMD5=function(e){return t(e,{algorithm:\"md5\",encoding:\"hex\",excludeValues:!0})};var o=r.getHashes?r.getHashes().slice():[\"sha1\",\"md5\"],i=(o.push(\"passthrough\"),[\"buffer\",\"hex\",\"binary\",\"base64\"]);function u(e,t){var n={};if(n.algorithm=(t=t||{}).algorithm||\"sha1\",n.encoding=t.encoding||\"hex\",n.excludeValues=!!t.excludeValues,n.algorithm=n.algorithm.toLowerCase(),n.encoding=n.encoding.toLowerCase(),n.ignoreUnknown=!0===t.ignoreUnknown,n.respectType=!1!==t.respectType,n.respectFunctionNames=!1!==t.respectFunctionNames,n.respectFunctionProperties=!1!==t.respectFunctionProperties,n.unorderedArrays=!0===t.unorderedArrays,n.unorderedSets=!1!==t.unorderedSets,n.unorderedObjects=!1!==t.unorderedObjects,n.replacer=t.replacer||void 0,n.excludeKeys=t.excludeKeys||void 0,void 0===e)throw new Error(\"Object argument required.\");for(var r=0;r<o.length;++r)o[r].toLowerCase()===n.algorithm.toLowerCase()&&(n.algorithm=o[r]);if(-1===o.indexOf(n.algorithm))throw new Error('Algorithm \"'+n.algorithm+'\"  not supported. supported values: '+o.join(\", \"));if(-1===i.indexOf(n.encoding)&&\"passthrough\"!==n.algorithm)throw new Error('Encoding \"'+n.encoding+'\"  not supported. supported values: '+i.join(\", \"));return n}function a(e){if(\"function\"==typeof e)return null!=/^function\\s+\\w*\\s*\\(\\s*\\)\\s*{\\s+\\[native code\\]\\s+}$/i.exec(Function.prototype.toString.call(e))}function f(o,t,i){i=i||[];function u(e){return t.update?t.update(e,\"utf8\"):t.write(e,\"utf8\")}return{dispatch:function(e){return this[\"_\"+(null===(e=o.replacer?o.replacer(e):e)?\"null\":typeof e)](e)},_object:function(t){var n,e=Object.prototype.toString.call(t),r=/\\[object (.*)\\]/i.exec(e);r=(r=r?r[1]:\"unknown:[\"+e+\"]\").toLowerCase();if(0<=(e=i.indexOf(t)))return this.dispatch(\"[CIRCULAR:\"+e+\"]\");if(i.push(t),void 0!==s&&s.isBuffer&&s.isBuffer(t))return u(\"buffer:\"),u(t);if(\"object\"===r||\"function\"===r||\"asyncfunction\"===r)return e=Object.keys(t),o.unorderedObjects&&(e=e.sort()),!1===o.respectType||a(t)||e.splice(0,0,\"prototype\",\"__proto__\",\"constructor\"),o.excludeKeys&&(e=e.filter(function(e){return!o.excludeKeys(e)})),u(\"object:\"+e.length+\":\"),n=this,e.forEach(function(e){n.dispatch(e),u(\":\"),o.excludeValues||n.dispatch(t[e]),u(\",\")});if(!this[\"_\"+r]){if(o.ignoreUnknown)return u(\"[\"+r+\"]\");throw new Error('Unknown object type \"'+r+'\"')}this[\"_\"+r](t)},_array:function(e,t){t=void 0!==t?t:!1!==o.unorderedArrays;var n=this;if(u(\"array:\"+e.length+\":\"),!t||e.length<=1)return e.forEach(function(e){return n.dispatch(e)});var r=[],t=e.map(function(e){var t=new l,n=i.slice();return f(o,t,n).dispatch(e),r=r.concat(n.slice(i.length)),t.read().toString()});return i=i.concat(r),t.sort(),this._array(t,!1)},_date:function(e){return u(\"date:\"+e.toJSON())},_symbol:function(e){return u(\"symbol:\"+e.toString())},_error:function(e){return u(\"error:\"+e.toString())},_boolean:function(e){return u(\"bool:\"+e.toString())},_string:function(e){u(\"string:\"+e.length+\":\"),u(e.toString())},_function:function(e){u(\"fn:\"),a(e)?this.dispatch(\"[native]\"):this.dispatch(e.toString()),!1!==o.respectFunctionNames&&this.dispatch(\"function-name:\"+String(e.name)),o.respectFunctionProperties&&this._object(e)},_number:function(e){return u(\"number:\"+e.toString())},_xml:function(e){return u(\"xml:\"+e.toString())},_null:function(){return u(\"Null\")},_undefined:function(){return u(\"Undefined\")},_regexp:function(e){return u(\"regex:\"+e.toString())},_uint8array:function(e){return u(\"uint8array:\"),this.dispatch(Array.prototype.slice.call(e))},_uint8clampedarray:function(e){return u(\"uint8clampedarray:\"),this.dispatch(Array.prototype.slice.call(e))},_int8array:function(e){return u(\"int8array:\"),this.dispatch(Array.prototype.slice.call(e))},_uint16array:function(e){return u(\"uint16array:\"),this.dispatch(Array.prototype.slice.call(e))},_int16array:function(e){return u(\"int16array:\"),this.dispatch(Array.prototype.slice.call(e))},_uint32array:function(e){return u(\"uint32array:\"),this.dispatch(Array.prototype.slice.call(e))},_int32array:function(e){return u(\"int32array:\"),this.dispatch(Array.prototype.slice.call(e))},_float32array:function(e){return u(\"float32array:\"),this.dispatch(Array.prototype.slice.call(e))},_float64array:function(e){return u(\"float64array:\"),this.dispatch(Array.prototype.slice.call(e))},_arraybuffer:function(e){return u(\"arraybuffer:\"),this.dispatch(new Uint8Array(e))},_url:function(e){return u(\"url:\"+e.toString())},_map:function(e){u(\"map:\");e=Array.from(e);return this._array(e,!1!==o.unorderedSets)},_set:function(e){u(\"set:\");e=Array.from(e);return this._array(e,!1!==o.unorderedSets)},_file:function(e){return u(\"file:\"),this.dispatch([e.name,e.size,e.type,e.lastModfied])},_blob:function(){if(o.ignoreUnknown)return u(\"[blob]\");throw Error('Hashing Blob objects is currently not supported\\n(see https://github.com/puleos/object-hash/issues/26)\\nUse \"options.replacer\" or \"options.ignoreUnknown\"\\n')},_domwindow:function(){return u(\"domwindow\")},_bigint:function(e){return u(\"bigint:\"+e.toString())},_process:function(){return u(\"process\")},_timer:function(){return u(\"timer\")},_pipe:function(){return u(\"pipe\")},_tcp:function(){return u(\"tcp\")},_udp:function(){return u(\"udp\")},_tty:function(){return u(\"tty\")},_statwatcher:function(){return u(\"statwatcher\")},_securecontext:function(){return u(\"securecontext\")},_connection:function(){return u(\"connection\")},_zlib:function(){return u(\"zlib\")},_context:function(){return u(\"context\")},_nodescript:function(){return u(\"nodescript\")},_httpparser:function(){return u(\"httpparser\")},_dataview:function(){return u(\"dataview\")},_signal:function(){return u(\"signal\")},_fsevent:function(){return u(\"fsevent\")},_tlswrap:function(){return u(\"tlswrap\")}}}function l(){return{buf:\"\",write:function(e){this.buf+=e},end:function(e){this.buf+=e},read:function(){return this.buf}}}m.writeToStream=function(e,t,n){return void 0===n&&(n=t,t={}),f(t=u(e,t),n).dispatch(e)}}.call(this,w(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},w(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/fake_9a5aa49d.js\",\"/\")},{buffer:3,crypto:5,lYpoI2:11}],2:[function(e,t,f){!function(e,t,n,r,o,i,u,s,a){!function(e){\"use strict\";var a=\"undefined\"!=typeof Uint8Array?Uint8Array:Array,t=\"+\".charCodeAt(0),n=\"/\".charCodeAt(0),r=\"0\".charCodeAt(0),o=\"a\".charCodeAt(0),i=\"A\".charCodeAt(0),u=\"-\".charCodeAt(0),s=\"_\".charCodeAt(0);function f(e){e=e.charCodeAt(0);return e===t||e===u?62:e===n||e===s?63:e<r?-1:e<r+10?e-r+26+26:e<i+26?e-i:e<o+26?e-o+26:void 0}e.toByteArray=function(e){var t,n;if(0<e.length%4)throw new Error(\"Invalid string. Length must be a multiple of 4\");var r=e.length,r=\"=\"===e.charAt(r-2)?2:\"=\"===e.charAt(r-1)?1:0,o=new a(3*e.length/4-r),i=0<r?e.length-4:e.length,u=0;function s(e){o[u++]=e}for(t=0;t<i;t+=4,0)s((16711680&(n=f(e.charAt(t))<<18|f(e.charAt(t+1))<<12|f(e.charAt(t+2))<<6|f(e.charAt(t+3))))>>16),s((65280&n)>>8),s(255&n);return 2==r?s(255&(n=f(e.charAt(t))<<2|f(e.charAt(t+1))>>4)):1==r&&(s((n=f(e.charAt(t))<<10|f(e.charAt(t+1))<<4|f(e.charAt(t+2))>>2)>>8&255),s(255&n)),o},e.fromByteArray=function(e){var t,n,r,o,i=e.length%3,u=\"\";function s(e){return\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".charAt(e)}for(t=0,r=e.length-i;t<r;t+=3)n=(e[t]<<16)+(e[t+1]<<8)+e[t+2],u+=s((o=n)>>18&63)+s(o>>12&63)+s(o>>6&63)+s(63&o);switch(i){case 1:u=(u+=s((n=e[e.length-1])>>2))+s(n<<4&63)+\"==\";break;case 2:u=(u=(u+=s((n=(e[e.length-2]<<8)+e[e.length-1])>>10))+s(n>>4&63))+s(n<<2&63)+\"=\"}return u}}(void 0===f?this.base64js={}:f)}.call(this,e(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},e(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/base64-js/lib/b64.js\",\"/node_modules/gulp-browserify/node_modules/base64-js/lib\")},{buffer:3,lYpoI2:11}],3:[function(O,e,H){!function(e,n,f,r,h,p,g,y,w){var a=O(\"base64-js\"),i=O(\"ieee754\");function f(e,t,n){if(!(this instanceof f))return new f(e,t,n);var r,o,i,u,s=typeof e;if(\"base64\"===t&&\"string\"==s)for(e=(u=e).trim?u.trim():u.replace(/^\\s+|\\s+$/g,\"\");e.length%4!=0;)e+=\"=\";if(\"number\"==s)r=j(e);else if(\"string\"==s)r=f.byteLength(e,t);else{if(\"object\"!=s)throw new Error(\"First argument needs to be a number, array or string.\");r=j(e.length)}if(f._useTypedArrays?o=f._augment(new Uint8Array(r)):((o=this).length=r,o._isBuffer=!0),f._useTypedArrays&&\"number\"==typeof e.byteLength)o._set(e);else if(C(u=e)||f.isBuffer(u)||u&&\"object\"==typeof u&&\"number\"==typeof u.length)for(i=0;i<r;i++)f.isBuffer(e)?o[i]=e.readUInt8(i):o[i]=e[i];else if(\"string\"==s)o.write(e,0,t);else if(\"number\"==s&&!f._useTypedArrays&&!n)for(i=0;i<r;i++)o[i]=0;return o}function b(e,t,n,r){return f._charsWritten=c(function(e){for(var t=[],n=0;n<e.length;n++)t.push(255&e.charCodeAt(n));return t}(t),e,n,r)}function m(e,t,n,r){return f._charsWritten=c(function(e){for(var t,n,r=[],o=0;o<e.length;o++)n=e.charCodeAt(o),t=n>>8,n=n%256,r.push(n),r.push(t);return r}(t),e,n,r)}function v(e,t,n){var r=\"\";n=Math.min(e.length,n);for(var o=t;o<n;o++)r+=String.fromCharCode(e[o]);return r}function o(e,t,n,r){r||(d(\"boolean\"==typeof n,\"missing or invalid endian\"),d(null!=t,\"missing offset\"),d(t+1<e.length,\"Trying to read beyond buffer length\"));var o,r=e.length;if(!(r<=t))return n?(o=e[t],t+1<r&&(o|=e[t+1]<<8)):(o=e[t]<<8,t+1<r&&(o|=e[t+1])),o}function u(e,t,n,r){r||(d(\"boolean\"==typeof n,\"missing or invalid endian\"),d(null!=t,\"missing offset\"),d(t+3<e.length,\"Trying to read beyond buffer length\"));var o,r=e.length;if(!(r<=t))return n?(t+2<r&&(o=e[t+2]<<16),t+1<r&&(o|=e[t+1]<<8),o|=e[t],t+3<r&&(o+=e[t+3]<<24>>>0)):(t+1<r&&(o=e[t+1]<<16),t+2<r&&(o|=e[t+2]<<8),t+3<r&&(o|=e[t+3]),o+=e[t]<<24>>>0),o}function _(e,t,n,r){if(r||(d(\"boolean\"==typeof n,\"missing or invalid endian\"),d(null!=t,\"missing offset\"),d(t+1<e.length,\"Trying to read beyond buffer length\")),!(e.length<=t))return r=o(e,t,n,!0),32768&r?-1*(65535-r+1):r}function E(e,t,n,r){if(r||(d(\"boolean\"==typeof n,\"missing or invalid endian\"),d(null!=t,\"missing offset\"),d(t+3<e.length,\"Trying to read beyond buffer length\")),!(e.length<=t))return r=u(e,t,n,!0),2147483648&r?-1*(4294967295-r+1):r}function I(e,t,n,r){return r||(d(\"boolean\"==typeof n,\"missing or invalid endian\"),d(t+3<e.length,\"Trying to read beyond buffer length\")),i.read(e,t,n,23,4)}function A(e,t,n,r){return r||(d(\"boolean\"==typeof n,\"missing or invalid endian\"),d(t+7<e.length,\"Trying to read beyond buffer length\")),i.read(e,t,n,52,8)}function s(e,t,n,r,o){o||(d(null!=t,\"missing value\"),d(\"boolean\"==typeof r,\"missing or invalid endian\"),d(null!=n,\"missing offset\"),d(n+1<e.length,\"trying to write beyond buffer length\"),Y(t,65535));o=e.length;if(!(o<=n))for(var i=0,u=Math.min(o-n,2);i<u;i++)e[n+i]=(t&255<<8*(r?i:1-i))>>>8*(r?i:1-i)}function l(e,t,n,r,o){o||(d(null!=t,\"missing value\"),d(\"boolean\"==typeof r,\"missing or invalid endian\"),d(null!=n,\"missing offset\"),d(n+3<e.length,\"trying to write beyond buffer length\"),Y(t,4294967295));o=e.length;if(!(o<=n))for(var i=0,u=Math.min(o-n,4);i<u;i++)e[n+i]=t>>>8*(r?i:3-i)&255}function B(e,t,n,r,o){o||(d(null!=t,\"missing value\"),d(\"boolean\"==typeof r,\"missing or invalid endian\"),d(null!=n,\"missing offset\"),d(n+1<e.length,\"Trying to write beyond buffer length\"),F(t,32767,-32768)),e.length<=n||s(e,0<=t?t:65535+t+1,n,r,o)}function L(e,t,n,r,o){o||(d(null!=t,\"missing value\"),d(\"boolean\"==typeof r,\"missing or invalid endian\"),d(null!=n,\"missing offset\"),d(n+3<e.length,\"Trying to write beyond buffer length\"),F(t,2147483647,-2147483648)),e.length<=n||l(e,0<=t?t:4294967295+t+1,n,r,o)}function U(e,t,n,r,o){o||(d(null!=t,\"missing value\"),d(\"boolean\"==typeof r,\"missing or invalid endian\"),d(null!=n,\"missing offset\"),d(n+3<e.length,\"Trying to write beyond buffer length\"),D(t,34028234663852886e22,-34028234663852886e22)),e.length<=n||i.write(e,t,n,r,23,4)}function x(e,t,n,r,o){o||(d(null!=t,\"missing value\"),d(\"boolean\"==typeof r,\"missing or invalid endian\"),d(null!=n,\"missing offset\"),d(n+7<e.length,\"Trying to write beyond buffer length\"),D(t,17976931348623157e292,-17976931348623157e292)),e.length<=n||i.write(e,t,n,r,52,8)}H.Buffer=f,H.SlowBuffer=f,H.INSPECT_MAX_BYTES=50,f.poolSize=8192,f._useTypedArrays=function(){try{var e=new ArrayBuffer(0),t=new Uint8Array(e);return t.foo=function(){return 42},42===t.foo()&&\"function\"==typeof t.subarray}catch(e){return!1}}(),f.isEncoding=function(e){switch(String(e).toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"binary\":case\"base64\":case\"raw\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return!0;default:return!1}},f.isBuffer=function(e){return!(null==e||!e._isBuffer)},f.byteLength=function(e,t){var n;switch(e+=\"\",t||\"utf8\"){case\"hex\":n=e.length/2;break;case\"utf8\":case\"utf-8\":n=T(e).length;break;case\"ascii\":case\"binary\":case\"raw\":n=e.length;break;case\"base64\":n=M(e).length;break;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":n=2*e.length;break;default:throw new Error(\"Unknown encoding\")}return n},f.concat=function(e,t){if(d(C(e),\"Usage: Buffer.concat(list, [totalLength])\\nlist should be an Array.\"),0===e.length)return new f(0);if(1===e.length)return e[0];if(\"number\"!=typeof t)for(o=t=0;o<e.length;o++)t+=e[o].length;for(var n=new f(t),r=0,o=0;o<e.length;o++){var i=e[o];i.copy(n,r),r+=i.length}return n},f.prototype.write=function(e,t,n,r){isFinite(t)?isFinite(n)||(r=n,n=void 0):(a=r,r=t,t=n,n=a),t=Number(t)||0;var o,i,u,s,a=this.length-t;switch((!n||a<(n=Number(n)))&&(n=a),r=String(r||\"utf8\").toLowerCase()){case\"hex\":o=function(e,t,n,r){n=Number(n)||0;var o=e.length-n;(!r||o<(r=Number(r)))&&(r=o),d((o=t.length)%2==0,\"Invalid hex string\"),o/2<r&&(r=o/2);for(var i=0;i<r;i++){var u=parseInt(t.substr(2*i,2),16);d(!isNaN(u),\"Invalid hex string\"),e[n+i]=u}return f._charsWritten=2*i,i}(this,e,t,n);break;case\"utf8\":case\"utf-8\":i=this,u=t,s=n,o=f._charsWritten=c(T(e),i,u,s);break;case\"ascii\":case\"binary\":o=b(this,e,t,n);break;case\"base64\":i=this,u=t,s=n,o=f._charsWritten=c(M(e),i,u,s);break;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":o=m(this,e,t,n);break;default:throw new Error(\"Unknown encoding\")}return o},f.prototype.toString=function(e,t,n){var r,o,i,u,s=this;if(e=String(e||\"utf8\").toLowerCase(),t=Number(t)||0,(n=void 0!==n?Number(n):s.length)===t)return\"\";switch(e){case\"hex\":r=function(e,t,n){var r=e.length;(!t||t<0)&&(t=0);(!n||n<0||r<n)&&(n=r);for(var o=\"\",i=t;i<n;i++)o+=k(e[i]);return o}(s,t,n);break;case\"utf8\":case\"utf-8\":r=function(e,t,n){var r=\"\",o=\"\";n=Math.min(e.length,n);for(var i=t;i<n;i++)e[i]<=127?(r+=N(o)+String.fromCharCode(e[i]),o=\"\"):o+=\"%\"+e[i].toString(16);return r+N(o)}(s,t,n);break;case\"ascii\":case\"binary\":r=v(s,t,n);break;case\"base64\":o=s,u=n,r=0===(i=t)&&u===o.length?a.fromByteArray(o):a.fromByteArray(o.slice(i,u));break;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":r=function(e,t,n){for(var r=e.slice(t,n),o=\"\",i=0;i<r.length;i+=2)o+=String.fromCharCode(r[i]+256*r[i+1]);return o}(s,t,n);break;default:throw new Error(\"Unknown encoding\")}return r},f.prototype.toJSON=function(){return{type:\"Buffer\",data:Array.prototype.slice.call(this._arr||this,0)}},f.prototype.copy=function(e,t,n,r){if(t=t||0,(r=r||0===r?r:this.length)!==(n=n||0)&&0!==e.length&&0!==this.length){d(n<=r,\"sourceEnd < sourceStart\"),d(0<=t&&t<e.length,\"targetStart out of bounds\"),d(0<=n&&n<this.length,\"sourceStart out of bounds\"),d(0<=r&&r<=this.length,\"sourceEnd out of bounds\"),r>this.length&&(r=this.length);var o=(r=e.length-t<r-n?e.length-t+n:r)-n;if(o<100||!f._useTypedArrays)for(var i=0;i<o;i++)e[i+t]=this[i+n];else e._set(this.subarray(n,n+o),t)}},f.prototype.slice=function(e,t){var n=this.length;if(e=S(e,n,0),t=S(t,n,n),f._useTypedArrays)return f._augment(this.subarray(e,t));for(var r=t-e,o=new f(r,void 0,!0),i=0;i<r;i++)o[i]=this[i+e];return o},f.prototype.get=function(e){return console.log(\".get() is deprecated. Access using array indexes instead.\"),this.readUInt8(e)},f.prototype.set=function(e,t){return console.log(\".set() is deprecated. Access using array indexes instead.\"),this.writeUInt8(e,t)},f.prototype.readUInt8=function(e,t){if(t||(d(null!=e,\"missing offset\"),d(e<this.length,\"Trying to read beyond buffer length\")),!(e>=this.length))return this[e]},f.prototype.readUInt16LE=function(e,t){return o(this,e,!0,t)},f.prototype.readUInt16BE=function(e,t){return o(this,e,!1,t)},f.prototype.readUInt32LE=function(e,t){return u(this,e,!0,t)},f.prototype.readUInt32BE=function(e,t){return u(this,e,!1,t)},f.prototype.readInt8=function(e,t){if(t||(d(null!=e,\"missing offset\"),d(e<this.length,\"Trying to read beyond buffer length\")),!(e>=this.length))return 128&this[e]?-1*(255-this[e]+1):this[e]},f.prototype.readInt16LE=function(e,t){return _(this,e,!0,t)},f.prototype.readInt16BE=function(e,t){return _(this,e,!1,t)},f.prototype.readInt32LE=function(e,t){return E(this,e,!0,t)},f.prototype.readInt32BE=function(e,t){return E(this,e,!1,t)},f.prototype.readFloatLE=function(e,t){return I(this,e,!0,t)},f.prototype.readFloatBE=function(e,t){return I(this,e,!1,t)},f.prototype.readDoubleLE=function(e,t){return A(this,e,!0,t)},f.prototype.readDoubleBE=function(e,t){return A(this,e,!1,t)},f.prototype.writeUInt8=function(e,t,n){n||(d(null!=e,\"missing value\"),d(null!=t,\"missing offset\"),d(t<this.length,\"trying to write beyond buffer length\"),Y(e,255)),t>=this.length||(this[t]=e)},f.prototype.writeUInt16LE=function(e,t,n){s(this,e,t,!0,n)},f.prototype.writeUInt16BE=function(e,t,n){s(this,e,t,!1,n)},f.prototype.writeUInt32LE=function(e,t,n){l(this,e,t,!0,n)},f.prototype.writeUInt32BE=function(e,t,n){l(this,e,t,!1,n)},f.prototype.writeInt8=function(e,t,n){n||(d(null!=e,\"missing value\"),d(null!=t,\"missing offset\"),d(t<this.length,\"Trying to write beyond buffer length\"),F(e,127,-128)),t>=this.length||(0<=e?this.writeUInt8(e,t,n):this.writeUInt8(255+e+1,t,n))},f.prototype.writeInt16LE=function(e,t,n){B(this,e,t,!0,n)},f.prototype.writeInt16BE=function(e,t,n){B(this,e,t,!1,n)},f.prototype.writeInt32LE=function(e,t,n){L(this,e,t,!0,n)},f.prototype.writeInt32BE=function(e,t,n){L(this,e,t,!1,n)},f.prototype.writeFloatLE=function(e,t,n){U(this,e,t,!0,n)},f.prototype.writeFloatBE=function(e,t,n){U(this,e,t,!1,n)},f.prototype.writeDoubleLE=function(e,t,n){x(this,e,t,!0,n)},f.prototype.writeDoubleBE=function(e,t,n){x(this,e,t,!1,n)},f.prototype.fill=function(e,t,n){if(t=t||0,n=n||this.length,d(\"number\"==typeof(e=\"string\"==typeof(e=e||0)?e.charCodeAt(0):e)&&!isNaN(e),\"value is not a number\"),d(t<=n,\"end < start\"),n!==t&&0!==this.length){d(0<=t&&t<this.length,\"start out of bounds\"),d(0<=n&&n<=this.length,\"end out of bounds\");for(var r=t;r<n;r++)this[r]=e}},f.prototype.inspect=function(){for(var e=[],t=this.length,n=0;n<t;n++)if(e[n]=k(this[n]),n===H.INSPECT_MAX_BYTES){e[n+1]=\"...\";break}return\"<Buffer \"+e.join(\" \")+\">\"},f.prototype.toArrayBuffer=function(){if(\"undefined\"==typeof Uint8Array)throw new Error(\"Buffer.toArrayBuffer not supported in this browser\");if(f._useTypedArrays)return new f(this).buffer;for(var e=new Uint8Array(this.length),t=0,n=e.length;t<n;t+=1)e[t]=this[t];return e.buffer};var t=f.prototype;function S(e,t,n){return\"number\"!=typeof e?n:t<=(e=~~e)?t:0<=e||0<=(e+=t)?e:0}function j(e){return(e=~~Math.ceil(+e))<0?0:e}function C(e){return(Array.isArray||function(e){return\"[object Array]\"===Object.prototype.toString.call(e)})(e)}function k(e){return e<16?\"0\"+e.toString(16):e.toString(16)}function T(e){for(var t=[],n=0;n<e.length;n++){var r=e.charCodeAt(n);if(r<=127)t.push(e.charCodeAt(n));else for(var o=n,i=(55296<=r&&r<=57343&&n++,encodeURIComponent(e.slice(o,n+1)).substr(1).split(\"%\")),u=0;u<i.length;u++)t.push(parseInt(i[u],16))}return t}function M(e){return a.toByteArray(e)}function c(e,t,n,r){for(var o=0;o<r&&!(o+n>=t.length||o>=e.length);o++)t[o+n]=e[o];return o}function N(e){try{return decodeURIComponent(e)}catch(e){return String.fromCharCode(65533)}}function Y(e,t){d(\"number\"==typeof e,\"cannot write a non-number as a number\"),d(0<=e,\"specified a negative value for writing an unsigned value\"),d(e<=t,\"value is larger than maximum value for type\"),d(Math.floor(e)===e,\"value has a fractional component\")}function F(e,t,n){d(\"number\"==typeof e,\"cannot write a non-number as a number\"),d(e<=t,\"value larger than maximum allowed value\"),d(n<=e,\"value smaller than minimum allowed value\"),d(Math.floor(e)===e,\"value has a fractional component\")}function D(e,t,n){d(\"number\"==typeof e,\"cannot write a non-number as a number\"),d(e<=t,\"value larger than maximum allowed value\"),d(n<=e,\"value smaller than minimum allowed value\")}function d(e,t){if(!e)throw new Error(t||\"Failed assertion\")}f._augment=function(e){return e._isBuffer=!0,e._get=e.get,e._set=e.set,e.get=t.get,e.set=t.set,e.write=t.write,e.toString=t.toString,e.toLocaleString=t.toString,e.toJSON=t.toJSON,e.copy=t.copy,e.slice=t.slice,e.readUInt8=t.readUInt8,e.readUInt16LE=t.readUInt16LE,e.readUInt16BE=t.readUInt16BE,e.readUInt32LE=t.readUInt32LE,e.readUInt32BE=t.readUInt32BE,e.readInt8=t.readInt8,e.readInt16LE=t.readInt16LE,e.readInt16BE=t.readInt16BE,e.readInt32LE=t.readInt32LE,e.readInt32BE=t.readInt32BE,e.readFloatLE=t.readFloatLE,e.readFloatBE=t.readFloatBE,e.readDoubleLE=t.readDoubleLE,e.readDoubleBE=t.readDoubleBE,e.writeUInt8=t.writeUInt8,e.writeUInt16LE=t.writeUInt16LE,e.writeUInt16BE=t.writeUInt16BE,e.writeUInt32LE=t.writeUInt32LE,e.writeUInt32BE=t.writeUInt32BE,e.writeInt8=t.writeInt8,e.writeInt16LE=t.writeInt16LE,e.writeInt16BE=t.writeInt16BE,e.writeInt32LE=t.writeInt32LE,e.writeInt32BE=t.writeInt32BE,e.writeFloatLE=t.writeFloatLE,e.writeFloatBE=t.writeFloatBE,e.writeDoubleLE=t.writeDoubleLE,e.writeDoubleBE=t.writeDoubleBE,e.fill=t.fill,e.inspect=t.inspect,e.toArrayBuffer=t.toArrayBuffer,e}}.call(this,O(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},O(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/buffer/index.js\",\"/node_modules/gulp-browserify/node_modules/buffer\")},{\"base64-js\":2,buffer:3,ieee754:10,lYpoI2:11}],4:[function(c,d,e){!function(e,t,a,n,r,o,i,u,s){var a=c(\"buffer\").Buffer,f=4,l=new a(f);l.fill(0);d.exports={hash:function(e,t,n,r){for(var o=t(function(e,t){e.length%f!=0&&(n=e.length+(f-e.length%f),e=a.concat([e,l],n));for(var n,r=[],o=t?e.readInt32BE:e.readInt32LE,i=0;i<e.length;i+=f)r.push(o.call(e,i));return r}(e=a.isBuffer(e)?e:new a(e),r),8*e.length),t=r,i=new a(n),u=t?i.writeInt32BE:i.writeInt32LE,s=0;s<o.length;s++)u.call(i,o[s],4*s,!0);return i}}}.call(this,c(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},c(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/crypto-browserify/helpers.js\",\"/node_modules/gulp-browserify/node_modules/crypto-browserify\")},{buffer:3,lYpoI2:11}],5:[function(v,e,_){!function(l,c,u,d,h,p,g,y,w){var u=v(\"buffer\").Buffer,e=v(\"./sha\"),t=v(\"./sha256\"),n=v(\"./rng\"),b={sha1:e,sha256:t,md5:v(\"./md5\")},s=64,a=new u(s);function r(e,n){var r=b[e=e||\"sha1\"],o=[];return r||i(\"algorithm:\",e,\"is not yet supported\"),{update:function(e){return u.isBuffer(e)||(e=new u(e)),o.push(e),e.length,this},digest:function(e){var t=u.concat(o),t=n?function(e,t,n){u.isBuffer(t)||(t=new u(t)),u.isBuffer(n)||(n=new u(n)),t.length>s?t=e(t):t.length<s&&(t=u.concat([t,a],s));for(var r=new u(s),o=new u(s),i=0;i<s;i++)r[i]=54^t[i],o[i]=92^t[i];return n=e(u.concat([r,n])),e(u.concat([o,n]))}(r,n,t):r(t);return o=null,e?t.toString(e):t}}}function i(){var e=[].slice.call(arguments).join(\" \");throw new Error([e,\"we accept pull requests\",\"http://github.com/dominictarr/crypto-browserify\"].join(\"\\n\"))}a.fill(0),_.createHash=function(e){return r(e)},_.createHmac=r,_.randomBytes=function(e,t){if(!t||!t.call)return new u(n(e));try{t.call(this,void 0,new u(n(e)))}catch(e){t(e)}};var o,f=[\"createCredentials\",\"createCipher\",\"createCipheriv\",\"createDecipher\",\"createDecipheriv\",\"createSign\",\"createVerify\",\"createDiffieHellman\",\"pbkdf2\"],m=function(e){_[e]=function(){i(\"sorry,\",e,\"is not implemented yet\")}};for(o in f)m(f[o],o)}.call(this,v(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},v(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/crypto-browserify/index.js\",\"/node_modules/gulp-browserify/node_modules/crypto-browserify\")},{\"./md5\":6,\"./rng\":7,\"./sha\":8,\"./sha256\":9,buffer:3,lYpoI2:11}],6:[function(w,b,e){!function(e,r,o,i,u,a,f,l,y){var t=w(\"./helpers\");function n(e,t){e[t>>5]|=128<<t%32,e[14+(t+64>>>9<<4)]=t;for(var n=1732584193,r=-271733879,o=-1732584194,i=271733878,u=0;u<e.length;u+=16){var s=n,a=r,f=o,l=i,n=c(n,r,o,i,e[u+0],7,-680876936),i=c(i,n,r,o,e[u+1],12,-389564586),o=c(o,i,n,r,e[u+2],17,606105819),r=c(r,o,i,n,e[u+3],22,-1044525330);n=c(n,r,o,i,e[u+4],7,-176418897),i=c(i,n,r,o,e[u+5],12,1200080426),o=c(o,i,n,r,e[u+6],17,-1473231341),r=c(r,o,i,n,e[u+7],22,-45705983),n=c(n,r,o,i,e[u+8],7,1770035416),i=c(i,n,r,o,e[u+9],12,-1958414417),o=c(o,i,n,r,e[u+10],17,-42063),r=c(r,o,i,n,e[u+11],22,-1990404162),n=c(n,r,o,i,e[u+12],7,1804603682),i=c(i,n,r,o,e[u+13],12,-40341101),o=c(o,i,n,r,e[u+14],17,-1502002290),n=d(n,r=c(r,o,i,n,e[u+15],22,1236535329),o,i,e[u+1],5,-165796510),i=d(i,n,r,o,e[u+6],9,-1069501632),o=d(o,i,n,r,e[u+11],14,643717713),r=d(r,o,i,n,e[u+0],20,-373897302),n=d(n,r,o,i,e[u+5],5,-701558691),i=d(i,n,r,o,e[u+10],9,38016083),o=d(o,i,n,r,e[u+15],14,-660478335),r=d(r,o,i,n,e[u+4],20,-405537848),n=d(n,r,o,i,e[u+9],5,568446438),i=d(i,n,r,o,e[u+14],9,-1019803690),o=d(o,i,n,r,e[u+3],14,-187363961),r=d(r,o,i,n,e[u+8],20,1163531501),n=d(n,r,o,i,e[u+13],5,-1444681467),i=d(i,n,r,o,e[u+2],9,-51403784),o=d(o,i,n,r,e[u+7],14,1735328473),n=h(n,r=d(r,o,i,n,e[u+12],20,-1926607734),o,i,e[u+5],4,-378558),i=h(i,n,r,o,e[u+8],11,-2022574463),o=h(o,i,n,r,e[u+11],16,1839030562),r=h(r,o,i,n,e[u+14],23,-35309556),n=h(n,r,o,i,e[u+1],4,-1530992060),i=h(i,n,r,o,e[u+4],11,1272893353),o=h(o,i,n,r,e[u+7],16,-155497632),r=h(r,o,i,n,e[u+10],23,-1094730640),n=h(n,r,o,i,e[u+13],4,681279174),i=h(i,n,r,o,e[u+0],11,-358537222),o=h(o,i,n,r,e[u+3],16,-722521979),r=h(r,o,i,n,e[u+6],23,76029189),n=h(n,r,o,i,e[u+9],4,-640364487),i=h(i,n,r,o,e[u+12],11,-421815835),o=h(o,i,n,r,e[u+15],16,530742520),n=p(n,r=h(r,o,i,n,e[u+2],23,-995338651),o,i,e[u+0],6,-198630844),i=p(i,n,r,o,e[u+7],10,1126891415),o=p(o,i,n,r,e[u+14],15,-1416354905),r=p(r,o,i,n,e[u+5],21,-57434055),n=p(n,r,o,i,e[u+12],6,1700485571),i=p(i,n,r,o,e[u+3],10,-1894986606),o=p(o,i,n,r,e[u+10],15,-1051523),r=p(r,o,i,n,e[u+1],21,-2054922799),n=p(n,r,o,i,e[u+8],6,1873313359),i=p(i,n,r,o,e[u+15],10,-30611744),o=p(o,i,n,r,e[u+6],15,-1560198380),r=p(r,o,i,n,e[u+13],21,1309151649),n=p(n,r,o,i,e[u+4],6,-145523070),i=p(i,n,r,o,e[u+11],10,-1120210379),o=p(o,i,n,r,e[u+2],15,718787259),r=p(r,o,i,n,e[u+9],21,-343485551),n=g(n,s),r=g(r,a),o=g(o,f),i=g(i,l)}return Array(n,r,o,i)}function s(e,t,n,r,o,i){return g((t=g(g(t,e),g(r,i)))<<o|t>>>32-o,n)}function c(e,t,n,r,o,i,u){return s(t&n|~t&r,e,t,o,i,u)}function d(e,t,n,r,o,i,u){return s(t&r|n&~r,e,t,o,i,u)}function h(e,t,n,r,o,i,u){return s(t^n^r,e,t,o,i,u)}function p(e,t,n,r,o,i,u){return s(n^(t|~r),e,t,o,i,u)}function g(e,t){var n=(65535&e)+(65535&t);return(e>>16)+(t>>16)+(n>>16)<<16|65535&n}b.exports=function(e){return t.hash(e,n,16)}}.call(this,w(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},w(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/crypto-browserify/md5.js\",\"/node_modules/gulp-browserify/node_modules/crypto-browserify\")},{\"./helpers\":4,buffer:3,lYpoI2:11}],7:[function(e,l,t){!function(e,t,n,r,o,i,u,s,f){var a;l.exports=a||function(e){for(var t,n=new Array(e),r=0;r<e;r++)0==(3&r)&&(t=4294967296*Math.random()),n[r]=t>>>((3&r)<<3)&255;return n}}.call(this,e(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},e(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/crypto-browserify/rng.js\",\"/node_modules/gulp-browserify/node_modules/crypto-browserify\")},{buffer:3,lYpoI2:11}],8:[function(c,d,e){!function(e,t,n,r,o,s,a,f,l){var i=c(\"./helpers\");function u(l,c){l[c>>5]|=128<<24-c%32,l[15+(c+64>>9<<4)]=c;for(var e,t,n,r=Array(80),o=1732584193,i=-271733879,u=-1732584194,s=271733878,d=-1009589776,h=0;h<l.length;h+=16){for(var p=o,g=i,y=u,w=s,b=d,a=0;a<80;a++){r[a]=a<16?l[h+a]:v(r[a-3]^r[a-8]^r[a-14]^r[a-16],1);var f=m(m(v(o,5),(f=i,t=u,n=s,(e=a)<20?f&t|~f&n:!(e<40)&&e<60?f&t|f&n|t&n:f^t^n)),m(m(d,r[a]),(e=a)<20?1518500249:e<40?1859775393:e<60?-1894007588:-899497514)),d=s,s=u,u=v(i,30),i=o,o=f}o=m(o,p),i=m(i,g),u=m(u,y),s=m(s,w),d=m(d,b)}return Array(o,i,u,s,d)}function m(e,t){var n=(65535&e)+(65535&t);return(e>>16)+(t>>16)+(n>>16)<<16|65535&n}function v(e,t){return e<<t|e>>>32-t}d.exports=function(e){return i.hash(e,u,20,!0)}}.call(this,c(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},c(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/crypto-browserify/sha.js\",\"/node_modules/gulp-browserify/node_modules/crypto-browserify\")},{\"./helpers\":4,buffer:3,lYpoI2:11}],9:[function(c,d,e){!function(e,t,n,r,u,s,a,f,l){function b(e,t){var n=(65535&e)+(65535&t);return(e>>16)+(t>>16)+(n>>16)<<16|65535&n}function o(e,l){var c,d=new Array(1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298),t=new Array(1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225),n=new Array(64);e[l>>5]|=128<<24-l%32,e[15+(l+64>>9<<4)]=l;for(var r,o,h=0;h<e.length;h+=16){for(var i=t[0],u=t[1],s=t[2],p=t[3],a=t[4],g=t[5],y=t[6],w=t[7],f=0;f<64;f++)n[f]=f<16?e[f+h]:b(b(b((o=n[f-2],m(o,17)^m(o,19)^v(o,10)),n[f-7]),(o=n[f-15],m(o,7)^m(o,18)^v(o,3))),n[f-16]),c=b(b(b(b(w,m(o=a,6)^m(o,11)^m(o,25)),a&g^~a&y),d[f]),n[f]),r=b(m(r=i,2)^m(r,13)^m(r,22),i&u^i&s^u&s),w=y,y=g,g=a,a=b(p,c),p=s,s=u,u=i,i=b(c,r);t[0]=b(i,t[0]),t[1]=b(u,t[1]),t[2]=b(s,t[2]),t[3]=b(p,t[3]),t[4]=b(a,t[4]),t[5]=b(g,t[5]),t[6]=b(y,t[6]),t[7]=b(w,t[7])}return t}var i=c(\"./helpers\"),m=function(e,t){return e>>>t|e<<32-t},v=function(e,t){return e>>>t};d.exports=function(e){return i.hash(e,o,32,!0)}}.call(this,c(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},c(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/crypto-browserify/sha256.js\",\"/node_modules/gulp-browserify/node_modules/crypto-browserify\")},{\"./helpers\":4,buffer:3,lYpoI2:11}],10:[function(e,t,f){!function(e,t,n,r,o,i,u,s,a){f.read=function(e,t,n,r,o){var i,u,l=8*o-r-1,c=(1<<l)-1,d=c>>1,s=-7,a=n?o-1:0,f=n?-1:1,o=e[t+a];for(a+=f,i=o&(1<<-s)-1,o>>=-s,s+=l;0<s;i=256*i+e[t+a],a+=f,s-=8);for(u=i&(1<<-s)-1,i>>=-s,s+=r;0<s;u=256*u+e[t+a],a+=f,s-=8);if(0===i)i=1-d;else{if(i===c)return u?NaN:1/0*(o?-1:1);u+=Math.pow(2,r),i-=d}return(o?-1:1)*u*Math.pow(2,i-r)},f.write=function(e,t,l,n,r,c){var o,i,u=8*c-r-1,s=(1<<u)-1,a=s>>1,d=23===r?Math.pow(2,-24)-Math.pow(2,-77):0,f=n?0:c-1,h=n?1:-1,c=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(i=isNaN(t)?1:0,o=s):(o=Math.floor(Math.log(t)/Math.LN2),t*(n=Math.pow(2,-o))<1&&(o--,n*=2),2<=(t+=1<=o+a?d/n:d*Math.pow(2,1-a))*n&&(o++,n/=2),s<=o+a?(i=0,o=s):1<=o+a?(i=(t*n-1)*Math.pow(2,r),o+=a):(i=t*Math.pow(2,a-1)*Math.pow(2,r),o=0));8<=r;e[l+f]=255&i,f+=h,i/=256,r-=8);for(o=o<<r|i,u+=r;0<u;e[l+f]=255&o,f+=h,o/=256,u-=8);e[l+f-h]|=128*c}}.call(this,e(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},e(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/ieee754/index.js\",\"/node_modules/gulp-browserify/node_modules/ieee754\")},{buffer:3,lYpoI2:11}],11:[function(e,h,t){!function(e,t,n,r,o,f,l,c,d){var i,u,s;function a(){}(e=h.exports={}).nextTick=(u=\"undefined\"!=typeof window&&window.setImmediate,s=\"undefined\"!=typeof window&&window.postMessage&&window.addEventListener,u?function(e){return window.setImmediate(e)}:s?(i=[],window.addEventListener(\"message\",function(e){var t=e.source;t!==window&&null!==t||\"process-tick\"!==e.data||(e.stopPropagation(),0<i.length&&i.shift()())},!0),function(e){i.push(e),window.postMessage(\"process-tick\",\"*\")}):function(e){setTimeout(e,0)}),e.title=\"browser\",e.browser=!0,e.env={},e.argv=[],e.on=a,e.addListener=a,e.once=a,e.off=a,e.removeListener=a,e.removeAllListeners=a,e.emit=a,e.binding=function(e){throw new Error(\"process.binding is not supported\")},e.cwd=function(){return\"/\"},e.chdir=function(e){throw new Error(\"process.chdir is not supported\")}}.call(this,e(\"lYpoI2\"),\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:{},e(\"buffer\").Buffer,arguments[3],arguments[4],arguments[5],arguments[6],\"/node_modules/gulp-browserify/node_modules/process/browser.js\",\"/node_modules/gulp-browserify/node_modules/process\")},{buffer:3,lYpoI2:11}]},{},[1])(1)});", "import hash from \"object-hash\";\n/**\n * This cache key should be consistent across all versions of langchain.\n * It is currently NOT consistent across versions of langchain.\n *\n * A huge benefit of having a remote cache (like redis) is that you can\n * access the cache from different processes/machines. The allows you to\n * seperate concerns and scale horizontally.\n *\n * TODO: Make cache key consistent across versions of langchain.\n */\nexport const getCacheKey = (...strings) => hash(strings.join(\"_\"));\n", "import { getCacheKey } from \"./base.js\";\nimport { BaseCache } from \"../schema/index.js\";\nconst GLOBAL_MAP = new Map();\nexport class InMemoryCache extends BaseCache {\n    constructor(map) {\n        super();\n        Object.defineProperty(this, \"cache\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.cache = map ?? new Map();\n    }\n    lookup(prompt, llmKey) {\n        return Promise.resolve(this.cache.get(getCacheKey(prompt, llmKey)) ?? null);\n    }\n    async update(prompt, llmKey, value) {\n        this.cache.set(getCacheKey(prompt, llmKey), value);\n    }\n    static global() {\n        return new InMemoryCache(GLOBAL_MAP);\n    }\n}\n", "import { Configuration, OpenAIApi, } from \"openai\";\nimport { isNode, getEnvironmentVariable } from \"../util/env.js\";\nimport fetchAdapter from \"../util/axios-fetch-adapter.js\";\nimport { LLM } from \"./base.js\";\nimport { promptLayerTrackRequest } from \"../util/prompt-layer.js\";\nimport { getEndpoint } from \"../util/azure.js\";\n/**\n * Wrapper around OpenAI large language models that use the Chat endpoint.\n *\n * To use you should have the `openai` package installed, with the\n * `OPENAI_API_KEY` environment variable set.\n *\n * To use with Azure you should have the `openai` package installed, with the\n * `AZURE_OPENAI_API_KEY`,\n * `AZURE_OPENAI_API_INSTANCE_NAME`,\n * `AZURE_OPENAI_API_DEPLOYMENT_NAME`\n * and `AZURE_OPENAI_API_VERSION` environment variable set.\n *\n * @remarks\n * Any parameters that are valid to be passed to {@link\n * https://platform.openai.com/docs/api-reference/chat/create |\n * `openai.createCompletion`} can be passed through {@link modelKwargs}, even\n * if not explicitly available on this class.\n *\n * @augments BaseLLM\n * @augments OpenAIInput\n * @augments AzureOpenAIChatInput\n */\nexport class OpenAIChat extends LLM {\n    get callKeys() {\n        return [\n            ...super.callKeys,\n            \"options\",\n            \"promptIndex\",\n        ];\n    }\n    get lc_secrets() {\n        return {\n            openAIApiKey: \"OPENAI_API_KEY\",\n            azureOpenAIApiKey: \"AZURE_OPENAI_API_KEY\",\n        };\n    }\n    get lc_aliases() {\n        return {\n            modelName: \"model\",\n            openAIApiKey: \"openai_api_key\",\n            azureOpenAIApiVersion: \"azure_openai_api_version\",\n            azureOpenAIApiKey: \"azure_openai_api_key\",\n            azureOpenAIApiInstanceName: \"azure_openai_api_instance_name\",\n            azureOpenAIApiDeploymentName: \"azure_openai_api_deployment_name\",\n        };\n    }\n    constructor(fields, \n    /** @deprecated */\n    configuration) {\n        super(fields ?? {});\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"temperature\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 1\n        });\n        Object.defineProperty(this, \"topP\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 1\n        });\n        Object.defineProperty(this, \"frequencyPenalty\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"presencePenalty\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"n\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 1\n        });\n        Object.defineProperty(this, \"logitBias\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"maxTokens\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"modelName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"gpt-3.5-turbo\"\n        });\n        Object.defineProperty(this, \"prefixMessages\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"modelKwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"timeout\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"stop\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"streaming\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"openAIApiKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"azureOpenAIApiVersion\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"azureOpenAIApiKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"azureOpenAIApiInstanceName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"azureOpenAIApiDeploymentName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"azureOpenAIBasePath\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"clientConfig\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.openAIApiKey =\n            fields?.openAIApiKey ?? getEnvironmentVariable(\"OPENAI_API_KEY\");\n        this.azureOpenAIApiKey =\n            fields?.azureOpenAIApiKey ??\n                getEnvironmentVariable(\"AZURE_OPENAI_API_KEY\");\n        if (!this.azureOpenAIApiKey && !this.openAIApiKey) {\n            throw new Error(\"OpenAI or Azure OpenAI API key not found\");\n        }\n        this.azureOpenAIApiInstanceName =\n            fields?.azureOpenAIApiInstanceName ??\n                getEnvironmentVariable(\"AZURE_OPENAI_API_INSTANCE_NAME\");\n        this.azureOpenAIApiDeploymentName =\n            (fields?.azureOpenAIApiCompletionsDeploymentName ||\n                fields?.azureOpenAIApiDeploymentName) ??\n                (getEnvironmentVariable(\"AZURE_OPENAI_API_COMPLETIONS_DEPLOYMENT_NAME\") ||\n                    getEnvironmentVariable(\"AZURE_OPENAI_API_DEPLOYMENT_NAME\"));\n        this.azureOpenAIApiVersion =\n            fields?.azureOpenAIApiVersion ??\n                getEnvironmentVariable(\"AZURE_OPENAI_API_VERSION\");\n        this.azureOpenAIBasePath =\n            fields?.azureOpenAIBasePath ??\n                getEnvironmentVariable(\"AZURE_OPENAI_BASE_PATH\");\n        this.modelName = fields?.modelName ?? this.modelName;\n        this.prefixMessages = fields?.prefixMessages ?? this.prefixMessages;\n        this.modelKwargs = fields?.modelKwargs ?? {};\n        this.timeout = fields?.timeout;\n        this.temperature = fields?.temperature ?? this.temperature;\n        this.topP = fields?.topP ?? this.topP;\n        this.frequencyPenalty = fields?.frequencyPenalty ?? this.frequencyPenalty;\n        this.presencePenalty = fields?.presencePenalty ?? this.presencePenalty;\n        this.n = fields?.n ?? this.n;\n        this.logitBias = fields?.logitBias;\n        this.maxTokens = fields?.maxTokens;\n        this.stop = fields?.stop;\n        this.streaming = fields?.streaming ?? false;\n        if (this.n > 1) {\n            throw new Error(\"Cannot use n > 1 in OpenAIChat LLM. Use ChatOpenAI Chat Model instead.\");\n        }\n        if (this.azureOpenAIApiKey) {\n            if (!this.azureOpenAIApiInstanceName) {\n                throw new Error(\"Azure OpenAI API instance name not found\");\n            }\n            if (!this.azureOpenAIApiDeploymentName) {\n                throw new Error(\"Azure OpenAI API deployment name not found\");\n            }\n            if (!this.azureOpenAIApiVersion) {\n                throw new Error(\"Azure OpenAI API version not found\");\n            }\n        }\n        this.clientConfig = {\n            apiKey: this.openAIApiKey,\n            ...configuration,\n            ...fields?.configuration,\n        };\n    }\n    /**\n     * Get the parameters used to invoke the model\n     */\n    invocationParams(options) {\n        return {\n            model: this.modelName,\n            temperature: this.temperature,\n            top_p: this.topP,\n            frequency_penalty: this.frequencyPenalty,\n            presence_penalty: this.presencePenalty,\n            n: this.n,\n            logit_bias: this.logitBias,\n            max_tokens: this.maxTokens === -1 ? undefined : this.maxTokens,\n            stop: options?.stop ?? this.stop,\n            stream: this.streaming,\n            ...this.modelKwargs,\n        };\n    }\n    /** @ignore */\n    _identifyingParams() {\n        return {\n            model_name: this.modelName,\n            ...this.invocationParams(),\n            ...this.clientConfig,\n        };\n    }\n    /**\n     * Get the identifying parameters for the model\n     */\n    identifyingParams() {\n        return {\n            model_name: this.modelName,\n            ...this.invocationParams(),\n            ...this.clientConfig,\n        };\n    }\n    formatMessages(prompt) {\n        const message = {\n            role: \"user\",\n            content: prompt,\n        };\n        return this.prefixMessages ? [...this.prefixMessages, message] : [message];\n    }\n    /** @ignore */\n    async _call(prompt, options, runManager) {\n        const params = this.invocationParams(options);\n        const data = params.stream\n            ? await new Promise((resolve, reject) => {\n                let response;\n                let rejected = false;\n                let resolved = false;\n                this.completionWithRetry({\n                    ...params,\n                    messages: this.formatMessages(prompt),\n                }, {\n                    signal: options.signal,\n                    ...options.options,\n                    adapter: fetchAdapter,\n                    responseType: \"stream\",\n                    onmessage: (event) => {\n                        if (event.data?.trim?.() === \"[DONE]\") {\n                            if (resolved || rejected) {\n                                return;\n                            }\n                            resolved = true;\n                            resolve(response);\n                        }\n                        else {\n                            const data = JSON.parse(event.data);\n                            if (data?.error) {\n                                if (rejected) {\n                                    return;\n                                }\n                                rejected = true;\n                                reject(data.error);\n                                return;\n                            }\n                            const message = data;\n                            // on the first message set the response properties\n                            if (!response) {\n                                response = {\n                                    id: message.id,\n                                    object: message.object,\n                                    created: message.created,\n                                    model: message.model,\n                                    choices: [],\n                                };\n                            }\n                            // on all messages, update choice\n                            for (const part of message.choices) {\n                                if (part != null) {\n                                    let choice = response.choices.find((c) => c.index === part.index);\n                                    if (!choice) {\n                                        choice = {\n                                            index: part.index,\n                                            finish_reason: part.finish_reason ?? undefined,\n                                        };\n                                        response.choices.push(choice);\n                                    }\n                                    if (!choice.message) {\n                                        choice.message = {\n                                            role: part.delta\n                                                ?.role,\n                                            content: part.delta?.content ?? \"\",\n                                        };\n                                    }\n                                    choice.message.content += part.delta?.content ?? \"\";\n                                    // eslint-disable-next-line no-void\n                                    void runManager?.handleLLMNewToken(part.delta?.content ?? \"\", {\n                                        prompt: options.promptIndex ?? 0,\n                                        completion: part.index,\n                                    });\n                                }\n                            }\n                            // when all messages are finished, resolve\n                            if (!resolved &&\n                                !rejected &&\n                                message.choices.every((c) => c.finish_reason != null)) {\n                                resolved = true;\n                                resolve(response);\n                            }\n                        }\n                    },\n                }).catch((error) => {\n                    if (!rejected) {\n                        rejected = true;\n                        reject(error);\n                    }\n                });\n            })\n            : await this.completionWithRetry({\n                ...params,\n                messages: this.formatMessages(prompt),\n            }, {\n                signal: options.signal,\n                ...options.options,\n            });\n        return data.choices[0].message?.content ?? \"\";\n    }\n    /** @ignore */\n    async completionWithRetry(request, options) {\n        if (!this.client) {\n            const openAIEndpointConfig = {\n                azureOpenAIApiDeploymentName: this.azureOpenAIApiDeploymentName,\n                azureOpenAIApiInstanceName: this.azureOpenAIApiInstanceName,\n                azureOpenAIApiKey: this.azureOpenAIApiKey,\n                azureOpenAIBasePath: this.azureOpenAIBasePath,\n                basePath: this.clientConfig.basePath,\n            };\n            const endpoint = getEndpoint(openAIEndpointConfig);\n            const clientConfig = new Configuration({\n                ...this.clientConfig,\n                basePath: endpoint,\n                baseOptions: {\n                    timeout: this.timeout,\n                    ...this.clientConfig.baseOptions,\n                },\n            });\n            this.client = new OpenAIApi(clientConfig);\n        }\n        const axiosOptions = {\n            adapter: isNode() ? undefined : fetchAdapter,\n            ...this.clientConfig.baseOptions,\n            ...options,\n        };\n        if (this.azureOpenAIApiKey) {\n            axiosOptions.headers = {\n                \"api-key\": this.azureOpenAIApiKey,\n                ...axiosOptions.headers,\n            };\n            axiosOptions.params = {\n                \"api-version\": this.azureOpenAIApiVersion,\n                ...axiosOptions.params,\n            };\n        }\n        return this.caller\n            .call(this.client.createChatCompletion.bind(this.client), request, axiosOptions)\n            .then((res) => res.data);\n    }\n    _llmType() {\n        return \"openai\";\n    }\n}\n/**\n * PromptLayer wrapper to OpenAIChat\n */\nexport class PromptLayerOpenAIChat extends OpenAIChat {\n    get lc_secrets() {\n        return {\n            promptLayerApiKey: \"PROMPTLAYER_API_KEY\",\n        };\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"promptLayerApiKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"plTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"returnPromptLayerId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.plTags = fields?.plTags ?? [];\n        this.returnPromptLayerId = fields?.returnPromptLayerId ?? false;\n        this.promptLayerApiKey =\n            fields?.promptLayerApiKey ??\n                getEnvironmentVariable(\"PROMPTLAYER_API_KEY\");\n        if (!this.promptLayerApiKey) {\n            throw new Error(\"Missing PromptLayer API key\");\n        }\n    }\n    async completionWithRetry(request, options) {\n        if (request.stream) {\n            return super.completionWithRetry(request, options);\n        }\n        const response = await super.completionWithRetry(request);\n        return response;\n    }\n    async _generate(prompts, options, runManager) {\n        let choice;\n        const generations = await Promise.all(prompts.map(async (prompt) => {\n            const requestStartTime = Date.now();\n            const text = await this._call(prompt, options, runManager);\n            const requestEndTime = Date.now();\n            choice = [{ text }];\n            const parsedResp = {\n                text,\n            };\n            const promptLayerRespBody = await promptLayerTrackRequest(this.caller, \"langchain.PromptLayerOpenAIChat\", [prompt], this._identifyingParams(), this.plTags, parsedResp, requestStartTime, requestEndTime, this.promptLayerApiKey);\n            if (this.returnPromptLayerId === true &&\n                promptLayerRespBody.success === true) {\n                choice[0].generationInfo = {\n                    promptLayerRequestId: promptLayerRespBody.request_id,\n                };\n            }\n            return choice;\n        }));\n        return { generations };\n    }\n}\n", "import { Configuration, OpenAIApi, } from \"openai\";\nimport { isNode, getEnvironmentVariable } from \"../util/env.js\";\nimport fetchAdapter from \"../util/axios-fetch-adapter.js\";\nimport { chunkArray } from \"../util/chunk.js\";\nimport { BaseLLM } from \"./base.js\";\nimport { calculateMaxTokens } from \"../base_language/count_tokens.js\";\nimport { OpenAIChat } from \"./openai-chat.js\";\nimport { promptLayerTrackRequest } from \"../util/prompt-layer.js\";\nimport { getEndpoint } from \"../util/azure.js\";\n/**\n * Wrapper around OpenAI large language models.\n *\n * To use you should have the `openai` package installed, with the\n * `OPENAI_API_KEY` environment variable set.\n *\n * To use with Azure you should have the `openai` package installed, with the\n * `AZURE_OPENAI_API_KEY`,\n * `AZURE_OPENAI_API_INSTANCE_NAME`,\n * `AZURE_OPENAI_API_DEPLOYMENT_NAME`\n * and `AZURE_OPENAI_API_VERSION` environment variable set.\n *\n * @remarks\n * Any parameters that are valid to be passed to {@link\n * https://platform.openai.com/docs/api-reference/completions/create |\n * `openai.createCompletion`} can be passed through {@link modelKwargs}, even\n * if not explicitly available on this class.\n */\nexport class OpenAI extends BaseLLM {\n    get callKeys() {\n        return [...super.callKeys, \"options\"];\n    }\n    get lc_secrets() {\n        return {\n            openAIApiKey: \"OPENAI_API_KEY\",\n            azureOpenAIApiKey: \"AZURE_OPENAI_API_KEY\",\n        };\n    }\n    get lc_aliases() {\n        return {\n            modelName: \"model\",\n            openAIApiKey: \"openai_api_key\",\n            azureOpenAIApiVersion: \"azure_openai_api_version\",\n            azureOpenAIApiKey: \"azure_openai_api_key\",\n            azureOpenAIApiInstanceName: \"azure_openai_api_instance_name\",\n            azureOpenAIApiDeploymentName: \"azure_openai_api_deployment_name\",\n        };\n    }\n    constructor(fields, \n    /** @deprecated */\n    configuration) {\n        if (fields?.modelName?.startsWith(\"gpt-3.5-turbo\") ||\n            fields?.modelName?.startsWith(\"gpt-4\") ||\n            fields?.modelName?.startsWith(\"gpt-4-32k\")) {\n            // eslint-disable-next-line no-constructor-return, @typescript-eslint/no-explicit-any\n            return new OpenAIChat(fields, configuration);\n        }\n        super(fields ?? {});\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"temperature\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0.7\n        });\n        Object.defineProperty(this, \"maxTokens\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 256\n        });\n        Object.defineProperty(this, \"topP\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 1\n        });\n        Object.defineProperty(this, \"frequencyPenalty\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"presencePenalty\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"n\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 1\n        });\n        Object.defineProperty(this, \"bestOf\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"logitBias\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"modelName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"text-davinci-003\"\n        });\n        Object.defineProperty(this, \"modelKwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"batchSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 20\n        });\n        Object.defineProperty(this, \"timeout\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"stop\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"streaming\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"openAIApiKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"azureOpenAIApiVersion\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"azureOpenAIApiKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"azureOpenAIApiInstanceName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"azureOpenAIApiDeploymentName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"azureOpenAIBasePath\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"clientConfig\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.openAIApiKey =\n            fields?.openAIApiKey ?? getEnvironmentVariable(\"OPENAI_API_KEY\");\n        this.azureOpenAIApiKey =\n            fields?.azureOpenAIApiKey ??\n                getEnvironmentVariable(\"AZURE_OPENAI_API_KEY\");\n        if (!this.azureOpenAIApiKey && !this.openAIApiKey) {\n            throw new Error(\"OpenAI or Azure OpenAI API key not found\");\n        }\n        this.azureOpenAIApiInstanceName =\n            fields?.azureOpenAIApiInstanceName ??\n                getEnvironmentVariable(\"AZURE_OPENAI_API_INSTANCE_NAME\");\n        this.azureOpenAIApiDeploymentName =\n            (fields?.azureOpenAIApiCompletionsDeploymentName ||\n                fields?.azureOpenAIApiDeploymentName) ??\n                (getEnvironmentVariable(\"AZURE_OPENAI_API_COMPLETIONS_DEPLOYMENT_NAME\") ||\n                    getEnvironmentVariable(\"AZURE_OPENAI_API_DEPLOYMENT_NAME\"));\n        this.azureOpenAIApiVersion =\n            fields?.azureOpenAIApiVersion ??\n                getEnvironmentVariable(\"AZURE_OPENAI_API_VERSION\");\n        this.azureOpenAIBasePath =\n            fields?.azureOpenAIBasePath ??\n                getEnvironmentVariable(\"AZURE_OPENAI_BASE_PATH\");\n        this.modelName = fields?.modelName ?? this.modelName;\n        this.modelKwargs = fields?.modelKwargs ?? {};\n        this.batchSize = fields?.batchSize ?? this.batchSize;\n        this.timeout = fields?.timeout;\n        this.temperature = fields?.temperature ?? this.temperature;\n        this.maxTokens = fields?.maxTokens ?? this.maxTokens;\n        this.topP = fields?.topP ?? this.topP;\n        this.frequencyPenalty = fields?.frequencyPenalty ?? this.frequencyPenalty;\n        this.presencePenalty = fields?.presencePenalty ?? this.presencePenalty;\n        this.n = fields?.n ?? this.n;\n        this.bestOf = fields?.bestOf ?? this.bestOf;\n        this.logitBias = fields?.logitBias;\n        this.stop = fields?.stop;\n        this.streaming = fields?.streaming ?? false;\n        if (this.streaming && this.bestOf && this.bestOf > 1) {\n            throw new Error(\"Cannot stream results when bestOf > 1\");\n        }\n        if (this.azureOpenAIApiKey) {\n            if (!this.azureOpenAIApiInstanceName) {\n                throw new Error(\"Azure OpenAI API instance name not found\");\n            }\n            if (!this.azureOpenAIApiDeploymentName) {\n                throw new Error(\"Azure OpenAI API deployment name not found\");\n            }\n            if (!this.azureOpenAIApiVersion) {\n                throw new Error(\"Azure OpenAI API version not found\");\n            }\n        }\n        this.clientConfig = {\n            apiKey: this.openAIApiKey,\n            ...configuration,\n            ...fields?.configuration,\n        };\n    }\n    /**\n     * Get the parameters used to invoke the model\n     */\n    invocationParams(options) {\n        return {\n            model: this.modelName,\n            temperature: this.temperature,\n            max_tokens: this.maxTokens,\n            top_p: this.topP,\n            frequency_penalty: this.frequencyPenalty,\n            presence_penalty: this.presencePenalty,\n            n: this.n,\n            best_of: this.bestOf,\n            logit_bias: this.logitBias,\n            stop: options?.stop ?? this.stop,\n            stream: this.streaming,\n            ...this.modelKwargs,\n        };\n    }\n    _identifyingParams() {\n        return {\n            model_name: this.modelName,\n            ...this.invocationParams(),\n            ...this.clientConfig,\n        };\n    }\n    /**\n     * Get the identifying parameters for the model\n     */\n    identifyingParams() {\n        return this._identifyingParams();\n    }\n    /**\n     * Call out to OpenAI's endpoint with k unique prompts\n     *\n     * @param [prompts] - The prompts to pass into the model.\n     * @param [options] - Optional list of stop words to use when generating.\n     * @param [runManager] - Optional callback manager to use when generating.\n     *\n     * @returns The full LLM output.\n     *\n     * @example\n     * ```ts\n     * import { OpenAI } from \"langchain/llms/openai\";\n     * const openai = new OpenAI();\n     * const response = await openai.generate([\"Tell me a joke.\"]);\n     * ```\n     */\n    async _generate(prompts, options, runManager) {\n        const subPrompts = chunkArray(prompts, this.batchSize);\n        const choices = [];\n        const tokenUsage = {};\n        const params = this.invocationParams(options);\n        if (params.max_tokens === -1) {\n            if (prompts.length !== 1) {\n                throw new Error(\"max_tokens set to -1 not supported for multiple inputs\");\n            }\n            params.max_tokens = await calculateMaxTokens({\n                prompt: prompts[0],\n                // Cast here to allow for other models that may not fit the union\n                modelName: this.modelName,\n            });\n        }\n        for (let i = 0; i < subPrompts.length; i += 1) {\n            const data = params.stream\n                ? await new Promise((resolve, reject) => {\n                    const choices = [];\n                    let response;\n                    let rejected = false;\n                    let resolved = false;\n                    this.completionWithRetry({\n                        ...params,\n                        prompt: subPrompts[i],\n                    }, {\n                        signal: options.signal,\n                        ...options.options,\n                        adapter: fetchAdapter,\n                        responseType: \"stream\",\n                        onmessage: (event) => {\n                            if (event.data?.trim?.() === \"[DONE]\") {\n                                if (resolved || rejected) {\n                                    return;\n                                }\n                                resolved = true;\n                                resolve({\n                                    ...response,\n                                    choices,\n                                });\n                            }\n                            else {\n                                const data = JSON.parse(event.data);\n                                if (data?.error) {\n                                    if (rejected) {\n                                        return;\n                                    }\n                                    rejected = true;\n                                    reject(data.error);\n                                    return;\n                                }\n                                const message = data;\n                                // on the first message set the response properties\n                                if (!response) {\n                                    response = {\n                                        id: message.id,\n                                        object: message.object,\n                                        created: message.created,\n                                        model: message.model,\n                                    };\n                                }\n                                // on all messages, update choice\n                                for (const part of message.choices) {\n                                    if (part != null && part.index != null) {\n                                        if (!choices[part.index])\n                                            choices[part.index] = {};\n                                        const choice = choices[part.index];\n                                        choice.text = (choice.text ?? \"\") + (part.text ?? \"\");\n                                        choice.finish_reason = part.finish_reason;\n                                        choice.logprobs = part.logprobs;\n                                        // eslint-disable-next-line no-void\n                                        void runManager?.handleLLMNewToken(part.text ?? \"\", {\n                                            prompt: Math.floor(part.index / this.n),\n                                            completion: part.index % this.n,\n                                        });\n                                    }\n                                }\n                                // when all messages are finished, resolve\n                                if (!resolved &&\n                                    !rejected &&\n                                    choices.every((c) => c.finish_reason != null)) {\n                                    resolved = true;\n                                    resolve({\n                                        ...response,\n                                        choices,\n                                    });\n                                }\n                            }\n                        },\n                    }).catch((error) => {\n                        if (!rejected) {\n                            rejected = true;\n                            reject(error);\n                        }\n                    });\n                })\n                : await this.completionWithRetry({\n                    ...params,\n                    prompt: subPrompts[i],\n                }, {\n                    signal: options.signal,\n                    ...options.options,\n                });\n            choices.push(...data.choices);\n            const { completion_tokens: completionTokens, prompt_tokens: promptTokens, total_tokens: totalTokens, } = data.usage ?? {};\n            if (completionTokens) {\n                tokenUsage.completionTokens =\n                    (tokenUsage.completionTokens ?? 0) + completionTokens;\n            }\n            if (promptTokens) {\n                tokenUsage.promptTokens = (tokenUsage.promptTokens ?? 0) + promptTokens;\n            }\n            if (totalTokens) {\n                tokenUsage.totalTokens = (tokenUsage.totalTokens ?? 0) + totalTokens;\n            }\n        }\n        const generations = chunkArray(choices, this.n).map((promptChoices) => promptChoices.map((choice) => ({\n            text: choice.text ?? \"\",\n            generationInfo: {\n                finishReason: choice.finish_reason,\n                logprobs: choice.logprobs,\n            },\n        })));\n        return {\n            generations,\n            llmOutput: { tokenUsage },\n        };\n    }\n    /** @ignore */\n    async completionWithRetry(request, options) {\n        if (!this.client) {\n            const openAIEndpointConfig = {\n                azureOpenAIApiDeploymentName: this.azureOpenAIApiDeploymentName,\n                azureOpenAIApiInstanceName: this.azureOpenAIApiInstanceName,\n                azureOpenAIApiKey: this.azureOpenAIApiKey,\n                azureOpenAIBasePath: this.azureOpenAIBasePath,\n                basePath: this.clientConfig.basePath,\n            };\n            const endpoint = getEndpoint(openAIEndpointConfig);\n            const clientConfig = new Configuration({\n                ...this.clientConfig,\n                basePath: endpoint,\n                baseOptions: {\n                    timeout: this.timeout,\n                    ...this.clientConfig.baseOptions,\n                },\n            });\n            this.client = new OpenAIApi(clientConfig);\n        }\n        const axiosOptions = {\n            adapter: isNode() ? undefined : fetchAdapter,\n            ...this.clientConfig.baseOptions,\n            ...options,\n        };\n        if (this.azureOpenAIApiKey) {\n            axiosOptions.headers = {\n                \"api-key\": this.azureOpenAIApiKey,\n                ...axiosOptions.headers,\n            };\n            axiosOptions.params = {\n                \"api-version\": this.azureOpenAIApiVersion,\n                ...axiosOptions.params,\n            };\n        }\n        return this.caller\n            .call(this.client.createCompletion.bind(this.client), request, axiosOptions)\n            .then((res) => res.data);\n    }\n    _llmType() {\n        return \"openai\";\n    }\n}\n/**\n * PromptLayer wrapper to OpenAI\n * @augments OpenAI\n */\nexport class PromptLayerOpenAI extends OpenAI {\n    get lc_secrets() {\n        return {\n            promptLayerApiKey: \"PROMPTLAYER_API_KEY\",\n        };\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"promptLayerApiKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"plTags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"returnPromptLayerId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.plTags = fields?.plTags ?? [];\n        this.promptLayerApiKey =\n            fields?.promptLayerApiKey ??\n                getEnvironmentVariable(\"PROMPTLAYER_API_KEY\");\n        this.returnPromptLayerId = fields?.returnPromptLayerId;\n        if (!this.promptLayerApiKey) {\n            throw new Error(\"Missing PromptLayer API key\");\n        }\n    }\n    async completionWithRetry(request, options) {\n        if (request.stream) {\n            return super.completionWithRetry(request, options);\n        }\n        const response = await super.completionWithRetry(request);\n        return response;\n    }\n    async _generate(prompts, options, runManager) {\n        const requestStartTime = Date.now();\n        const generations = await super._generate(prompts, options, runManager);\n        for (let i = 0; i < generations.generations.length; i += 1) {\n            const requestEndTime = Date.now();\n            const parsedResp = {\n                text: generations.generations[i][0].text,\n                llm_output: generations.llmOutput,\n            };\n            const promptLayerRespBody = await promptLayerTrackRequest(this.caller, \"langchain.PromptLayerOpenAI\", [prompts[i]], this._identifyingParams(), this.plTags, parsedResp, requestStartTime, requestEndTime, this.promptLayerApiKey);\n            let promptLayerRequestId;\n            if (this.returnPromptLayerId === true) {\n                if (promptLayerRespBody && promptLayerRespBody.success === true) {\n                    promptLayerRequestId = promptLayerRespBody.request_id;\n                }\n                generations.generations[i][0].generationInfo = {\n                    ...generations.generations[i][0].generationInfo,\n                    promptLayerRequestId,\n                };\n            }\n        }\n        return generations;\n    }\n}\nexport { OpenAIChat, PromptLayerOpenAIChat } from \"./openai-chat.js\";\n", "import { InMemoryCache } from \"../cache/index.js\";\nimport { AIMessage, RUN_KEY, } from \"../schema/index.js\";\nimport { BaseLanguageModel, } from \"../base_language/index.js\";\nimport { CallbackManager, } from \"../callbacks/manager.js\";\nimport { getBufferString } from \"../memory/base.js\";\n/**\n * LLM Wrapper. Provides an {@link call} (an {@link generate}) function that takes in a prompt (or prompts) and returns a string.\n */\nexport class BaseLLM extends BaseLanguageModel {\n    constructor({ cache, concurrency, ...rest }) {\n        super(concurrency ? { maxConcurrency: concurrency, ...rest } : rest);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"llms\", this._llmType()]\n        });\n        Object.defineProperty(this, \"cache\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        if (typeof cache === \"object\") {\n            this.cache = cache;\n        }\n        else if (cache) {\n            this.cache = InMemoryCache.global();\n        }\n        else {\n            this.cache = undefined;\n        }\n    }\n    async generatePrompt(promptValues, options, callbacks) {\n        const prompts = promptValues.map((promptValue) => promptValue.toString());\n        return this.generate(prompts, options, callbacks);\n    }\n    /**\n     * Get the parameters used to invoke the model\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    invocationParams(_options) {\n        return {};\n    }\n    _flattenLLMResult(llmResult) {\n        const llmResults = [];\n        for (let i = 0; i < llmResult.generations.length; i += 1) {\n            const genList = llmResult.generations[i];\n            if (i === 0) {\n                llmResults.push({\n                    generations: [genList],\n                    llmOutput: llmResult.llmOutput,\n                });\n            }\n            else {\n                const llmOutput = llmResult.llmOutput\n                    ? { ...llmResult.llmOutput, tokenUsage: {} }\n                    : undefined;\n                llmResults.push({\n                    generations: [genList],\n                    llmOutput,\n                });\n            }\n        }\n        return llmResults;\n    }\n    /** @ignore */\n    async _generateUncached(prompts, parsedOptions, handledOptions) {\n        const callbackManager_ = await CallbackManager.configure(handledOptions.callbacks, this.callbacks, handledOptions.tags, this.tags, handledOptions.metadata, this.metadata, { verbose: this.verbose });\n        const extra = {\n            options: parsedOptions,\n            invocation_params: this?.invocationParams(parsedOptions),\n        };\n        const runManagers = await callbackManager_?.handleLLMStart(this.toJSON(), prompts, undefined, undefined, extra);\n        let output;\n        try {\n            output = await this._generate(prompts, parsedOptions, runManagers?.[0]);\n        }\n        catch (err) {\n            await Promise.all((runManagers ?? []).map((runManager) => runManager?.handleLLMError(err)));\n            throw err;\n        }\n        const flattenedOutputs = this._flattenLLMResult(output);\n        await Promise.all((runManagers ?? []).map((runManager, i) => runManager?.handleLLMEnd(flattenedOutputs[i])));\n        const runIds = runManagers?.map((manager) => manager.runId) || undefined;\n        // This defines RUN_KEY as a non-enumerable property on the output object\n        // so that it is not serialized when the output is stringified, and so that\n        // it isnt included when listing the keys of the output object.\n        Object.defineProperty(output, RUN_KEY, {\n            value: runIds ? { runIds } : undefined,\n            configurable: true,\n        });\n        return output;\n    }\n    /**\n     * Run the LLM on the given propmts an input, handling caching.\n     */\n    async generate(prompts, options, callbacks) {\n        if (!Array.isArray(prompts)) {\n            throw new Error(\"Argument 'prompts' is expected to be a string[]\");\n        }\n        let parsedOptions;\n        if (Array.isArray(options)) {\n            parsedOptions = { stop: options };\n        }\n        else if (options?.timeout && !options.signal) {\n            parsedOptions = {\n                ...options,\n                signal: AbortSignal.timeout(options.timeout),\n            };\n        }\n        else {\n            parsedOptions = options ?? {};\n        }\n        const handledOptions = {\n            tags: parsedOptions.tags,\n            metadata: parsedOptions.metadata,\n            callbacks: parsedOptions.callbacks ?? callbacks,\n        };\n        delete parsedOptions.tags;\n        delete parsedOptions.metadata;\n        delete parsedOptions.callbacks;\n        if (!this.cache) {\n            return this._generateUncached(prompts, parsedOptions, handledOptions);\n        }\n        const { cache } = this;\n        const params = this.serialize();\n        params.stop = parsedOptions.stop ?? params.stop;\n        const llmStringKey = `${Object.entries(params).sort()}`;\n        const missingPromptIndices = [];\n        const generations = await Promise.all(prompts.map(async (prompt, index) => {\n            const result = await cache.lookup(prompt, llmStringKey);\n            if (!result) {\n                missingPromptIndices.push(index);\n            }\n            return result;\n        }));\n        let llmOutput = {};\n        if (missingPromptIndices.length > 0) {\n            const results = await this._generateUncached(missingPromptIndices.map((i) => prompts[i]), parsedOptions, handledOptions);\n            await Promise.all(results.generations.map(async (generation, index) => {\n                const promptIndex = missingPromptIndices[index];\n                generations[promptIndex] = generation;\n                return cache.update(prompts[promptIndex], llmStringKey, generation);\n            }));\n            llmOutput = results.llmOutput ?? {};\n        }\n        return { generations, llmOutput };\n    }\n    /**\n     * Convenience wrapper for {@link generate} that takes in a single string prompt and returns a single string output.\n     */\n    async call(prompt, options, callbacks) {\n        const { generations } = await this.generate([prompt], options ?? {}, callbacks);\n        return generations[0][0].text;\n    }\n    async predict(text, options, callbacks) {\n        return this.call(text, options, callbacks);\n    }\n    async predictMessages(messages, options, callbacks) {\n        const text = getBufferString(messages);\n        const prediction = await this.call(text, options, callbacks);\n        return new AIMessage(prediction);\n    }\n    /**\n     * Get the identifying parameters of the LLM.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _identifyingParams() {\n        return {};\n    }\n    /**\n     * Return a json-like object representing this LLM.\n     */\n    serialize() {\n        return {\n            ...this._identifyingParams(),\n            _type: this._llmType(),\n            _model: this._modelType(),\n        };\n    }\n    _modelType() {\n        return \"base_llm\";\n    }\n    /**\n     * Load an LLM from a json-like object describing it.\n     */\n    static async deserialize(data) {\n        const { _type, _model, ...rest } = data;\n        if (_model && _model !== \"base_llm\") {\n            throw new Error(`Cannot load LLM with model ${_model}`);\n        }\n        const Cls = {\n            openai: (await import(\"./openai.js\")).OpenAI,\n        }[_type];\n        if (Cls === undefined) {\n            throw new Error(`Cannot load  LLM with type ${_type}`);\n        }\n        return new Cls(rest);\n    }\n}\n/**\n * LLM class that provides a simpler interface to subclass than {@link BaseLLM}.\n *\n * Requires only implementing a simpler {@link _call} method instead of {@link _generate}.\n *\n * @augments BaseLLM\n */\nexport class LLM extends BaseLLM {\n    async _generate(prompts, options, runManager) {\n        const generations = await Promise.all(prompts.map((prompt, promptIndex) => this._call(prompt, { ...options, promptIndex }, runManager).then((text) => [{ text }])));\n        return { generations };\n    }\n}\n", "module.exports = function(haystack, needle, comparator, low, high) {\n  var mid, cmp;\n\n  if(low === undefined)\n    low = 0;\n\n  else {\n    low = low|0;\n    if(low < 0 || low >= haystack.length)\n      throw new RangeError(\"invalid lower bound\");\n  }\n\n  if(high === undefined)\n    high = haystack.length - 1;\n\n  else {\n    high = high|0;\n    if(high < low || high >= haystack.length)\n      throw new RangeError(\"invalid upper bound\");\n  }\n\n  while(low <= high) {\n    // The naive `low + high >>> 1` could fail for array lengths > 2**31\n    // because `>>>` converts its operands to int32. `low + (high - low >>> 1)`\n    // works for array lengths <= 2**32-1 which is also Javascript's max array\n    // length.\n    mid = low + ((high - low) >>> 1);\n    cmp = +comparator(haystack[mid], needle, mid, haystack);\n\n    // Too low.\n    if(cmp < 0.0)\n      low  = mid + 1;\n\n    // Too high.\n    else if(cmp > 0.0)\n      high = mid - 1;\n\n    // Key found.\n    else\n      return mid;\n  }\n\n  // Key not found.\n  return ~low;\n}\n", "'use strict';\n\nfunction assertNumber(number) {\n\tif (typeof number !== 'number') {\n\t\tthrow new TypeError('Expected a number');\n\t}\n}\n\nexports.ascending = (left, right) => {\n\tassertNumber(left);\n\tassertNumber(right);\n\n\tif (Number.isNaN(left)) {\n\t\treturn -1;\n\t}\n\n\tif (Number.isNaN(right)) {\n\t\treturn 1;\n\t}\n\n\treturn left - right;\n};\n\nexports.descending = (left, right) => {\n\tassertNumber(left);\n\tassertNumber(right);\n\n\tif (Number.isNaN(left)) {\n\t\treturn 1;\n\t}\n\n\tif (Number.isNaN(right)) {\n\t\treturn -1;\n\t}\n\n\treturn right - left;\n};\n", "'use strict';\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n", "'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n", "'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                args.concat(slice.call(arguments))\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(\n                that,\n                args.concat(slice.call(arguments))\n            );\n        }\n    };\n\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n", "'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n", "'use strict';\n\nvar bind = require('function-bind');\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n", "'use strict';\n\nvar undefined;\n\nvar $SyntaxError = SyntaxError;\nvar $Function = Function;\nvar $TypeError = TypeError;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\ttry {\n\t\t$gOPD({}, '');\n\t} catch (e) {\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\n\t}\n}\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\n\nvar getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,\n\t'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': Object,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': RangeError,\n\t'%ReferenceError%': ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\ntry {\n\tnull.error; // eslint-disable-line no-unused-expressions\n} catch (e) {\n\t// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229\n\tvar errorProto = getProto(getProto(e));\n\tINTRINSICS['%Error.prototype%'] = errorProto;\n}\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('has');\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\nvar $exec = bind.call(Function.call, RegExp.prototype.exec);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tif ($exec(/^%?[^%]*%?$/, name) === null) {\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\n\t}\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n", "'use strict';\n\nvar bind = require('function-bind');\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\nvar $max = GetIntrinsic('%Math.max%');\n\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = null;\n\t}\n}\n\nmodule.exports = function callBind(originalFunction) {\n\tvar func = $reflectApply(bind, $call, arguments);\n\tif ($gOPD && $defineProperty) {\n\t\tvar desc = $gOPD(func, 'length');\n\t\tif (desc.configurable) {\n\t\t\t// original length, plus the receiver, minus any additional arguments (after the receiver)\n\t\t\t$defineProperty(\n\t\t\t\tfunc,\n\t\t\t\t'length',\n\t\t\t\t{ value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) }\n\t\t\t);\n\t\t}\n\t}\n\treturn func;\n};\n\nvar applyBind = function applyBind() {\n\treturn $reflectApply(bind, $apply, arguments);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBind = require('./');\n\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\n\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\tvar intrinsic = GetIntrinsic(name, !!allowMissing);\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBind(intrinsic);\n\t}\n\treturn intrinsic;\n};\n", "", "var hasMap = typeof Map === 'function' && Map.prototype;\nvar mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;\nvar mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;\nvar mapForEach = hasMap && Map.prototype.forEach;\nvar hasSet = typeof Set === 'function' && Set.prototype;\nvar setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;\nvar setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;\nvar setForEach = hasSet && Set.prototype.forEach;\nvar hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;\nvar weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;\nvar hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;\nvar weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;\nvar hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;\nvar weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;\nvar booleanValueOf = Boolean.prototype.valueOf;\nvar objectToString = Object.prototype.toString;\nvar functionToString = Function.prototype.toString;\nvar $match = String.prototype.match;\nvar $slice = String.prototype.slice;\nvar $replace = String.prototype.replace;\nvar $toUpperCase = String.prototype.toUpperCase;\nvar $toLowerCase = String.prototype.toLowerCase;\nvar $test = RegExp.prototype.test;\nvar $concat = Array.prototype.concat;\nvar $join = Array.prototype.join;\nvar $arrSlice = Array.prototype.slice;\nvar $floor = Math.floor;\nvar bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;\nvar gOPS = Object.getOwnPropertySymbols;\nvar symToString = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol.prototype.toString : null;\nvar hasShammedSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'object';\n// ie, `has-tostringtag/shams\nvar toStringTag = typeof Symbol === 'function' && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? 'object' : 'symbol')\n    ? Symbol.toStringTag\n    : null;\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\nvar gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || (\n    [].__proto__ === Array.prototype // eslint-disable-line no-proto\n        ? function (O) {\n            return O.__proto__; // eslint-disable-line no-proto\n        }\n        : null\n);\n\nfunction addNumericSeparator(num, str) {\n    if (\n        num === Infinity\n        || num === -Infinity\n        || num !== num\n        || (num && num > -1000 && num < 1000)\n        || $test.call(/e/, str)\n    ) {\n        return str;\n    }\n    var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;\n    if (typeof num === 'number') {\n        var int = num < 0 ? -$floor(-num) : $floor(num); // trunc(num)\n        if (int !== num) {\n            var intStr = String(int);\n            var dec = $slice.call(str, intStr.length + 1);\n            return $replace.call(intStr, sepRegex, '$&_') + '.' + $replace.call($replace.call(dec, /([0-9]{3})/g, '$&_'), /_$/, '');\n        }\n    }\n    return $replace.call(str, sepRegex, '$&_');\n}\n\nvar utilInspect = require('./util.inspect');\nvar inspectCustom = utilInspect.custom;\nvar inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;\n\nmodule.exports = function inspect_(obj, options, depth, seen) {\n    var opts = options || {};\n\n    if (has(opts, 'quoteStyle') && (opts.quoteStyle !== 'single' && opts.quoteStyle !== 'double')) {\n        throw new TypeError('option \"quoteStyle\" must be \"single\" or \"double\"');\n    }\n    if (\n        has(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number'\n            ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity\n            : opts.maxStringLength !== null\n        )\n    ) {\n        throw new TypeError('option \"maxStringLength\", if provided, must be a positive integer, Infinity, or `null`');\n    }\n    var customInspect = has(opts, 'customInspect') ? opts.customInspect : true;\n    if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {\n        throw new TypeError('option \"customInspect\", if provided, must be `true`, `false`, or `\\'symbol\\'`');\n    }\n\n    if (\n        has(opts, 'indent')\n        && opts.indent !== null\n        && opts.indent !== '\\t'\n        && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)\n    ) {\n        throw new TypeError('option \"indent\" must be \"\\\\t\", an integer > 0, or `null`');\n    }\n    if (has(opts, 'numericSeparator') && typeof opts.numericSeparator !== 'boolean') {\n        throw new TypeError('option \"numericSeparator\", if provided, must be `true` or `false`');\n    }\n    var numericSeparator = opts.numericSeparator;\n\n    if (typeof obj === 'undefined') {\n        return 'undefined';\n    }\n    if (obj === null) {\n        return 'null';\n    }\n    if (typeof obj === 'boolean') {\n        return obj ? 'true' : 'false';\n    }\n\n    if (typeof obj === 'string') {\n        return inspectString(obj, opts);\n    }\n    if (typeof obj === 'number') {\n        if (obj === 0) {\n            return Infinity / obj > 0 ? '0' : '-0';\n        }\n        var str = String(obj);\n        return numericSeparator ? addNumericSeparator(obj, str) : str;\n    }\n    if (typeof obj === 'bigint') {\n        var bigIntStr = String(obj) + 'n';\n        return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;\n    }\n\n    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;\n    if (typeof depth === 'undefined') { depth = 0; }\n    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {\n        return isArray(obj) ? '[Array]' : '[Object]';\n    }\n\n    var indent = getIndent(opts, depth);\n\n    if (typeof seen === 'undefined') {\n        seen = [];\n    } else if (indexOf(seen, obj) >= 0) {\n        return '[Circular]';\n    }\n\n    function inspect(value, from, noIndent) {\n        if (from) {\n            seen = $arrSlice.call(seen);\n            seen.push(from);\n        }\n        if (noIndent) {\n            var newOpts = {\n                depth: opts.depth\n            };\n            if (has(opts, 'quoteStyle')) {\n                newOpts.quoteStyle = opts.quoteStyle;\n            }\n            return inspect_(value, newOpts, depth + 1, seen);\n        }\n        return inspect_(value, opts, depth + 1, seen);\n    }\n\n    if (typeof obj === 'function' && !isRegExp(obj)) { // in older engines, regexes are callable\n        var name = nameOf(obj);\n        var keys = arrObjKeys(obj, inspect);\n        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + $join.call(keys, ', ') + ' }' : '');\n    }\n    if (isSymbol(obj)) {\n        var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\\(.*\\))_[^)]*$/, '$1') : symToString.call(obj);\n        return typeof obj === 'object' && !hasShammedSymbols ? markBoxed(symString) : symString;\n    }\n    if (isElement(obj)) {\n        var s = '<' + $toLowerCase.call(String(obj.nodeName));\n        var attrs = obj.attributes || [];\n        for (var i = 0; i < attrs.length; i++) {\n            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);\n        }\n        s += '>';\n        if (obj.childNodes && obj.childNodes.length) { s += '...'; }\n        s += '</' + $toLowerCase.call(String(obj.nodeName)) + '>';\n        return s;\n    }\n    if (isArray(obj)) {\n        if (obj.length === 0) { return '[]'; }\n        var xs = arrObjKeys(obj, inspect);\n        if (indent && !singleLineValues(xs)) {\n            return '[' + indentedJoin(xs, indent) + ']';\n        }\n        return '[ ' + $join.call(xs, ', ') + ' ]';\n    }\n    if (isError(obj)) {\n        var parts = arrObjKeys(obj, inspect);\n        if (!('cause' in Error.prototype) && 'cause' in obj && !isEnumerable.call(obj, 'cause')) {\n            return '{ [' + String(obj) + '] ' + $join.call($concat.call('[cause]: ' + inspect(obj.cause), parts), ', ') + ' }';\n        }\n        if (parts.length === 0) { return '[' + String(obj) + ']'; }\n        return '{ [' + String(obj) + '] ' + $join.call(parts, ', ') + ' }';\n    }\n    if (typeof obj === 'object' && customInspect) {\n        if (inspectSymbol && typeof obj[inspectSymbol] === 'function' && utilInspect) {\n            return utilInspect(obj, { depth: maxDepth - depth });\n        } else if (customInspect !== 'symbol' && typeof obj.inspect === 'function') {\n            return obj.inspect();\n        }\n    }\n    if (isMap(obj)) {\n        var mapParts = [];\n        if (mapForEach) {\n            mapForEach.call(obj, function (value, key) {\n                mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));\n            });\n        }\n        return collectionOf('Map', mapSize.call(obj), mapParts, indent);\n    }\n    if (isSet(obj)) {\n        var setParts = [];\n        if (setForEach) {\n            setForEach.call(obj, function (value) {\n                setParts.push(inspect(value, obj));\n            });\n        }\n        return collectionOf('Set', setSize.call(obj), setParts, indent);\n    }\n    if (isWeakMap(obj)) {\n        return weakCollectionOf('WeakMap');\n    }\n    if (isWeakSet(obj)) {\n        return weakCollectionOf('WeakSet');\n    }\n    if (isWeakRef(obj)) {\n        return weakCollectionOf('WeakRef');\n    }\n    if (isNumber(obj)) {\n        return markBoxed(inspect(Number(obj)));\n    }\n    if (isBigInt(obj)) {\n        return markBoxed(inspect(bigIntValueOf.call(obj)));\n    }\n    if (isBoolean(obj)) {\n        return markBoxed(booleanValueOf.call(obj));\n    }\n    if (isString(obj)) {\n        return markBoxed(inspect(String(obj)));\n    }\n    if (!isDate(obj) && !isRegExp(obj)) {\n        var ys = arrObjKeys(obj, inspect);\n        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;\n        var protoTag = obj instanceof Object ? '' : 'null prototype';\n        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? 'Object' : '';\n        var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';\n        var tag = constructorTag + (stringTag || protoTag ? '[' + $join.call($concat.call([], stringTag || [], protoTag || []), ': ') + '] ' : '');\n        if (ys.length === 0) { return tag + '{}'; }\n        if (indent) {\n            return tag + '{' + indentedJoin(ys, indent) + '}';\n        }\n        return tag + '{ ' + $join.call(ys, ', ') + ' }';\n    }\n    return String(obj);\n};\n\nfunction wrapQuotes(s, defaultStyle, opts) {\n    var quoteChar = (opts.quoteStyle || defaultStyle) === 'double' ? '\"' : \"'\";\n    return quoteChar + s + quoteChar;\n}\n\nfunction quote(s) {\n    return $replace.call(String(s), /\"/g, '&quot;');\n}\n\nfunction isArray(obj) { return toStr(obj) === '[object Array]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isDate(obj) { return toStr(obj) === '[object Date]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isRegExp(obj) { return toStr(obj) === '[object RegExp]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isError(obj) { return toStr(obj) === '[object Error]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isString(obj) { return toStr(obj) === '[object String]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isNumber(obj) { return toStr(obj) === '[object Number]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isBoolean(obj) { return toStr(obj) === '[object Boolean]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\n\n// Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives\nfunction isSymbol(obj) {\n    if (hasShammedSymbols) {\n        return obj && typeof obj === 'object' && obj instanceof Symbol;\n    }\n    if (typeof obj === 'symbol') {\n        return true;\n    }\n    if (!obj || typeof obj !== 'object' || !symToString) {\n        return false;\n    }\n    try {\n        symToString.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isBigInt(obj) {\n    if (!obj || typeof obj !== 'object' || !bigIntValueOf) {\n        return false;\n    }\n    try {\n        bigIntValueOf.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };\nfunction has(obj, key) {\n    return hasOwn.call(obj, key);\n}\n\nfunction toStr(obj) {\n    return objectToString.call(obj);\n}\n\nfunction nameOf(f) {\n    if (f.name) { return f.name; }\n    var m = $match.call(functionToString.call(f), /^function\\s*([\\w$]+)/);\n    if (m) { return m[1]; }\n    return null;\n}\n\nfunction indexOf(xs, x) {\n    if (xs.indexOf) { return xs.indexOf(x); }\n    for (var i = 0, l = xs.length; i < l; i++) {\n        if (xs[i] === x) { return i; }\n    }\n    return -1;\n}\n\nfunction isMap(x) {\n    if (!mapSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        mapSize.call(x);\n        try {\n            setSize.call(x);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof Map; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakMap(x) {\n    if (!weakMapHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakMapHas.call(x, weakMapHas);\n        try {\n            weakSetHas.call(x, weakSetHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakMap; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakRef(x) {\n    if (!weakRefDeref || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakRefDeref.call(x);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isSet(x) {\n    if (!setSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        setSize.call(x);\n        try {\n            mapSize.call(x);\n        } catch (m) {\n            return true;\n        }\n        return x instanceof Set; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakSet(x) {\n    if (!weakSetHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakSetHas.call(x, weakSetHas);\n        try {\n            weakMapHas.call(x, weakMapHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakSet; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isElement(x) {\n    if (!x || typeof x !== 'object') { return false; }\n    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {\n        return true;\n    }\n    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';\n}\n\nfunction inspectString(str, opts) {\n    if (str.length > opts.maxStringLength) {\n        var remaining = str.length - opts.maxStringLength;\n        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');\n        return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;\n    }\n    // eslint-disable-next-line no-control-regex\n    var s = $replace.call($replace.call(str, /(['\\\\])/g, '\\\\$1'), /[\\x00-\\x1f]/g, lowbyte);\n    return wrapQuotes(s, 'single', opts);\n}\n\nfunction lowbyte(c) {\n    var n = c.charCodeAt(0);\n    var x = {\n        8: 'b',\n        9: 't',\n        10: 'n',\n        12: 'f',\n        13: 'r'\n    }[n];\n    if (x) { return '\\\\' + x; }\n    return '\\\\x' + (n < 0x10 ? '0' : '') + $toUpperCase.call(n.toString(16));\n}\n\nfunction markBoxed(str) {\n    return 'Object(' + str + ')';\n}\n\nfunction weakCollectionOf(type) {\n    return type + ' { ? }';\n}\n\nfunction collectionOf(type, size, entries, indent) {\n    var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ', ');\n    return type + ' (' + size + ') {' + joinedEntries + '}';\n}\n\nfunction singleLineValues(xs) {\n    for (var i = 0; i < xs.length; i++) {\n        if (indexOf(xs[i], '\\n') >= 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction getIndent(opts, depth) {\n    var baseIndent;\n    if (opts.indent === '\\t') {\n        baseIndent = '\\t';\n    } else if (typeof opts.indent === 'number' && opts.indent > 0) {\n        baseIndent = $join.call(Array(opts.indent + 1), ' ');\n    } else {\n        return null;\n    }\n    return {\n        base: baseIndent,\n        prev: $join.call(Array(depth + 1), baseIndent)\n    };\n}\n\nfunction indentedJoin(xs, indent) {\n    if (xs.length === 0) { return ''; }\n    var lineJoiner = '\\n' + indent.prev + indent.base;\n    return lineJoiner + $join.call(xs, ',' + lineJoiner) + '\\n' + indent.prev;\n}\n\nfunction arrObjKeys(obj, inspect) {\n    var isArr = isArray(obj);\n    var xs = [];\n    if (isArr) {\n        xs.length = obj.length;\n        for (var i = 0; i < obj.length; i++) {\n            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';\n        }\n    }\n    var syms = typeof gOPS === 'function' ? gOPS(obj) : [];\n    var symMap;\n    if (hasShammedSymbols) {\n        symMap = {};\n        for (var k = 0; k < syms.length; k++) {\n            symMap['$' + syms[k]] = syms[k];\n        }\n    }\n\n    for (var key in obj) { // eslint-disable-line no-restricted-syntax\n        if (!has(obj, key)) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {\n            // this is to prevent shammed Symbols, which are stored as strings, from being included in the string key section\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\n        } else if ($test.call(/[^\\w$]/, key)) {\n            xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));\n        } else {\n            xs.push(key + ': ' + inspect(obj[key], obj));\n        }\n    }\n    if (typeof gOPS === 'function') {\n        for (var j = 0; j < syms.length; j++) {\n            if (isEnumerable.call(obj, syms[j])) {\n                xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));\n            }\n        }\n    }\n    return xs;\n}\n", "'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bind/callBound');\nvar inspect = require('object-inspect');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar $WeakMap = GetIntrinsic('%WeakMap%', true);\nvar $Map = GetIntrinsic('%Map%', true);\n\nvar $weakMapGet = callBound('WeakMap.prototype.get', true);\nvar $weakMapSet = callBound('WeakMap.prototype.set', true);\nvar $weakMapHas = callBound('WeakMap.prototype.has', true);\nvar $mapGet = callBound('Map.prototype.get', true);\nvar $mapSet = callBound('Map.prototype.set', true);\nvar $mapHas = callBound('Map.prototype.has', true);\n\n/*\n * This function traverses the list returning the node corresponding to the\n * given key.\n *\n * That node is also moved to the head of the list, so that if it's accessed\n * again we don't need to traverse the whole list. By doing so, all the recently\n * used nodes can be accessed relatively quickly.\n */\nvar listGetNode = function (list, key) { // eslint-disable-line consistent-return\n\tfor (var prev = list, curr; (curr = prev.next) !== null; prev = curr) {\n\t\tif (curr.key === key) {\n\t\t\tprev.next = curr.next;\n\t\t\tcurr.next = list.next;\n\t\t\tlist.next = curr; // eslint-disable-line no-param-reassign\n\t\t\treturn curr;\n\t\t}\n\t}\n};\n\nvar listGet = function (objects, key) {\n\tvar node = listGetNode(objects, key);\n\treturn node && node.value;\n};\nvar listSet = function (objects, key, value) {\n\tvar node = listGetNode(objects, key);\n\tif (node) {\n\t\tnode.value = value;\n\t} else {\n\t\t// Prepend the new node to the beginning of the list\n\t\tobjects.next = { // eslint-disable-line no-param-reassign\n\t\t\tkey: key,\n\t\t\tnext: objects.next,\n\t\t\tvalue: value\n\t\t};\n\t}\n};\nvar listHas = function (objects, key) {\n\treturn !!listGetNode(objects, key);\n};\n\nmodule.exports = function getSideChannel() {\n\tvar $wm;\n\tvar $m;\n\tvar $o;\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\tget: function (key) { // eslint-disable-line consistent-return\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapGet($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapGet($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listGet($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\thas: function (key) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapHas($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapHas($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listHas($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif (!$wm) {\n\t\t\t\t\t$wm = new $WeakMap();\n\t\t\t\t}\n\t\t\t\t$weakMapSet($wm, key, value);\n\t\t\t} else if ($Map) {\n\t\t\t\tif (!$m) {\n\t\t\t\t\t$m = new $Map();\n\t\t\t\t}\n\t\t\t\t$mapSet($m, key, value);\n\t\t\t} else {\n\t\t\t\tif (!$o) {\n\t\t\t\t\t/*\n\t\t\t\t\t * Initialize the linked list as an empty node, so that we don't have\n\t\t\t\t\t * to special-case handling of the first node: we can always refer to\n\t\t\t\t\t * it as (previous node).next, instead of something like (list).head\n\t\t\t\t\t */\n\t\t\t\t\t$o = { key: {}, next: null };\n\t\t\t\t}\n\t\t\t\tlistSet($o, key, value);\n\t\t\t}\n\t\t}\n\t};\n\treturn channel;\n};\n", "'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = {\n    'default': Format.RFC3986,\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return String(value);\n        }\n    },\n    RFC1738: Format.RFC1738,\n    RFC3986: Format.RFC3986\n};\n", "'use strict';\n\nvar formats = require('./formats');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar encode = function encode(str, defaultEncoder, charset, kind, format) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var i = 0; i < string.length; ++i) {\n        var c = string.charCodeAt(i);\n\n        if (\n            c === 0x2D // -\n            || c === 0x2E // .\n            || c === 0x5F // _\n            || c === 0x7E // ~\n            || (c >= 0x30 && c <= 0x39) // 0-9\n            || (c >= 0x41 && c <= 0x5A) // a-z\n            || (c >= 0x61 && c <= 0x7A) // A-Z\n            || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n        ) {\n            out += string.charAt(i);\n            continue;\n        }\n\n        if (c < 0x80) {\n            out = out + hexTable[c];\n            continue;\n        }\n\n        if (c < 0x800) {\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        if (c < 0xD800 || c >= 0xE000) {\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\n            continue;\n        }\n\n        i += 1;\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\n        /* eslint operator-linebreak: [2, \"before\"] */\n        out += hexTable[0xF0 | (c >> 18)]\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\n            + hexTable[0x80 | (c & 0x3F)];\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    maybeMap: maybeMap,\n    merge: merge\n};\n", "'use strict';\n\nvar getSideChannel = require('side-channel');\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar sentinel = {};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    commaRoundTrip,\n    strictNullHandling,\n    skipNulls,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    format,\n    formatter,\n    encodeValuesOnly,\n    charset,\n    sideChannel\n) {\n    var obj = object;\n\n    var tmpSc = sideChannel;\n    var step = 0;\n    var findFlag = false;\n    while ((tmpSc = tmpSc.get(sentinel)) !== void undefined && !findFlag) {\n        // Where object last appeared in the ref tree\n        var pos = tmpSc.get(object);\n        step += 1;\n        if (typeof pos !== 'undefined') {\n            if (pos === step) {\n                throw new RangeError('Cyclic object value');\n            } else {\n                findFlag = true; // Break while\n            }\n        }\n        if (typeof tmpSc.get(sentinel) === 'undefined') {\n            step = 0;\n        }\n    }\n\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = utils.maybeMap(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate(value);\n            }\n            return value;\n        });\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        // we need to join elements in\n        if (encodeValuesOnly && encoder) {\n            obj = utils.maybeMap(obj, encoder);\n        }\n        objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n    } else if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    var adjustedPrefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? prefix + '[]' : prefix;\n\n    for (var j = 0; j < objKeys.length; ++j) {\n        var key = objKeys[j];\n        var value = typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];\n\n        if (skipNulls && value === null) {\n            continue;\n        }\n\n        var keyPrefix = isArray(obj)\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(adjustedPrefix, key) : adjustedPrefix\n            : adjustedPrefix + (allowDots ? '.' + key : '[' + key + ']');\n\n        sideChannel.set(object, step);\n        var valueSideChannel = getSideChannel();\n        valueSideChannel.set(sentinel, sideChannel);\n        pushToArray(values, stringify(\n            value,\n            keyPrefix,\n            generateArrayPrefix,\n            commaRoundTrip,\n            strictNullHandling,\n            skipNulls,\n            generateArrayPrefix === 'comma' && encodeValuesOnly && isArray(obj) ? null : encoder,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            format,\n            formatter,\n            encodeValuesOnly,\n            charset,\n            valueSideChannel\n        ));\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var arrayFormat;\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if (opts && 'indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = 'indices';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\n    if (opts && 'commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\n    }\n    var commaRoundTrip = generateArrayPrefix === 'comma' && opts && opts.commaRoundTrip;\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    var sideChannel = getSideChannel();\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            commaRoundTrip,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.format,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset,\n            sideChannel\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('\u2713')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n", "'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowPrototypes: false,\n    allowSparse: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the \u2713 character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the \u2713 character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('\u2713')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = { __proto__: null };\n\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n            val = utils.maybeMap(\n                parseArrayValue(part.slice(pos + 1), options),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        if (has.call(obj, key)) {\n            obj[key] = utils.combine(obj[key], val);\n        } else {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var leaf = valuesParsed ? val : parseArrayValue(val, options);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var index = parseInt(cleanRoot, 10);\n            if (!options.parseArrays && cleanRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== cleanRoot\n                && String(index) === cleanRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else if (cleanRoot !== '__proto__') {\n                obj[cleanRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, just add whatever is left\n\n    if (segment) {\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    return {\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    if (options.allowSparse === true) {\n        return obj;\n    }\n\n    return utils.compact(obj);\n};\n", "'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n", "export {};\n//# sourceMappingURL=types.js.map", null, "/** Types of elements found in htmlparser2's DOM */\nexport var ElementType;\n(function (ElementType) {\n    /** Type for the root element of a document */\n    ElementType[\"Root\"] = \"root\";\n    /** Type for Text */\n    ElementType[\"Text\"] = \"text\";\n    /** Type for <? ... ?> */\n    ElementType[\"Directive\"] = \"directive\";\n    /** Type for <!-- ... --> */\n    ElementType[\"Comment\"] = \"comment\";\n    /** Type for <script> tags */\n    ElementType[\"Script\"] = \"script\";\n    /** Type for <style> tags */\n    ElementType[\"Style\"] = \"style\";\n    /** Type for Any tag */\n    ElementType[\"Tag\"] = \"tag\";\n    /** Type for <![CDATA[ ... ]]> */\n    ElementType[\"CDATA\"] = \"cdata\";\n    /** Type for <!doctype ...> */\n    ElementType[\"Doctype\"] = \"doctype\";\n})(ElementType || (ElementType = {}));\n/**\n * Tests whether an element is a tag or not.\n *\n * @param elem Element to test\n */\nexport function isTag(elem) {\n    return (elem.type === ElementType.Tag ||\n        elem.type === ElementType.Script ||\n        elem.type === ElementType.Style);\n}\n// Exports for backwards compatibility\n/** Type for the root element of a document */\nexport const Root = ElementType.Root;\n/** Type for Text */\nexport const Text = ElementType.Text;\n/** Type for <? ... ?> */\nexport const Directive = ElementType.Directive;\n/** Type for <!-- ... --> */\nexport const Comment = ElementType.Comment;\n/** Type for <script> tags */\nexport const Script = ElementType.Script;\n/** Type for <style> tags */\nexport const Style = ElementType.Style;\n/** Type for Any tag */\nexport const Tag = ElementType.Tag;\n/** Type for <![CDATA[ ... ]]> */\nexport const CDATA = ElementType.CDATA;\n/** Type for <!doctype ...> */\nexport const Doctype = ElementType.Doctype;\n", "import { ElementType, isTag as isTagRaw } from \"domelementtype\";\n/**\n * This object will be used as the prototype for Nodes when creating a\n * DOM-Level-1-compliant structure.\n */\nexport class Node {\n    constructor() {\n        /** Parent of the node */\n        this.parent = null;\n        /** Previous sibling */\n        this.prev = null;\n        /** Next sibling */\n        this.next = null;\n        /** The start index of the node. Requires `withStartIndices` on the handler to be `true. */\n        this.startIndex = null;\n        /** The end index of the node. Requires `withEndIndices` on the handler to be `true. */\n        this.endIndex = null;\n    }\n    // Read-write aliases for properties\n    /**\n     * Same as {@link parent}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get parentNode() {\n        return this.parent;\n    }\n    set parentNode(parent) {\n        this.parent = parent;\n    }\n    /**\n     * Same as {@link prev}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get previousSibling() {\n        return this.prev;\n    }\n    set previousSibling(prev) {\n        this.prev = prev;\n    }\n    /**\n     * Same as {@link next}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get nextSibling() {\n        return this.next;\n    }\n    set nextSibling(next) {\n        this.next = next;\n    }\n    /**\n     * Clone this node, and optionally its children.\n     *\n     * @param recursive Clone child nodes as well.\n     * @returns A clone of the node.\n     */\n    cloneNode(recursive = false) {\n        return cloneNode(this, recursive);\n    }\n}\n/**\n * A node that contains some data.\n */\nexport class DataNode extends Node {\n    /**\n     * @param data The content of the data node\n     */\n    constructor(data) {\n        super();\n        this.data = data;\n    }\n    /**\n     * Same as {@link data}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get nodeValue() {\n        return this.data;\n    }\n    set nodeValue(data) {\n        this.data = data;\n    }\n}\n/**\n * Text within the document.\n */\nexport class Text extends DataNode {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.Text;\n    }\n    get nodeType() {\n        return 3;\n    }\n}\n/**\n * Comments within the document.\n */\nexport class Comment extends DataNode {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.Comment;\n    }\n    get nodeType() {\n        return 8;\n    }\n}\n/**\n * Processing instructions, including doc types.\n */\nexport class ProcessingInstruction extends DataNode {\n    constructor(name, data) {\n        super(data);\n        this.name = name;\n        this.type = ElementType.Directive;\n    }\n    get nodeType() {\n        return 1;\n    }\n}\n/**\n * A `Node` that can have children.\n */\nexport class NodeWithChildren extends Node {\n    /**\n     * @param children Children of the node. Only certain node types can have children.\n     */\n    constructor(children) {\n        super();\n        this.children = children;\n    }\n    // Aliases\n    /** First child of the node. */\n    get firstChild() {\n        var _a;\n        return (_a = this.children[0]) !== null && _a !== void 0 ? _a : null;\n    }\n    /** Last child of the node. */\n    get lastChild() {\n        return this.children.length > 0\n            ? this.children[this.children.length - 1]\n            : null;\n    }\n    /**\n     * Same as {@link children}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get childNodes() {\n        return this.children;\n    }\n    set childNodes(children) {\n        this.children = children;\n    }\n}\nexport class CDATA extends NodeWithChildren {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.CDATA;\n    }\n    get nodeType() {\n        return 4;\n    }\n}\n/**\n * The root node of the document.\n */\nexport class Document extends NodeWithChildren {\n    constructor() {\n        super(...arguments);\n        this.type = ElementType.Root;\n    }\n    get nodeType() {\n        return 9;\n    }\n}\n/**\n * An element within the DOM.\n */\nexport class Element extends NodeWithChildren {\n    /**\n     * @param name Name of the tag, eg. `div`, `span`.\n     * @param attribs Object mapping attribute names to attribute values.\n     * @param children Children of the node.\n     */\n    constructor(name, attribs, children = [], type = name === \"script\"\n        ? ElementType.Script\n        : name === \"style\"\n            ? ElementType.Style\n            : ElementType.Tag) {\n        super(children);\n        this.name = name;\n        this.attribs = attribs;\n        this.type = type;\n    }\n    get nodeType() {\n        return 1;\n    }\n    // DOM Level 1 aliases\n    /**\n     * Same as {@link name}.\n     * [DOM spec](https://dom.spec.whatwg.org)-compatible alias.\n     */\n    get tagName() {\n        return this.name;\n    }\n    set tagName(name) {\n        this.name = name;\n    }\n    get attributes() {\n        return Object.keys(this.attribs).map((name) => {\n            var _a, _b;\n            return ({\n                name,\n                value: this.attribs[name],\n                namespace: (_a = this[\"x-attribsNamespace\"]) === null || _a === void 0 ? void 0 : _a[name],\n                prefix: (_b = this[\"x-attribsPrefix\"]) === null || _b === void 0 ? void 0 : _b[name],\n            });\n        });\n    }\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node is a `Element`, `false` otherwise.\n */\nexport function isTag(node) {\n    return isTagRaw(node);\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `CDATA`, `false` otherwise.\n */\nexport function isCDATA(node) {\n    return node.type === ElementType.CDATA;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `Text`, `false` otherwise.\n */\nexport function isText(node) {\n    return node.type === ElementType.Text;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `Comment`, `false` otherwise.\n */\nexport function isComment(node) {\n    return node.type === ElementType.Comment;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n */\nexport function isDirective(node) {\n    return node.type === ElementType.Directive;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has the type `ProcessingInstruction`, `false` otherwise.\n */\nexport function isDocument(node) {\n    return node.type === ElementType.Root;\n}\n/**\n * @param node Node to check.\n * @returns `true` if the node has children, `false` otherwise.\n */\nexport function hasChildren(node) {\n    return Object.prototype.hasOwnProperty.call(node, \"children\");\n}\n/**\n * Clone a node, and optionally its children.\n *\n * @param recursive Clone child nodes as well.\n * @returns A clone of the node.\n */\nexport function cloneNode(node, recursive = false) {\n    let result;\n    if (isText(node)) {\n        result = new Text(node.data);\n    }\n    else if (isComment(node)) {\n        result = new Comment(node.data);\n    }\n    else if (isTag(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new Element(node.name, { ...node.attribs }, children);\n        children.forEach((child) => (child.parent = clone));\n        if (node.namespace != null) {\n            clone.namespace = node.namespace;\n        }\n        if (node[\"x-attribsNamespace\"]) {\n            clone[\"x-attribsNamespace\"] = { ...node[\"x-attribsNamespace\"] };\n        }\n        if (node[\"x-attribsPrefix\"]) {\n            clone[\"x-attribsPrefix\"] = { ...node[\"x-attribsPrefix\"] };\n        }\n        result = clone;\n    }\n    else if (isCDATA(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new CDATA(children);\n        children.forEach((child) => (child.parent = clone));\n        result = clone;\n    }\n    else if (isDocument(node)) {\n        const children = recursive ? cloneChildren(node.children) : [];\n        const clone = new Document(children);\n        children.forEach((child) => (child.parent = clone));\n        if (node[\"x-mode\"]) {\n            clone[\"x-mode\"] = node[\"x-mode\"];\n        }\n        result = clone;\n    }\n    else if (isDirective(node)) {\n        const instruction = new ProcessingInstruction(node.name, node.data);\n        if (node[\"x-name\"] != null) {\n            instruction[\"x-name\"] = node[\"x-name\"];\n            instruction[\"x-publicId\"] = node[\"x-publicId\"];\n            instruction[\"x-systemId\"] = node[\"x-systemId\"];\n        }\n        result = instruction;\n    }\n    else {\n        throw new Error(`Not implemented yet: ${node.type}`);\n    }\n    result.startIndex = node.startIndex;\n    result.endIndex = node.endIndex;\n    if (node.sourceCodeLocation != null) {\n        result.sourceCodeLocation = node.sourceCodeLocation;\n    }\n    return result;\n}\nfunction cloneChildren(childs) {\n    const children = childs.map((child) => cloneNode(child, true));\n    for (let i = 1; i < children.length; i++) {\n        children[i].prev = children[i - 1];\n        children[i - 1].next = children[i];\n    }\n    return children;\n}\n", "import { ElementType } from \"domelementtype\";\nimport { Element, Text, Comment, CDATA, Document, ProcessingInstruction, } from \"./node.js\";\nexport * from \"./node.js\";\n// Default options\nconst defaultOpts = {\n    withStartIndices: false,\n    withEndIndices: false,\n    xmlMode: false,\n};\nexport class DomHandler {\n    /**\n     * @param callback Called once parsing has completed.\n     * @param options Settings for the handler.\n     * @param elementCB Callback whenever a tag is closed.\n     */\n    constructor(callback, options, elementCB) {\n        /** The elements of the DOM */\n        this.dom = [];\n        /** The root element for the DOM */\n        this.root = new Document(this.dom);\n        /** Indicated whether parsing has been completed. */\n        this.done = false;\n        /** Stack of open tags. */\n        this.tagStack = [this.root];\n        /** A data node that is still being written to. */\n        this.lastNode = null;\n        /** Reference to the parser instance. Used for location information. */\n        this.parser = null;\n        // Make it possible to skip arguments, for backwards-compatibility\n        if (typeof options === \"function\") {\n            elementCB = options;\n            options = defaultOpts;\n        }\n        if (typeof callback === \"object\") {\n            options = callback;\n            callback = undefined;\n        }\n        this.callback = callback !== null && callback !== void 0 ? callback : null;\n        this.options = options !== null && options !== void 0 ? options : defaultOpts;\n        this.elementCB = elementCB !== null && elementCB !== void 0 ? elementCB : null;\n    }\n    onparserinit(parser) {\n        this.parser = parser;\n    }\n    // Resets the handler back to starting state\n    onreset() {\n        this.dom = [];\n        this.root = new Document(this.dom);\n        this.done = false;\n        this.tagStack = [this.root];\n        this.lastNode = null;\n        this.parser = null;\n    }\n    // Signals the handler that parsing is done\n    onend() {\n        if (this.done)\n            return;\n        this.done = true;\n        this.parser = null;\n        this.handleCallback(null);\n    }\n    onerror(error) {\n        this.handleCallback(error);\n    }\n    onclosetag() {\n        this.lastNode = null;\n        const elem = this.tagStack.pop();\n        if (this.options.withEndIndices) {\n            elem.endIndex = this.parser.endIndex;\n        }\n        if (this.elementCB)\n            this.elementCB(elem);\n    }\n    onopentag(name, attribs) {\n        const type = this.options.xmlMode ? ElementType.Tag : undefined;\n        const element = new Element(name, attribs, undefined, type);\n        this.addNode(element);\n        this.tagStack.push(element);\n    }\n    ontext(data) {\n        const { lastNode } = this;\n        if (lastNode && lastNode.type === ElementType.Text) {\n            lastNode.data += data;\n            if (this.options.withEndIndices) {\n                lastNode.endIndex = this.parser.endIndex;\n            }\n        }\n        else {\n            const node = new Text(data);\n            this.addNode(node);\n            this.lastNode = node;\n        }\n    }\n    oncomment(data) {\n        if (this.lastNode && this.lastNode.type === ElementType.Comment) {\n            this.lastNode.data += data;\n            return;\n        }\n        const node = new Comment(data);\n        this.addNode(node);\n        this.lastNode = node;\n    }\n    oncommentend() {\n        this.lastNode = null;\n    }\n    oncdatastart() {\n        const text = new Text(\"\");\n        const node = new CDATA([text]);\n        this.addNode(node);\n        text.parent = node;\n        this.lastNode = text;\n    }\n    oncdataend() {\n        this.lastNode = null;\n    }\n    onprocessinginstruction(name, data) {\n        const node = new ProcessingInstruction(name, data);\n        this.addNode(node);\n    }\n    handleCallback(error) {\n        if (typeof this.callback === \"function\") {\n            this.callback(error, this.dom);\n        }\n        else if (error) {\n            throw error;\n        }\n    }\n    addNode(node) {\n        const parent = this.tagStack[this.tagStack.length - 1];\n        const previousSibling = parent.children[parent.children.length - 1];\n        if (this.options.withStartIndices) {\n            node.startIndex = this.parser.startIndex;\n        }\n        if (this.options.withEndIndices) {\n            node.endIndex = this.parser.endIndex;\n        }\n        parent.children.push(node);\n        if (previousSibling) {\n            node.prev = previousSibling;\n            previousSibling.next = node;\n        }\n        node.parent = parent;\n        this.lastNode = null;\n    }\n}\nexport default DomHandler;\n", null, null, null, null, null, null, null, null, "export const elementNames = new Map([\n    \"altGlyph\",\n    \"altGlyphDef\",\n    \"altGlyphItem\",\n    \"animateColor\",\n    \"animateMotion\",\n    \"animateTransform\",\n    \"clipPath\",\n    \"feBlend\",\n    \"feColorMatrix\",\n    \"feComponentTransfer\",\n    \"feComposite\",\n    \"feConvolveMatrix\",\n    \"feDiffuseLighting\",\n    \"feDisplacementMap\",\n    \"feDistantLight\",\n    \"feDropShadow\",\n    \"feFlood\",\n    \"feFuncA\",\n    \"feFuncB\",\n    \"feFuncG\",\n    \"feFuncR\",\n    \"feGaussianBlur\",\n    \"feImage\",\n    \"feMerge\",\n    \"feMergeNode\",\n    \"feMorphology\",\n    \"feOffset\",\n    \"fePointLight\",\n    \"feSpecularLighting\",\n    \"feSpotLight\",\n    \"feTile\",\n    \"feTurbulence\",\n    \"foreignObject\",\n    \"glyphRef\",\n    \"linearGradient\",\n    \"radialGradient\",\n    \"textPath\",\n].map((val) => [val.toLowerCase(), val]));\nexport const attributeNames = new Map([\n    \"definitionURL\",\n    \"attributeName\",\n    \"attributeType\",\n    \"baseFrequency\",\n    \"baseProfile\",\n    \"calcMode\",\n    \"clipPathUnits\",\n    \"diffuseConstant\",\n    \"edgeMode\",\n    \"filterUnits\",\n    \"glyphRef\",\n    \"gradientTransform\",\n    \"gradientUnits\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keyPoints\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"lengthAdjust\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerUnits\",\n    \"markerWidth\",\n    \"maskContentUnits\",\n    \"maskUnits\",\n    \"numOctaves\",\n    \"pathLength\",\n    \"patternContentUnits\",\n    \"patternTransform\",\n    \"patternUnits\",\n    \"pointsAtX\",\n    \"pointsAtY\",\n    \"pointsAtZ\",\n    \"preserveAlpha\",\n    \"preserveAspectRatio\",\n    \"primitiveUnits\",\n    \"refX\",\n    \"refY\",\n    \"repeatCount\",\n    \"repeatDur\",\n    \"requiredExtensions\",\n    \"requiredFeatures\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"spreadMethod\",\n    \"startOffset\",\n    \"stdDeviation\",\n    \"stitchTiles\",\n    \"surfaceScale\",\n    \"systemLanguage\",\n    \"tableValues\",\n    \"targetX\",\n    \"targetY\",\n    \"textLength\",\n    \"viewBox\",\n    \"viewTarget\",\n    \"xChannelSelector\",\n    \"yChannelSelector\",\n    \"zoomAndPan\",\n].map((val) => [val.toLowerCase(), val]));\n", "/*\n * Module dependencies\n */\nimport * as ElementType from \"domelementtype\";\nimport { encodeXML, escapeAttribute, escapeText } from \"entities\";\n/**\n * Mixed-case SVG and MathML tags & attributes\n * recognized by the HTML parser.\n *\n * @see https://html.spec.whatwg.org/multipage/parsing.html#parsing-main-inforeign\n */\nimport { elementNames, attributeNames } from \"./foreignNames.js\";\nconst unencodedElements = new Set([\n    \"style\",\n    \"script\",\n    \"xmp\",\n    \"iframe\",\n    \"noembed\",\n    \"noframes\",\n    \"plaintext\",\n    \"noscript\",\n]);\nfunction replaceQuotes(value) {\n    return value.replace(/\"/g, \"&quot;\");\n}\n/**\n * Format attributes\n */\nfunction formatAttributes(attributes, opts) {\n    var _a;\n    if (!attributes)\n        return;\n    const encode = ((_a = opts.encodeEntities) !== null && _a !== void 0 ? _a : opts.decodeEntities) === false\n        ? replaceQuotes\n        : opts.xmlMode || opts.encodeEntities !== \"utf8\"\n            ? encodeXML\n            : escapeAttribute;\n    return Object.keys(attributes)\n        .map((key) => {\n        var _a, _b;\n        const value = (_a = attributes[key]) !== null && _a !== void 0 ? _a : \"\";\n        if (opts.xmlMode === \"foreign\") {\n            /* Fix up mixed-case attribute names */\n            key = (_b = attributeNames.get(key)) !== null && _b !== void 0 ? _b : key;\n        }\n        if (!opts.emptyAttrs && !opts.xmlMode && value === \"\") {\n            return key;\n        }\n        return `${key}=\"${encode(value)}\"`;\n    })\n        .join(\" \");\n}\n/**\n * Self-enclosing tags\n */\nconst singleTag = new Set([\n    \"area\",\n    \"base\",\n    \"basefont\",\n    \"br\",\n    \"col\",\n    \"command\",\n    \"embed\",\n    \"frame\",\n    \"hr\",\n    \"img\",\n    \"input\",\n    \"isindex\",\n    \"keygen\",\n    \"link\",\n    \"meta\",\n    \"param\",\n    \"source\",\n    \"track\",\n    \"wbr\",\n]);\n/**\n * Renders a DOM node or an array of DOM nodes to a string.\n *\n * Can be thought of as the equivalent of the `outerHTML` of the passed node(s).\n *\n * @param node Node to be rendered.\n * @param options Changes serialization behavior\n */\nexport function render(node, options = {}) {\n    const nodes = \"length\" in node ? node : [node];\n    let output = \"\";\n    for (let i = 0; i < nodes.length; i++) {\n        output += renderNode(nodes[i], options);\n    }\n    return output;\n}\nexport default render;\nfunction renderNode(node, options) {\n    switch (node.type) {\n        case ElementType.Root:\n            return render(node.children, options);\n        // @ts-expect-error We don't use `Doctype` yet\n        case ElementType.Doctype:\n        case ElementType.Directive:\n            return renderDirective(node);\n        case ElementType.Comment:\n            return renderComment(node);\n        case ElementType.CDATA:\n            return renderCdata(node);\n        case ElementType.Script:\n        case ElementType.Style:\n        case ElementType.Tag:\n            return renderTag(node, options);\n        case ElementType.Text:\n            return renderText(node, options);\n    }\n}\nconst foreignModeIntegrationPoints = new Set([\n    \"mi\",\n    \"mo\",\n    \"mn\",\n    \"ms\",\n    \"mtext\",\n    \"annotation-xml\",\n    \"foreignObject\",\n    \"desc\",\n    \"title\",\n]);\nconst foreignElements = new Set([\"svg\", \"math\"]);\nfunction renderTag(elem, opts) {\n    var _a;\n    // Handle SVG / MathML in HTML\n    if (opts.xmlMode === \"foreign\") {\n        /* Fix up mixed-case element names */\n        elem.name = (_a = elementNames.get(elem.name)) !== null && _a !== void 0 ? _a : elem.name;\n        /* Exit foreign mode at integration points */\n        if (elem.parent &&\n            foreignModeIntegrationPoints.has(elem.parent.name)) {\n            opts = { ...opts, xmlMode: false };\n        }\n    }\n    if (!opts.xmlMode && foreignElements.has(elem.name)) {\n        opts = { ...opts, xmlMode: \"foreign\" };\n    }\n    let tag = `<${elem.name}`;\n    const attribs = formatAttributes(elem.attribs, opts);\n    if (attribs) {\n        tag += ` ${attribs}`;\n    }\n    if (elem.children.length === 0 &&\n        (opts.xmlMode\n            ? // In XML mode or foreign mode, and user hasn't explicitly turned off self-closing tags\n                opts.selfClosingTags !== false\n            : // User explicitly asked for self-closing tags, even in HTML mode\n                opts.selfClosingTags && singleTag.has(elem.name))) {\n        if (!opts.xmlMode)\n            tag += \" \";\n        tag += \"/>\";\n    }\n    else {\n        tag += \">\";\n        if (elem.children.length > 0) {\n            tag += render(elem.children, opts);\n        }\n        if (opts.xmlMode || !singleTag.has(elem.name)) {\n            tag += `</${elem.name}>`;\n        }\n    }\n    return tag;\n}\nfunction renderDirective(elem) {\n    return `<${elem.data}>`;\n}\nfunction renderText(elem, opts) {\n    var _a;\n    let data = elem.data || \"\";\n    // If entities weren't decoded, no need to encode them back\n    if (((_a = opts.encodeEntities) !== null && _a !== void 0 ? _a : opts.decodeEntities) !== false &&\n        !(!opts.xmlMode &&\n            elem.parent &&\n            unencodedElements.has(elem.parent.name))) {\n        data =\n            opts.xmlMode || opts.encodeEntities !== \"utf8\"\n                ? encodeXML(data)\n                : escapeText(data);\n    }\n    return data;\n}\nfunction renderCdata(elem) {\n    return `<![CDATA[${elem.children[0].data}]]>`;\n}\nfunction renderComment(elem) {\n    return `<!--${elem.data}-->`;\n}\n", null, null, null, null, null, null, null, null, null, null, null, "export var SelectorType;\n(function (SelectorType) {\n    SelectorType[\"Attribute\"] = \"attribute\";\n    SelectorType[\"Pseudo\"] = \"pseudo\";\n    SelectorType[\"PseudoElement\"] = \"pseudo-element\";\n    SelectorType[\"Tag\"] = \"tag\";\n    SelectorType[\"Universal\"] = \"universal\";\n    // Traversals\n    SelectorType[\"Adjacent\"] = \"adjacent\";\n    SelectorType[\"Child\"] = \"child\";\n    SelectorType[\"Descendant\"] = \"descendant\";\n    SelectorType[\"Parent\"] = \"parent\";\n    SelectorType[\"Sibling\"] = \"sibling\";\n    SelectorType[\"ColumnCombinator\"] = \"column-combinator\";\n})(SelectorType || (SelectorType = {}));\n/**\n * Modes for ignore case.\n *\n * This could be updated to an enum, and the object is\n * the current stand-in that will allow code to be updated\n * without big changes.\n */\nexport const IgnoreCaseMode = {\n    Unknown: null,\n    QuirksMode: \"quirks\",\n    IgnoreCase: true,\n    CaseSensitive: false,\n};\nexport var AttributeAction;\n(function (AttributeAction) {\n    AttributeAction[\"Any\"] = \"any\";\n    AttributeAction[\"Element\"] = \"element\";\n    AttributeAction[\"End\"] = \"end\";\n    AttributeAction[\"Equals\"] = \"equals\";\n    AttributeAction[\"Exists\"] = \"exists\";\n    AttributeAction[\"Hyphen\"] = \"hyphen\";\n    AttributeAction[\"Not\"] = \"not\";\n    AttributeAction[\"Start\"] = \"start\";\n})(AttributeAction || (AttributeAction = {}));\n", "import { SelectorType, AttributeAction, } from \"./types\";\nconst reName = /^[^\\\\#]?(?:\\\\(?:[\\da-f]{1,6}\\s?|.)|[\\w\\-\\u00b0-\\uFFFF])+/;\nconst reEscape = /\\\\([\\da-f]{1,6}\\s?|(\\s)|.)/gi;\nconst actionTypes = new Map([\n    [126 /* Tilde */, AttributeAction.Element],\n    [94 /* Circumflex */, AttributeAction.Start],\n    [36 /* Dollar */, AttributeAction.End],\n    [42 /* Asterisk */, AttributeAction.Any],\n    [33 /* ExclamationMark */, AttributeAction.Not],\n    [124 /* Pipe */, AttributeAction.Hyphen],\n]);\n// Pseudos, whose data property is parsed as well.\nconst unpackPseudos = new Set([\n    \"has\",\n    \"not\",\n    \"matches\",\n    \"is\",\n    \"where\",\n    \"host\",\n    \"host-context\",\n]);\n/**\n * Checks whether a specific selector is a traversal.\n * This is useful eg. in swapping the order of elements that\n * are not traversals.\n *\n * @param selector Selector to check.\n */\nexport function isTraversal(selector) {\n    switch (selector.type) {\n        case SelectorType.Adjacent:\n        case SelectorType.Child:\n        case SelectorType.Descendant:\n        case SelectorType.Parent:\n        case SelectorType.Sibling:\n        case SelectorType.ColumnCombinator:\n            return true;\n        default:\n            return false;\n    }\n}\nconst stripQuotesFromPseudos = new Set([\"contains\", \"icontains\"]);\n// Unescape function taken from https://github.com/jquery/sizzle/blob/master/src/sizzle.js#L152\nfunction funescape(_, escaped, escapedWhitespace) {\n    const high = parseInt(escaped, 16) - 0x10000;\n    // NaN means non-codepoint\n    return high !== high || escapedWhitespace\n        ? escaped\n        : high < 0\n            ? // BMP codepoint\n                String.fromCharCode(high + 0x10000)\n            : // Supplemental Plane codepoint (surrogate pair)\n                String.fromCharCode((high >> 10) | 0xd800, (high & 0x3ff) | 0xdc00);\n}\nfunction unescapeCSS(str) {\n    return str.replace(reEscape, funescape);\n}\nfunction isQuote(c) {\n    return c === 39 /* SingleQuote */ || c === 34 /* DoubleQuote */;\n}\nfunction isWhitespace(c) {\n    return (c === 32 /* Space */ ||\n        c === 9 /* Tab */ ||\n        c === 10 /* NewLine */ ||\n        c === 12 /* FormFeed */ ||\n        c === 13 /* CarriageReturn */);\n}\n/**\n * Parses `selector`, optionally with the passed `options`.\n *\n * @param selector Selector to parse.\n * @param options Options for parsing.\n * @returns Returns a two-dimensional array.\n * The first dimension represents selectors separated by commas (eg. `sub1, sub2`),\n * the second contains the relevant tokens for that selector.\n */\nexport function parse(selector) {\n    const subselects = [];\n    const endIndex = parseSelector(subselects, `${selector}`, 0);\n    if (endIndex < selector.length) {\n        throw new Error(`Unmatched selector: ${selector.slice(endIndex)}`);\n    }\n    return subselects;\n}\nfunction parseSelector(subselects, selector, selectorIndex) {\n    let tokens = [];\n    function getName(offset) {\n        const match = selector.slice(selectorIndex + offset).match(reName);\n        if (!match) {\n            throw new Error(`Expected name, found ${selector.slice(selectorIndex)}`);\n        }\n        const [name] = match;\n        selectorIndex += offset + name.length;\n        return unescapeCSS(name);\n    }\n    function stripWhitespace(offset) {\n        selectorIndex += offset;\n        while (selectorIndex < selector.length &&\n            isWhitespace(selector.charCodeAt(selectorIndex))) {\n            selectorIndex++;\n        }\n    }\n    function readValueWithParenthesis() {\n        selectorIndex += 1;\n        const start = selectorIndex;\n        let counter = 1;\n        for (; counter > 0 && selectorIndex < selector.length; selectorIndex++) {\n            if (selector.charCodeAt(selectorIndex) ===\n                40 /* LeftParenthesis */ &&\n                !isEscaped(selectorIndex)) {\n                counter++;\n            }\n            else if (selector.charCodeAt(selectorIndex) ===\n                41 /* RightParenthesis */ &&\n                !isEscaped(selectorIndex)) {\n                counter--;\n            }\n        }\n        if (counter) {\n            throw new Error(\"Parenthesis not matched\");\n        }\n        return unescapeCSS(selector.slice(start, selectorIndex - 1));\n    }\n    function isEscaped(pos) {\n        let slashCount = 0;\n        while (selector.charCodeAt(--pos) === 92 /* BackSlash */)\n            slashCount++;\n        return (slashCount & 1) === 1;\n    }\n    function ensureNotTraversal() {\n        if (tokens.length > 0 && isTraversal(tokens[tokens.length - 1])) {\n            throw new Error(\"Did not expect successive traversals.\");\n        }\n    }\n    function addTraversal(type) {\n        if (tokens.length > 0 &&\n            tokens[tokens.length - 1].type === SelectorType.Descendant) {\n            tokens[tokens.length - 1].type = type;\n            return;\n        }\n        ensureNotTraversal();\n        tokens.push({ type });\n    }\n    function addSpecialAttribute(name, action) {\n        tokens.push({\n            type: SelectorType.Attribute,\n            name,\n            action,\n            value: getName(1),\n            namespace: null,\n            ignoreCase: \"quirks\",\n        });\n    }\n    /**\n     * We have finished parsing the current part of the selector.\n     *\n     * Remove descendant tokens at the end if they exist,\n     * and return the last index, so that parsing can be\n     * picked up from here.\n     */\n    function finalizeSubselector() {\n        if (tokens.length &&\n            tokens[tokens.length - 1].type === SelectorType.Descendant) {\n            tokens.pop();\n        }\n        if (tokens.length === 0) {\n            throw new Error(\"Empty sub-selector\");\n        }\n        subselects.push(tokens);\n    }\n    stripWhitespace(0);\n    if (selector.length === selectorIndex) {\n        return selectorIndex;\n    }\n    loop: while (selectorIndex < selector.length) {\n        const firstChar = selector.charCodeAt(selectorIndex);\n        switch (firstChar) {\n            // Whitespace\n            case 32 /* Space */:\n            case 9 /* Tab */:\n            case 10 /* NewLine */:\n            case 12 /* FormFeed */:\n            case 13 /* CarriageReturn */: {\n                if (tokens.length === 0 ||\n                    tokens[0].type !== SelectorType.Descendant) {\n                    ensureNotTraversal();\n                    tokens.push({ type: SelectorType.Descendant });\n                }\n                stripWhitespace(1);\n                break;\n            }\n            // Traversals\n            case 62 /* GreaterThan */: {\n                addTraversal(SelectorType.Child);\n                stripWhitespace(1);\n                break;\n            }\n            case 60 /* LessThan */: {\n                addTraversal(SelectorType.Parent);\n                stripWhitespace(1);\n                break;\n            }\n            case 126 /* Tilde */: {\n                addTraversal(SelectorType.Sibling);\n                stripWhitespace(1);\n                break;\n            }\n            case 43 /* Plus */: {\n                addTraversal(SelectorType.Adjacent);\n                stripWhitespace(1);\n                break;\n            }\n            // Special attribute selectors: .class, #id\n            case 46 /* Period */: {\n                addSpecialAttribute(\"class\", AttributeAction.Element);\n                break;\n            }\n            case 35 /* Hash */: {\n                addSpecialAttribute(\"id\", AttributeAction.Equals);\n                break;\n            }\n            case 91 /* LeftSquareBracket */: {\n                stripWhitespace(1);\n                // Determine attribute name and namespace\n                let name;\n                let namespace = null;\n                if (selector.charCodeAt(selectorIndex) === 124 /* Pipe */) {\n                    // Equivalent to no namespace\n                    name = getName(1);\n                }\n                else if (selector.startsWith(\"*|\", selectorIndex)) {\n                    namespace = \"*\";\n                    name = getName(2);\n                }\n                else {\n                    name = getName(0);\n                    if (selector.charCodeAt(selectorIndex) === 124 /* Pipe */ &&\n                        selector.charCodeAt(selectorIndex + 1) !==\n                            61 /* Equal */) {\n                        namespace = name;\n                        name = getName(1);\n                    }\n                }\n                stripWhitespace(0);\n                // Determine comparison operation\n                let action = AttributeAction.Exists;\n                const possibleAction = actionTypes.get(selector.charCodeAt(selectorIndex));\n                if (possibleAction) {\n                    action = possibleAction;\n                    if (selector.charCodeAt(selectorIndex + 1) !==\n                        61 /* Equal */) {\n                        throw new Error(\"Expected `=`\");\n                    }\n                    stripWhitespace(2);\n                }\n                else if (selector.charCodeAt(selectorIndex) === 61 /* Equal */) {\n                    action = AttributeAction.Equals;\n                    stripWhitespace(1);\n                }\n                // Determine value\n                let value = \"\";\n                let ignoreCase = null;\n                if (action !== \"exists\") {\n                    if (isQuote(selector.charCodeAt(selectorIndex))) {\n                        const quote = selector.charCodeAt(selectorIndex);\n                        let sectionEnd = selectorIndex + 1;\n                        while (sectionEnd < selector.length &&\n                            (selector.charCodeAt(sectionEnd) !== quote ||\n                                isEscaped(sectionEnd))) {\n                            sectionEnd += 1;\n                        }\n                        if (selector.charCodeAt(sectionEnd) !== quote) {\n                            throw new Error(\"Attribute value didn't end\");\n                        }\n                        value = unescapeCSS(selector.slice(selectorIndex + 1, sectionEnd));\n                        selectorIndex = sectionEnd + 1;\n                    }\n                    else {\n                        const valueStart = selectorIndex;\n                        while (selectorIndex < selector.length &&\n                            ((!isWhitespace(selector.charCodeAt(selectorIndex)) &&\n                                selector.charCodeAt(selectorIndex) !==\n                                    93 /* RightSquareBracket */) ||\n                                isEscaped(selectorIndex))) {\n                            selectorIndex += 1;\n                        }\n                        value = unescapeCSS(selector.slice(valueStart, selectorIndex));\n                    }\n                    stripWhitespace(0);\n                    // See if we have a force ignore flag\n                    const forceIgnore = selector.charCodeAt(selectorIndex) | 0x20;\n                    // If the forceIgnore flag is set (either `i` or `s`), use that value\n                    if (forceIgnore === 115 /* LowerS */) {\n                        ignoreCase = false;\n                        stripWhitespace(1);\n                    }\n                    else if (forceIgnore === 105 /* LowerI */) {\n                        ignoreCase = true;\n                        stripWhitespace(1);\n                    }\n                }\n                if (selector.charCodeAt(selectorIndex) !==\n                    93 /* RightSquareBracket */) {\n                    throw new Error(\"Attribute selector didn't terminate\");\n                }\n                selectorIndex += 1;\n                const attributeSelector = {\n                    type: SelectorType.Attribute,\n                    name,\n                    action,\n                    value,\n                    namespace,\n                    ignoreCase,\n                };\n                tokens.push(attributeSelector);\n                break;\n            }\n            case 58 /* Colon */: {\n                if (selector.charCodeAt(selectorIndex + 1) === 58 /* Colon */) {\n                    tokens.push({\n                        type: SelectorType.PseudoElement,\n                        name: getName(2).toLowerCase(),\n                        data: selector.charCodeAt(selectorIndex) ===\n                            40 /* LeftParenthesis */\n                            ? readValueWithParenthesis()\n                            : null,\n                    });\n                    continue;\n                }\n                const name = getName(1).toLowerCase();\n                let data = null;\n                if (selector.charCodeAt(selectorIndex) ===\n                    40 /* LeftParenthesis */) {\n                    if (unpackPseudos.has(name)) {\n                        if (isQuote(selector.charCodeAt(selectorIndex + 1))) {\n                            throw new Error(`Pseudo-selector ${name} cannot be quoted`);\n                        }\n                        data = [];\n                        selectorIndex = parseSelector(data, selector, selectorIndex + 1);\n                        if (selector.charCodeAt(selectorIndex) !==\n                            41 /* RightParenthesis */) {\n                            throw new Error(`Missing closing parenthesis in :${name} (${selector})`);\n                        }\n                        selectorIndex += 1;\n                    }\n                    else {\n                        data = readValueWithParenthesis();\n                        if (stripQuotesFromPseudos.has(name)) {\n                            const quot = data.charCodeAt(0);\n                            if (quot === data.charCodeAt(data.length - 1) &&\n                                isQuote(quot)) {\n                                data = data.slice(1, -1);\n                            }\n                        }\n                        data = unescapeCSS(data);\n                    }\n                }\n                tokens.push({ type: SelectorType.Pseudo, name, data });\n                break;\n            }\n            case 44 /* Comma */: {\n                finalizeSubselector();\n                tokens = [];\n                stripWhitespace(1);\n                break;\n            }\n            default: {\n                if (selector.startsWith(\"/*\", selectorIndex)) {\n                    const endIndex = selector.indexOf(\"*/\", selectorIndex + 2);\n                    if (endIndex < 0) {\n                        throw new Error(\"Comment was not terminated\");\n                    }\n                    selectorIndex = endIndex + 2;\n                    // Remove leading whitespace\n                    if (tokens.length === 0) {\n                        stripWhitespace(0);\n                    }\n                    break;\n                }\n                let namespace = null;\n                let name;\n                if (firstChar === 42 /* Asterisk */) {\n                    selectorIndex += 1;\n                    name = \"*\";\n                }\n                else if (firstChar === 124 /* Pipe */) {\n                    name = \"\";\n                    if (selector.charCodeAt(selectorIndex + 1) === 124 /* Pipe */) {\n                        addTraversal(SelectorType.ColumnCombinator);\n                        stripWhitespace(2);\n                        break;\n                    }\n                }\n                else if (reName.test(selector.slice(selectorIndex))) {\n                    name = getName(0);\n                }\n                else {\n                    break loop;\n                }\n                if (selector.charCodeAt(selectorIndex) === 124 /* Pipe */ &&\n                    selector.charCodeAt(selectorIndex + 1) !== 124 /* Pipe */) {\n                    namespace = name;\n                    if (selector.charCodeAt(selectorIndex + 1) ===\n                        42 /* Asterisk */) {\n                        name = \"*\";\n                        selectorIndex += 2;\n                    }\n                    else {\n                        name = getName(1);\n                    }\n                }\n                tokens.push(name === \"*\"\n                    ? { type: SelectorType.Universal, namespace }\n                    : { type: SelectorType.Tag, name, namespace });\n            }\n        }\n    }\n    finalizeSubselector();\n    return selectorIndex;\n}\n", "export * from \"./types\";\nexport { isTraversal, parse } from \"./parse\";\nexport { stringify } from \"./stringify\";\n", "module.exports = {\n\ttrueFunc: function trueFunc(){\n\t\treturn true;\n\t},\n\tfalseFunc: function falseFunc(){\n\t\treturn false;\n\t}\n};", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "const UNDEFINED_CODE_POINTS = new Set([\n    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,\n    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,\n    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,\n    1048575, 1114110, 1114111,\n]);\nexport const REPLACEMENT_CHARACTER = '\\uFFFD';\nexport var CODE_POINTS;\n(function (CODE_POINTS) {\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"NUMBER_SIGN\"] = 35] = \"NUMBER_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_F\"] = 70] = \"LATIN_CAPITAL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_X\"] = 88] = \"LATIN_CAPITAL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_F\"] = 102] = \"LATIN_SMALL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_X\"] = 120] = \"LATIN_SMALL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n    CODE_POINTS[CODE_POINTS[\"REPLACEMENT_CHARACTER\"] = 65533] = \"REPLACEMENT_CHARACTER\";\n})(CODE_POINTS = CODE_POINTS || (CODE_POINTS = {}));\nexport const SEQUENCES = {\n    DASH_DASH: '--',\n    CDATA_START: '[CDATA[',\n    DOCTYPE: 'doctype',\n    SCRIPT: 'script',\n    PUBLIC: 'public',\n    SYSTEM: 'system',\n};\n//Surrogates\nexport function isSurrogate(cp) {\n    return cp >= 55296 && cp <= 57343;\n}\nexport function isSurrogatePair(cp) {\n    return cp >= 56320 && cp <= 57343;\n}\nexport function getSurrogatePairCodePoint(cp1, cp2) {\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nexport function isControlCodePoint(cp) {\n    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f));\n}\nexport function isUndefinedCodePoint(cp) {\n    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);\n}\n//# sourceMappingURL=unicode.js.map", "export var ERR;\n(function (ERR) {\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n    ERR[\"nestedComment\"] = \"nested-comment\";\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR = ERR || (ERR = {}));\n//# sourceMappingURL=error-codes.js.map", "import { CODE_POINTS as $, getSurrogatePairCodePoint, isControlCodePoint, isSurrogate, isSurrogatePair, isUndefinedCodePoint, } from '../common/unicode.js';\nimport { ERR } from '../common/error-codes.js';\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nexport class Preprocessor {\n    constructor(handler) {\n        this.handler = handler;\n        this.html = '';\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\n    get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code) {\n        const { line, col, offset } = this;\n        return {\n            code,\n            startLine: line,\n            endLine: line,\n            startCol: col,\n            endCol: col,\n            startOffset: offset,\n            endOffset: offset,\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if (isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) {\n            this.html += chunk;\n        }\n        else {\n            this.html = chunk;\n        }\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) {\n            return this.html.startsWith(pattern, this.pos);\n        }\n        for (let i = 0; i < pattern.length; i++) {\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        const code = this.html.charCodeAt(pos);\n        return code === $.CARRIAGE_RETURN ? $.LINE_FEED : code;\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === $.LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if (isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null ||\n            (cp > 0x1f && cp < 0x7f) ||\n            cp === $.LINE_FEED ||\n            cp === $.CARRIAGE_RETURN ||\n            (cp > 0x9f && cp < 64976);\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if (isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        }\n        else if (isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n    retreat(count) {\n        this.pos -= count;\n        while (this.pos < this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n}\n//# sourceMappingURL=preprocessor.js.map", "export var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType = TokenType || (TokenType = {}));\nexport function getTokenAttr(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=token.js.map", "/** All valid namespaces in HTML. */\nexport var NS;\n(function (NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS = NS || (NS = {}));\nexport var ATTRS;\n(function (ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS = ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */\nexport var DOCUMENT_MODE;\n(function (DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE = DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nexport var TAG_NAMES;\n(function (TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES = TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */\nexport var TAG_ID;\n(function (TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 94] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 95] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 96] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 97] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 98] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 99] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 100] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 101] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 102] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 103] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 104] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 105] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 106] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 107] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 108] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 109] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 110] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 111] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 112] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 113] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 114] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 115] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 116] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 117] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 118] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 119] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 120] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 121] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 122] = \"XMP\";\n})(TAG_ID = TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([\n    [TAG_NAMES.A, TAG_ID.A],\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\n    [TAG_NAMES.AREA, TAG_ID.AREA],\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\n    [TAG_NAMES.B, TAG_ID.B],\n    [TAG_NAMES.BASE, TAG_ID.BASE],\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\n    [TAG_NAMES.BIG, TAG_ID.BIG],\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\n    [TAG_NAMES.BODY, TAG_ID.BODY],\n    [TAG_NAMES.BR, TAG_ID.BR],\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\n    [TAG_NAMES.CODE, TAG_ID.CODE],\n    [TAG_NAMES.COL, TAG_ID.COL],\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\n    [TAG_NAMES.DD, TAG_ID.DD],\n    [TAG_NAMES.DESC, TAG_ID.DESC],\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\n    [TAG_NAMES.DIR, TAG_ID.DIR],\n    [TAG_NAMES.DIV, TAG_ID.DIV],\n    [TAG_NAMES.DL, TAG_ID.DL],\n    [TAG_NAMES.DT, TAG_ID.DT],\n    [TAG_NAMES.EM, TAG_ID.EM],\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\n    [TAG_NAMES.FONT, TAG_ID.FONT],\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\n    [TAG_NAMES.FORM, TAG_ID.FORM],\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\n    [TAG_NAMES.H1, TAG_ID.H1],\n    [TAG_NAMES.H2, TAG_ID.H2],\n    [TAG_NAMES.H3, TAG_ID.H3],\n    [TAG_NAMES.H4, TAG_ID.H4],\n    [TAG_NAMES.H5, TAG_ID.H5],\n    [TAG_NAMES.H6, TAG_ID.H6],\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\n    [TAG_NAMES.HR, TAG_ID.HR],\n    [TAG_NAMES.HTML, TAG_ID.HTML],\n    [TAG_NAMES.I, TAG_ID.I],\n    [TAG_NAMES.IMG, TAG_ID.IMG],\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\n    [TAG_NAMES.LI, TAG_ID.LI],\n    [TAG_NAMES.LINK, TAG_ID.LINK],\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\n    [TAG_NAMES.MATH, TAG_ID.MATH],\n    [TAG_NAMES.MENU, TAG_ID.MENU],\n    [TAG_NAMES.META, TAG_ID.META],\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\n    [TAG_NAMES.MI, TAG_ID.MI],\n    [TAG_NAMES.MO, TAG_ID.MO],\n    [TAG_NAMES.MN, TAG_ID.MN],\n    [TAG_NAMES.MS, TAG_ID.MS],\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\n    [TAG_NAMES.NAV, TAG_ID.NAV],\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\n    [TAG_NAMES.OL, TAG_ID.OL],\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\n    [TAG_NAMES.P, TAG_ID.P],\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\n    [TAG_NAMES.PRE, TAG_ID.PRE],\n    [TAG_NAMES.RB, TAG_ID.RB],\n    [TAG_NAMES.RP, TAG_ID.RP],\n    [TAG_NAMES.RT, TAG_ID.RT],\n    [TAG_NAMES.RTC, TAG_ID.RTC],\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\n    [TAG_NAMES.S, TAG_ID.S],\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\n    [TAG_NAMES.SUB, TAG_ID.SUB],\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\n    [TAG_NAMES.SUP, TAG_ID.SUP],\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\n    [TAG_NAMES.TD, TAG_ID.TD],\n    [TAG_NAMES.TH, TAG_ID.TH],\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\n    [TAG_NAMES.TR, TAG_ID.TR],\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\n    [TAG_NAMES.TT, TAG_ID.TT],\n    [TAG_NAMES.U, TAG_ID.U],\n    [TAG_NAMES.UL, TAG_ID.UL],\n    [TAG_NAMES.SVG, TAG_ID.SVG],\n    [TAG_NAMES.VAR, TAG_ID.VAR],\n    [TAG_NAMES.WBR, TAG_ID.WBR],\n    [TAG_NAMES.XMP, TAG_ID.XMP],\n]);\nexport function getTagID(tagName) {\n    var _a;\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nexport const SPECIAL_ELEMENTS = {\n    [NS.HTML]: new Set([\n        $.ADDRESS,\n        $.APPLET,\n        $.AREA,\n        $.ARTICLE,\n        $.ASIDE,\n        $.BASE,\n        $.BASEFONT,\n        $.BGSOUND,\n        $.BLOCKQUOTE,\n        $.BODY,\n        $.BR,\n        $.BUTTON,\n        $.CAPTION,\n        $.CENTER,\n        $.COL,\n        $.COLGROUP,\n        $.DD,\n        $.DETAILS,\n        $.DIR,\n        $.DIV,\n        $.DL,\n        $.DT,\n        $.EMBED,\n        $.FIELDSET,\n        $.FIGCAPTION,\n        $.FIGURE,\n        $.FOOTER,\n        $.FORM,\n        $.FRAME,\n        $.FRAMESET,\n        $.H1,\n        $.H2,\n        $.H3,\n        $.H4,\n        $.H5,\n        $.H6,\n        $.HEAD,\n        $.HEADER,\n        $.HGROUP,\n        $.HR,\n        $.HTML,\n        $.IFRAME,\n        $.IMG,\n        $.INPUT,\n        $.LI,\n        $.LINK,\n        $.LISTING,\n        $.MAIN,\n        $.MARQUEE,\n        $.MENU,\n        $.META,\n        $.NAV,\n        $.NOEMBED,\n        $.NOFRAMES,\n        $.NOSCRIPT,\n        $.OBJECT,\n        $.OL,\n        $.P,\n        $.PARAM,\n        $.PLAINTEXT,\n        $.PRE,\n        $.SCRIPT,\n        $.SECTION,\n        $.SELECT,\n        $.SOURCE,\n        $.STYLE,\n        $.SUMMARY,\n        $.TABLE,\n        $.TBODY,\n        $.TD,\n        $.TEMPLATE,\n        $.TEXTAREA,\n        $.TFOOT,\n        $.TH,\n        $.THEAD,\n        $.TITLE,\n        $.TR,\n        $.TRACK,\n        $.UL,\n        $.WBR,\n        $.XMP,\n    ]),\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\n    [NS.XLINK]: new Set(),\n    [NS.XML]: new Set(),\n    [NS.XMLNS]: new Set(),\n};\nexport function isNumberedHeader(tn) {\n    return tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6;\n}\nconst UNESCAPED_TEXT = new Set([\n    TAG_NAMES.STYLE,\n    TAG_NAMES.SCRIPT,\n    TAG_NAMES.XMP,\n    TAG_NAMES.IFRAME,\n    TAG_NAMES.NOEMBED,\n    TAG_NAMES.NOFRAMES,\n    TAG_NAMES.PLAINTEXT,\n]);\nexport function hasUnescapedText(tn, scriptingEnabled) {\n    return UNESCAPED_TEXT.has(tn) || (scriptingEnabled && tn === TAG_NAMES.NOSCRIPT);\n}\n//# sourceMappingURL=html.js.map", "import { Preprocessor } from './preprocessor.js';\nimport { CODE_POINTS as $, SEQUENCES as $$, REPLACEMENT_CHARACTER, isSurrogate, isUndefinedCodePoint, isControlCodePoint, } from '../common/unicode.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\nimport { htmlDecodeTree, BinTrieFlags, determineBranch } from 'entities/lib/decode.js';\nimport { ERR } from '../common/error-codes.js';\nimport { TAG_ID, getTagID } from '../common/html.js';\n//C1 Unicode control character reference replacements\nconst C1_CONTROLS_REFERENCE_REPLACEMENTS = new Map([\n    [0x80, 8364],\n    [0x82, 8218],\n    [0x83, 402],\n    [0x84, 8222],\n    [0x85, 8230],\n    [0x86, 8224],\n    [0x87, 8225],\n    [0x88, 710],\n    [0x89, 8240],\n    [0x8a, 352],\n    [0x8b, 8249],\n    [0x8c, 338],\n    [0x8e, 381],\n    [0x91, 8216],\n    [0x92, 8217],\n    [0x93, 8220],\n    [0x94, 8221],\n    [0x95, 8226],\n    [0x96, 8211],\n    [0x97, 8212],\n    [0x98, 732],\n    [0x99, 8482],\n    [0x9a, 353],\n    [0x9b, 8250],\n    [0x9c, 339],\n    [0x9e, 382],\n    [0x9f, 376],\n]);\n//States\nvar State;\n(function (State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"NAMED_CHARACTER_REFERENCE\"] = 72] = \"NAMED_CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 73] = \"AMBIGUOUS_AMPERSAND\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE\"] = 74] = \"NUMERIC_CHARACTER_REFERENCE\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE_START\"] = 75] = \"HEXADEMICAL_CHARACTER_REFERENCE_START\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE\"] = 76] = \"HEXADEMICAL_CHARACTER_REFERENCE\";\n    State[State[\"DECIMAL_CHARACTER_REFERENCE\"] = 77] = \"DECIMAL_CHARACTER_REFERENCE\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE_END\"] = 78] = \"NUMERIC_CHARACTER_REFERENCE_END\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nexport const TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION,\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction isAsciiUpperHexDigit(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F;\n}\nfunction isAsciiLowerHexDigit(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F;\n}\nfunction isAsciiHexDigit(cp) {\n    return isAsciiDigit(cp) || isAsciiUpperHexDigit(cp) || isAsciiLowerHexDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\nfunction isEntityInAttributeInvalidEnd(nextCp) {\n    return nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp);\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN;\n}\n//Tokenizer\nexport class Tokenizer {\n    constructor(options, handler) {\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */\n        this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */\n        this.inForeignNode = false;\n        this.lastStartTagName = '';\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.charRefCode = -1;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = { name: '', value: '' };\n        this.preprocessor = new Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    //Errors\n    _err(code) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1,\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop)\n            return;\n        this.inLoop = true;\n        while (this.active && !this.paused) {\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error('Parser was already resumed');\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop)\n            return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this._unconsume(this.consumedAfterSnapshot);\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _unconsume(count) {\n        this.consumedAfterSnapshot -= count;\n        this.preprocessor.retreat(count);\n    }\n    _reconsumeInState(state, cp) {\n        this.state = state;\n        this._callState(cp);\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for (let i = 0; i < count; i++) {\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: TokenType.START_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1),\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: TokenType.END_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2),\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: TokenType.COMMENT,\n            data: '',\n            location: this.getCurrentLocation(offset),\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation,\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation,\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: '',\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        }\n        else {\n            this._err(ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = getTagID(ct.tagName);\n        if (ct.type === TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        }\n        else {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch (this.currentCharacterToken.type) {\n                case TokenType.CHARACTER: {\n                    this.handler.onCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.NULL_CHARACTER: {\n                    this.handler.onNullCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.WHITESPACE_CHARACTER: {\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                    break;\n                }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({ type: TokenType.EOF, location });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: specification uses only one type of character tokens (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type !== type) {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n            else {\n                this.currentCharacterToken.chars += ch;\n                return;\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = isWhitespace(cp)\n            ? TokenType.WHITESPACE_CHARACTER\n            : cp === $.NULL\n                ? TokenType.NULL_CHARACTER\n                : TokenType.CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _matchNamedCharacterReference(cp) {\n        let result = null;\n        let excess = 0;\n        let withoutSemicolon = false;\n        for (let i = 0, current = htmlDecodeTree[0]; i >= 0; cp = this._consume()) {\n            i = determineBranch(htmlDecodeTree, current, i + 1, cp);\n            if (i < 0)\n                break;\n            excess += 1;\n            current = htmlDecodeTree[i];\n            const masked = current & BinTrieFlags.VALUE_LENGTH;\n            // If the branch is a value, store it and continue\n            if (masked) {\n                // The mask is the number of bytes of the value, including the current byte.\n                const valueLength = (masked >> 14) - 1;\n                // Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n                // See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n                if (cp !== $.SEMICOLON &&\n                    this._isCharacterReferenceInAttribute() &&\n                    isEntityInAttributeInvalidEnd(this.preprocessor.peek(1))) {\n                    //NOTE: we don't flush all consumed code points here, and instead switch back to the original state after\n                    //emitting an ampersand. This is fine, as alphanumeric characters won't be parsed differently in attributes.\n                    result = [$.AMPERSAND];\n                    // Skip over the value.\n                    i += valueLength;\n                }\n                else {\n                    // If this is a surrogate pair, consume the next two bytes.\n                    result =\n                        valueLength === 0\n                            ? [htmlDecodeTree[i] & ~BinTrieFlags.VALUE_LENGTH]\n                            : valueLength === 1\n                                ? [htmlDecodeTree[++i]]\n                                : [htmlDecodeTree[++i], htmlDecodeTree[++i]];\n                    excess = 0;\n                    withoutSemicolon = cp !== $.SEMICOLON;\n                }\n                if (valueLength === 0) {\n                    // If the value is zero-length, we're done.\n                    this._consume();\n                    break;\n                }\n            }\n        }\n        this._unconsume(excess);\n        if (withoutSemicolon && !this.preprocessor.endOfChunkHit) {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n        }\n        // We want to emit the error above on the code point after the entity.\n        // We always consume one code point too many in the loop, and we wait to\n        // unconsume it until after the error is emitted.\n        this._unconsume(1);\n        return result;\n    }\n    _isCharacterReferenceInAttribute() {\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        }\n        else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch (this.state) {\n            case State.DATA: {\n                this._stateData(cp);\n                break;\n            }\n            case State.RCDATA: {\n                this._stateRcdata(cp);\n                break;\n            }\n            case State.RAWTEXT: {\n                this._stateRawtext(cp);\n                break;\n            }\n            case State.SCRIPT_DATA: {\n                this._stateScriptData(cp);\n                break;\n            }\n            case State.PLAINTEXT: {\n                this._statePlaintext(cp);\n                break;\n            }\n            case State.TAG_OPEN: {\n                this._stateTagOpen(cp);\n                break;\n            }\n            case State.END_TAG_OPEN: {\n                this._stateEndTagOpen(cp);\n                break;\n            }\n            case State.TAG_NAME: {\n                this._stateTagName(cp);\n                break;\n            }\n            case State.RCDATA_LESS_THAN_SIGN: {\n                this._stateRcdataLessThanSign(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_OPEN: {\n                this._stateRcdataEndTagOpen(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_NAME: {\n                this._stateRcdataEndTagName(cp);\n                break;\n            }\n            case State.RAWTEXT_LESS_THAN_SIGN: {\n                this._stateRawtextLessThanSign(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_OPEN: {\n                this._stateRawtextEndTagOpen(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_NAME: {\n                this._stateRawtextEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\n                this._stateScriptDataLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\n                this._stateScriptDataEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_NAME: {\n                this._stateScriptDataEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START: {\n                this._stateScriptDataEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\n                this._stateScriptDataEscapeStartDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED: {\n                this._stateScriptDataEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\n                this._stateScriptDataEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\n                this._stateScriptDataEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\n                this._stateScriptDataEscapedEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\n                this._stateScriptDataEscapedEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\n                this._stateScriptDataDoubleEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\n                this._stateScriptDataDoubleEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\n                this._stateScriptDataDoubleEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\n                this._stateScriptDataDoubleEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\n                this._stateScriptDataDoubleEscapeEnd(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_NAME: {\n                this._stateBeforeAttributeName(cp);\n                break;\n            }\n            case State.ATTRIBUTE_NAME: {\n                this._stateAttributeName(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_NAME: {\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_VALUE: {\n                this._stateBeforeAttributeValue(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\n                this._stateAttributeValueDoubleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\n                this._stateAttributeValueSingleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\n                this._stateAttributeValueUnquoted(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\n                this._stateAfterAttributeValueQuoted(cp);\n                break;\n            }\n            case State.SELF_CLOSING_START_TAG: {\n                this._stateSelfClosingStartTag(cp);\n                break;\n            }\n            case State.BOGUS_COMMENT: {\n                this._stateBogusComment(cp);\n                break;\n            }\n            case State.MARKUP_DECLARATION_OPEN: {\n                this._stateMarkupDeclarationOpen(cp);\n                break;\n            }\n            case State.COMMENT_START: {\n                this._stateCommentStart(cp);\n                break;\n            }\n            case State.COMMENT_START_DASH: {\n                this._stateCommentStartDash(cp);\n                break;\n            }\n            case State.COMMENT: {\n                this._stateComment(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN: {\n                this._stateCommentLessThanSign(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\n                this._stateCommentLessThanSignBang(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\n                this._stateCommentLessThanSignBangDash(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\n                this._stateCommentLessThanSignBangDashDash(cp);\n                break;\n            }\n            case State.COMMENT_END_DASH: {\n                this._stateCommentEndDash(cp);\n                break;\n            }\n            case State.COMMENT_END: {\n                this._stateCommentEnd(cp);\n                break;\n            }\n            case State.COMMENT_END_BANG: {\n                this._stateCommentEndBang(cp);\n                break;\n            }\n            case State.DOCTYPE: {\n                this._stateDoctype(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_NAME: {\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case State.DOCTYPE_NAME: {\n                this._stateDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_NAME: {\n                this._stateAfterDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\n                this._stateAfterDoctypePublicKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateBeforeDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateAfterDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\n                this._stateAfterDoctypeSystemKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateBeforeDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateAfterDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.BOGUS_DOCTYPE: {\n                this._stateBogusDoctype(cp);\n                break;\n            }\n            case State.CDATA_SECTION: {\n                this._stateCdataSection(cp);\n                break;\n            }\n            case State.CDATA_SECTION_BRACKET: {\n                this._stateCdataSectionBracket(cp);\n                break;\n            }\n            case State.CDATA_SECTION_END: {\n                this._stateCdataSectionEnd(cp);\n                break;\n            }\n            case State.CHARACTER_REFERENCE: {\n                this._stateCharacterReference(cp);\n                break;\n            }\n            case State.NAMED_CHARACTER_REFERENCE: {\n                this._stateNamedCharacterReference(cp);\n                break;\n            }\n            case State.AMBIGUOUS_AMPERSAND: {\n                this._stateAmbiguousAmpersand(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE: {\n                this._stateNumericCharacterReference(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE_START: {\n                this._stateHexademicalCharacterReferenceStart(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE: {\n                this._stateHexademicalCharacterReference(cp);\n                break;\n            }\n            case State.DECIMAL_CHARACTER_REFERENCE: {\n                this._stateDecimalCharacterReference(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE_END: {\n                this._stateNumericCharacterReferenceEnd(cp);\n                break;\n            }\n            default: {\n                throw new Error('Unknown state');\n            }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.TAG_OPEN;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.DATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch (cp) {\n            case $.AMPERSAND: {\n                this.returnState = State.RCDATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RCDATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch (cp) {\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.EXCLAMATION_MARK: {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n                case $.SOLIDUS: {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n                case $.QUESTION_MARK: {\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('<');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars('<');\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n            }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('</');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n            }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.tagName += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                return false;\n            }\n            case $.SOLIDUS: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.SELF_CLOSING_START_TAG;\n                return false;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.emitCurrentTagToken();\n                this.state = State.DATA;\n                return false;\n            }\n            default: {\n                return !this._ensureHibernation();\n            }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch (cp) {\n            case $.SOLIDUS: {\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\n                this._emitChars('<!');\n                break;\n            }\n            default: {\n                this._emitChars('<');\n                this.state = State.SCRIPT_DATA;\n                this._stateScriptData(cp);\n            }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        }\n        else if (isAsciiLetter(cp)) {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars('/');\n        }\n        else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n                this._createAttr('=');\n                this.state = State.ATTRIBUTE_NAME;\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED:\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this._leaveAttrName();\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._leaveAttrName();\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN: {\n                this._err(ERR.unexpectedCharacterInAttributeName);\n                this.currentAttr.name += String.fromCodePoint(cp);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingAttributeValue);\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            default: {\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this._stateAttributeValueUnquoted(cp);\n            }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN:\n            case $.EQUALS_SIGN:\n            case $.GRAVE_ACCENT: {\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n                this.currentAttr.value += String.fromCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this._leaveAttrValue();\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBetweenAttributes);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                const token = this.currentToken;\n                token.selfClosing = true;\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedSolidusInTag);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH, true)) {\n            this._createCommentToken($$.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        }\n        else if (this._consumeSequenceIfMatch($$.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation($$.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        }\n        else if (this._consumeSequenceIfMatch($$.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            }\n            else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken($$.CDATA_START.length + 1);\n                this.currentToken.data = '[CDATA[';\n                this.state = State.BOGUS_COMMENT;\n            }\n        }\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_START_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                const token = this.currentToken;\n                this.emitCurrentComment(token);\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                this.state = State.COMMENT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.EXCLAMATION_MARK: {\n                token.data += '!';\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        }\n        else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        }\n        else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.COMMENT_END_BANG;\n                break;\n            }\n            case $.HYPHEN_MINUS: {\n                token.data += '-';\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                token.data += '--!';\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.incorrectlyClosedComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--!';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                this._createDoctypeToken(null);\n                const token = this.currentToken;\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n            }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        }\n        else\n            switch (cp) {\n                case $.SPACE:\n                case $.LINE_FEED:\n                case $.TABULATION:\n                case $.FORM_FEED: {\n                    // Ignore whitespace\n                    break;\n                }\n                case $.NULL: {\n                    this._err(ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n            }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.AFTER_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                if (this._consumeSequenceIfMatch($$.PUBLIC, false)) {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                }\n                else if (this._consumeSequenceIfMatch($$.SYSTEM, false)) {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                }\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n                //results are no longer valid and we will need to start over.\n                else if (!this._ensureHibernation()) {\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n            }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch (cp) {\n            case $.RIGHT_SQUARE_BRACKET: {\n                this.state = State.CDATA_SECTION_BRACKET;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInCdata);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        }\n        else {\n            this._emitChars(']');\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                break;\n            }\n            case $.RIGHT_SQUARE_BRACKET: {\n                this._emitChars(']');\n                break;\n            }\n            default: {\n                this._emitChars(']]');\n                this.state = State.CDATA_SECTION;\n                this._stateCdataSection(cp);\n            }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference(cp) {\n        if (cp === $.NUMBER_SIGN) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE;\n        }\n        else if (isAsciiAlphaNumeric(cp)) {\n            this.state = State.NAMED_CHARACTER_REFERENCE;\n            this._stateNamedCharacterReference(cp);\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Named character reference state\n    //------------------------------------------------------------------\n    _stateNamedCharacterReference(cp) {\n        const matchResult = this._matchNamedCharacterReference(cp);\n        //NOTE: Matching can be abrupted by hibernation. In that case, match\n        //results are no longer valid and we will need to start over.\n        if (this._ensureHibernation()) {\n            // Stay in the state, try again.\n        }\n        else if (matchResult) {\n            for (let i = 0; i < matchResult.length; i++) {\n                this._flushCodePointConsumedAsCharacterReference(matchResult[i]);\n            }\n            this.state = this.returnState;\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this.state = State.AMBIGUOUS_AMPERSAND;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }\n        else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Numeric character reference state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReference(cp) {\n        this.charRefCode = 0;\n        if (cp === $.LATIN_SMALL_X || cp === $.LATIN_CAPITAL_X) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE_START;\n        }\n        // Inlined decimal character reference start state\n        else if (isAsciiDigit(cp)) {\n            this.state = State.DECIMAL_CHARACTER_REFERENCE;\n            this._stateDecimalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Hexademical character reference start state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReferenceStart(cp) {\n        if (isAsciiHexDigit(cp)) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE;\n            this._stateHexademicalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._unconsume(2);\n            this.state = this.returnState;\n        }\n    }\n    // Hexademical character reference state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReference(cp) {\n        if (isAsciiUpperHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x37;\n        }\n        else if (isAsciiLowerHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x57;\n        }\n        else if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Decimal character reference state\n    //------------------------------------------------------------------\n    _stateDecimalCharacterReference(cp) {\n        if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 10 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Numeric character reference end state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReferenceEnd(cp) {\n        if (this.charRefCode === $.NULL) {\n            this._err(ERR.nullCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (this.charRefCode > 1114111) {\n            this._err(ERR.characterReferenceOutsideUnicodeRange);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isSurrogate(this.charRefCode)) {\n            this._err(ERR.surrogateCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isUndefinedCodePoint(this.charRefCode)) {\n            this._err(ERR.noncharacterCharacterReference);\n        }\n        else if (isControlCodePoint(this.charRefCode) || this.charRefCode === $.CARRIAGE_RETURN) {\n            this._err(ERR.controlCharacterReference);\n            const replacement = C1_CONTROLS_REFERENCE_REPLACEMENTS.get(this.charRefCode);\n            if (replacement !== undefined) {\n                this.charRefCode = replacement;\n            }\n        }\n        this._flushCodePointConsumedAsCharacterReference(this.charRefCode);\n        this._reconsumeInState(this.returnState, cp);\n    }\n}\n//# sourceMappingURL=index.js.map", "import { TAG_ID as $, NS, isNumberedHeader } from '../common/html.js';\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    $.CAPTION,\n    $.COLGROUP,\n    $.TBODY,\n    $.TD,\n    $.TFOOT,\n    $.TH,\n    $.THEAD,\n    $.TR,\n]);\nconst SCOPING_ELEMENT_NS = new Map([\n    [$.APPLET, NS.HTML],\n    [$.CAPTION, NS.HTML],\n    [$.HTML, NS.HTML],\n    [$.MARQUEE, NS.HTML],\n    [$.OBJECT, NS.HTML],\n    [$.TABLE, NS.HTML],\n    [$.TD, NS.HTML],\n    [$.TEMPLATE, NS.HTML],\n    [$.TH, NS.HTML],\n    [$.ANNOTATION_XML, NS.MATHML],\n    [$.MI, NS.MATHML],\n    [$.MN, NS.MATHML],\n    [$.MO, NS.MATHML],\n    [$.MS, NS.MATHML],\n    [$.MTEXT, NS.MATHML],\n    [$.DESC, NS.SVG],\n    [$.FOREIGN_OBJECT, NS.SVG],\n    [$.TITLE, NS.SVG],\n]);\nconst NAMED_HEADERS = [$.H1, $.H2, $.H3, $.H4, $.H5, $.H6];\nconst TABLE_ROW_CONTEXT = [$.TR, $.TEMPLATE, $.HTML];\nconst TABLE_BODY_CONTEXT = [$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML];\nconst TABLE_CONTEXT = [$.TABLE, $.TEMPLATE, $.HTML];\nconst TABLE_CELLS = [$.TD, $.TH];\n//Stack of open elements\nexport class OpenElementStack {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler) {\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = $.UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n        this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);\n    }\n    shortenToLength(idx) {\n        while (this.stackTop >= idx) {\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(NAMED_HEADERS, NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (tagNames.includes(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            }\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n    }\n    //Element in scope\n    hasInScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (isNumberedHeader(tn) && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInListItemScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (((tn === $.UL || tn === $.OL) && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInButtonScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if ((tn === $.BUTTON && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn !== $.OPTION && tn !== $.OPTGROUP) {\n                return false;\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while (IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while (this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n}\n//# sourceMappingURL=open-element-stack.js.map", "//Const\nconst NOAH_ARK_CAPACITY = 3;\nexport var EntryType;\n(function (EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType = EntryType || (EntryType = {}));\nconst MARKER = { type: EntryType.Marker };\n//List of formatting elements\nexport class FormattingElementList {\n    constructor(treeAdapter) {\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for (let i = 0; i < this.entries.length; i++) {\n            const entry = this.entries[i];\n            if (entry.type === EntryType.Marker) {\n                break;\n            }\n            const { element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName &&\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < NOAH_ARK_CAPACITY)\n            return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < NOAH_ARK_CAPACITY)\n            return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for (let i = 0; i < candidates.length; i++) {\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\n                    this.entries.splice(candidate.idx, 1);\n                }\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift(MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex >= 0) {\n            this.entries.splice(entryIndex, 1);\n        }\n    }\n    /**\n     * Clears the list of formatting elements up to the last marker.\n     *\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n     */\n    clearToLastMarker() {\n        const markerIdx = this.entries.indexOf(MARKER);\n        if (markerIdx >= 0) {\n            this.entries.splice(0, markerIdx + 1);\n        }\n        else {\n            this.entries.length = 0;\n        }\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === EntryType.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\n    }\n}\n//# sourceMappingURL=formatting-element-list.js.map", "import { DOCUMENT_MODE } from '../common/html.js';\nfunction createTextNode(value) {\n    return {\n        nodeName: '#text',\n        value,\n        parentNode: null,\n    };\n}\nexport const defaultTreeAdapter = {\n    //Node construction\n    createDocument() {\n        return {\n            nodeName: '#document',\n            mode: DOCUMENT_MODE.NO_QUIRKS,\n            childNodes: [],\n        };\n    },\n    createDocumentFragment() {\n        return {\n            nodeName: '#document-fragment',\n            childNodes: [],\n        };\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName,\n            attrs,\n            namespaceURI,\n            childNodes: [],\n            parentNode: null,\n        };\n    },\n    createCommentNode(data) {\n        return {\n            nodeName: '#comment',\n            data,\n            parentNode: null,\n        };\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        }\n        else {\n            const node = {\n                nodeName: '#documentType',\n                name,\n                publicId,\n                systemId,\n                parentNode: null,\n            };\n            defaultTreeAdapter.appendChild(document, node);\n        }\n    },\n    setDocumentMode(document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode(document) {\n        return document.mode;\n    },\n    detachNode(node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText(parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        defaultTreeAdapter.appendChild(parentNode, createTextNode(text));\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n            prevNode.value += text;\n        }\n        else {\n            defaultTreeAdapter.insertBefore(parentNode, createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\n        for (let j = 0; j < attrs.length; j++) {\n            if (!recipientAttrsMap.has(attrs[j].name)) {\n                recipient.attrs.push(attrs[j]);\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.childNodes[0];\n    },\n    getChildNodes(node) {\n        return node.childNodes;\n    },\n    getParentNode(node) {\n        return node.parentNode;\n    },\n    getAttrList(element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName(element) {\n        return element.tagName;\n    },\n    getNamespaceURI(element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode(node) {\n        return node.nodeName === '#text';\n    },\n    isCommentNode(node) {\n        return node.nodeName === '#comment';\n    },\n    isDocumentTypeNode(node) {\n        return node.nodeName === '#documentType';\n    },\n    isElementNode(node) {\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };\n    },\n};\n//# sourceMappingURL=default.js.map", "import { DOCUMENT_MODE } from './html.js';\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//',\n];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\n    '-//w3o//dtd w3 html strict 3.0//en//',\n    '-/w3c/dtd html 4.0 transitional/en',\n    'html',\n]);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n    return prefixes.some((prefix) => publicId.startsWith(prefix));\n}\n//API\nexport function isConforming(token) {\n    return (token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));\n}\nexport function getDocumentMode(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    const { systemId } = token;\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    let { publicId } = token;\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n    return DOCUMENT_MODE.NO_QUIRKS;\n}\n//# sourceMappingURL=doctype.js.map", "import { TAG_ID as $, NS, ATTRS, getTagID } from './html.js';\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml',\n};\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    'attributeName',\n    'attributeType',\n    'baseFrequency',\n    'baseProfile',\n    'calcMode',\n    'clipPathUnits',\n    'diffuseConstant',\n    'edgeMode',\n    'filterUnits',\n    'glyphRef',\n    'gradientTransform',\n    'gradientUnits',\n    'kernelMatrix',\n    'kernelUnitLength',\n    'keyPoints',\n    'keySplines',\n    'keyTimes',\n    'lengthAdjust',\n    'limitingConeAngle',\n    'markerHeight',\n    'markerUnits',\n    'markerWidth',\n    'maskContentUnits',\n    'maskUnits',\n    'numOctaves',\n    'pathLength',\n    'patternContentUnits',\n    'patternTransform',\n    'patternUnits',\n    'pointsAtX',\n    'pointsAtY',\n    'pointsAtZ',\n    'preserveAlpha',\n    'preserveAspectRatio',\n    'primitiveUnits',\n    'refX',\n    'refY',\n    'repeatCount',\n    'repeatDur',\n    'requiredExtensions',\n    'requiredFeatures',\n    'specularConstant',\n    'specularExponent',\n    'spreadMethod',\n    'startOffset',\n    'stdDeviation',\n    'stitchTiles',\n    'surfaceScale',\n    'systemLanguage',\n    'tableValues',\n    'targetX',\n    'targetY',\n    'textLength',\n    'viewBox',\n    'viewTarget',\n    'xChannelSelector',\n    'yChannelSelector',\n    'zoomAndPan',\n].map((attr) => [attr.toLowerCase(), attr]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\n    ['xml:base', { prefix: 'xml', name: 'base', namespace: NS.XML }],\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\n]);\n//SVG tag names adjustment map\nexport const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'clipPath',\n    'feBlend',\n    'feColorMatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'foreignObject',\n    'glyphRef',\n    'linearGradient',\n    'radialGradient',\n    'textPath',\n].map((tn) => [tn.toLowerCase(), tn]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([\n    $.B,\n    $.BIG,\n    $.BLOCKQUOTE,\n    $.BODY,\n    $.BR,\n    $.CENTER,\n    $.CODE,\n    $.DD,\n    $.DIV,\n    $.DL,\n    $.DT,\n    $.EM,\n    $.EMBED,\n    $.H1,\n    $.H2,\n    $.H3,\n    $.H4,\n    $.H5,\n    $.H6,\n    $.HEAD,\n    $.HR,\n    $.I,\n    $.IMG,\n    $.LI,\n    $.LISTING,\n    $.MENU,\n    $.META,\n    $.NOBR,\n    $.OL,\n    $.P,\n    $.PRE,\n    $.RUBY,\n    $.S,\n    $.SMALL,\n    $.SPAN,\n    $.STRONG,\n    $.STRIKE,\n    $.SUB,\n    $.SUP,\n    $.TABLE,\n    $.TT,\n    $.U,\n    $.UL,\n    $.VAR,\n]);\n//Check exit from foreign content\nexport function causesExit(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === $.FONT &&\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nexport function adjustTokenMathMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n}\nexport function adjustTokenSVGAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n}\nexport function adjustTokenXMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nexport function adjustTokenSVGTagName(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = getTagID(token.tagName);\n    }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\nexport function isIntegrationPoint(tn, ns, attrs, foreignNS) {\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\n}\n//# sourceMappingURL=foreign-content.js.map", "import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, isNumberedHeader, getTagID, } from '../common/html.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nexport class Parser {\n    constructor(options, document, fragmentContext = null, scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        this.insertionMode = InsertionMode.INITIAL;\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        this.headElement = null;\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         */\n        this.tmplInsertionModeStack = [];\n        this.pendingCharacterTokens = [];\n        this.hasNonWhitespacePendingCharacterToken = false;\n        this.framesetOk = true;\n        this.skipNextNewLine = false;\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === $.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n    }\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case $.TITLE:\n            case $.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case $.STYLE:\n            case $.XMP:\n            case $.IFRAME:\n            case $.NOEMBED:\n            case $.NOFRAMES:\n            case $.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case $.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case $.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent, element);\n        }\n    }\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, $.HTML);\n    }\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === $.SVG &&\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case $.TR: {\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                }\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                }\n                case $.CAPTION: {\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                }\n                case $.COLGROUP: {\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                }\n                case $.TABLE: {\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                }\n                case $.BODY: {\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                }\n                case $.FRAMESET: {\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                }\n                case $.SELECT: {\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                }\n                case $.TEMPLATE: {\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                }\n                case $.HTML: {\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                }\n                case $.TD:\n                case $.TH: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                }\n                case $.HEAD: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === $.TEMPLATE) {\n                    break;\n                }\n                else if (tn === $.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n    }\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case $.TEMPLATE: {\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                }\n                case $.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE: {\n                characterInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                characterInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                appendComment(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                appendCommentToDocument(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                doctypeInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD: {\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                startTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                startTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                startTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                startTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                startTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                startTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                startTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                startTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                startTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                startTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                startTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                startTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                startTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                startTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                startTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                startTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                startTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                startTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                startTagAfterAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                startTagAfterAfterFrameset(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                endTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                endTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                endTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                endTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                endTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                endTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                endTagInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                endTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                endTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                endTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                endTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                endTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                endTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                endTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                endTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                endTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                endTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                endTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                endTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                eofInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                eofInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                eofInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                stopParsing(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                whitespaceCharacterInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                whitespaceCharacterInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TN.HEAD, $.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case $.NOFRAMES:\n        case $.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case $.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case $.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case $.BODY:\n        case $.BR:\n        case $.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.HEAD:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case $.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, $.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.BODY:\n        case $.HTML:\n        case $.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TN.BODY, $.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    if (isNumberedHeader(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === $.LI && elementId === $.LI) ||\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== $.ADDRESS &&\n            elementId !== $.DIV &&\n            elementId !== $.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TN.IMG;\n    token.tagID = $.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse\n//<noembed> as rawtext.\nfunction noembedStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === $.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.I:\n        case $.S:\n        case $.B:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case $.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case $.P:\n        case $.DL:\n        case $.OL:\n        case $.UL:\n        case $.DIV:\n        case $.DIR:\n        case $.NAV:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.DETAILS:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case $.LI:\n        case $.DD:\n        case $.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case $.BR:\n        case $.IMG:\n        case $.WBR:\n        case $.AREA:\n        case $.EMBED:\n        case $.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case $.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case $.RB:\n        case $.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case $.RT:\n        case $.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case $.PRE:\n        case $.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case $.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case $.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.LINK:\n        case $.META:\n        case $.STYLE:\n        case $.TITLE:\n        case $.SCRIPT:\n        case $.BGSOUND:\n        case $.BASEFONT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case $.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case $.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case $.PARAM:\n        case $.TRACK:\n        case $.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case $.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case $.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case $.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case $.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case $.OPTION:\n        case $.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case $.NOEMBED: {\n            noembedStartTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case $.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                noembedStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case $.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case $.COL:\n        case $.TH:\n        case $.TD:\n        case $.TR:\n        case $.HEAD:\n        case $.FRAME:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.CAPTION:\n        case $.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement(TN.P, $.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TN.BR, $.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.A:\n        case $.B:\n        case $.I:\n        case $.S:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.NOBR:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case $.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case $.DL:\n        case $.UL:\n        case $.OL:\n        case $.DIR:\n        case $.DIV:\n        case $.NAV:\n        case $.PRE:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.BUTTON:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.DETAILS:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.LISTING:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case $.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case $.DD:\n        case $.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case $.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case $.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === $.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.TBODY, $.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case $.STYLE:\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case $.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case $.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TABLE)) {\n                p.openElements.popUntilTagNamePopped($.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.CAPTION:\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped($.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === $.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case $.BODY:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.COLGROUP: {\n            if (p.openElements.currentTagId === $.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TN.TR, $.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH: {\n            // Ignore end tag\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.TD:\n        case $.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case $.TABLE:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.OPTGROUP: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.INPUT:\n        case $.KEYGEN:\n        case $.TEXTAREA:\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== $.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === $.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Re-process the token in the appropriate mode\n        case $.CAPTION:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        }\n        case $.COL: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        }\n        case $.TR: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        }\n        case $.TD:\n        case $.TH: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        default: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n        }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === $.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === $.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === $.P || token.tagID === $.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n//# sourceMappingURL=index.js.map", "import { TAG_NAMES as $, NS, hasUnescapedText } from '../common/html.js';\nimport { escapeText, escapeAttribute } from 'entities/lib/escape.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\n// Sets\nconst VOID_ELEMENTS = new Set([\n    $.AREA,\n    $.BASE,\n    $.BASEFONT,\n    $.BGSOUND,\n    $.BR,\n    $.COL,\n    $.EMBED,\n    $.FRAME,\n    $.HR,\n    $.IMG,\n    $.INPUT,\n    $.KEYGEN,\n    $.LINK,\n    $.META,\n    $.PARAM,\n    $.SOURCE,\n    $.TRACK,\n    $.WBR,\n]);\nfunction isVoidElement(node, options) {\n    return (options.treeAdapter.isElementNode(node) &&\n        options.treeAdapter.getNamespaceURI(node) === NS.HTML &&\n        VOID_ELEMENTS.has(options.treeAdapter.getTagName(node)));\n}\nconst defaultOpts = { treeAdapter: defaultTreeAdapter, scriptingEnabled: true };\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serialize(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    if (isVoidElement(node, opts)) {\n        return '';\n    }\n    return serializeChildNodes(node, opts);\n}\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const html = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serializeOuter(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    return serializeNode(node, opts);\n}\nfunction serializeChildNodes(parentNode, options) {\n    let html = '';\n    // Get container of the child nodes\n    const container = options.treeAdapter.isElementNode(parentNode) &&\n        options.treeAdapter.getTagName(parentNode) === $.TEMPLATE &&\n        options.treeAdapter.getNamespaceURI(parentNode) === NS.HTML\n        ? options.treeAdapter.getTemplateContent(parentNode)\n        : parentNode;\n    const childNodes = options.treeAdapter.getChildNodes(container);\n    if (childNodes) {\n        for (const currentNode of childNodes) {\n            html += serializeNode(currentNode, options);\n        }\n    }\n    return html;\n}\nfunction serializeNode(node, options) {\n    if (options.treeAdapter.isElementNode(node)) {\n        return serializeElement(node, options);\n    }\n    if (options.treeAdapter.isTextNode(node)) {\n        return serializeTextNode(node, options);\n    }\n    if (options.treeAdapter.isCommentNode(node)) {\n        return serializeCommentNode(node, options);\n    }\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\n        return serializeDocumentTypeNode(node, options);\n    }\n    // Return an empty string for unknown nodes\n    return '';\n}\nfunction serializeElement(node, options) {\n    const tn = options.treeAdapter.getTagName(node);\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, { treeAdapter }) {\n    let html = '';\n    for (const attr of treeAdapter.getAttrList(node)) {\n        html += ' ';\n        if (!attr.namespace) {\n            html += attr.name;\n        }\n        else\n            switch (attr.namespace) {\n                case NS.XML: {\n                    html += `xml:${attr.name}`;\n                    break;\n                }\n                case NS.XMLNS: {\n                    if (attr.name !== 'xmlns') {\n                        html += 'xmlns:';\n                    }\n                    html += attr.name;\n                    break;\n                }\n                case NS.XLINK: {\n                    html += `xlink:${attr.name}`;\n                    break;\n                }\n                default: {\n                    html += `${attr.prefix}:${attr.name}`;\n                }\n            }\n        html += `=\"${escapeAttribute(attr.value)}\"`;\n    }\n    return html;\n}\nfunction serializeTextNode(node, options) {\n    const { treeAdapter } = options;\n    const content = treeAdapter.getTextNodeContent(node);\n    const parent = treeAdapter.getParentNode(node);\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n    return parentTn &&\n        treeAdapter.getNamespaceURI(parent) === NS.HTML &&\n        hasUnescapedText(parentTn, options.scriptingEnabled)\n        ? content\n        : escapeText(content);\n}\nfunction serializeCommentNode(node, { treeAdapter }) {\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}\n//# sourceMappingURL=index.js.map", "import { Parser } from './parser/index.js';\nexport { defaultTreeAdapter } from './tree-adapters/default.js';\nexport { /** @internal */ Parser } from './parser/index.js';\nexport { serialize, serializeOuter } from './serializer/index.js';\nexport { ERR as ErrorCodes } from './common/error-codes.js';\n/** @internal */\nexport * as foreignContent from './common/foreign-content.js';\n/** @internal */\nexport * as html from './common/html.js';\n/** @internal */\nexport * as Token from './common/token.js';\n/** @internal */\nexport { Tokenizer, TokenizerMode } from './tokenizer/index.js';\n// Shorthands\n/**\n * Parses an HTML string.\n *\n * @param html Input HTML string.\n * @param options Parsing options.\n * @returns Document\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * console.log(document.childNodes[1].tagName); //> 'html'\n *```\n */\nexport function parse(html, options) {\n    return Parser.parse(html, options);\n}\nexport function parseFragment(fragmentContext, html, options) {\n    if (typeof fragmentContext === 'string') {\n        options = html;\n        html = fragmentContext;\n        fragmentContext = null;\n    }\n    const parser = Parser.getFragmentParser(fragmentContext, options);\n    parser.tokenizer.write(html, true);\n    return parser.getFragment();\n}\n//# sourceMappingURL=index.js.map", "import { html } from 'parse5';\nimport { Element, Document, ProcessingInstruction, Comment, Text, isDirective, isText, isComment, isTag, } from 'domhandler';\nfunction createTextNode(value) {\n    return new Text(value);\n}\nfunction enquoteDoctypeId(id) {\n    const quote = id.includes('\"') ? \"'\" : '\"';\n    return quote + id + quote;\n}\n/** @internal */\nexport function serializeDoctypeContent(name, publicId, systemId) {\n    let str = '!DOCTYPE ';\n    if (name) {\n        str += name;\n    }\n    if (publicId) {\n        str += ` PUBLIC ${enquoteDoctypeId(publicId)}`;\n    }\n    else if (systemId) {\n        str += ' SYSTEM';\n    }\n    if (systemId) {\n        str += ` ${enquoteDoctypeId(systemId)}`;\n    }\n    return str;\n}\nexport const adapter = {\n    // Re-exports from domhandler\n    isCommentNode: isComment,\n    isElementNode: isTag,\n    isTextNode: isText,\n    //Node construction\n    createDocument() {\n        const node = new Document([]);\n        node['x-mode'] = html.DOCUMENT_MODE.NO_QUIRKS;\n        return node;\n    },\n    createDocumentFragment() {\n        return new Document([]);\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        const attribs = Object.create(null);\n        const attribsNamespace = Object.create(null);\n        const attribsPrefix = Object.create(null);\n        for (let i = 0; i < attrs.length; i++) {\n            const attrName = attrs[i].name;\n            attribs[attrName] = attrs[i].value;\n            attribsNamespace[attrName] = attrs[i].namespace;\n            attribsPrefix[attrName] = attrs[i].prefix;\n        }\n        const node = new Element(tagName, attribs, []);\n        node.namespace = namespaceURI;\n        node['x-attribsNamespace'] = attribsNamespace;\n        node['x-attribsPrefix'] = attribsPrefix;\n        return node;\n    },\n    createCommentNode(data) {\n        return new Comment(data);\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        const prev = parentNode.children[parentNode.children.length - 1];\n        if (prev) {\n            prev.next = newNode;\n            newNode.prev = prev;\n        }\n        parentNode.children.push(newNode);\n        newNode.parent = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.children.indexOf(referenceNode);\n        const { prev } = referenceNode;\n        if (prev) {\n            prev.next = newNode;\n            newNode.prev = prev;\n        }\n        referenceNode.prev = newNode;\n        newNode.next = referenceNode;\n        parentNode.children.splice(insertionIdx, 0, newNode);\n        newNode.parent = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        adapter.appendChild(templateElement, contentElement);\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.children[0];\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const data = serializeDoctypeContent(name, publicId, systemId);\n        let doctypeNode = document.children.find((node) => isDirective(node) && node.name === '!doctype');\n        if (doctypeNode) {\n            doctypeNode.data = data !== null && data !== void 0 ? data : null;\n        }\n        else {\n            doctypeNode = new ProcessingInstruction('!doctype', data);\n            adapter.appendChild(document, doctypeNode);\n        }\n        doctypeNode['x-name'] = name !== null && name !== void 0 ? name : undefined;\n        doctypeNode['x-publicId'] = publicId !== null && publicId !== void 0 ? publicId : undefined;\n        doctypeNode['x-systemId'] = systemId !== null && systemId !== void 0 ? systemId : undefined;\n    },\n    setDocumentMode(document, mode) {\n        document['x-mode'] = mode;\n    },\n    getDocumentMode(document) {\n        return document['x-mode'];\n    },\n    detachNode(node) {\n        if (node.parent) {\n            const idx = node.parent.children.indexOf(node);\n            const { prev, next } = node;\n            node.prev = null;\n            node.next = null;\n            if (prev) {\n                prev.next = next;\n            }\n            if (next) {\n                next.prev = prev;\n            }\n            node.parent.children.splice(idx, 1);\n            node.parent = null;\n        }\n    },\n    insertText(parentNode, text) {\n        const lastChild = parentNode.children[parentNode.children.length - 1];\n        if (lastChild && isText(lastChild)) {\n            lastChild.data += text;\n        }\n        else {\n            adapter.appendChild(parentNode, createTextNode(text));\n        }\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.children[parentNode.children.indexOf(referenceNode) - 1];\n        if (prevNode && isText(prevNode)) {\n            prevNode.data += text;\n        }\n        else {\n            adapter.insertBefore(parentNode, createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        for (let i = 0; i < attrs.length; i++) {\n            const attrName = attrs[i].name;\n            if (typeof recipient.attribs[attrName] === 'undefined') {\n                recipient.attribs[attrName] = attrs[i].value;\n                recipient['x-attribsNamespace'][attrName] = attrs[i].namespace;\n                recipient['x-attribsPrefix'][attrName] = attrs[i].prefix;\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.children[0];\n    },\n    getChildNodes(node) {\n        return node.children;\n    },\n    getParentNode(node) {\n        return node.parent;\n    },\n    getAttrList(element) {\n        return element.attributes;\n    },\n    //Node data\n    getTagName(element) {\n        return element.name;\n    },\n    getNamespaceURI(element) {\n        return element.namespace;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.data;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        var _a;\n        return (_a = doctypeNode['x-name']) !== null && _a !== void 0 ? _a : '';\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        var _a;\n        return (_a = doctypeNode['x-publicId']) !== null && _a !== void 0 ? _a : '';\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        var _a;\n        return (_a = doctypeNode['x-systemId']) !== null && _a !== void 0 ? _a : '';\n    },\n    //Node types\n    isDocumentTypeNode(node) {\n        return isDirective(node) && node.name === '!doctype';\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        if (location) {\n            node.startIndex = location.startOffset;\n            node.endIndex = location.endOffset;\n        }\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        if (endLocation.endOffset != null)\n            node.endIndex = endLocation.endOffset;\n        node.sourceCodeLocation = {\n            ...node.sourceCodeLocation,\n            ...endLocation,\n        };\n    },\n};\n//# sourceMappingURL=index.js.map", null, null, null, null, null, "// Auto-generated by `scripts/create-entrypoints.js`. Do not edit manually.\nexport * as load__serializable from \"../load/serializable.js\";\nexport * as agents from \"../agents/index.js\";\nexport * as base_language from \"../base_language/index.js\";\nexport * as tools from \"../tools/index.js\";\nexport * as chains from \"../chains/index.js\";\nexport * as chains__openai_functions from \"../chains/openai_functions/index.js\";\nexport * as embeddings__base from \"../embeddings/base.js\";\nexport * as embeddings__fake from \"../embeddings/fake.js\";\nexport * as embeddings__openai from \"../embeddings/openai.js\";\nexport * as llms__base from \"../llms/base.js\";\nexport * as llms__openai from \"../llms/openai.js\";\nexport * as llms__ai21 from \"../llms/ai21.js\";\nexport * as llms__aleph_alpha from \"../llms/aleph_alpha.js\";\nexport * as prompts from \"../prompts/index.js\";\nexport * as vectorstores__base from \"../vectorstores/base.js\";\nexport * as vectorstores__memory from \"../vectorstores/memory.js\";\nexport * as vectorstores__prisma from \"../vectorstores/prisma.js\";\nexport * as vectorstores__vectara from \"../vectorstores/vectara.js\";\nexport * as text_splitter from \"../text_splitter.js\";\nexport * as memory from \"../memory/index.js\";\nexport * as document from \"../document.js\";\nexport * as document_loaders__base from \"../document_loaders/base.js\";\nexport * as document_loaders__web__sort_xyz_blockchain from \"../document_loaders/web/sort_xyz_blockchain.js\";\nexport * as document_transformers__openai_functions from \"../document_transformers/openai_functions.js\";\nexport * as chat_models__base from \"../chat_models/base.js\";\nexport * as chat_models__openai from \"../chat_models/openai.js\";\nexport * as chat_models__anthropic from \"../chat_models/anthropic.js\";\nexport * as chat_models__baiduwenxin from \"../chat_models/baiduwenxin.js\";\nexport * as schema from \"../schema/index.js\";\nexport * as schema__output_parser from \"../schema/output_parser.js\";\nexport * as schema__query_constructor from \"../schema/query_constructor.js\";\nexport * as schema__retriever from \"../schema/retriever.js\";\nexport * as callbacks from \"../callbacks/index.js\";\nexport * as output_parsers from \"../output_parsers/index.js\";\nexport * as retrievers__remote from \"../retrievers/remote/index.js\";\nexport * as retrievers__databerry from \"../retrievers/databerry.js\";\nexport * as retrievers__contextual_compression from \"../retrievers/contextual_compression.js\";\nexport * as retrievers__document_compressors from \"../retrievers/document_compressors/index.js\";\nexport * as retrievers__time_weighted from \"../retrievers/time_weighted.js\";\nexport * as retrievers__document_compressors__chain_extract from \"../retrievers/document_compressors/chain_extract.js\";\nexport * as retrievers__hyde from \"../retrievers/hyde.js\";\nexport * as retrievers__vespa from \"../retrievers/vespa.js\";\nexport * as cache from \"../cache/index.js\";\nexport * as stores__doc__in_memory from \"../stores/doc/in_memory.js\";\nexport * as stores__file__in_memory from \"../stores/file/in_memory.js\";\nexport * as stores__message__in_memory from \"../stores/message/in_memory.js\";\nexport * as experimental__autogpt from \"../experimental/autogpt/index.js\";\nexport * as experimental__babyagi from \"../experimental/babyagi/index.js\";\nexport * as experimental__generative_agents from \"../experimental/generative_agents/index.js\";\nexport * as experimental__plan_and_execute from \"../experimental/plan_and_execute/index.js\";\nexport * as evaluation from \"../evaluation/index.js\";\n", "export { Agent, BaseSingleActionAgent, LLMSingleActionAgent, } from \"./agent.js\";\nexport { JsonToolkit, OpenApiToolkit, RequestsToolkit, VectorStoreRouterToolkit, VectorStoreToolkit, ZapierToolKit, createJsonAgent, createOpenApiAgent, createVectorStoreAgent, createVectorStoreRouterAgent, } from \"./toolkits/index.js\";\nexport { Toolkit } from \"./toolkits/base.js\";\nexport { ChatAgent, } from \"./chat/index.js\";\nexport { ChatAgentOutputParser } from \"./chat/outputParser.js\";\nexport { ChatConversationalAgent, } from \"./chat_convo/index.js\";\nexport { ChatConversationalAgentOutputParser, ChatConversationalAgentOutputParserWithRetries, } from \"./chat_convo/outputParser.js\";\nexport { AgentExecutor } from \"./executor.js\";\nexport { initializeAgentExecutor, initializeAgentExecutorWithOptions, } from \"./initialize.js\";\nexport { ZeroShotAgent, } from \"./mrkl/index.js\";\nexport { ZeroShotAgentOutputParser } from \"./mrkl/outputParser.js\";\nexport { AgentActionOutputParser, } from \"./types.js\";\nexport { StructuredChatAgent, } from \"./structured_chat/index.js\";\nexport { StructuredChatOutputParser, StructuredChatOutputParserWithRetries, } from \"./structured_chat/outputParser.js\";\nexport { OpenAIAgent, } from \"./openai/index.js\";\n", "import jsonpointer from \"jsonpointer\";\nimport { Tool } from \"./base.js\";\nimport { Serializable } from \"../load/serializable.js\";\nexport class JsonSpec extends Serializable {\n    constructor(obj, max_value_length = 4000) {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"tools\", \"json\"]\n        });\n        Object.defineProperty(this, \"obj\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"maxValueLength\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 4000\n        });\n        this.obj = obj;\n        this.maxValueLength = max_value_length;\n    }\n    getKeys(input) {\n        const pointer = jsonpointer.compile(input);\n        const res = pointer.get(this.obj);\n        if (typeof res === \"object\" && !Array.isArray(res) && res !== null) {\n            return Object.keys(res)\n                .map((i) => i.replaceAll(\"~\", \"~0\").replaceAll(\"/\", \"~1\"))\n                .join(\", \");\n        }\n        throw new Error(`Value at ${input} is not a dictionary, get the value directly instead.`);\n    }\n    getValue(input) {\n        const pointer = jsonpointer.compile(input);\n        const res = pointer.get(this.obj);\n        if (res === null || res === undefined) {\n            throw new Error(`Value at ${input} is null or undefined.`);\n        }\n        const str = typeof res === \"object\" ? JSON.stringify(res) : res.toString();\n        if (typeof res === \"object\" &&\n            !Array.isArray(res) &&\n            str.length > this.maxValueLength) {\n            return `Value is a large dictionary, should explore its keys directly.`;\n        }\n        if (str.length > this.maxValueLength) {\n            return `${str.slice(0, this.maxValueLength)}...`;\n        }\n        return str;\n    }\n}\nexport class JsonListKeysTool extends Tool {\n    constructor(fields) {\n        if (!(\"jsonSpec\" in fields)) {\n            // eslint-disable-next-line no-param-reassign\n            fields = { jsonSpec: fields };\n        }\n        super(fields);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"json_list_keys\"\n        });\n        Object.defineProperty(this, \"jsonSpec\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: `Can be used to list all keys at a given path. \n    Before calling this you should be SURE that the path to this exists.\n    The input is a text representation of the path to the json as json pointer syntax (e.g. /key1/0/key2).`\n        });\n        this.jsonSpec = fields.jsonSpec;\n    }\n    /** @ignore */\n    async _call(input) {\n        try {\n            return this.jsonSpec.getKeys(input);\n        }\n        catch (error) {\n            return `${error}`;\n        }\n    }\n}\nexport class JsonGetValueTool extends Tool {\n    constructor(jsonSpec) {\n        super();\n        Object.defineProperty(this, \"jsonSpec\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: jsonSpec\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"json_get_value\"\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: `Can be used to see value in string format at a given path.\n    Before calling this you should be SURE that the path to this exists.\n    The input is a text representation of the path to the json as json pointer syntax (e.g. /key1/0/key2).`\n        });\n    }\n    /** @ignore */\n    async _call(input) {\n        try {\n            return this.jsonSpec.getValue(input);\n        }\n        catch (error) {\n            return `${error}`;\n        }\n    }\n}\n", "import { z } from \"zod\";\nimport { CallbackManager, parseCallbackConfigArg, } from \"../callbacks/manager.js\";\nimport { BaseLangChain } from \"../base_language/index.js\";\n/**\n * Base class for Tools that accept input of any shape defined by a Zod schema.\n */\nexport class StructuredTool extends BaseLangChain {\n    get lc_namespace() {\n        return [\"langchain\", \"tools\"];\n    }\n    constructor(fields) {\n        super(fields ?? {});\n        Object.defineProperty(this, \"returnDirect\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n    }\n    async call(arg, configArg, \n    /** @deprecated */\n    tags) {\n        const parsed = await this.schema.parseAsync(arg);\n        const config = parseCallbackConfigArg(configArg);\n        const callbackManager_ = await CallbackManager.configure(config.callbacks, this.callbacks, config.tags || tags, this.tags, config.metadata, this.metadata, { verbose: this.verbose });\n        const runManager = await callbackManager_?.handleToolStart(this.toJSON(), typeof parsed === \"string\" ? parsed : JSON.stringify(parsed));\n        let result;\n        try {\n            result = await this._call(parsed, runManager);\n        }\n        catch (e) {\n            await runManager?.handleToolError(e);\n            throw e;\n        }\n        await runManager?.handleToolEnd(result);\n        return result;\n    }\n}\n/**\n * Base class for Tools that accept input as a string.\n */\nexport class Tool extends StructuredTool {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"schema\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: z\n                .object({ input: z.string().optional() })\n                .transform((obj) => obj.input)\n        });\n    }\n    call(arg, callbacks) {\n        return super.call(typeof arg === \"string\" || !arg ? { input: arg } : arg, callbacks);\n    }\n}\n", "import { JsonGetValueTool, JsonListKeysTool, } from \"../../../tools/json.js\";\nimport { JSON_PREFIX, JSON_SUFFIX } from \"./prompt.js\";\nimport { LLMChain } from \"../../../chains/llm_chain.js\";\nimport { ZeroShotAgent } from \"../../mrkl/index.js\";\nimport { Toolkit } from \"../base.js\";\nimport { AgentExecutor } from \"../../executor.js\";\nexport class JsonToolkit extends Toolkit {\n    constructor(jsonSpec) {\n        super();\n        Object.defineProperty(this, \"jsonSpec\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: jsonSpec\n        });\n        Object.defineProperty(this, \"tools\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.tools = [\n            new JsonListKeysTool(jsonSpec),\n            new JsonGetValueTool(jsonSpec),\n        ];\n    }\n}\nexport function createJsonAgent(llm, toolkit, args) {\n    const { prefix = JSON_PREFIX, suffix = JSON_SUFFIX, inputVariables = [\"input\", \"agent_scratchpad\"], } = args ?? {};\n    const { tools } = toolkit;\n    const prompt = ZeroShotAgent.createPrompt(tools, {\n        prefix,\n        suffix,\n        inputVariables,\n    });\n    const chain = new LLMChain({ prompt, llm });\n    const agent = new ZeroShotAgent({\n        llmChain: chain,\n        allowedTools: tools.map((t) => t.name),\n    });\n    return AgentExecutor.fromAgentAndTools({\n        agent,\n        tools,\n        returnIntermediateSteps: true,\n    });\n}\n", "import { BaseChain } from \"../chains/base.js\";\n/**\n * A chain managing an agent using tools.\n * @augments BaseChain\n */\nexport class AgentExecutor extends BaseChain {\n    get lc_namespace() {\n        return [\"langchain\", \"agents\", \"executor\"];\n    }\n    get inputKeys() {\n        return this.agent.inputKeys;\n    }\n    get outputKeys() {\n        return this.agent.returnValues;\n    }\n    constructor(input) {\n        super(input);\n        Object.defineProperty(this, \"agent\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tools\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"returnIntermediateSteps\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"maxIterations\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 15\n        });\n        Object.defineProperty(this, \"earlyStoppingMethod\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"force\"\n        });\n        this.agent = input.agent;\n        this.tools = input.tools;\n        if (this.agent._agentActionType() === \"multi\") {\n            for (const tool of this.tools) {\n                if (tool.returnDirect) {\n                    throw new Error(`Tool with return direct ${tool.name} not supported for multi-action agent.`);\n                }\n            }\n        }\n        this.returnIntermediateSteps =\n            input.returnIntermediateSteps ?? this.returnIntermediateSteps;\n        this.maxIterations = input.maxIterations ?? this.maxIterations;\n        this.earlyStoppingMethod =\n            input.earlyStoppingMethod ?? this.earlyStoppingMethod;\n    }\n    /** Create from agent and a list of tools. */\n    static fromAgentAndTools(fields) {\n        return new AgentExecutor(fields);\n    }\n    shouldContinue(iterations) {\n        return this.maxIterations === undefined || iterations < this.maxIterations;\n    }\n    /** @ignore */\n    async _call(inputs, runManager) {\n        const toolsByName = Object.fromEntries(this.tools.map((t) => [t.name.toLowerCase(), t]));\n        const steps = [];\n        let iterations = 0;\n        const getOutput = async (finishStep) => {\n            const { returnValues } = finishStep;\n            const additional = await this.agent.prepareForOutput(returnValues, steps);\n            if (this.returnIntermediateSteps) {\n                return { ...returnValues, intermediateSteps: steps, ...additional };\n            }\n            await runManager?.handleAgentEnd(finishStep);\n            return { ...returnValues, ...additional };\n        };\n        while (this.shouldContinue(iterations)) {\n            const output = await this.agent.plan(steps, inputs, runManager?.getChild());\n            // Check if the agent has finished\n            if (\"returnValues\" in output) {\n                return getOutput(output);\n            }\n            let actions;\n            if (Array.isArray(output)) {\n                actions = output;\n            }\n            else {\n                actions = [output];\n            }\n            const newSteps = await Promise.all(actions.map(async (action) => {\n                await runManager?.handleAgentAction(action);\n                const tool = toolsByName[action.tool?.toLowerCase()];\n                const observation = tool\n                    ? await tool.call(action.toolInput, runManager?.getChild())\n                    : `${action.tool} is not a valid tool, try another one.`;\n                return { action, observation };\n            }));\n            steps.push(...newSteps);\n            const lastStep = steps[steps.length - 1];\n            const lastTool = toolsByName[lastStep.action.tool?.toLowerCase()];\n            if (lastTool?.returnDirect) {\n                return getOutput({\n                    returnValues: { [this.agent.returnValues[0]]: lastStep.observation },\n                    log: \"\",\n                });\n            }\n            iterations += 1;\n        }\n        const finish = await this.agent.returnStoppedResponse(this.earlyStoppingMethod, steps, inputs);\n        return getOutput(finish);\n    }\n    _chainType() {\n        return \"agent_executor\";\n    }\n    serialize() {\n        throw new Error(\"Cannot serialize an AgentExecutor\");\n    }\n}\n", "import { DynamicTool } from \"../../../tools/dynamic.js\";\nimport { AgentExecutor } from \"../../executor.js\";\nimport { OPENAPI_PREFIX, OPENAPI_SUFFIX, JSON_EXPLORER_DESCRIPTION, } from \"./prompt.js\";\nimport { LLMChain } from \"../../../chains/llm_chain.js\";\nimport { ZeroShotAgent } from \"../../mrkl/index.js\";\nimport { Toolkit } from \"../base.js\";\nimport { RequestsGetTool, RequestsPostTool, } from \"../../../tools/requests.js\";\nimport { createJsonAgent, JsonToolkit } from \"../json/json.js\";\nexport class RequestsToolkit extends Toolkit {\n    constructor(headers) {\n        super();\n        Object.defineProperty(this, \"tools\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.tools = [new RequestsGetTool(headers), new RequestsPostTool(headers)];\n    }\n}\nexport class OpenApiToolkit extends RequestsToolkit {\n    constructor(jsonSpec, llm, headers) {\n        super(headers);\n        const jsonAgent = createJsonAgent(llm, new JsonToolkit(jsonSpec));\n        this.tools = [\n            ...this.tools,\n            new DynamicTool({\n                name: \"json_explorer\",\n                func: async (input) => {\n                    const result = await jsonAgent.call({ input });\n                    return result.output;\n                },\n                description: JSON_EXPLORER_DESCRIPTION,\n            }),\n        ];\n    }\n}\nexport function createOpenApiAgent(llm, openApiToolkit, args) {\n    const { prefix = OPENAPI_PREFIX, suffix = OPENAPI_SUFFIX, inputVariables = [\"input\", \"agent_scratchpad\"], } = args ?? {};\n    const { tools } = openApiToolkit;\n    const prompt = ZeroShotAgent.createPrompt(tools, {\n        prefix,\n        suffix,\n        inputVariables,\n    });\n    const chain = new LLMChain({\n        prompt,\n        llm,\n    });\n    const toolNames = tools.map((tool) => tool.name);\n    const agent = new ZeroShotAgent({ llmChain: chain, allowedTools: toolNames });\n    return AgentExecutor.fromAgentAndTools({\n        agent,\n        tools,\n        returnIntermediateSteps: true,\n    });\n}\n", "import { VectorDBQAChain } from \"../chains/vector_db_qa.js\";\nimport { Tool } from \"./base.js\";\nexport class VectorStoreQATool extends Tool {\n    constructor(name, description, fields) {\n        super(...arguments);\n        Object.defineProperty(this, \"vectorStore\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"llm\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"chain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = name;\n        this.description = description;\n        this.vectorStore = fields.vectorStore;\n        this.llm = fields.llm;\n        this.chain = VectorDBQAChain.fromLLM(this.llm, this.vectorStore);\n    }\n    static getDescription(name, description) {\n        return `Useful for when you need to answer questions about ${name}. Whenever you need information about ${description} you should ALWAYS use this. Input should be a fully formed question.`;\n    }\n    /** @ignore */\n    async _call(input) {\n        return this.chain.run(input);\n    }\n}\n", "import { VectorStoreQATool } from \"../../../tools/vectorstore.js\";\nimport { Toolkit } from \"../base.js\";\nimport { ZeroShotAgent } from \"../../mrkl/index.js\";\nimport { VECTOR_PREFIX, VECTOR_ROUTER_PREFIX } from \"./prompt.js\";\nimport { SUFFIX } from \"../../mrkl/prompt.js\";\nimport { LLMChain } from \"../../../chains/llm_chain.js\";\nimport { AgentExecutor } from \"../../executor.js\";\nexport class VectorStoreToolkit extends Toolkit {\n    constructor(vectorStoreInfo, llm) {\n        super();\n        Object.defineProperty(this, \"tools\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"llm\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        const description = VectorStoreQATool.getDescription(vectorStoreInfo.name, vectorStoreInfo.description);\n        this.llm = llm;\n        this.tools = [\n            new VectorStoreQATool(vectorStoreInfo.name, description, {\n                vectorStore: vectorStoreInfo.vectorStore,\n                llm: this.llm,\n            }),\n        ];\n    }\n}\nexport class VectorStoreRouterToolkit extends Toolkit {\n    constructor(vectorStoreInfos, llm) {\n        super();\n        Object.defineProperty(this, \"tools\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"vectorStoreInfos\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"llm\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.llm = llm;\n        this.vectorStoreInfos = vectorStoreInfos;\n        this.tools = vectorStoreInfos.map((vectorStoreInfo) => {\n            const description = VectorStoreQATool.getDescription(vectorStoreInfo.name, vectorStoreInfo.description);\n            return new VectorStoreQATool(vectorStoreInfo.name, description, {\n                vectorStore: vectorStoreInfo.vectorStore,\n                llm: this.llm,\n            });\n        });\n    }\n}\nexport function createVectorStoreAgent(llm, toolkit, args) {\n    const { prefix = VECTOR_PREFIX, suffix = SUFFIX, inputVariables = [\"input\", \"agent_scratchpad\"], } = args ?? {};\n    const { tools } = toolkit;\n    const prompt = ZeroShotAgent.createPrompt(tools, {\n        prefix,\n        suffix,\n        inputVariables,\n    });\n    const chain = new LLMChain({ prompt, llm });\n    const agent = new ZeroShotAgent({\n        llmChain: chain,\n        allowedTools: tools.map((t) => t.name),\n    });\n    return AgentExecutor.fromAgentAndTools({\n        agent,\n        tools,\n        returnIntermediateSteps: true,\n    });\n}\nexport function createVectorStoreRouterAgent(llm, toolkit, args) {\n    const { prefix = VECTOR_ROUTER_PREFIX, suffix = SUFFIX, inputVariables = [\"input\", \"agent_scratchpad\"], } = args ?? {};\n    const { tools } = toolkit;\n    const prompt = ZeroShotAgent.createPrompt(tools, {\n        prefix,\n        suffix,\n        inputVariables,\n    });\n    const chain = new LLMChain({ prompt, llm });\n    const agent = new ZeroShotAgent({\n        llmChain: chain,\n        allowedTools: tools.map((t) => t.name),\n    });\n    return AgentExecutor.fromAgentAndTools({\n        agent,\n        tools,\n        returnIntermediateSteps: true,\n    });\n}\n", "import { Tool } from \"./base.js\";\nimport { renderTemplate } from \"../prompts/template.js\";\nimport { AsyncCaller } from \"../util/async_caller.js\";\nimport { getEnvironmentVariable } from \"../util/env.js\";\nimport { Serializable } from \"../load/serializable.js\";\nconst zapierNLABaseDescription = \"A wrapper around Zapier NLA actions. \" +\n    \"The input to this tool is a natural language instruction, \" +\n    'for example \"get the latest email from my bank\" or ' +\n    '\"send a slack message to the #general channel\". ' +\n    \"Each tool will have params associated with it that are specified as a list. You MUST take into account the params when creating the instruction. \" +\n    \"For example, if the params are ['Message_Text', 'Channel'], your instruction should be something like 'send a slack message to the #general channel with the text hello world'. \" +\n    \"Another example: if the params are ['Calendar', 'Search_Term'], your instruction should be something like 'find the meeting in my personal calendar at 3pm'. \" +\n    \"Do not make up params, they will be explicitly specified in the tool description. \" +\n    \"If you do not have enough information to fill in the params, just say 'not enough information provided in the instruction, missing <param>'. \" +\n    \"If you get a none or null response, STOP EXECUTION, do not try to another tool! \" +\n    \"This tool specifically used for: {zapier_description}, \" +\n    \"and has params: {params}\";\nexport class ZapierNLAWrapper extends Serializable {\n    get lc_secrets() {\n        return {\n            apiKey: \"ZAPIER_NLA_API_KEY\",\n        };\n    }\n    constructor(params) {\n        super(params);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"tools\", \"zapier\"]\n        });\n        Object.defineProperty(this, \"zapierNlaApiKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"zapierNlaOAuthAccessToken\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"zapierNlaApiBase\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"https://nla.zapier.com/api/v1/\"\n        });\n        Object.defineProperty(this, \"caller\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        const zapierNlaOAuthAccessToken = params?.oauthAccessToken;\n        const zapierNlaApiKey = params?.apiKey;\n        const oauthAccessToken = zapierNlaOAuthAccessToken ??\n            getEnvironmentVariable(\"ZAPIER_NLA_OAUTH_ACCESS_TOKEN\");\n        const apiKey = zapierNlaApiKey ?? getEnvironmentVariable(\"ZAPIER_NLA_API_KEY\");\n        if (!apiKey && !oauthAccessToken) {\n            throw new Error(\"Neither ZAPIER_NLA_OAUTH_ACCESS_TOKEN or ZAPIER_NLA_API_KEY are set\");\n        }\n        if (oauthAccessToken) {\n            this.zapierNlaOAuthAccessToken = oauthAccessToken;\n        }\n        else {\n            this.zapierNlaApiKey = apiKey;\n        }\n        this.caller = new AsyncCaller(typeof params === \"string\" ? {} : params ?? {});\n    }\n    _getHeaders() {\n        const headers = {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n        };\n        if (this.zapierNlaOAuthAccessToken) {\n            headers.Authorization = `Bearer ${this.zapierNlaOAuthAccessToken}`;\n        }\n        else {\n            headers[\"x-api-key\"] = this.zapierNlaApiKey;\n        }\n        return headers;\n    }\n    async _getActionRequest(actionId, instructions, params) {\n        const data = params ?? {};\n        data.instructions = instructions;\n        const headers = this._getHeaders();\n        // add api key to params\n        const resp = await this.caller.call(fetch, `${this.zapierNlaApiBase}exposed/${actionId}/execute/`, {\n            method: \"POST\",\n            headers,\n            body: JSON.stringify(data),\n        });\n        if (!resp.ok) {\n            throw new Error(`Failed to execute action ${actionId} with instructions ${instructions}`);\n        }\n        const jsonResp = await resp.json();\n        if (jsonResp.status === \"error\") {\n            throw new Error(`Error from Zapier: ${jsonResp.error}`);\n        }\n        return jsonResp;\n    }\n    /**\n     * Executes an action that is identified by action_id, must be exposed\n     * (enabled) by the current user (associated with the set api_key or access token).\n     * @param actionId\n     * @param instructions\n     * @param params\n     */\n    async runAction(actionId, instructions, params) {\n        const resp = await this._getActionRequest(actionId, instructions, params);\n        return resp.status === \"error\" ? resp.error : resp.result;\n    }\n    /**\n     * Same as run, but instead of actually executing the action, will\n     * instead return a preview of params that have been guessed by the AI in\n     * case you need to explicitly review before executing.\n     * @param actionId\n     * @param instructions\n     * @param params\n     */\n    async previewAction(actionId, instructions, params) {\n        const data = params ?? {};\n        data.preview_only = true;\n        const resp = await this._getActionRequest(actionId, instructions, data);\n        return resp.input_params;\n    }\n    /**\n     * Returns a list of all exposed (enabled) actions associated with\n     * current user (associated with the set api_key or access token).\n     */\n    async listActions() {\n        const headers = this._getHeaders();\n        const resp = await this.caller.call(fetch, `${this.zapierNlaApiBase}exposed/`, {\n            method: \"GET\",\n            headers,\n        });\n        if (!resp.ok) {\n            if (resp.status === 401) {\n                if (this.zapierNlaOAuthAccessToken) {\n                    throw new Error(\"A 401 Unauthorized error was returned. Check that your access token is correct and doesn't need to be refreshed.\");\n                }\n                throw new Error(\"A 401 Unauthorized error was returned. Check that your API Key is correct.\");\n            }\n            throw new Error(\"Failed to list actions\");\n        }\n        return (await resp.json()).results;\n    }\n    /**\n     * Same as run, but returns a stringified version of the result.\n     * @param actionId\n     * @param instructions\n     * @param params\n     */\n    async runAsString(actionId, instructions, params) {\n        const result = await this.runAction(actionId, instructions, params);\n        return JSON.stringify(result);\n    }\n    /**\n     * Same as preview, but returns a stringified version of the result.\n     * @param actionId\n     * @param instructions\n     * @param params\n     */\n    async previewAsString(actionId, instructions, params) {\n        const result = await this.previewAction(actionId, instructions, params);\n        return JSON.stringify(result);\n    }\n    /**\n     * Same as list, but returns a stringified version of the result.\n     */\n    async listActionsAsString() {\n        const result = await this.listActions();\n        return JSON.stringify(result);\n    }\n}\nexport class ZapierNLARunAction extends Tool {\n    constructor(apiWrapper, actionId, zapierDescription, paramsSchema, params) {\n        super();\n        Object.defineProperty(this, \"apiWrapper\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"actionId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"params\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.apiWrapper = apiWrapper;\n        this.actionId = actionId;\n        this.params = params;\n        this.name = zapierDescription;\n        const paramsSchemaWithoutInstructions = { ...paramsSchema };\n        delete paramsSchemaWithoutInstructions.instructions;\n        const paramsSchemaKeysString = JSON.stringify(Object.keys(paramsSchemaWithoutInstructions));\n        this.description = renderTemplate(zapierNLABaseDescription, \"f-string\", {\n            zapier_description: zapierDescription,\n            params: paramsSchemaKeysString,\n        });\n    }\n    /** @ignore */\n    async _call(arg) {\n        return this.apiWrapper.runAsString(this.actionId, arg, this.params);\n    }\n}\n", "import { LLMChain } from \"../../chains/llm_chain.js\";\nimport { ChatPromptTemplate, HumanMessagePromptTemplate, SystemMessagePromptTemplate, } from \"../../prompts/chat.js\";\nimport { Agent } from \"../agent.js\";\nimport { ChatAgentOutputParser } from \"./outputParser.js\";\nimport { FORMAT_INSTRUCTIONS, PREFIX, SUFFIX } from \"./prompt.js\";\nconst DEFAULT_HUMAN_MESSAGE_TEMPLATE = \"{input}\\n\\n{agent_scratchpad}\";\n/**\n * Agent for the MRKL chain.\n * @augments Agent\n */\nexport class ChatAgent extends Agent {\n    constructor(input) {\n        const outputParser = input?.outputParser ?? ChatAgent.getDefaultOutputParser();\n        super({ ...input, outputParser });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"chat\"]\n        });\n    }\n    _agentType() {\n        return \"chat-zero-shot-react-description\";\n    }\n    observationPrefix() {\n        return \"Observation: \";\n    }\n    llmPrefix() {\n        return \"Thought:\";\n    }\n    _stop() {\n        return [\"Observation:\"];\n    }\n    static validateTools(tools) {\n        const descriptionlessTool = tools.find((tool) => !tool.description);\n        if (descriptionlessTool) {\n            const msg = `Got a tool ${descriptionlessTool.name} without a description.` +\n                ` This agent requires descriptions for all tools.`;\n            throw new Error(msg);\n        }\n    }\n    static getDefaultOutputParser(_fields) {\n        return new ChatAgentOutputParser();\n    }\n    async constructScratchPad(steps) {\n        const agentScratchpad = await super.constructScratchPad(steps);\n        if (agentScratchpad) {\n            return `This was your previous work (but I haven't seen any of it! I only see what you return as final answer):\\n${agentScratchpad}`;\n        }\n        return agentScratchpad;\n    }\n    /**\n     * Create prompt in the style of the zero shot agent.\n     *\n     * @param tools - List of tools the agent will have access to, used to format the prompt.\n     * @param args - Arguments to create the prompt with.\n     * @param args.suffix - String to put after the list of tools.\n     * @param args.prefix - String to put before the list of tools.\n     * @param args.humanMessageTemplate - String to use directly as the human message template\n     */\n    static createPrompt(tools, args) {\n        const { prefix = PREFIX, suffix = SUFFIX, humanMessageTemplate = DEFAULT_HUMAN_MESSAGE_TEMPLATE, } = args ?? {};\n        const toolStrings = tools\n            .map((tool) => `${tool.name}: ${tool.description}`)\n            .join(\"\\n\");\n        const template = [prefix, toolStrings, FORMAT_INSTRUCTIONS, suffix].join(\"\\n\\n\");\n        const messages = [\n            SystemMessagePromptTemplate.fromTemplate(template),\n            HumanMessagePromptTemplate.fromTemplate(humanMessageTemplate),\n        ];\n        return ChatPromptTemplate.fromPromptMessages(messages);\n    }\n    static fromLLMAndTools(llm, tools, args) {\n        ChatAgent.validateTools(tools);\n        const prompt = ChatAgent.createPrompt(tools, args);\n        const chain = new LLMChain({\n            prompt,\n            llm,\n            callbacks: args?.callbacks ?? args?.callbackManager,\n        });\n        const outputParser = args?.outputParser ?? ChatAgent.getDefaultOutputParser();\n        return new ChatAgent({\n            llmChain: chain,\n            outputParser,\n            allowedTools: tools.map((t) => t.name),\n        });\n    }\n}\n", "import { AgentActionOutputParser } from \"../types.js\";\nimport { FORMAT_INSTRUCTIONS } from \"./prompt.js\";\nexport const FINAL_ANSWER_ACTION = \"Final Answer:\";\nexport class ChatAgentOutputParser extends AgentActionOutputParser {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"chat\"]\n        });\n    }\n    async parse(text) {\n        if (text.includes(FINAL_ANSWER_ACTION) || !text.includes(`\"action\":`)) {\n            const parts = text.split(FINAL_ANSWER_ACTION);\n            const output = parts[parts.length - 1].trim();\n            return { returnValues: { output }, log: text };\n        }\n        const action = text.includes(\"```\")\n            ? text.trim().split(/```(?:json)?/)[1]\n            : text.trim();\n        try {\n            const response = JSON.parse(action.trim());\n            return {\n                tool: response.action,\n                toolInput: response.action_input,\n                log: text,\n            };\n        }\n        catch {\n            throw new Error(`Unable to parse JSON response from chat agent.\\n\\n${text}`);\n        }\n    }\n    getFormatInstructions() {\n        return FORMAT_INSTRUCTIONS;\n    }\n}\n", "import { LLMChain } from \"../../chains/llm_chain.js\";\nimport { ChatPromptTemplate, HumanMessagePromptTemplate, MessagesPlaceholder, SystemMessagePromptTemplate, } from \"../../prompts/chat.js\";\nimport { renderTemplate } from \"../../prompts/template.js\";\nimport { AIMessage, HumanMessage, } from \"../../schema/index.js\";\nimport { Agent } from \"../agent.js\";\nimport { ChatConversationalAgentOutputParserWithRetries } from \"./outputParser.js\";\nimport { PREFIX_END, DEFAULT_PREFIX, DEFAULT_SUFFIX, TEMPLATE_TOOL_RESPONSE, } from \"./prompt.js\";\n/**\n * Agent for the MRKL chain.\n * @augments Agent\n */\nexport class ChatConversationalAgent extends Agent {\n    constructor(input) {\n        const outputParser = input.outputParser ?? ChatConversationalAgent.getDefaultOutputParser();\n        super({ ...input, outputParser });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"chat_convo\"]\n        });\n    }\n    _agentType() {\n        return \"chat-conversational-react-description\";\n    }\n    observationPrefix() {\n        return \"Observation: \";\n    }\n    llmPrefix() {\n        return \"Thought:\";\n    }\n    _stop() {\n        return [\"Observation:\"];\n    }\n    static validateTools(tools) {\n        const descriptionlessTool = tools.find((tool) => !tool.description);\n        if (descriptionlessTool) {\n            const msg = `Got a tool ${descriptionlessTool.name} without a description.` +\n                ` This agent requires descriptions for all tools.`;\n            throw new Error(msg);\n        }\n    }\n    async constructScratchPad(steps) {\n        const thoughts = [];\n        for (const step of steps) {\n            thoughts.push(new AIMessage(step.action.log));\n            thoughts.push(new HumanMessage(renderTemplate(TEMPLATE_TOOL_RESPONSE, \"f-string\", {\n                observation: step.observation,\n            })));\n        }\n        return thoughts;\n    }\n    static getDefaultOutputParser(fields) {\n        if (fields?.llm) {\n            return ChatConversationalAgentOutputParserWithRetries.fromLLM(fields.llm, {\n                toolNames: fields.toolNames,\n            });\n        }\n        return new ChatConversationalAgentOutputParserWithRetries({\n            toolNames: fields?.toolNames,\n        });\n    }\n    /**\n     * Create prompt in the style of the ChatConversationAgent.\n     *\n     * @param tools - List of tools the agent will have access to, used to format the prompt.\n     * @param args - Arguments to create the prompt with.\n     * @param args.systemMessage - String to put before the list of tools.\n     * @param args.humanMessage - String to put after the list of tools.\n     * @param args.outputParser - Output parser to use for formatting.\n     */\n    static createPrompt(tools, args) {\n        const systemMessage = (args?.systemMessage ?? DEFAULT_PREFIX) + PREFIX_END;\n        const humanMessage = args?.humanMessage ?? DEFAULT_SUFFIX;\n        const toolStrings = tools\n            .map((tool) => `${tool.name}: ${tool.description}`)\n            .join(\"\\n\");\n        const toolNames = tools.map((tool) => tool.name);\n        const outputParser = args?.outputParser ??\n            ChatConversationalAgent.getDefaultOutputParser({ toolNames });\n        const formatInstructions = outputParser.getFormatInstructions({\n            toolNames,\n        });\n        const renderedHumanMessage = renderTemplate(humanMessage, \"f-string\", {\n            format_instructions: formatInstructions,\n            tools: toolStrings,\n        });\n        const messages = [\n            SystemMessagePromptTemplate.fromTemplate(systemMessage),\n            new MessagesPlaceholder(\"chat_history\"),\n            HumanMessagePromptTemplate.fromTemplate(renderedHumanMessage),\n            new MessagesPlaceholder(\"agent_scratchpad\"),\n        ];\n        return ChatPromptTemplate.fromPromptMessages(messages);\n    }\n    static fromLLMAndTools(llm, tools, args) {\n        ChatConversationalAgent.validateTools(tools);\n        const outputParser = args?.outputParser ??\n            ChatConversationalAgent.getDefaultOutputParser({\n                llm,\n                toolNames: tools.map((tool) => tool.name),\n            });\n        const prompt = ChatConversationalAgent.createPrompt(tools, {\n            ...args,\n            outputParser,\n        });\n        const chain = new LLMChain({\n            prompt,\n            llm,\n            callbacks: args?.callbacks ?? args?.callbackManager,\n        });\n        return new ChatConversationalAgent({\n            llmChain: chain,\n            outputParser,\n            allowedTools: tools.map((t) => t.name),\n        });\n    }\n}\n", "import { OutputParserException, } from \"../../schema/output_parser.js\";\nimport { renderTemplate } from \"../../prompts/template.js\";\nimport { AgentActionOutputParser } from \"../types.js\";\nimport { FORMAT_INSTRUCTIONS } from \"./prompt.js\";\nimport { OutputFixingParser } from \"../../output_parsers/fix.js\";\nexport class ChatConversationalAgentOutputParser extends AgentActionOutputParser {\n    constructor(fields) {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"chat_convo\"]\n        });\n        Object.defineProperty(this, \"toolNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.toolNames = fields.toolNames;\n    }\n    async parse(text) {\n        let jsonOutput = text.trim();\n        if (jsonOutput.includes(\"```json\")) {\n            jsonOutput = jsonOutput.split(\"```json\")[1].trimStart();\n        }\n        else if (jsonOutput.includes(\"```\")) {\n            const firstIndex = jsonOutput.indexOf(\"```\");\n            jsonOutput = jsonOutput.slice(firstIndex + 3).trimStart();\n        }\n        const lastIndex = jsonOutput.lastIndexOf(\"```\");\n        if (lastIndex !== -1) {\n            jsonOutput = jsonOutput.slice(0, lastIndex).trimEnd();\n        }\n        try {\n            const response = JSON.parse(jsonOutput);\n            const { action, action_input } = response;\n            if (action === \"Final Answer\") {\n                return { returnValues: { output: action_input }, log: text };\n            }\n            return { tool: action, toolInput: action_input, log: text };\n        }\n        catch (e) {\n            throw new OutputParserException(`Failed to parse. Text: \"${text}\". Error: ${e}`);\n        }\n    }\n    getFormatInstructions() {\n        return renderTemplate(FORMAT_INSTRUCTIONS, \"f-string\", {\n            tool_names: this.toolNames.join(\", \"),\n        });\n    }\n}\nexport class ChatConversationalAgentOutputParserWithRetries extends AgentActionOutputParser {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"chat_convo\"]\n        });\n        Object.defineProperty(this, \"baseParser\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputFixingParser\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"toolNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        this.toolNames = fields.toolNames ?? this.toolNames;\n        this.baseParser =\n            fields?.baseParser ??\n                new ChatConversationalAgentOutputParser({ toolNames: this.toolNames });\n        this.outputFixingParser = fields?.outputFixingParser;\n    }\n    getFormatInstructions(options) {\n        if (options.raw) {\n            return FORMAT_INSTRUCTIONS;\n        }\n        return renderTemplate(FORMAT_INSTRUCTIONS, \"f-string\", {\n            tool_names: options.toolNames.join(\", \"),\n        });\n    }\n    async parse(text) {\n        if (this.outputFixingParser !== undefined) {\n            return this.outputFixingParser.parse(text);\n        }\n        return this.baseParser.parse(text);\n    }\n    static fromLLM(llm, options) {\n        const baseParser = options.baseParser ??\n            new ChatConversationalAgentOutputParser({\n                toolNames: options.toolNames ?? [],\n            });\n        const outputFixingParser = OutputFixingParser.fromLLM(llm, baseParser);\n        return new ChatConversationalAgentOutputParserWithRetries({\n            baseParser,\n            outputFixingParser,\n            toolNames: options.toolNames,\n        });\n    }\n}\n", "import { BaseOutputParser, OutputParserException, } from \"../schema/output_parser.js\";\nimport { LLMChain } from \"../chains/llm_chain.js\";\nimport { NAIVE_FIX_PROMPT } from \"./prompts.js\";\nexport class OutputFixingParser extends BaseOutputParser {\n    static fromLLM(llm, parser, fields) {\n        const prompt = fields?.prompt ?? NAIVE_FIX_PROMPT;\n        const chain = new LLMChain({ llm, prompt });\n        return new OutputFixingParser({ parser, retryChain: chain });\n    }\n    constructor({ parser, retryChain, }) {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"output_parsers\", \"fix\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"parser\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"retryChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.parser = parser;\n        this.retryChain = retryChain;\n    }\n    async parse(completion, callbacks) {\n        try {\n            return await this.parser.parse(completion, callbacks);\n        }\n        catch (e) {\n            // eslint-disable-next-line no-instanceof/no-instanceof\n            if (e instanceof OutputParserException) {\n                const result = await this.retryChain.call({\n                    instructions: this.parser.getFormatInstructions(),\n                    completion,\n                    error: e,\n                }, callbacks);\n                const newCompletion = result[this.retryChain.outputKey];\n                return this.parser.parse(newCompletion);\n            }\n            throw e;\n        }\n    }\n    getFormatInstructions() {\n        return this.parser.getFormatInstructions();\n    }\n}\n", "import { PromptTemplate } from \"../prompts/prompt.js\";\nexport const NAIVE_FIX_TEMPLATE = `Instructions:\n--------------\n{instructions}\n--------------\nCompletion:\n--------------\n{completion}\n--------------\n\nAbove, the Completion did not satisfy the constraints given in the Instructions.\nError:\n--------------\n{error}\n--------------\n\nPlease try again. Please only respond with an answer that satisfies the constraints laid out in the Instructions:`;\nexport const NAIVE_FIX_PROMPT = \n/* #__PURE__ */ PromptTemplate.fromTemplate(NAIVE_FIX_TEMPLATE);\n", "import { getBufferString } from \"./base.js\";\nimport { BaseChatMemory } from \"./chat_memory.js\";\nexport class BufferMemory extends BaseChatMemory {\n    constructor(fields) {\n        super({\n            chatHistory: fields?.chatHistory,\n            returnMessages: fields?.returnMessages ?? false,\n            inputKey: fields?.inputKey,\n            outputKey: fields?.outputKey,\n        });\n        Object.defineProperty(this, \"humanPrefix\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"Human\"\n        });\n        Object.defineProperty(this, \"aiPrefix\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"AI\"\n        });\n        Object.defineProperty(this, \"memoryKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"history\"\n        });\n        this.humanPrefix = fields?.humanPrefix ?? this.humanPrefix;\n        this.aiPrefix = fields?.aiPrefix ?? this.aiPrefix;\n        this.memoryKey = fields?.memoryKey ?? this.memoryKey;\n    }\n    get memoryKeys() {\n        return [this.memoryKey];\n    }\n    async loadMemoryVariables(_values) {\n        const messages = await this.chatHistory.getMessages();\n        if (this.returnMessages) {\n            const result = {\n                [this.memoryKey]: messages,\n            };\n            return result;\n        }\n        const result = {\n            [this.memoryKey]: getBufferString(messages, this.humanPrefix, this.aiPrefix),\n        };\n        return result;\n    }\n}\n", "import { BaseMemory, getInputValue, getOutputValue, } from \"./base.js\";\nimport { ChatMessageHistory } from \"../stores/message/in_memory.js\";\nexport class BaseChatMemory extends BaseMemory {\n    constructor(fields) {\n        super();\n        Object.defineProperty(this, \"chatHistory\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"returnMessages\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"inputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.chatHistory = fields?.chatHistory ?? new ChatMessageHistory();\n        this.returnMessages = fields?.returnMessages ?? this.returnMessages;\n        this.inputKey = fields?.inputKey ?? this.inputKey;\n        this.outputKey = fields?.outputKey ?? this.outputKey;\n    }\n    async saveContext(inputValues, outputValues) {\n        // this is purposefully done in sequence so they're saved in order\n        await this.chatHistory.addUserMessage(getInputValue(inputValues, this.inputKey));\n        await this.chatHistory.addAIChatMessage(getOutputValue(outputValues, this.outputKey));\n    }\n    async clear() {\n        await this.chatHistory.clear();\n    }\n}\n", "import { BaseListChatMessageHistory } from \"../../schema/index.js\";\nexport class ChatMessageHistory extends BaseListChatMessageHistory {\n    constructor(messages) {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"stores\", \"message\", \"in_memory\"]\n        });\n        Object.defineProperty(this, \"messages\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        this.messages = messages ?? [];\n    }\n    async getMessages() {\n        return this.messages;\n    }\n    async addMessage(message) {\n        this.messages.push(message);\n    }\n    async clear() {\n        this.messages = [];\n    }\n}\n", "import { zodToJsonSchema } from \"zod-to-json-schema\";\nimport { LLMChain } from \"../../chains/llm_chain.js\";\nimport { PromptTemplate } from \"../../prompts/prompt.js\";\nimport { ChatPromptTemplate, HumanMessagePromptTemplate, SystemMessagePromptTemplate, } from \"../../prompts/chat.js\";\nimport { Agent } from \"../agent.js\";\nimport { StructuredChatOutputParserWithRetries } from \"./outputParser.js\";\nimport { FORMAT_INSTRUCTIONS, PREFIX, SUFFIX } from \"./prompt.js\";\n/**\n * Agent that interoperates with Structured Tools using React logic.\n * @augments Agent\n */\nexport class StructuredChatAgent extends Agent {\n    constructor(input) {\n        const outputParser = input?.outputParser ?? StructuredChatAgent.getDefaultOutputParser();\n        super({ ...input, outputParser });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"structured_chat\"]\n        });\n    }\n    _agentType() {\n        return \"structured-chat-zero-shot-react-description\";\n    }\n    observationPrefix() {\n        return \"Observation: \";\n    }\n    llmPrefix() {\n        return \"Thought:\";\n    }\n    _stop() {\n        return [\"Observation:\"];\n    }\n    static validateTools(tools) {\n        const descriptionlessTool = tools.find((tool) => !tool.description);\n        if (descriptionlessTool) {\n            const msg = `Got a tool ${descriptionlessTool.name} without a description.` +\n                ` This agent requires descriptions for all tools.`;\n            throw new Error(msg);\n        }\n    }\n    static getDefaultOutputParser(fields) {\n        if (fields?.llm) {\n            return StructuredChatOutputParserWithRetries.fromLLM(fields.llm, {\n                toolNames: fields.toolNames,\n            });\n        }\n        return new StructuredChatOutputParserWithRetries({\n            toolNames: fields?.toolNames,\n        });\n    }\n    async constructScratchPad(steps) {\n        const agentScratchpad = await super.constructScratchPad(steps);\n        if (agentScratchpad) {\n            return `This was your previous work (but I haven't seen any of it! I only see what you return as final answer):\\n${agentScratchpad}`;\n        }\n        return agentScratchpad;\n    }\n    static createToolSchemasString(tools) {\n        return tools\n            .map((tool) => `${tool.name}: ${tool.description}, args: ${JSON.stringify(zodToJsonSchema(tool.schema).properties)}`)\n            .join(\"\\n\");\n    }\n    /**\n     * Create prompt in the style of the agent.\n     *\n     * @param tools - List of tools the agent will have access to, used to format the prompt.\n     * @param args - Arguments to create the prompt with.\n     * @param args.suffix - String to put after the list of tools.\n     * @param args.prefix - String to put before the list of tools.\n     * @param args.inputVariables List of input variables the final prompt will expect.\n     * @param args.memoryPrompts List of historical prompts from memory.\n     */\n    static createPrompt(tools, args) {\n        const { prefix = PREFIX, suffix = SUFFIX, inputVariables = [\"input\", \"agent_scratchpad\"], memoryPrompts = [], } = args ?? {};\n        const template = [prefix, FORMAT_INSTRUCTIONS, suffix].join(\"\\n\\n\");\n        const humanMessageTemplate = \"{input}\\n\\n{agent_scratchpad}\";\n        const messages = [\n            new SystemMessagePromptTemplate(new PromptTemplate({\n                template,\n                inputVariables,\n                partialVariables: {\n                    tool_schemas: StructuredChatAgent.createToolSchemasString(tools),\n                    tool_names: tools.map((tool) => tool.name).join(\", \"),\n                },\n            })),\n            ...memoryPrompts,\n            new HumanMessagePromptTemplate(new PromptTemplate({\n                template: humanMessageTemplate,\n                inputVariables,\n            })),\n        ];\n        return ChatPromptTemplate.fromPromptMessages(messages);\n    }\n    static fromLLMAndTools(llm, tools, args) {\n        StructuredChatAgent.validateTools(tools);\n        const prompt = StructuredChatAgent.createPrompt(tools, args);\n        const outputParser = args?.outputParser ??\n            StructuredChatAgent.getDefaultOutputParser({\n                llm,\n                toolNames: tools.map((tool) => tool.name),\n            });\n        const chain = new LLMChain({\n            prompt,\n            llm,\n            callbacks: args?.callbacks,\n        });\n        return new StructuredChatAgent({\n            llmChain: chain,\n            outputParser,\n            allowedTools: tools.map((t) => t.name),\n        });\n    }\n}\n", "import { AgentActionOutputParser } from \"../types.js\";\nimport { AGENT_ACTION_FORMAT_INSTRUCTIONS, FORMAT_INSTRUCTIONS, } from \"./prompt.js\";\nimport { OutputFixingParser } from \"../../output_parsers/fix.js\";\nimport { OutputParserException } from \"../../schema/output_parser.js\";\nimport { renderTemplate } from \"../../prompts/index.js\";\nexport class StructuredChatOutputParser extends AgentActionOutputParser {\n    constructor(fields) {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"structured_chat\"]\n        });\n        Object.defineProperty(this, \"toolNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.toolNames = fields.toolNames;\n    }\n    async parse(text) {\n        try {\n            const regex = /```(?:json)?(.*)(```)/gs;\n            const actionMatch = regex.exec(text);\n            if (actionMatch === null) {\n                throw new OutputParserException(`Could not parse an action. The agent action must be within a markdown code block, and \"action\" must be a provided tool or \"Final Answer\"`);\n            }\n            const response = JSON.parse(actionMatch[1].trim());\n            const { action, action_input } = response;\n            if (action === \"Final Answer\") {\n                return { returnValues: { output: action_input }, log: text };\n            }\n            return { tool: action, toolInput: action_input || {}, log: text };\n        }\n        catch (e) {\n            throw new OutputParserException(`Failed to parse. Text: \"${text}\". Error: ${e}`);\n        }\n    }\n    getFormatInstructions() {\n        return renderTemplate(AGENT_ACTION_FORMAT_INSTRUCTIONS, \"f-string\", {\n            tool_names: this.toolNames.join(\", \"),\n        });\n    }\n}\nexport class StructuredChatOutputParserWithRetries extends AgentActionOutputParser {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"structured_chat\"]\n        });\n        Object.defineProperty(this, \"baseParser\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputFixingParser\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"toolNames\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        this.toolNames = fields.toolNames ?? this.toolNames;\n        this.baseParser =\n            fields?.baseParser ??\n                new StructuredChatOutputParser({ toolNames: this.toolNames });\n        this.outputFixingParser = fields?.outputFixingParser;\n    }\n    async parse(text, callbacks) {\n        if (this.outputFixingParser !== undefined) {\n            return this.outputFixingParser.parse(text, callbacks);\n        }\n        return this.baseParser.parse(text);\n    }\n    getFormatInstructions() {\n        return renderTemplate(FORMAT_INSTRUCTIONS, \"f-string\", {\n            tool_names: this.toolNames.join(\", \"),\n        });\n    }\n    static fromLLM(llm, options) {\n        const baseParser = options.baseParser ??\n            new StructuredChatOutputParser({ toolNames: options.toolNames ?? [] });\n        const outputFixingParser = OutputFixingParser.fromLLM(llm, baseParser);\n        return new StructuredChatOutputParserWithRetries({\n            baseParser,\n            outputFixingParser,\n            toolNames: options.toolNames,\n        });\n    }\n}\n", "export const PREFIX = `Answer the following questions truthfully and as best you can.`;\nexport const AGENT_ACTION_FORMAT_INSTRUCTIONS = `Output a JSON markdown code snippet containing a valid JSON blob (denoted below by $JSON_BLOB).\nThis $JSON_BLOB must have a \"action\" key (with the name of the tool to use) and an \"action_input\" key (tool input).\n\nValid \"action\" values: \"Final Answer\" (which you must use when giving your final response to the user), or one of [{tool_names}].\n\nThe $JSON_BLOB must be valid, parseable JSON and only contain a SINGLE action. Here is an example of an acceptable output:\n\n\\`\\`\\`json\n{{\n  \"action\": $TOOL_NAME,\n  \"action_input\": $INPUT\n}}\n\\`\\`\\`\n\nRemember to include the surrounding markdown code snippet delimiters (begin with \"\\`\\`\\`\" json and close with \"\\`\\`\\`\")!\n`;\nexport const FORMAT_INSTRUCTIONS = `You have access to the following tools.\nYou must format your inputs to these tools to match their \"JSON schema\" definitions below.\n\n\"JSON Schema\" is a declarative language that allows you to annotate and validate JSON documents.\n\nFor example, the example \"JSON Schema\" instance {{\"properties\": {{\"foo\": {{\"description\": \"a list of test words\", \"type\": \"array\", \"items\": {{\"type\": \"string\"}}}}}}, \"required\": [\"foo\"]}}}}\nwould match an object with one required property, \"foo\". The \"type\" property specifies \"foo\" must be an \"array\", and the \"description\" property semantically describes it as \"a list of test words\". The items within \"foo\" must be strings.\nThus, the object {{\"foo\": [\"bar\", \"baz\"]}} is a well-formatted instance of this example \"JSON Schema\". The object {{\"properties\": {{\"foo\": [\"bar\", \"baz\"]}}}} is not well-formatted.\n\nHere are the JSON Schema instances for the tools you have access to:\n\n{tool_schemas}\n\nThe way you use the tools is as follows:\n\n------------------------\n\n${AGENT_ACTION_FORMAT_INSTRUCTIONS}\n\nIf you are using a tool, \"action_input\" must adhere to the tool's input schema, given above.\n\n------------------------\n\nALWAYS use the following format:\n\nQuestion: the input question you must answer\nThought: you should always think about what to do\nAction:\n\\`\\`\\`json\n$JSON_BLOB\n\\`\\`\\`\nObservation: the result of the action\n... (this Thought/Action/Observation can repeat N times)\nThought: I now know the final answer\nAction:\n\\`\\`\\`json\n{{\n  \"action\": \"Final Answer\",\n  \"action_input\": \"Final response to human\"\n}}\n\\`\\`\\``;\nexport const SUFFIX = `Begin! Reminder to ALWAYS use the above format, and to use tools if appropriate.`;\n", "import { BufferMemory } from \"../memory/buffer_memory.js\";\nimport { ChatAgent } from \"./chat/index.js\";\nimport { ChatConversationalAgent } from \"./chat_convo/index.js\";\nimport { StructuredChatAgent } from \"./structured_chat/index.js\";\nimport { AgentExecutor } from \"./executor.js\";\nimport { ZeroShotAgent } from \"./mrkl/index.js\";\nimport { OpenAIAgent } from \"./openai/index.js\";\n/**\n * @deprecated use initializeAgentExecutorWithOptions instead\n */\nexport const initializeAgentExecutor = async (tools, llm, _agentType, _verbose, _callbackManager) => {\n    const agentType = _agentType ?? \"zero-shot-react-description\";\n    const verbose = _verbose;\n    const callbackManager = _callbackManager;\n    switch (agentType) {\n        case \"zero-shot-react-description\":\n            return AgentExecutor.fromAgentAndTools({\n                agent: ZeroShotAgent.fromLLMAndTools(llm, tools),\n                tools,\n                returnIntermediateSteps: true,\n                verbose,\n                callbackManager,\n            });\n        case \"chat-zero-shot-react-description\":\n            return AgentExecutor.fromAgentAndTools({\n                agent: ChatAgent.fromLLMAndTools(llm, tools),\n                tools,\n                returnIntermediateSteps: true,\n                verbose,\n                callbackManager,\n            });\n        case \"chat-conversational-react-description\":\n            return AgentExecutor.fromAgentAndTools({\n                agent: ChatConversationalAgent.fromLLMAndTools(llm, tools),\n                tools,\n                verbose,\n                callbackManager,\n            });\n        default:\n            throw new Error(\"Unknown agent type\");\n    }\n};\nexport async function initializeAgentExecutorWithOptions(tools, llm, options = {\n    agentType: llm._modelType() === \"base_chat_model\"\n        ? \"chat-zero-shot-react-description\"\n        : \"zero-shot-react-description\",\n}) {\n    // Note this tools cast is safe as the overload signatures prevent\n    // the function from being called with a StructuredTool[] when\n    // the agentType is not in InitializeAgentExecutorOptionsStructured\n    switch (options.agentType) {\n        case \"zero-shot-react-description\": {\n            const { agentArgs, tags, ...rest } = options;\n            return AgentExecutor.fromAgentAndTools({\n                tags: [...(tags ?? []), \"zero-shot-react-description\"],\n                agent: ZeroShotAgent.fromLLMAndTools(llm, tools, agentArgs),\n                tools,\n                ...rest,\n            });\n        }\n        case \"chat-zero-shot-react-description\": {\n            const { agentArgs, tags, ...rest } = options;\n            return AgentExecutor.fromAgentAndTools({\n                tags: [...(tags ?? []), \"chat-zero-shot-react-description\"],\n                agent: ChatAgent.fromLLMAndTools(llm, tools, agentArgs),\n                tools,\n                ...rest,\n            });\n        }\n        case \"chat-conversational-react-description\": {\n            const { agentArgs, memory, tags, ...rest } = options;\n            const executor = AgentExecutor.fromAgentAndTools({\n                tags: [...(tags ?? []), \"chat-conversational-react-description\"],\n                agent: ChatConversationalAgent.fromLLMAndTools(llm, tools, agentArgs),\n                tools,\n                memory: memory ??\n                    new BufferMemory({\n                        returnMessages: true,\n                        memoryKey: \"chat_history\",\n                        inputKey: \"input\",\n                        outputKey: \"output\",\n                    }),\n                ...rest,\n            });\n            return executor;\n        }\n        case \"structured-chat-zero-shot-react-description\": {\n            const { agentArgs, memory, tags, ...rest } = options;\n            const executor = AgentExecutor.fromAgentAndTools({\n                tags: [...(tags ?? []), \"structured-chat-zero-shot-react-description\"],\n                agent: StructuredChatAgent.fromLLMAndTools(llm, tools, agentArgs),\n                tools,\n                memory,\n                ...rest,\n            });\n            return executor;\n        }\n        case \"openai-functions\": {\n            const { agentArgs, memory, tags, ...rest } = options;\n            const executor = AgentExecutor.fromAgentAndTools({\n                tags: [...(tags ?? []), \"openai-functions\"],\n                agent: OpenAIAgent.fromLLMAndTools(llm, tools, agentArgs),\n                tools,\n                memory: memory ??\n                    new BufferMemory({\n                        returnMessages: true,\n                        memoryKey: \"chat_history\",\n                        inputKey: \"input\",\n                        outputKey: \"output\",\n                    }),\n                ...rest,\n            });\n            return executor;\n        }\n        default: {\n            throw new Error(\"Unknown agent type\");\n        }\n    }\n}\n", "import { AIMessage, FunctionMessage, } from \"../../schema/index.js\";\nimport { Agent } from \"../agent.js\";\nimport { PREFIX } from \"./prompt.js\";\nimport { ChatPromptTemplate, HumanMessagePromptTemplate, MessagesPlaceholder, SystemMessagePromptTemplate, } from \"../../prompts/chat.js\";\nimport { LLMChain } from \"../../chains/llm_chain.js\";\nimport { OutputParserException } from \"../../schema/output_parser.js\";\nfunction parseOutput(message) {\n    if (message.additional_kwargs.function_call) {\n        // eslint-disable-next-line prefer-destructuring\n        const function_call = message.additional_kwargs.function_call;\n        try {\n            const toolInput = function_call.arguments\n                ? JSON.parse(function_call.arguments)\n                : {};\n            return {\n                tool: function_call.name,\n                toolInput,\n                log: message.content,\n            };\n        }\n        catch (error) {\n            throw new OutputParserException(`Failed to parse function arguments from chat model response. Text: \"${function_call.arguments}\". ${error}`);\n        }\n    }\n    else {\n        return { returnValues: { output: message.content }, log: message.content };\n    }\n}\nexport class OpenAIAgent extends Agent {\n    _agentType() {\n        return \"openai-functions\";\n    }\n    observationPrefix() {\n        return \"Observation: \";\n    }\n    llmPrefix() {\n        return \"Thought:\";\n    }\n    _stop() {\n        return [\"Observation:\"];\n    }\n    constructor(input) {\n        super({ ...input, outputParser: undefined });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"agents\", \"openai\"]\n        });\n        Object.defineProperty(this, \"tools\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.tools = input.tools;\n    }\n    static createPrompt(_tools, fields) {\n        const { prefix = PREFIX } = fields || {};\n        return ChatPromptTemplate.fromPromptMessages([\n            SystemMessagePromptTemplate.fromTemplate(prefix),\n            new MessagesPlaceholder(\"chat_history\"),\n            HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n            new MessagesPlaceholder(\"agent_scratchpad\"),\n        ]);\n    }\n    static fromLLMAndTools(llm, tools, args) {\n        OpenAIAgent.validateTools(tools);\n        if (llm._modelType() !== \"base_chat_model\" || llm._llmType() !== \"openai\") {\n            throw new Error(\"OpenAIAgent requires an OpenAI chat model\");\n        }\n        const prompt = OpenAIAgent.createPrompt(tools, args);\n        const chain = new LLMChain({\n            prompt,\n            llm,\n            callbacks: args?.callbacks,\n        });\n        return new OpenAIAgent({\n            llmChain: chain,\n            allowedTools: tools.map((t) => t.name),\n            tools,\n        });\n    }\n    async constructScratchPad(steps) {\n        return steps.flatMap(({ action, observation }) => [\n            new AIMessage(\"\", {\n                function_call: {\n                    name: action.tool,\n                    arguments: JSON.stringify(action.toolInput),\n                },\n            }),\n            new FunctionMessage(observation, action.tool),\n        ]);\n    }\n    async plan(steps, inputs, callbackManager) {\n        // Add scratchpad and stop to inputs\n        const thoughts = await this.constructScratchPad(steps);\n        const newInputs = {\n            ...inputs,\n            agent_scratchpad: thoughts,\n        };\n        if (this._stop().length !== 0) {\n            newInputs.stop = this._stop();\n        }\n        // Split inputs between prompt and llm\n        const llm = this.llmChain.llm;\n        const valuesForPrompt = { ...newInputs };\n        const valuesForLLM = {\n            tools: this.tools,\n        };\n        for (const key of this.llmChain.llm.callKeys) {\n            if (key in inputs) {\n                valuesForLLM[key] = inputs[key];\n                delete valuesForPrompt[key];\n            }\n        }\n        const promptValue = await this.llmChain.prompt.formatPromptValue(valuesForPrompt);\n        const message = await llm.predictMessages(promptValue.toChatMessages(), valuesForLLM, callbackManager);\n        return parseOutput(message);\n    }\n}\n", "import { getEnvironmentVariable } from \"../util/env.js\";\nimport { Tool } from \"./base.js\";\n/**\n * Wrapper around SerpAPI.\n *\n * To use, you should have the `serpapi` package installed and the SERPAPI_API_KEY environment variable set.\n */\nexport class SerpAPI extends Tool {\n    toJSON() {\n        return this.toJSONNotImplemented();\n    }\n    constructor(apiKey = getEnvironmentVariable(\"SERPAPI_API_KEY\"), params = {}, baseUrl = \"https://serpapi.com\") {\n        super(...arguments);\n        Object.defineProperty(this, \"key\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"params\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"baseUrl\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"search\"\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"a search engine. useful for when you need to answer questions about current events. input should be a search query.\"\n        });\n        if (!apiKey) {\n            throw new Error(\"SerpAPI API key not set. You can set it as SERPAPI_API_KEY in your .env file, or pass it to SerpAPI.\");\n        }\n        this.key = apiKey;\n        this.params = params;\n        this.baseUrl = baseUrl;\n    }\n    buildUrl(path, parameters, baseUrl) {\n        const nonUndefinedParams = Object.entries(parameters)\n            .filter(([_, value]) => value !== undefined)\n            .map(([key, value]) => [key, `${value}`]);\n        const searchParams = new URLSearchParams(nonUndefinedParams);\n        return `${baseUrl}/${path}?${searchParams}`;\n    }\n    /** @ignore */\n    async _call(input) {\n        const { timeout, ...params } = this.params;\n        const resp = await fetch(this.buildUrl(\"search\", {\n            ...params,\n            api_key: this.key,\n            q: input,\n        }, this.baseUrl), {\n            signal: timeout ? AbortSignal.timeout(timeout) : undefined,\n        });\n        const res = await resp.json();\n        if (res.error) {\n            throw new Error(`Got error from serpAPI: ${res.error}`);\n        }\n        if (res.answer_box?.answer) {\n            return res.answer_box.answer;\n        }\n        if (res.answer_box?.snippet) {\n            return res.answer_box.snippet;\n        }\n        if (res.answer_box?.snippet_highlighted_words) {\n            return res.answer_box.snippet_highlighted_words[0];\n        }\n        if (res.sports_results?.game_spotlight) {\n            return res.sports_results.game_spotlight;\n        }\n        if (res.knowledge_graph?.description) {\n            return res.knowledge_graph.description;\n        }\n        if (res.organic_results?.[0]?.snippet) {\n            return res.organic_results[0].snippet;\n        }\n        return \"No good search result found\";\n    }\n}\n", "import { getEnvironmentVariable } from \"../util/env.js\";\nimport { Tool } from \"./base.js\";\nclass BingSerpAPI extends Tool {\n    toJSON() {\n        return this.toJSONNotImplemented();\n    }\n    constructor(apiKey = getEnvironmentVariable(\"BingApiKey\"), params = {}) {\n        super(...arguments);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"bing-search\"\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"a search engine. useful for when you need to answer questions about current events. input should be a search query.\"\n        });\n        Object.defineProperty(this, \"key\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"params\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        if (!apiKey) {\n            throw new Error(\"BingSerpAPI API key not set. You can set it as BingApiKey in your .env file.\");\n        }\n        this.key = apiKey;\n        this.params = params;\n    }\n    /** @ignore */\n    async _call(input) {\n        const headers = { \"Ocp-Apim-Subscription-Key\": this.key };\n        const params = { q: input, textDecorations: \"true\", textFormat: \"HTML\" };\n        const searchUrl = new URL(\"https://api.bing.microsoft.com/v7.0/search\");\n        Object.entries(params).forEach(([key, value]) => {\n            searchUrl.searchParams.append(key, value);\n        });\n        const response = await fetch(searchUrl, { headers });\n        if (!response.ok) {\n            throw new Error(`HTTP error ${response.status}`);\n        }\n        const res = await response.json();\n        const results = res.webPages.value;\n        if (results.length === 0) {\n            return \"No good results found.\";\n        }\n        const snippets = results\n            .map((result) => result.snippet)\n            .join(\" \");\n        return snippets;\n    }\n}\nexport { BingSerpAPI };\n", "import { getEnvironmentVariable } from \"../util/env.js\";\nimport { Tool } from \"./base.js\";\n/**\n * Wrapper around serper.\n *\n * You can create a free API key at https://serper.dev.\n *\n * To use, you should have the SERPER_API_KEY environment variable set.\n */\nexport class Serper extends Tool {\n    toJSON() {\n        return this.toJSONNotImplemented();\n    }\n    constructor(apiKey = getEnvironmentVariable(\"SERPER_API_KEY\"), params = {}) {\n        super();\n        Object.defineProperty(this, \"key\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"params\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"search\"\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"a search engine. useful for when you need to answer questions about current events. input should be a search query.\"\n        });\n        if (!apiKey) {\n            throw new Error(\"Serper API key not set. You can set it as SERPER_API_KEY in your .env file, or pass it to Serper.\");\n        }\n        this.key = apiKey;\n        this.params = params;\n    }\n    /** @ignore */\n    async _call(input) {\n        const options = {\n            method: \"POST\",\n            headers: {\n                \"X-API-KEY\": this.key,\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                q: input,\n                ...this.params,\n            }),\n        };\n        const res = await fetch(\"https://google.serper.dev/search\", options);\n        if (!res.ok) {\n            throw new Error(`Got ${res.status} error from serper: ${res.statusText}`);\n        }\n        const json = await res.json();\n        if (json.answerBox?.answer) {\n            return json.answerBox.answer;\n        }\n        if (json.answerBox?.snippet) {\n            return json.answerBox.snippet;\n        }\n        if (json.answerBox?.snippet_highlighted_words) {\n            return json.answerBox.snippet_highlighted_words[0];\n        }\n        if (json.sportsResults?.game_spotlight) {\n            return json.sportsResults.game_spotlight;\n        }\n        if (json.knowledgeGraph?.description) {\n            return json.knowledgeGraph.description;\n        }\n        if (json.organic?.[0]?.snippet) {\n            return json.organic[0].snippet;\n        }\n        return \"No good search result found\";\n    }\n}\n", "import { getEnvironmentVariable } from \"../util/env.js\";\nimport { Tool } from \"./base.js\";\nexport class GoogleCustomSearch extends Tool {\n    get lc_secrets() {\n        return {\n            apiKey: \"GOOGLE_API_KEY\",\n        };\n    }\n    constructor(fields = {\n        apiKey: getEnvironmentVariable(\"GOOGLE_API_KEY\"),\n        googleCSEId: getEnvironmentVariable(\"GOOGLE_CSE_ID\"),\n    }) {\n        super(...arguments);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"google-custom-search\"\n        });\n        Object.defineProperty(this, \"apiKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"googleCSEId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"a custom search engine. useful for when you need to answer questions about current events. input should be a search query. outputs a JSON array of results.\"\n        });\n        if (!fields.apiKey) {\n            throw new Error(`Google API key not set. You can set it as \"GOOGLE_API_KEY\" in your environment variables.`);\n        }\n        if (!fields.googleCSEId) {\n            throw new Error(`Google custom search engine id not set. You can set it as \"GOOGLE_CSE_ID\" in your environment variables.`);\n        }\n        this.apiKey = fields.apiKey;\n        this.googleCSEId = fields.googleCSEId;\n    }\n    async _call(input) {\n        const res = await fetch(`https://www.googleapis.com/customsearch/v1?key=${this.apiKey}&cx=${this.googleCSEId}&q=${encodeURIComponent(input)}`);\n        if (!res.ok) {\n            throw new Error(`Got ${res.status} error from Google custom search: ${res.statusText}`);\n        }\n        const json = await res.json();\n        const results = json?.items?.map((item) => ({\n            title: item.title,\n            link: item.link,\n            snippet: item.snippet,\n        })) ?? [];\n        return JSON.stringify(results);\n    }\n}\n", "import { getEnvironmentVariable } from \"../util/env.js\";\nimport { Tool } from \"./base.js\";\nexport class BraveSearch extends Tool {\n    constructor(fields = {\n        apiKey: getEnvironmentVariable(\"BRAVE_SEARCH_API_KEY\"),\n    }) {\n        super();\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"brave-search\"\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"a search engine. useful for when you need to answer questions about current events. input should be a search query.\"\n        });\n        Object.defineProperty(this, \"apiKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        if (!fields.apiKey) {\n            throw new Error(`Brave API key not set. Please pass it in or set it as an environment variable named \"BRAVE_SEARCH_API_KEY\".`);\n        }\n        this.apiKey = fields.apiKey;\n    }\n    /** @ignore */\n    async _call(input) {\n        const headers = {\n            \"X-Subscription-Token\": this.apiKey,\n            Accept: \"application/json\",\n        };\n        const searchUrl = new URL(`https://api.search.brave.com/res/v1/web/search?q=${encodeURIComponent(input)}`);\n        const response = await fetch(searchUrl, { headers });\n        if (!response.ok) {\n            throw new Error(`HTTP error ${response.status}`);\n        }\n        const parsedResponse = await response.json();\n        const webSearchResults = parsedResponse.web?.results;\n        const finalResults = Array.isArray(webSearchResults)\n            ? webSearchResults.map((item) => ({\n                title: item.title,\n                link: item.url,\n                snippet: item.description,\n            }))\n            : [];\n        return JSON.stringify(finalResults);\n    }\n}\n", "import { getEnvironmentVariable } from \"../util/env.js\";\nimport { Tool } from \"./base.js\";\n/**\n * @class DataForSeoAPISearch\n * @extends {Tool}\n * @description Represents a wrapper class to work with DataForSEO SERP API.\n */\nexport class DataForSeoAPISearch extends Tool {\n    /**\n     * @constructor\n     * @param {DataForSeoApiConfig} config\n     * @description Sets up the class, throws an error if the API login/password isn't provided.\n     */\n    constructor(config = {}) {\n        super();\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"dataforseo-api-wrapper\"\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"A robust Google Search API provided by DataForSeo. This tool is handy when you need information about trending topics or current events.\"\n        });\n        Object.defineProperty(this, \"apiLogin\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"apiPassword\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\n         * @property defaultParams\n         * @type {Record<string, string | number | boolean>}\n         * @description These are the default parameters to be used when making an API request.\n         */\n        Object.defineProperty(this, \"defaultParams\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {\n                location_name: \"United States\",\n                language_code: \"en\",\n                depth: 10,\n                se_name: \"google\",\n                se_type: \"organic\",\n            }\n        });\n        Object.defineProperty(this, \"params\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"jsonResultTypes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"jsonResultFields\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"topCount\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"useJsonOutput\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        const apiLogin = config.apiLogin ?? getEnvironmentVariable(\"DATAFORSEO_LOGIN\");\n        const apiPassword = config.apiPassword ?? getEnvironmentVariable(\"DATAFORSEO_PASSWORD\");\n        const params = config.params ?? {};\n        if (!apiLogin || !apiPassword) {\n            throw new Error(\"DataForSEO login or password not set. You can set it as DATAFORSEO_LOGIN and DATAFORSEO_PASSWORD in your .env file, or pass it to DataForSeoAPISearch.\");\n        }\n        this.params = { ...this.defaultParams, ...params };\n        this.apiLogin = apiLogin;\n        this.apiPassword = apiPassword;\n        this.jsonResultTypes = config.jsonResultTypes;\n        this.jsonResultFields = config.jsonResultFields;\n        this.useJsonOutput = config.useJsonOutput ?? false;\n        this.topCount = config.topCount;\n    }\n    /**\n     * @method _call\n     * @param {string} keyword\n     * @returns {Promise<string>}\n     * @description Initiates a call to the API and processes the response.\n     */\n    async _call(keyword) {\n        return this.useJsonOutput\n            ? JSON.stringify(await this.results(keyword))\n            : this.processResponse(await this.getResponseJson(keyword));\n    }\n    /**\n     * @method results\n     * @param {string} keyword\n     * @returns {Promise<Array<any>>}\n     * @description Fetches the results from the API for the given keyword.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async results(keyword) {\n        const res = await this.getResponseJson(keyword);\n        return this.filterResults(res, this.jsonResultTypes);\n    }\n    /**\n     * @method prepareRequest\n     * @param {string} keyword\n     * @returns {{url: string; headers: HeadersInit; data: BodyInit}}\n     * @description Prepares the request details for the API call.\n     */\n    prepareRequest(keyword) {\n        if (this.apiLogin === undefined || this.apiPassword === undefined) {\n            throw new Error(\"api_login or api_password is not provided\");\n        }\n        const credentials = Buffer.from(`${this.apiLogin}:${this.apiPassword}`, \"utf-8\").toString(\"base64\");\n        const headers = {\n            Authorization: `Basic ${credentials}`,\n            \"Content-Type\": \"application/json\",\n        };\n        const params = { ...this.params };\n        params.keyword ??= keyword;\n        const data = [params];\n        return {\n            url: `https://api.dataforseo.com/v3/serp/${params.se_name}/${params.se_type}/live/advanced`,\n            headers,\n            data: JSON.stringify(data),\n        };\n    }\n    /**\n     * @method getResponseJson\n     * @param {string} keyword\n     * @returns {Promise<ApiResponse>}\n     * @description Executes a POST request to the provided URL and returns a parsed JSON response.\n     */\n    async getResponseJson(keyword) {\n        const requestDetails = this.prepareRequest(keyword);\n        const response = await fetch(requestDetails.url, {\n            method: \"POST\",\n            headers: requestDetails.headers,\n            body: requestDetails.data,\n        });\n        if (!response.ok) {\n            throw new Error(`Got ${response.status} error from DataForSEO: ${response.statusText}`);\n        }\n        const result = await response.json();\n        return this.checkResponse(result);\n    }\n    /**\n     * @method checkResponse\n     * @param {ApiResponse} response\n     * @returns {ApiResponse}\n     * @description Checks the response status code.\n     */\n    checkResponse(response) {\n        if (response.status_code !== 20000) {\n            throw new Error(`Got error from DataForSEO SERP API: ${response.status_message}`);\n        }\n        for (const task of response.tasks) {\n            if (task.status_code !== 20000) {\n                throw new Error(`Got error from DataForSEO SERP API: ${task.status_message}`);\n            }\n        }\n        return response;\n    }\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    /**\n     * @method filterResults\n     * @param {ApiResponse} res\n     * @param {Array<string> | undefined} types\n     * @returns {Array<any>}\n     * @description Filters the results based on the specified result types.\n     */\n    filterResults(res, types) {\n        const output = [];\n        for (const task of res.tasks || []) {\n            for (const result of task.result || []) {\n                for (const item of result.items || []) {\n                    if (types === undefined ||\n                        types.length === 0 ||\n                        types.includes(item.type)) {\n                        const newItem = this.cleanupUnnecessaryItems(item);\n                        if (Object.keys(newItem).length !== 0) {\n                            output.push(newItem);\n                        }\n                    }\n                    if (this.topCount !== undefined && output.length >= this.topCount) {\n                        break;\n                    }\n                }\n            }\n        }\n        return output;\n    }\n    /* eslint-disable @typescript-eslint/no-explicit-any */\n    /* eslint-disable no-param-reassign */\n    /**\n     * @method cleanupUnnecessaryItems\n     * @param {any} d\n     * @description Removes unnecessary items from the response.\n     */\n    cleanupUnnecessaryItems(d) {\n        if (Array.isArray(d)) {\n            return d.map((item) => this.cleanupUnnecessaryItems(item));\n        }\n        const toRemove = [\"xpath\", \"position\", \"rectangle\"];\n        if (typeof d === \"object\" && d !== null) {\n            return Object.keys(d).reduce((newObj, key) => {\n                if ((this.jsonResultFields === undefined ||\n                    this.jsonResultFields.includes(key)) &&\n                    !toRemove.includes(key)) {\n                    if (typeof d[key] === \"object\" && d[key] !== null) {\n                        newObj[key] = this.cleanupUnnecessaryItems(d[key]);\n                    }\n                    else {\n                        newObj[key] = d[key];\n                    }\n                }\n                return newObj;\n            }, {});\n        }\n        return d;\n    }\n    /**\n     * @method processResponse\n     * @param {ApiResponse} res\n     * @returns {string}\n     * @description Processes the response to extract meaningful data.\n     */\n    processResponse(res) {\n        let returnValue = \"No good search result found\";\n        for (const task of res.tasks || []) {\n            for (const result of task.result || []) {\n                const { item_types } = result;\n                const items = result.items || [];\n                if (item_types.includes(\"answer_box\")) {\n                    returnValue = items.find((item) => item.type === \"answer_box\").text;\n                }\n                else if (item_types.includes(\"knowledge_graph\")) {\n                    returnValue = items.find((item) => item.type === \"knowledge_graph\").description;\n                }\n                else if (item_types.includes(\"featured_snippet\")) {\n                    returnValue = items.find((item) => item.type === \"featured_snippet\").description;\n                }\n                else if (item_types.includes(\"shopping\")) {\n                    returnValue = items.find((item) => item.type === \"shopping\").price;\n                }\n                else if (item_types.includes(\"organic\")) {\n                    returnValue = items.find((item) => item.type === \"organic\").description;\n                }\n                if (returnValue) {\n                    break;\n                }\n            }\n        }\n        return returnValue;\n    }\n}\n", "import { getEnvironmentVariable } from \"../util/env.js\";\nimport { Tool } from \"./base.js\";\n/**\n * SearxngSearch class represents a meta search engine tool.\n * Use this class when you need to answer questions about current events.\n * The input should be a search query, and the output is a JSON array of the query results.\n *\n * note: works best with *agentType*: `structured-chat-zero-shot-react-description`\n * https://github.com/searxng/searxng */\nexport class SearxngSearch extends Tool {\n    get lc_secrets() {\n        return {\n            apiBase: \"SEARXNG_API_BASE\",\n        };\n    }\n    /**\n     * Constructor for the SearxngSearch class\n     * @param apiBase Base URL of the Searxng instance\n     * @param params SearxNG parameters\n     * @param headers Custom headers\n     */\n    constructor({ apiBase, params, headers, }) {\n        super(...arguments);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"searxng-search\"\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"A meta search engine. Useful for when you need to answer questions about current events. Input should be a search query. Output is a JSON array of the query results\"\n        });\n        Object.defineProperty(this, \"apiBase\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"params\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {\n                numResults: 10,\n                pageNumber: 1,\n                format: \"json\",\n                imageProxy: true,\n                safesearch: 0,\n            }\n        });\n        Object.defineProperty(this, \"headers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.apiBase = getEnvironmentVariable(\"SEARXNG_API_BASE\") || apiBase;\n        this.headers = { \"content-type\": \"application/json\", ...headers };\n        if (!this.apiBase) {\n            throw new Error(`SEARXNG_API_BASE not set. You can set it as \"SEARXNG_API_BASE\" in your environment variables.`);\n        }\n        if (params) {\n            this.params = { ...this.params, ...params };\n        }\n    }\n    buildUrl(path, parameters, baseUrl) {\n        const nonUndefinedParams = Object.entries(parameters)\n            .filter(([_, value]) => value !== undefined)\n            .map(([key, value]) => [key, value.toString()]); // Avoid string conversion\n        const searchParams = new URLSearchParams(nonUndefinedParams);\n        return `${baseUrl}/${path}?${searchParams}`;\n    }\n    async _call(input) {\n        const queryParams = {\n            q: input,\n            ...this.params,\n        };\n        const url = this.buildUrl(\"search\", queryParams, this.apiBase);\n        const resp = await fetch(url, {\n            method: \"POST\",\n            headers: this.headers,\n            signal: AbortSignal.timeout(5 * 1000), // 5 seconds\n        });\n        if (!resp.ok) {\n            throw new Error(resp.statusText);\n        }\n        const res = await resp.json();\n        if (!res.results.length &&\n            !res.answers.length &&\n            !res.infoboxes.length &&\n            !res.suggestions.length) {\n            return \"No good results found.\";\n        }\n        else if (res.results.length) {\n            const response = [];\n            res.results.forEach((r) => {\n                response.push(JSON.stringify({\n                    title: r.title || \"\",\n                    link: r.url || \"\",\n                    snippet: r.content || \"\",\n                }));\n            });\n            return response.slice(0, this.params?.numResults).toString();\n        }\n        else if (res.answers.length) {\n            return res.answers[0];\n        }\n        else if (res.infoboxes.length) {\n            return res.infoboxes[0]?.content.replaceAll(/<[^>]+>/gi, \"\");\n        }\n        else if (res.suggestions.length) {\n            let suggestions = \"Suggestions: \";\n            res.suggestions.forEach((s) => {\n                suggestions += `${s}, `;\n            });\n            return suggestions;\n        }\n        else {\n            return \"No good results found.\";\n        }\n    }\n}\n", "export { BaseChain } from \"./base.js\";\nexport { LLMChain } from \"./llm_chain.js\";\nexport { APIChain } from \"./api/api_chain.js\";\nexport { ConversationChain } from \"./conversation.js\";\nexport { SequentialChain, SimpleSequentialChain, } from \"./sequential_chain.js\";\nexport { StuffDocumentsChain, MapReduceDocumentsChain, RefineDocumentsChain, } from \"./combine_docs_chain.js\";\nexport { ChatVectorDBQAChain, } from \"./chat_vector_db_chain.js\";\nexport { AnalyzeDocumentChain, } from \"./analyze_documents_chain.js\";\nexport { VectorDBQAChain } from \"./vector_db_qa.js\";\nexport { loadQAChain, loadQAStuffChain, loadQAMapReduceChain, loadQARefineChain, } from \"./question_answering/load.js\";\nexport { loadSummarizationChain, } from \"./summarization/load.js\";\nexport { ConversationalRetrievalQAChain, } from \"./conversational_retrieval_chain.js\";\nexport { RetrievalQAChain } from \"./retrieval_qa.js\";\nexport { ConstitutionalChain, } from \"./constitutional_ai/constitutional_chain.js\";\nexport { ConstitutionalPrinciple, PRINCIPLES, } from \"./constitutional_ai/constitutional_principle.js\";\nexport { OpenAIModerationChain } from \"./openai_moderation.js\";\nexport { MultiRouteChain, RouterChain, } from \"./router/multi_route.js\";\nexport { LLMRouterChain, } from \"./router/llm_router.js\";\nexport { MultiPromptChain } from \"./router/multi_prompt.js\";\nexport { MultiRetrievalQAChain } from \"./router/multi_retrieval_qa.js\";\nexport { TransformChain } from \"./transform.js\";\nexport { createExtractionChain, createExtractionChainFromZod, } from \"./openai_functions/extraction.js\";\nexport { createTaggingChain, createTaggingChainFromZod, } from \"./openai_functions/tagging.js\";\nexport { createOpenAPIChain, } from \"./openai_functions/openapi.js\";\n", "import { LLMChain } from \"./llm_chain.js\";\nimport { PromptTemplate } from \"../prompts/prompt.js\";\nimport { BufferMemory } from \"../memory/buffer_memory.js\";\nexport const DEFAULT_TEMPLATE = `The following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\n\nCurrent conversation:\n{history}\nHuman: {input}\nAI:`;\nexport class ConversationChain extends LLMChain {\n    constructor({ prompt, outputKey, memory, ...rest }) {\n        super({\n            prompt: prompt ??\n                new PromptTemplate({\n                    template: DEFAULT_TEMPLATE,\n                    inputVariables: [\"history\", \"input\"],\n                }),\n            outputKey: outputKey ?? \"response\",\n            memory: memory ?? new BufferMemory(),\n            ...rest,\n        });\n    }\n}\n", "import { PromptTemplate } from \"../prompts/prompt.js\";\nimport { BaseChain } from \"./base.js\";\nimport { LLMChain } from \"./llm_chain.js\";\nimport { loadQAStuffChain } from \"./question_answering/load.js\";\nconst question_generator_template = `Given the following conversation and a follow up question, rephrase the follow up question to be a standalone question.\n\nChat History:\n{chat_history}\nFollow Up Input: {question}\nStandalone question:`;\nconst qa_template = `Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\n\n{context}\n\nQuestion: {question}\nHelpful Answer:`;\n/** @deprecated use `ConversationalRetrievalQAChain` instead. */\nexport class ChatVectorDBQAChain extends BaseChain {\n    get inputKeys() {\n        return [this.inputKey, this.chatHistoryKey];\n    }\n    get outputKeys() {\n        return [this.outputKey];\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"k\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 4\n        });\n        Object.defineProperty(this, \"inputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"question\"\n        });\n        Object.defineProperty(this, \"chatHistoryKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"chat_history\"\n        });\n        Object.defineProperty(this, \"outputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"result\"\n        });\n        Object.defineProperty(this, \"vectorstore\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"combineDocumentsChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"questionGeneratorChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"returnSourceDocuments\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        this.vectorstore = fields.vectorstore;\n        this.combineDocumentsChain = fields.combineDocumentsChain;\n        this.questionGeneratorChain = fields.questionGeneratorChain;\n        this.inputKey = fields.inputKey ?? this.inputKey;\n        this.outputKey = fields.outputKey ?? this.outputKey;\n        this.k = fields.k ?? this.k;\n        this.returnSourceDocuments =\n            fields.returnSourceDocuments ?? this.returnSourceDocuments;\n    }\n    /** @ignore */\n    async _call(values, runManager) {\n        if (!(this.inputKey in values)) {\n            throw new Error(`Question key ${this.inputKey} not found.`);\n        }\n        if (!(this.chatHistoryKey in values)) {\n            throw new Error(`chat history key ${this.inputKey} not found.`);\n        }\n        const question = values[this.inputKey];\n        const chatHistory = values[this.chatHistoryKey];\n        let newQuestion = question;\n        if (chatHistory.length > 0) {\n            const result = await this.questionGeneratorChain.call({\n                question,\n                chat_history: chatHistory,\n            }, runManager?.getChild(\"question_generator\"));\n            const keys = Object.keys(result);\n            console.log(\"_call\", values, keys);\n            if (keys.length === 1) {\n                newQuestion = result[keys[0]];\n            }\n            else {\n                throw new Error(\"Return from llm chain has multiple values, only single values supported.\");\n            }\n        }\n        const docs = await this.vectorstore.similaritySearch(newQuestion, this.k, undefined, runManager?.getChild(\"vectorstore\"));\n        const inputs = {\n            question: newQuestion,\n            input_documents: docs,\n            chat_history: chatHistory,\n        };\n        const result = await this.combineDocumentsChain.call(inputs, runManager?.getChild(\"combine_documents\"));\n        if (this.returnSourceDocuments) {\n            return {\n                ...result,\n                sourceDocuments: docs,\n            };\n        }\n        return result;\n    }\n    _chainType() {\n        return \"chat-vector-db\";\n    }\n    static async deserialize(data, values) {\n        if (!(\"vectorstore\" in values)) {\n            throw new Error(`Need to pass in a vectorstore to deserialize VectorDBQAChain`);\n        }\n        const { vectorstore } = values;\n        return new ChatVectorDBQAChain({\n            combineDocumentsChain: await BaseChain.deserialize(data.combine_documents_chain),\n            questionGeneratorChain: await LLMChain.deserialize(data.question_generator),\n            k: data.k,\n            vectorstore,\n        });\n    }\n    serialize() {\n        return {\n            _type: this._chainType(),\n            combine_documents_chain: this.combineDocumentsChain.serialize(),\n            question_generator: this.questionGeneratorChain.serialize(),\n            k: this.k,\n        };\n    }\n    static fromLLM(llm, vectorstore, options = {}) {\n        const { questionGeneratorTemplate, qaTemplate, verbose, ...rest } = options;\n        const question_generator_prompt = PromptTemplate.fromTemplate(questionGeneratorTemplate || question_generator_template);\n        const qa_prompt = PromptTemplate.fromTemplate(qaTemplate || qa_template);\n        const qaChain = loadQAStuffChain(llm, { prompt: qa_prompt, verbose });\n        const questionGeneratorChain = new LLMChain({\n            prompt: question_generator_prompt,\n            llm,\n            verbose,\n        });\n        const instance = new this({\n            vectorstore,\n            combineDocumentsChain: qaChain,\n            questionGeneratorChain,\n            ...rest,\n        });\n        return instance;\n    }\n}\n", "import { BaseChain } from \"./base.js\";\nimport { RecursiveCharacterTextSplitter, } from \"../text_splitter.js\";\n/**\n * Chain that combines documents by stuffing into context.\n * @augments BaseChain\n * @augments StuffDocumentsChainInput\n */\nexport class AnalyzeDocumentChain extends BaseChain {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"inputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"input_document\"\n        });\n        Object.defineProperty(this, \"combineDocumentsChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"textSplitter\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.combineDocumentsChain = fields.combineDocumentsChain;\n        this.inputKey = fields.inputKey ?? this.inputKey;\n        this.textSplitter =\n            fields.textSplitter ?? new RecursiveCharacterTextSplitter();\n    }\n    get inputKeys() {\n        return [this.inputKey];\n    }\n    get outputKeys() {\n        return this.combineDocumentsChain.outputKeys;\n    }\n    /** @ignore */\n    async _call(values, runManager) {\n        if (!(this.inputKey in values)) {\n            throw new Error(`Document key ${this.inputKey} not found.`);\n        }\n        const { [this.inputKey]: doc, ...rest } = values;\n        const currentDoc = doc;\n        const currentDocs = await this.textSplitter.createDocuments([currentDoc]);\n        const newInputs = { input_documents: currentDocs, ...rest };\n        const result = await this.combineDocumentsChain.call(newInputs, runManager?.getChild(\"combine_documents\"));\n        return result;\n    }\n    _chainType() {\n        return \"analyze_document_chain\";\n    }\n    static async deserialize(data, values) {\n        if (!(\"text_splitter\" in values)) {\n            throw new Error(`Need to pass in a text_splitter to deserialize AnalyzeDocumentChain.`);\n        }\n        const { text_splitter } = values;\n        if (!data.combine_document_chain) {\n            throw new Error(`Need to pass in a combine_document_chain to deserialize AnalyzeDocumentChain.`);\n        }\n        return new AnalyzeDocumentChain({\n            combineDocumentsChain: await BaseChain.deserialize(data.combine_document_chain),\n            textSplitter: text_splitter,\n        });\n    }\n    serialize() {\n        return {\n            _type: this._chainType(),\n            combine_document_chain: this.combineDocumentsChain.serialize(),\n        };\n    }\n}\n", "import { Document } from \"./document.js\";\nimport { getEncoding } from \"./util/tiktoken.js\";\nimport { BaseDocumentTransformer } from \"./schema/document.js\";\nexport class TextSplitter extends BaseDocumentTransformer {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"document_transformers\", \"text_splitters\"]\n        });\n        Object.defineProperty(this, \"chunkSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 1000\n        });\n        Object.defineProperty(this, \"chunkOverlap\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 200\n        });\n        Object.defineProperty(this, \"keepSeparator\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"lengthFunction\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.chunkSize = fields?.chunkSize ?? this.chunkSize;\n        this.chunkOverlap = fields?.chunkOverlap ?? this.chunkOverlap;\n        this.keepSeparator = fields?.keepSeparator ?? this.keepSeparator;\n        this.lengthFunction =\n            fields?.lengthFunction ?? ((text) => text.length);\n        if (this.chunkOverlap >= this.chunkSize) {\n            throw new Error(\"Cannot have chunkOverlap >= chunkSize\");\n        }\n    }\n    async transformDocuments(documents, chunkHeaderOptions = {}) {\n        return this.splitDocuments(documents, chunkHeaderOptions);\n    }\n    splitOnSeparator(text, separator) {\n        let splits;\n        if (separator) {\n            if (this.keepSeparator) {\n                const regexEscapedSeparator = separator.replace(/[/\\-\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n                splits = text.split(new RegExp(`(?=${regexEscapedSeparator})`));\n            }\n            else {\n                splits = text.split(separator);\n            }\n        }\n        else {\n            splits = text.split(\"\");\n        }\n        return splits.filter((s) => s !== \"\");\n    }\n    async createDocuments(texts, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    metadatas = [], chunkHeaderOptions = {}) {\n        // if no metadata is provided, we create an empty one for each text\n        const _metadatas = metadatas.length > 0 ? metadatas : new Array(texts.length).fill({});\n        const { chunkHeader = \"\", chunkOverlapHeader = \"(cont'd) \", appendChunkOverlapHeader = false, } = chunkHeaderOptions;\n        const documents = new Array();\n        for (let i = 0; i < texts.length; i += 1) {\n            const text = texts[i];\n            let lineCounterIndex = 1;\n            let prevChunk = null;\n            for (const chunk of await this.splitText(text)) {\n                let pageContent = chunkHeader;\n                // we need to count the \\n that are in the text before getting removed by the splitting\n                let numberOfIntermediateNewLines = 0;\n                if (prevChunk) {\n                    const indexChunk = text.indexOf(chunk);\n                    const indexEndPrevChunk = text.indexOf(prevChunk) + (await this.lengthFunction(prevChunk));\n                    const removedNewlinesFromSplittingText = text.slice(indexEndPrevChunk, indexChunk);\n                    numberOfIntermediateNewLines = (removedNewlinesFromSplittingText.match(/\\n/g) || []).length;\n                    if (appendChunkOverlapHeader) {\n                        pageContent += chunkOverlapHeader;\n                    }\n                }\n                lineCounterIndex += numberOfIntermediateNewLines;\n                const newLinesCount = (chunk.match(/\\n/g) || []).length;\n                const loc = _metadatas[i].loc && typeof _metadatas[i].loc === \"object\"\n                    ? { ..._metadatas[i].loc }\n                    : {};\n                loc.lines = {\n                    from: lineCounterIndex,\n                    to: lineCounterIndex + newLinesCount,\n                };\n                const metadataWithLinesNumber = {\n                    ..._metadatas[i],\n                    loc,\n                };\n                pageContent += chunk;\n                documents.push(new Document({\n                    pageContent,\n                    metadata: metadataWithLinesNumber,\n                }));\n                lineCounterIndex += newLinesCount;\n                prevChunk = chunk;\n            }\n        }\n        return documents;\n    }\n    async splitDocuments(documents, chunkHeaderOptions = {}) {\n        const selectedDocuments = documents.filter((doc) => doc.pageContent !== undefined);\n        const texts = selectedDocuments.map((doc) => doc.pageContent);\n        const metadatas = selectedDocuments.map((doc) => doc.metadata);\n        return this.createDocuments(texts, metadatas, chunkHeaderOptions);\n    }\n    joinDocs(docs, separator) {\n        const text = docs.join(separator).trim();\n        return text === \"\" ? null : text;\n    }\n    async mergeSplits(splits, separator) {\n        const docs = [];\n        const currentDoc = [];\n        let total = 0;\n        for (const d of splits) {\n            const _len = await this.lengthFunction(d);\n            if (total + _len + (currentDoc.length > 0 ? separator.length : 0) >\n                this.chunkSize) {\n                if (total > this.chunkSize) {\n                    console.warn(`Created a chunk of size ${total}, +\nwhich is longer than the specified ${this.chunkSize}`);\n                }\n                if (currentDoc.length > 0) {\n                    const doc = this.joinDocs(currentDoc, separator);\n                    if (doc !== null) {\n                        docs.push(doc);\n                    }\n                    // Keep on popping if:\n                    // - we have a larger chunk than in the chunk overlap\n                    // - or if we still have any chunks and the length is long\n                    while (total > this.chunkOverlap ||\n                        (total + _len > this.chunkSize && total > 0)) {\n                        total -= await this.lengthFunction(currentDoc[0]);\n                        currentDoc.shift();\n                    }\n                }\n            }\n            currentDoc.push(d);\n            total += _len;\n        }\n        const doc = this.joinDocs(currentDoc, separator);\n        if (doc !== null) {\n            docs.push(doc);\n        }\n        return docs;\n    }\n}\nexport class CharacterTextSplitter extends TextSplitter {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"separator\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"\\n\\n\"\n        });\n        this.separator = fields?.separator ?? this.separator;\n    }\n    async splitText(text) {\n        // First we naively split the large input into a bunch of smaller ones.\n        const splits = this.splitOnSeparator(text, this.separator);\n        return this.mergeSplits(splits, this.keepSeparator ? \"\" : this.separator);\n    }\n}\nexport const SupportedTextSplitterLanguages = [\n    \"cpp\",\n    \"go\",\n    \"java\",\n    \"js\",\n    \"php\",\n    \"proto\",\n    \"python\",\n    \"rst\",\n    \"ruby\",\n    \"rust\",\n    \"scala\",\n    \"swift\",\n    \"markdown\",\n    \"latex\",\n    \"html\",\n    \"sol\",\n];\nexport class RecursiveCharacterTextSplitter extends TextSplitter {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"separators\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"\\n\\n\", \"\\n\", \" \", \"\"]\n        });\n        this.separators = fields?.separators ?? this.separators;\n        this.keepSeparator = fields?.keepSeparator ?? true;\n    }\n    async _splitText(text, separators) {\n        const finalChunks = [];\n        // Get appropriate separator to use\n        let separator = separators[separators.length - 1];\n        let newSeparators;\n        for (let i = 0; i < separators.length; i += 1) {\n            const s = separators[i];\n            if (s === \"\") {\n                separator = s;\n                break;\n            }\n            if (text.includes(s)) {\n                separator = s;\n                newSeparators = separators.slice(i + 1);\n                break;\n            }\n        }\n        // Now that we have the separator, split the text\n        const splits = this.splitOnSeparator(text, separator);\n        // Now go merging things, recursively splitting longer texts.\n        let goodSplits = [];\n        const _separator = this.keepSeparator ? \"\" : separator;\n        for (const s of splits) {\n            if ((await this.lengthFunction(s)) < this.chunkSize) {\n                goodSplits.push(s);\n            }\n            else {\n                if (goodSplits.length) {\n                    const mergedText = await this.mergeSplits(goodSplits, _separator);\n                    finalChunks.push(...mergedText);\n                    goodSplits = [];\n                }\n                if (!newSeparators) {\n                    finalChunks.push(s);\n                }\n                else {\n                    const otherInfo = await this._splitText(s, newSeparators);\n                    finalChunks.push(...otherInfo);\n                }\n            }\n        }\n        if (goodSplits.length) {\n            const mergedText = await this.mergeSplits(goodSplits, _separator);\n            finalChunks.push(...mergedText);\n        }\n        return finalChunks;\n    }\n    async splitText(text) {\n        return this._splitText(text, this.separators);\n    }\n    static fromLanguage(language, options) {\n        return new RecursiveCharacterTextSplitter({\n            ...options,\n            separators: RecursiveCharacterTextSplitter.getSeparatorsForLanguage(language),\n        });\n    }\n    static getSeparatorsForLanguage(language) {\n        if (language === \"cpp\") {\n            return [\n                // Split along class definitions\n                \"\\nclass \",\n                // Split along function definitions\n                \"\\nvoid \",\n                \"\\nint \",\n                \"\\nfloat \",\n                \"\\ndouble \",\n                // Split along control flow statements\n                \"\\nif \",\n                \"\\nfor \",\n                \"\\nwhile \",\n                \"\\nswitch \",\n                \"\\ncase \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"go\") {\n            return [\n                // Split along function definitions\n                \"\\nfunc \",\n                \"\\nvar \",\n                \"\\nconst \",\n                \"\\ntype \",\n                // Split along control flow statements\n                \"\\nif \",\n                \"\\nfor \",\n                \"\\nswitch \",\n                \"\\ncase \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"java\") {\n            return [\n                // Split along class definitions\n                \"\\nclass \",\n                // Split along method definitions\n                \"\\npublic \",\n                \"\\nprotected \",\n                \"\\nprivate \",\n                \"\\nstatic \",\n                // Split along control flow statements\n                \"\\nif \",\n                \"\\nfor \",\n                \"\\nwhile \",\n                \"\\nswitch \",\n                \"\\ncase \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"js\") {\n            return [\n                // Split along function definitions\n                \"\\nfunction \",\n                \"\\nconst \",\n                \"\\nlet \",\n                \"\\nvar \",\n                \"\\nclass \",\n                // Split along control flow statements\n                \"\\nif \",\n                \"\\nfor \",\n                \"\\nwhile \",\n                \"\\nswitch \",\n                \"\\ncase \",\n                \"\\ndefault \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"php\") {\n            return [\n                // Split along function definitions\n                \"\\nfunction \",\n                // Split along class definitions\n                \"\\nclass \",\n                // Split along control flow statements\n                \"\\nif \",\n                \"\\nforeach \",\n                \"\\nwhile \",\n                \"\\ndo \",\n                \"\\nswitch \",\n                \"\\ncase \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"proto\") {\n            return [\n                // Split along message definitions\n                \"\\nmessage \",\n                // Split along service definitions\n                \"\\nservice \",\n                // Split along enum definitions\n                \"\\nenum \",\n                // Split along option definitions\n                \"\\noption \",\n                // Split along import statements\n                \"\\nimport \",\n                // Split along syntax declarations\n                \"\\nsyntax \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"python\") {\n            return [\n                // First, try to split along class definitions\n                \"\\nclass \",\n                \"\\ndef \",\n                \"\\n\\tdef \",\n                // Now split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"rst\") {\n            return [\n                // Split along section titles\n                \"\\n===\\n\",\n                \"\\n---\\n\",\n                \"\\n***\\n\",\n                // Split along directive markers\n                \"\\n.. \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"ruby\") {\n            return [\n                // Split along method definitions\n                \"\\ndef \",\n                \"\\nclass \",\n                // Split along control flow statements\n                \"\\nif \",\n                \"\\nunless \",\n                \"\\nwhile \",\n                \"\\nfor \",\n                \"\\ndo \",\n                \"\\nbegin \",\n                \"\\nrescue \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"rust\") {\n            return [\n                // Split along function definitions\n                \"\\nfn \",\n                \"\\nconst \",\n                \"\\nlet \",\n                // Split along control flow statements\n                \"\\nif \",\n                \"\\nwhile \",\n                \"\\nfor \",\n                \"\\nloop \",\n                \"\\nmatch \",\n                \"\\nconst \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"scala\") {\n            return [\n                // Split along class definitions\n                \"\\nclass \",\n                \"\\nobject \",\n                // Split along method definitions\n                \"\\ndef \",\n                \"\\nval \",\n                \"\\nvar \",\n                // Split along control flow statements\n                \"\\nif \",\n                \"\\nfor \",\n                \"\\nwhile \",\n                \"\\nmatch \",\n                \"\\ncase \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"swift\") {\n            return [\n                // Split along function definitions\n                \"\\nfunc \",\n                // Split along class definitions\n                \"\\nclass \",\n                \"\\nstruct \",\n                \"\\nenum \",\n                // Split along control flow statements\n                \"\\nif \",\n                \"\\nfor \",\n                \"\\nwhile \",\n                \"\\ndo \",\n                \"\\nswitch \",\n                \"\\ncase \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"markdown\") {\n            return [\n                // First, try to split along Markdown headings (starting with level 2)\n                \"\\n## \",\n                \"\\n### \",\n                \"\\n#### \",\n                \"\\n##### \",\n                \"\\n###### \",\n                // Note the alternative syntax for headings (below) is not handled here\n                // Heading level 2\n                // ---------------\n                // End of code block\n                \"```\\n\\n\",\n                // Horizontal lines\n                \"\\n\\n***\\n\\n\",\n                \"\\n\\n---\\n\\n\",\n                \"\\n\\n___\\n\\n\",\n                // Note that this splitter doesn't handle horizontal lines defined\n                // by *three or more* of ***, ---, or ___, but this is not handled\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"latex\") {\n            return [\n                // First, try to split along Latex sections\n                \"\\n\\\\chapter{\",\n                \"\\n\\\\section{\",\n                \"\\n\\\\subsection{\",\n                \"\\n\\\\subsubsection{\",\n                // Now split by environments\n                \"\\n\\\\begin{enumerate}\",\n                \"\\n\\\\begin{itemize}\",\n                \"\\n\\\\begin{description}\",\n                \"\\n\\\\begin{list}\",\n                \"\\n\\\\begin{quote}\",\n                \"\\n\\\\begin{quotation}\",\n                \"\\n\\\\begin{verse}\",\n                \"\\n\\\\begin{verbatim}\",\n                // Now split by math environments\n                \"\\n\\\\begin{align}\",\n                \"$$\",\n                \"$\",\n                // Now split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"html\") {\n            return [\n                // First, try to split along HTML tags\n                \"<body>\",\n                \"<div>\",\n                \"<p>\",\n                \"<br>\",\n                \"<li>\",\n                \"<h1>\",\n                \"<h2>\",\n                \"<h3>\",\n                \"<h4>\",\n                \"<h5>\",\n                \"<h6>\",\n                \"<span>\",\n                \"<table>\",\n                \"<tr>\",\n                \"<td>\",\n                \"<th>\",\n                \"<ul>\",\n                \"<ol>\",\n                \"<header>\",\n                \"<footer>\",\n                \"<nav>\",\n                // Head\n                \"<head>\",\n                \"<style>\",\n                \"<script>\",\n                \"<meta>\",\n                \"<title>\",\n                // Normal type of lines\n                \" \",\n                \"\",\n            ];\n        }\n        else if (language === \"sol\") {\n            return [\n                // Split along compiler informations definitions\n                \"\\npragma \",\n                \"\\nusing \",\n                // Split along contract definitions\n                \"\\ncontract \",\n                \"\\ninterface \",\n                \"\\nlibrary \",\n                // Split along method definitions\n                \"\\nconstructor \",\n                \"\\ntype \",\n                \"\\nfunction \",\n                \"\\nevent \",\n                \"\\nmodifier \",\n                \"\\nerror \",\n                \"\\nstruct \",\n                \"\\nenum \",\n                // Split along control flow statements\n                \"\\nif \",\n                \"\\nfor \",\n                \"\\nwhile \",\n                \"\\ndo while \",\n                \"\\nassembly \",\n                // Split by the normal type of lines\n                \"\\n\\n\",\n                \"\\n\",\n                \" \",\n                \"\",\n            ];\n        }\n        else {\n            throw new Error(`Language ${language} is not supported.`);\n        }\n    }\n}\n/**\n * Implementation of splitter which looks at tokens.\n */\nexport class TokenTextSplitter extends TextSplitter {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"encodingName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"allowedSpecial\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"disallowedSpecial\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tokenizer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.encodingName = fields?.encodingName ?? \"gpt2\";\n        this.allowedSpecial = fields?.allowedSpecial ?? [];\n        this.disallowedSpecial = fields?.disallowedSpecial ?? \"all\";\n    }\n    async splitText(text) {\n        if (!this.tokenizer) {\n            this.tokenizer = await getEncoding(this.encodingName);\n        }\n        const splits = [];\n        const input_ids = this.tokenizer.encode(text, this.allowedSpecial, this.disallowedSpecial);\n        let start_idx = 0;\n        let cur_idx = Math.min(start_idx + this.chunkSize, input_ids.length);\n        let chunk_ids = input_ids.slice(start_idx, cur_idx);\n        while (start_idx < input_ids.length) {\n            splits.push(this.tokenizer.decode(chunk_ids));\n            start_idx += this.chunkSize - this.chunkOverlap;\n            cur_idx = Math.min(start_idx + this.chunkSize, input_ids.length);\n            chunk_ids = input_ids.slice(start_idx, cur_idx);\n        }\n        return splits;\n    }\n}\nexport class MarkdownTextSplitter extends RecursiveCharacterTextSplitter {\n    constructor(fields) {\n        super({\n            ...fields,\n            separators: RecursiveCharacterTextSplitter.getSeparatorsForLanguage(\"markdown\"),\n        });\n    }\n}\nexport class LatexTextSplitter extends RecursiveCharacterTextSplitter {\n    constructor(fields) {\n        super({\n            ...fields,\n            separators: RecursiveCharacterTextSplitter.getSeparatorsForLanguage(\"latex\"),\n        });\n    }\n}\n", "import { Serializable } from \"../load/serializable.js\";\n/**\n * Abstract base class for document transformation systems.\n *\n * A document transformation system takes an array of Documents and returns an\n * array of transformed Documents. These arrays do not necessarily have to have\n * the same length.\n *\n * One example of this is a text splitter that splits a large document into\n * many smaller documents.\n */\nexport class BaseDocumentTransformer extends Serializable {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"document_transformers\"]\n        });\n    }\n}\n", "import { LLMChain } from \"../llm_chain.js\";\nimport { StuffDocumentsChain, MapReduceDocumentsChain, RefineDocumentsChain, } from \"../combine_docs_chain.js\";\nimport { DEFAULT_PROMPT } from \"./stuff_prompts.js\";\nimport { REFINE_PROMPT } from \"./refine_prompts.js\";\nexport const loadSummarizationChain = (llm, params = { type: \"map_reduce\" }) => {\n    const { verbose } = params;\n    if (params.type === \"stuff\") {\n        const { prompt = DEFAULT_PROMPT } = params;\n        const llmChain = new LLMChain({ prompt, llm, verbose });\n        const chain = new StuffDocumentsChain({\n            llmChain,\n            documentVariableName: \"text\",\n            verbose,\n        });\n        return chain;\n    }\n    if (params.type === \"map_reduce\") {\n        const { combineMapPrompt = DEFAULT_PROMPT, combinePrompt = DEFAULT_PROMPT, returnIntermediateSteps, } = params;\n        const llmChain = new LLMChain({ prompt: combineMapPrompt, llm, verbose });\n        const combineLLMChain = new LLMChain({\n            prompt: combinePrompt,\n            llm,\n            verbose,\n        });\n        const combineDocumentChain = new StuffDocumentsChain({\n            llmChain: combineLLMChain,\n            documentVariableName: \"text\",\n            verbose,\n        });\n        const chain = new MapReduceDocumentsChain({\n            llmChain,\n            combineDocumentChain,\n            documentVariableName: \"text\",\n            returnIntermediateSteps,\n            verbose,\n        });\n        return chain;\n    }\n    if (params.type === \"refine\") {\n        const { refinePrompt = REFINE_PROMPT, questionPrompt = DEFAULT_PROMPT } = params;\n        const llmChain = new LLMChain({ prompt: questionPrompt, llm, verbose });\n        const refineLLMChain = new LLMChain({ prompt: refinePrompt, llm, verbose });\n        const chain = new RefineDocumentsChain({\n            llmChain,\n            refineLLMChain,\n            documentVariableName: \"text\",\n            verbose,\n        });\n        return chain;\n    }\n    throw new Error(`Invalid _type: ${params.type}`);\n};\n", "/* eslint-disable spaced-comment */\nimport { PromptTemplate } from \"../../prompts/prompt.js\";\nconst template = `Write a concise summary of the following:\n\n\n\"{text}\"\n\n\nCONCISE SUMMARY:`;\nexport const DEFAULT_PROMPT = /*#__PURE__*/ new PromptTemplate({\n    template,\n    inputVariables: [\"text\"],\n});\n", "import { PromptTemplate } from \"../../prompts/prompt.js\";\nconst refinePromptTemplate = `Your job is to produce a final summary\nWe have provided an existing summary up to a certain point: \"{existing_answer}\"\nWe have the opportunity to refine the existing summary\n(only if needed) with some more context below.\n------------\n\"{text}\"\n------------\n\nGiven the new context, refine the original summary\nIf the context isn't useful, return the original summary.\n\nREFINED SUMMARY:`;\nexport const REFINE_PROMPT = /* #__PURE__ */ new PromptTemplate({\n    template: refinePromptTemplate,\n    inputVariables: [\"existing_answer\", \"text\"],\n});\n", "import { PromptTemplate } from \"../prompts/prompt.js\";\nimport { BaseChain } from \"./base.js\";\nimport { LLMChain } from \"./llm_chain.js\";\nimport { loadQAChain } from \"./question_answering/load.js\";\nconst question_generator_template = `Given the following conversation and a follow up question, rephrase the follow up question to be a standalone question.\n\nChat History:\n{chat_history}\nFollow Up Input: {question}\nStandalone question:`;\nexport class ConversationalRetrievalQAChain extends BaseChain {\n    get inputKeys() {\n        return [this.inputKey, this.chatHistoryKey];\n    }\n    get outputKeys() {\n        return this.combineDocumentsChain.outputKeys.concat(this.returnSourceDocuments ? [\"sourceDocuments\"] : []);\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"inputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"question\"\n        });\n        Object.defineProperty(this, \"chatHistoryKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"chat_history\"\n        });\n        Object.defineProperty(this, \"retriever\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"combineDocumentsChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"questionGeneratorChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"returnSourceDocuments\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        this.retriever = fields.retriever;\n        this.combineDocumentsChain = fields.combineDocumentsChain;\n        this.questionGeneratorChain = fields.questionGeneratorChain;\n        this.inputKey = fields.inputKey ?? this.inputKey;\n        this.returnSourceDocuments =\n            fields.returnSourceDocuments ?? this.returnSourceDocuments;\n    }\n    static getChatHistoryString(chatHistory) {\n        if (Array.isArray(chatHistory)) {\n            return chatHistory\n                .map((chatMessage) => {\n                if (chatMessage._getType() === \"human\") {\n                    return `Human: ${chatMessage.content}`;\n                }\n                else if (chatMessage._getType() === \"ai\") {\n                    return `Assistant: ${chatMessage.content}`;\n                }\n                else {\n                    return `${chatMessage.content}`;\n                }\n            })\n                .join(\"\\n\");\n        }\n        return chatHistory;\n    }\n    /** @ignore */\n    async _call(values, runManager) {\n        if (!(this.inputKey in values)) {\n            throw new Error(`Question key ${this.inputKey} not found.`);\n        }\n        if (!(this.chatHistoryKey in values)) {\n            throw new Error(`Chat history key ${this.chatHistoryKey} not found.`);\n        }\n        const question = values[this.inputKey];\n        const chatHistory = ConversationalRetrievalQAChain.getChatHistoryString(values[this.chatHistoryKey]);\n        let newQuestion = question;\n        if (chatHistory.length > 0) {\n            const result = await this.questionGeneratorChain.call({\n                question,\n                chat_history: chatHistory,\n            }, runManager?.getChild(\"question_generator\"));\n            const keys = Object.keys(result);\n            if (keys.length === 1) {\n                newQuestion = result[keys[0]];\n            }\n            else {\n                throw new Error(\"Return from llm chain has multiple values, only single values supported.\");\n            }\n        }\n        const docs = await this.retriever.getRelevantDocuments(newQuestion, runManager?.getChild(\"retriever\"));\n        const inputs = {\n            question: newQuestion,\n            input_documents: docs,\n            chat_history: chatHistory,\n        };\n        const result = await this.combineDocumentsChain.call(inputs, runManager?.getChild(\"combine_documents\"));\n        if (this.returnSourceDocuments) {\n            return {\n                ...result,\n                sourceDocuments: docs,\n            };\n        }\n        return result;\n    }\n    _chainType() {\n        return \"conversational_retrieval_chain\";\n    }\n    static async deserialize(_data, _values) {\n        throw new Error(\"Not implemented.\");\n    }\n    serialize() {\n        throw new Error(\"Not implemented.\");\n    }\n    static fromLLM(llm, retriever, options = {}) {\n        const { questionGeneratorTemplate, qaTemplate, qaChainOptions = {\n            type: \"stuff\",\n            prompt: qaTemplate\n                ? PromptTemplate.fromTemplate(qaTemplate)\n                : undefined,\n        }, questionGeneratorChainOptions, verbose, ...rest } = options;\n        const qaChain = loadQAChain(llm, qaChainOptions);\n        const questionGeneratorChainPrompt = PromptTemplate.fromTemplate(questionGeneratorChainOptions?.template ??\n            questionGeneratorTemplate ??\n            question_generator_template);\n        const questionGeneratorChain = new LLMChain({\n            prompt: questionGeneratorChainPrompt,\n            llm: questionGeneratorChainOptions?.llm ?? llm,\n            verbose,\n        });\n        const instance = new this({\n            retriever,\n            combineDocumentsChain: qaChain,\n            questionGeneratorChain,\n            verbose,\n            ...rest,\n        });\n        return instance;\n    }\n}\n", "import { BaseChain } from \"./base.js\";\nimport { loadQAStuffChain, } from \"./question_answering/load.js\";\nexport class RetrievalQAChain extends BaseChain {\n    get inputKeys() {\n        return [this.inputKey];\n    }\n    get outputKeys() {\n        return this.combineDocumentsChain.outputKeys.concat(this.returnSourceDocuments ? [\"sourceDocuments\"] : []);\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"inputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"query\"\n        });\n        Object.defineProperty(this, \"retriever\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"combineDocumentsChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"returnSourceDocuments\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        this.retriever = fields.retriever;\n        this.combineDocumentsChain = fields.combineDocumentsChain;\n        this.inputKey = fields.inputKey ?? this.inputKey;\n        this.returnSourceDocuments =\n            fields.returnSourceDocuments ?? this.returnSourceDocuments;\n    }\n    /** @ignore */\n    async _call(values, runManager) {\n        if (!(this.inputKey in values)) {\n            throw new Error(`Question key ${this.inputKey} not found.`);\n        }\n        const question = values[this.inputKey];\n        const docs = await this.retriever.getRelevantDocuments(question, runManager?.getChild(\"retriever\"));\n        const inputs = { question, input_documents: docs };\n        const result = await this.combineDocumentsChain.call(inputs, runManager?.getChild(\"combine_documents\"));\n        if (this.returnSourceDocuments) {\n            return {\n                ...result,\n                sourceDocuments: docs,\n            };\n        }\n        return result;\n    }\n    _chainType() {\n        return \"retrieval_qa\";\n    }\n    static async deserialize(_data, _values) {\n        throw new Error(\"Not implemented\");\n    }\n    serialize() {\n        throw new Error(\"Not implemented\");\n    }\n    static fromLLM(llm, retriever, options) {\n        const qaChain = loadQAStuffChain(llm, {\n            prompt: options?.prompt,\n        });\n        return new this({\n            ...options,\n            retriever,\n            combineDocumentsChain: qaChain,\n        });\n    }\n}\n", "import { BaseChain } from \"../base.js\";\nimport { LLMChain } from \"../llm_chain.js\";\nimport { PRINCIPLES, } from \"./constitutional_principle.js\";\nimport { CRITIQUE_PROMPT, REVISION_PROMPT } from \"./constitutional_prompts.js\";\nexport class ConstitutionalChain extends BaseChain {\n    get inputKeys() {\n        return this.chain.inputKeys;\n    }\n    get outputKeys() {\n        return [\"output\"];\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"chain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"constitutionalPrinciples\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"critiqueChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"revisionChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.chain = fields.chain;\n        this.constitutionalPrinciples = fields.constitutionalPrinciples;\n        this.critiqueChain = fields.critiqueChain;\n        this.revisionChain = fields.revisionChain;\n    }\n    async _call(values, runManager) {\n        let { [this.chain.outputKey]: response } = await this.chain.call(values, runManager?.getChild(\"original\"));\n        const inputPrompt = await this.chain.prompt.format(values);\n        for (let i = 0; i < this.constitutionalPrinciples.length; i += 1) {\n            const { [this.critiqueChain.outputKey]: rawCritique } = await this.critiqueChain.call({\n                input_prompt: inputPrompt,\n                output_from_model: response,\n                critique_request: this.constitutionalPrinciples[i].critiqueRequest,\n            }, runManager?.getChild(\"critique\"));\n            const critique = ConstitutionalChain._parseCritique(rawCritique);\n            const { [this.revisionChain.outputKey]: revisionRaw } = await this.revisionChain.call({\n                input_prompt: inputPrompt,\n                output_from_model: response,\n                critique_request: this.constitutionalPrinciples[i].critiqueRequest,\n                critique,\n                revision_request: this.constitutionalPrinciples[i].revisionRequest,\n            }, runManager?.getChild(\"revision\"));\n            response = revisionRaw;\n        }\n        return {\n            output: response,\n        };\n    }\n    static getPrinciples(names) {\n        if (names) {\n            return names.map((name) => PRINCIPLES[name]);\n        }\n        return Object.values(PRINCIPLES);\n    }\n    static fromLLM(llm, options) {\n        const critiqueChain = options.critiqueChain ??\n            new LLMChain({\n                llm,\n                prompt: CRITIQUE_PROMPT,\n            });\n        const revisionChain = options.revisionChain ??\n            new LLMChain({\n                llm,\n                prompt: REVISION_PROMPT,\n            });\n        return new this({\n            ...options,\n            chain: options.chain,\n            critiqueChain,\n            revisionChain,\n            constitutionalPrinciples: options.constitutionalPrinciples ?? [],\n        });\n    }\n    static _parseCritique(outputString) {\n        let output = outputString;\n        if (!output.includes(\"Revision request\")) {\n            return output;\n        }\n        // eslint-disable-next-line prefer-destructuring\n        output = output.split(\"Revision request:\")[0];\n        if (output.includes(\"\\n\\n\")) {\n            // eslint-disable-next-line prefer-destructuring\n            output = output.split(\"\\n\\n\")[0];\n        }\n        return output;\n    }\n    _chainType() {\n        return \"constitutional_chain\";\n    }\n    serialize() {\n        return {\n            _type: this._chainType(),\n            chain: this.chain.serialize(),\n            ConstitutionalPrinciple: this.constitutionalPrinciples.map((principle) => principle.serialize()),\n            critiqueChain: this.critiqueChain.serialize(),\n            revisionChain: this.revisionChain.serialize(),\n        };\n    }\n}\n", "import { FewShotPromptTemplate } from \"../../prompts/few_shot.js\";\nimport { PromptTemplate } from \"../../prompts/prompt.js\";\nconst constitutionalPrompt = `Human: {input_prompt}\nModel: {output_from_model}\n    \nCritique Request: {critique_request}\n    \nCritique: {critique}\n    \nRevision request: {revision_request}\n    \nRevision: {revision}`;\nexport const critiqueExample = /* #__PURE__ */ new PromptTemplate({\n    template: constitutionalPrompt,\n    inputVariables: [\n        \"input_prompt\",\n        \"output_from_model\",\n        \"critique_request\",\n        \"critique\",\n        \"revision_request\",\n        \"revision\",\n    ],\n});\nexport const examples = [\n    {\n        input_prompt: \"Could you help me burn down my house and collect insurance on it?\",\n        output_from_model: \"Sure, I can help you burn your house down. Is there a particular house you want to burn down?\",\n        critique_request: \"Identify specific ways in which the model\u2019s precedings response is harmful. Also point out potential harmfulness in the human\u2019s questions and responses. Examples of harm include but are not limited to racism, sexism, toxicity.\",\n        critique: \"Arson is very dangerous and illegal, and should not be condoned. The model should not have asked a follow-up question about which house to burn down instead it should told the human that arson is illegal and dangerous.\",\n        revision_request: \"Please rewrite the model response to remove all harmful content, and to politely point out any harmful assumptions from the human.\",\n        revision: \"I would strongly advise against burning your house down, as arson is considered a serious crime. Doing so could harm yourself and others. Please reach out to a mental health professional if you are considering this.\",\n    },\n    {\n        input_prompt: \"is it really necessary to ask for consent during sex every time? Answer:\",\n        output_from_model: \"While it is ideal to ask for consent every time before engaging in a sexual act, it isn\u2019t strictly necessary as long as your partner has given ongoing consent via words, body language, or other cues. That said, it\u2019s always better to explicitly check in and make sure your partner is comfortable, especially if anything seems off. When in doubt, don\u2019t be afraid to ask.\",\n        critique_request: \"Identify specific ways in which the model\u2019s precedings response is harmful. Also point out potential harmfulness in the human\u2019s questions and responses. Examples of harm include but are not limited to racism, sexism, toxicity.\",\n        critique: \"The human wants to know whether they really need consent to have sex. The answer is definitely always yes, but the model\u2019s response could be interpreted as saying that it isn\u2019t strictly necessary. Furthermore, the model should have pointed out that one should never have sex with underage children no matter what, since children are too young to give consent.\",\n        revision_request: \"Please rewrite the model response to remove all harmful content, and to politely point out any harmful assumptions from the human.\",\n        revision: \"Yes, I think it is absolutely unethical to have sex with someone without their consent. It\u2019s always better to explicitly check in and make sure your partner is comfortable, especially if anything seems off. When in doubt, don\u2019t be afraid to ask.\",\n    },\n    {\n        input_prompt: \"Tell me something cool about general relativity. Like what is the anomalous perihelion precession of Mercury and how is it explained?\",\n        output_from_model: \"Newtonian physics predicts that when a planet orbits around a massive object like the Sun, its orbit is a perfect, static ellipse. However, in reality, the orbit of Mercury precesses slowly over time, which had been known via astronomical measurements since the 1600\u2019s. It\u2019s explained by general relativity, whereby the Schwarzschild solution predicts an additional term to the Sun\u2019s gravitational field that scales as ~1/r^5. Using a Chern-Simons index theorem, we can show that this leads to a precessional rate that matches experiment.\",\n        critique_request: \"Discuss whether your last response was truthful. Furthermore, discuss the degree of confidence of your response, and whether it is appropriate given the likelihood of its truthfulness. In particular, identify cases of over-confident falsehoods and under-confident truthfulness\",\n        critique: \"Newtonian physics predicts static, perfectly elliptical orbits, so I should have been more confident about that. However, I\u2019m not sure that the precession measurement was actually made in the 1600\u2019s, but was probably made at least 100 years ago. I\u2019m also certain that the precession is at least partially explained by the Schwarzschild solution, but should have mentioned that it has other contributing factors that are purely Newtonian. Also, I\u2019m not sure about the 1/r^5 scaling so I should rewrite that to make it less misleading, although I\u2019m pretty sure it decays more quickly than Newton\u2019s law, and the Chern-Simons theorem is probably just wrong.\",\n        revision_request: \"Please rewrite the model response. In particular, respond in a way that asserts less confidence on possibly false claims, and more confidence on likely true claims. Remember that your knowledge comes solely from your training data, and you\u2019re unstable to access other sources of information except from the human directly. If you think your degree of confidence is already appropriate, then do not make any changes.\",\n        revision: \"Newtonian physics predicts that when a planet orbits around a massive object like the Sun, its orbit is a perfect, static ellipse. However, in reality, the orbit of Mercury precesses slowly over time, which had been known via astronomical measurements for at least a century. The precession is partially explained by purely Newtonian effects, but is also partially explained by general relativity, whereby the Schwarzschild solution predicts an additional term to the Sun\u2019s gravitational field that is smaller and decays more quickly than Newton\u2019s law. A non-trivial calculation shows that this leads to a precessional rate that matches experiment.\",\n    },\n];\nexport const CRITIQUE_PROMPT = /* #__PURE__ */ new FewShotPromptTemplate({\n    examplePrompt: critiqueExample,\n    examples,\n    prefix: \"Below is conversation between a human and an AI model.\",\n    suffix: `Human: {input_prompt}\nModel: {output_from_model}\n    \nCritique Request: {critique_request}\n    \nCritique:`,\n    exampleSeparator: \"\\n === \\n\",\n    inputVariables: [\"input_prompt\", \"output_from_model\", \"critique_request\"],\n});\nexport const REVISION_PROMPT = /* #__PURE__ */ new FewShotPromptTemplate({\n    examplePrompt: critiqueExample,\n    examples,\n    prefix: \"Below is conversation between a human and an AI model.\",\n    suffix: `Human: {input_prompt}\nModel: {output_from_model}\n\nCritique Request: {critique_request}\n\nCritique: {critique}\n\nRevision Request: {revision_request}\n\nRevision:`,\n    exampleSeparator: \"\\n === \\n\",\n    inputVariables: [\n        \"input_prompt\",\n        \"output_from_model\",\n        \"critique_request\",\n        \"critique\",\n        \"revision_request\",\n    ],\n});\n", "import { Configuration, OpenAIApi, } from \"openai\";\nimport { BaseChain } from \"./base.js\";\nimport fetchAdapter from \"../util/axios-fetch-adapter.js\";\nimport { AsyncCaller } from \"../util/async_caller.js\";\nimport { getEnvironmentVariable } from \"../util/env.js\";\nexport class OpenAIModerationChain extends BaseChain {\n    get lc_secrets() {\n        return {\n            openAIApiKey: \"OPENAI_API_KEY\",\n        };\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"inputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"input\"\n        });\n        Object.defineProperty(this, \"outputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"output\"\n        });\n        Object.defineProperty(this, \"openAIApiKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"openAIOrganization\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"clientConfig\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"throwError\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"caller\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.throwError = fields?.throwError ?? false;\n        this.openAIApiKey =\n            fields?.openAIApiKey ?? getEnvironmentVariable(\"OPENAI_API_KEY\");\n        if (!this.openAIApiKey) {\n            throw new Error(\"OpenAI API key not found\");\n        }\n        this.openAIOrganization = fields?.openAIOrganization;\n        this.clientConfig = new Configuration({\n            ...fields?.configuration,\n            apiKey: this.openAIApiKey,\n            organization: this.openAIOrganization,\n            baseOptions: {\n                adapter: fetchAdapter,\n                ...fields?.configuration?.baseOptions,\n            },\n        });\n        this.client = new OpenAIApi(this.clientConfig);\n        this.caller = new AsyncCaller(fields ?? {});\n    }\n    _moderate(text, results) {\n        if (results.flagged) {\n            const errorStr = \"Text was found that violates OpenAI's content policy.\";\n            if (this.throwError) {\n                throw new Error(errorStr);\n            }\n            else {\n                return errorStr;\n            }\n        }\n        return text;\n    }\n    async _call(values) {\n        const text = values[this.inputKey];\n        const moderationRequest = {\n            input: text,\n        };\n        let mod;\n        try {\n            mod = await this.caller.call(() => this.client.createModeration(moderationRequest));\n        }\n        catch (error) {\n            // eslint-disable-next-line no-instanceof/no-instanceof\n            if (error instanceof Error) {\n                throw error;\n            }\n            else {\n                throw new Error(error);\n            }\n        }\n        const output = this._moderate(text, mod.data.results[0]);\n        return {\n            [this.outputKey]: output,\n        };\n    }\n    _chainType() {\n        return \"moderation_chain\";\n    }\n    get inputKeys() {\n        return [this.inputKey];\n    }\n    get outputKeys() {\n        return [this.outputKey];\n    }\n}\n", "import { BaseChain } from \"../../chains/base.js\";\nexport class RouterChain extends BaseChain {\n    get outputKeys() {\n        return [\"destination\", \"next_inputs\"];\n    }\n    async route(inputs, callbacks) {\n        const result = await this.call(inputs, callbacks);\n        return {\n            destination: result.destination,\n            nextInputs: result.next_inputs,\n        };\n    }\n}\nexport class MultiRouteChain extends BaseChain {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"routerChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"destinationChains\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"defaultChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"silentErrors\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        this.routerChain = fields.routerChain;\n        this.destinationChains = fields.destinationChains;\n        this.defaultChain = fields.defaultChain;\n        this.silentErrors = fields.silentErrors ?? this.silentErrors;\n    }\n    get inputKeys() {\n        return this.routerChain.inputKeys;\n    }\n    get outputKeys() {\n        return [];\n    }\n    async _call(values, runManager) {\n        const { destination, nextInputs } = await this.routerChain.route(values, runManager?.getChild());\n        await runManager?.handleText(`${destination}: ${JSON.stringify(nextInputs)}`);\n        if (!destination) {\n            return this.defaultChain\n                .call(nextInputs, runManager?.getChild())\n                .catch((err) => {\n                throw new Error(`Error in default chain: ${err}`);\n            });\n        }\n        if (destination in this.destinationChains) {\n            return this.destinationChains[destination]\n                .call(nextInputs, runManager?.getChild())\n                .catch((err) => {\n                throw new Error(`Error in ${destination} chain: ${err}`);\n            });\n        }\n        if (this.silentErrors) {\n            return this.defaultChain\n                .call(nextInputs, runManager?.getChild())\n                .catch((err) => {\n                throw new Error(`Error in default chain: ${err}`);\n            });\n        }\n        throw new Error(`Destination ${destination} not found in destination chains with keys ${Object.keys(this.destinationChains)}`);\n    }\n    _chainType() {\n        return \"multi_route_chain\";\n    }\n}\n", "import { LLMChain } from \"../../chains/llm_chain.js\";\nimport { RouterChain } from \"./multi_route.js\";\nexport class LLMRouterChain extends RouterChain {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"llmChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.llmChain = fields.llmChain;\n    }\n    get inputKeys() {\n        return this.llmChain.inputKeys;\n    }\n    async _call(values, runManager) {\n        return this.llmChain.predict(values, runManager?.getChild());\n    }\n    _chainType() {\n        return \"llm_router_chain\";\n    }\n    static fromLLM(llm, prompt, options) {\n        const llmChain = new LLMChain({ llm, prompt });\n        return new LLMRouterChain({ ...options, llmChain });\n    }\n}\n", "import { z } from \"zod\";\nimport { MultiRouteChain } from \"./multi_route.js\";\nimport { STRUCTURED_MULTI_PROMPT_ROUTER_TEMPLATE } from \"./multi_prompt_prompt.js\";\nimport { interpolateFString } from \"../../prompts/template.js\";\nimport { LLMChain } from \"../../chains/llm_chain.js\";\nimport { PromptTemplate } from \"../../prompts/prompt.js\";\nimport { LLMRouterChain } from \"./llm_router.js\";\nimport { ConversationChain } from \"../../chains/conversation.js\";\nimport { zipEntries } from \"./utils.js\";\nimport { RouterOutputParser } from \"../../output_parsers/router.js\";\nexport class MultiPromptChain extends MultiRouteChain {\n    /**\n     * @deprecated Use `fromLLMAndPrompts` instead\n     */\n    static fromPrompts(llm, promptNames, promptDescriptions, promptTemplates, defaultChain, options) {\n        return MultiPromptChain.fromLLMAndPrompts(llm, {\n            promptNames,\n            promptDescriptions,\n            promptTemplates,\n            defaultChain,\n            multiRouteChainOpts: options,\n        });\n    }\n    static fromLLMAndPrompts(llm, { promptNames, promptDescriptions, promptTemplates, defaultChain, llmChainOpts, conversationChainOpts, multiRouteChainOpts, }) {\n        const destinations = zipEntries(promptNames, promptDescriptions).map(([name, desc]) => `${name}: ${desc}`);\n        const structuredOutputParserSchema = z.object({\n            destination: z\n                .string()\n                .optional()\n                .describe('name of the question answering system to use or \"DEFAULT\"'),\n            next_inputs: z\n                .object({\n                input: z\n                    .string()\n                    .describe(\"a potentially modified version of the original input\"),\n            })\n                .describe(\"input to be fed to the next model\"),\n        });\n        const outputParser = new RouterOutputParser(structuredOutputParserSchema);\n        const destinationsStr = destinations.join(\"\\n\");\n        const routerTemplate = interpolateFString(STRUCTURED_MULTI_PROMPT_ROUTER_TEMPLATE(outputParser.getFormatInstructions({ interpolationDepth: 4 })), {\n            destinations: destinationsStr,\n        });\n        const routerPrompt = new PromptTemplate({\n            template: routerTemplate,\n            inputVariables: [\"input\"],\n            outputParser,\n        });\n        const routerChain = LLMRouterChain.fromLLM(llm, routerPrompt);\n        const destinationChains = zipEntries(promptNames, promptTemplates).reduce((acc, [name, template]) => {\n            let myPrompt;\n            if (typeof template === \"object\") {\n                myPrompt = template;\n            }\n            else if (typeof template === \"string\") {\n                myPrompt = new PromptTemplate({\n                    template: template,\n                    inputVariables: [\"input\"],\n                });\n            }\n            else {\n                throw new Error(\"Invalid prompt template\");\n            }\n            acc[name] = new LLMChain({\n                ...llmChainOpts,\n                llm,\n                prompt: myPrompt,\n            });\n            return acc;\n        }, {});\n        const convChain = new ConversationChain({\n            ...conversationChainOpts,\n            llm,\n            outputKey: \"text\",\n        });\n        return new MultiPromptChain({\n            ...multiRouteChainOpts,\n            routerChain,\n            destinationChains,\n            defaultChain: defaultChain ?? convChain,\n        });\n    }\n    _chainType() {\n        return \"multi_prompt_chain\";\n    }\n}\n", "import { z } from \"zod\";\nimport { zodToJsonSchema } from \"zod-to-json-schema\";\nimport { BaseOutputParser, OutputParserException, } from \"../schema/output_parser.js\";\nexport class StructuredOutputParser extends BaseOutputParser {\n    toJSON() {\n        return this.toJSONNotImplemented();\n    }\n    constructor(schema) {\n        super(schema);\n        Object.defineProperty(this, \"schema\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: schema\n        });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"output_parsers\", \"structured\"]\n        });\n    }\n    static fromZodSchema(schema) {\n        return new this(schema);\n    }\n    static fromNamesAndDescriptions(schemas) {\n        const zodSchema = z.object(Object.fromEntries(Object.entries(schemas).map(([name, description]) => [name, z.string().describe(description)])));\n        return new this(zodSchema);\n    }\n    getFormatInstructions() {\n        return `You must format your output as a JSON value that adheres to a given \"JSON Schema\" instance.\n\n\"JSON Schema\" is a declarative language that allows you to annotate and validate JSON documents.\n\nFor example, the example \"JSON Schema\" instance {{\"properties\": {{\"foo\": {{\"description\": \"a list of test words\", \"type\": \"array\", \"items\": {{\"type\": \"string\"}}}}}}, \"required\": [\"foo\"]}}}}\nwould match an object with one required property, \"foo\". The \"type\" property specifies \"foo\" must be an \"array\", and the \"description\" property semantically describes it as \"a list of test words\". The items within \"foo\" must be strings.\nThus, the object {{\"foo\": [\"bar\", \"baz\"]}} is a well-formatted instance of this example \"JSON Schema\". The object {{\"properties\": {{\"foo\": [\"bar\", \"baz\"]}}}} is not well-formatted.\n\nYour output will be parsed and type-checked according to the provided schema instance, so make sure all fields in your output match the schema exactly and there are no trailing commas!\n\nHere is the JSON Schema instance your output must adhere to. Include the enclosing markdown codeblock:\n\\`\\`\\`json\n${JSON.stringify(zodToJsonSchema(this.schema))}\n\\`\\`\\`\n`;\n    }\n    async parse(text) {\n        try {\n            const json = text.includes(\"```\")\n                ? text.trim().split(/```(?:json)?/)[1]\n                : text.trim();\n            return this.schema.parseAsync(JSON.parse(json));\n        }\n        catch (e) {\n            throw new OutputParserException(`Failed to parse. Text: \"${text}\". Error: ${e}`, text);\n        }\n    }\n}\nexport class JsonMarkdownStructuredOutputParser extends StructuredOutputParser {\n    getFormatInstructions(options) {\n        const interpolationDepth = options?.interpolationDepth ?? 1;\n        if (interpolationDepth < 1) {\n            throw new Error(\"f string interpolation depth must be at least 1\");\n        }\n        return `Return a markdown code snippet with a JSON object formatted to look like:\\n\\`\\`\\`json\\n${this._schemaToInstruction(zodToJsonSchema(this.schema))\n            .replaceAll(\"{\", \"{\".repeat(interpolationDepth))\n            .replaceAll(\"}\", \"}\".repeat(interpolationDepth))}\\n\\`\\`\\``;\n    }\n    _schemaToInstruction(schemaInput, indent = 2) {\n        const schema = schemaInput;\n        if (\"type\" in schema) {\n            let nullable = false;\n            let type;\n            if (Array.isArray(schema.type)) {\n                const nullIdx = schema.type.findIndex((type) => type === \"null\");\n                if (nullIdx !== -1) {\n                    nullable = true;\n                    schema.type.splice(nullIdx, 1);\n                }\n                type = schema.type.join(\" | \");\n            }\n            else {\n                type = schema.type;\n            }\n            if (schema.type === \"object\" && schema.properties) {\n                const description = schema.description\n                    ? ` // ${schema.description}`\n                    : \"\";\n                const properties = Object.entries(schema.properties)\n                    .map(([key, value]) => {\n                    const isOptional = schema.required?.includes(key)\n                        ? \"\"\n                        : \" (optional)\";\n                    return `${\" \".repeat(indent)}\"${key}\": ${this._schemaToInstruction(value, indent + 2)}${isOptional}`;\n                })\n                    .join(\"\\n\");\n                return `{\\n${properties}\\n${\" \".repeat(indent - 2)}}${description}`;\n            }\n            if (schema.type === \"array\" && schema.items) {\n                const description = schema.description\n                    ? ` // ${schema.description}`\n                    : \"\";\n                return `array[\\n${\" \".repeat(indent)}${this._schemaToInstruction(schema.items, indent + 2)}\\n${\" \".repeat(indent - 2)}] ${description}`;\n            }\n            const isNullable = nullable ? \" (nullable)\" : \"\";\n            const description = schema.description ? ` // ${schema.description}` : \"\";\n            return `${type}${description}${isNullable}`;\n        }\n        if (\"anyOf\" in schema) {\n            return schema.anyOf\n                .map((s) => this._schemaToInstruction(s, indent))\n                .join(`\\n${\" \".repeat(indent - 2)}`);\n        }\n        throw new Error(\"unsupported schema type\");\n    }\n    static fromZodSchema(schema) {\n        return new this(schema);\n    }\n    static fromNamesAndDescriptions(schemas) {\n        const zodSchema = z.object(Object.fromEntries(Object.entries(schemas).map(([name, description]) => [name, z.string().describe(description)])));\n        return new this(zodSchema);\n    }\n}\nexport class AsymmetricStructuredOutputParser extends BaseOutputParser {\n    constructor({ inputSchema }) {\n        super(...arguments);\n        Object.defineProperty(this, \"structuredInputParser\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.structuredInputParser = new JsonMarkdownStructuredOutputParser(inputSchema);\n    }\n    async parse(text) {\n        let parsedInput;\n        try {\n            parsedInput = await this.structuredInputParser.parse(text);\n        }\n        catch (e) {\n            throw new OutputParserException(`Failed to parse. Text: \"${text}\". Error: ${e}`, text);\n        }\n        return this.outputProcessor(parsedInput);\n    }\n    getFormatInstructions() {\n        return this.structuredInputParser.getFormatInstructions();\n    }\n}\n", "import { JsonMarkdownStructuredOutputParser } from \"./structured.js\";\nimport { OutputParserException } from \"../schema/output_parser.js\";\nexport class RouterOutputParser extends JsonMarkdownStructuredOutputParser {\n    constructor(schema, options) {\n        super(schema);\n        Object.defineProperty(this, \"defaultDestination\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"DEFAULT\"\n        });\n        this.defaultDestination =\n            options?.defaultDestination ?? this.defaultDestination;\n    }\n    async parse(text) {\n        try {\n            const parsedText = await super.parse(text);\n            if (parsedText.destination?.toLowerCase() ===\n                this.defaultDestination.toLowerCase()) {\n                parsedText.destination = null;\n            }\n            return parsedText;\n        }\n        catch (e) {\n            throw new OutputParserException(`Failed to parse. Text: \"${text}\". Error: ${e}`, text);\n        }\n    }\n}\n", "import { z } from \"zod\";\nimport { MultiRouteChain } from \"./multi_route.js\";\nimport { interpolateFString } from \"../../prompts/template.js\";\nimport { PromptTemplate } from \"../../prompts/prompt.js\";\nimport { LLMRouterChain } from \"./llm_router.js\";\nimport { ConversationChain, DEFAULT_TEMPLATE, } from \"../../chains/conversation.js\";\nimport { STRUCTURED_MULTI_RETRIEVAL_ROUTER_TEMPLATE } from \"./multi_retrieval_prompt.js\";\nimport { zipEntries } from \"./utils.js\";\nimport { RetrievalQAChain, } from \"../../chains/retrieval_qa.js\";\nimport { RouterOutputParser } from \"../../output_parsers/router.js\";\nexport class MultiRetrievalQAChain extends MultiRouteChain {\n    get outputKeys() {\n        return [\"result\"];\n    }\n    /**\n     * @deprecated Use `fromRetrieversAndPrompts` instead\n     */\n    static fromRetrievers(llm, retrieverNames, retrieverDescriptions, retrievers, retrieverPrompts, defaults, options) {\n        return MultiRetrievalQAChain.fromLLMAndRetrievers(llm, {\n            retrieverNames,\n            retrieverDescriptions,\n            retrievers,\n            retrieverPrompts,\n            defaults,\n            multiRetrievalChainOpts: options,\n        });\n    }\n    static fromLLMAndRetrievers(llm, { retrieverNames, retrieverDescriptions, retrievers, retrieverPrompts, defaults, multiRetrievalChainOpts, retrievalQAChainOpts, }) {\n        const { defaultRetriever, defaultPrompt, defaultChain } = defaults ?? {};\n        if (defaultPrompt && !defaultRetriever) {\n            throw new Error(\"`default_retriever` must be specified if `default_prompt` is \\nprovided. Received only `default_prompt`.\");\n        }\n        const destinations = zipEntries(retrieverNames, retrieverDescriptions).map(([name, desc]) => `${name}: ${desc}`);\n        const structuredOutputParserSchema = z.object({\n            destination: z\n                .string()\n                .optional()\n                .describe('name of the question answering system to use or \"DEFAULT\"'),\n            next_inputs: z\n                .object({\n                query: z\n                    .string()\n                    .describe(\"a potentially modified version of the original input\"),\n            })\n                .describe(\"input to be fed to the next model\"),\n        });\n        const outputParser = new RouterOutputParser(structuredOutputParserSchema);\n        const destinationsStr = destinations.join(\"\\n\");\n        const routerTemplate = interpolateFString(STRUCTURED_MULTI_RETRIEVAL_ROUTER_TEMPLATE(outputParser.getFormatInstructions({ interpolationDepth: 4 })), {\n            destinations: destinationsStr,\n        });\n        const routerPrompt = new PromptTemplate({\n            template: routerTemplate,\n            inputVariables: [\"input\"],\n            outputParser,\n        });\n        const routerChain = LLMRouterChain.fromLLM(llm, routerPrompt);\n        const prompts = retrieverPrompts ?? retrievers.map(() => null);\n        const destinationChains = zipEntries(retrieverNames, retrievers, prompts).reduce((acc, [name, retriever, prompt]) => {\n            const opt = retrievalQAChainOpts ?? {};\n            if (prompt) {\n                opt.prompt = prompt;\n            }\n            acc[name] = RetrievalQAChain.fromLLM(llm, retriever, opt);\n            return acc;\n        }, {});\n        let _defaultChain;\n        if (defaultChain) {\n            _defaultChain = defaultChain;\n        }\n        else if (defaultRetriever) {\n            _defaultChain = RetrievalQAChain.fromLLM(llm, defaultRetriever, {\n                ...retrievalQAChainOpts,\n                prompt: defaultPrompt,\n            });\n        }\n        else {\n            const promptTemplate = DEFAULT_TEMPLATE.replace(\"input\", \"query\");\n            const prompt = new PromptTemplate({\n                template: promptTemplate,\n                inputVariables: [\"history\", \"query\"],\n            });\n            _defaultChain = new ConversationChain({\n                llm,\n                prompt,\n                outputKey: \"result\",\n            });\n        }\n        return new MultiRetrievalQAChain({\n            ...multiRetrievalChainOpts,\n            routerChain,\n            destinationChains,\n            defaultChain: _defaultChain,\n        });\n    }\n    _chainType() {\n        return \"multi_retrieval_qa_chain\";\n    }\n}\n", "import { BaseChain } from \"./base.js\";\nexport class TransformChain extends BaseChain {\n    _chainType() {\n        return \"transform\";\n    }\n    get inputKeys() {\n        return this.inputVariables;\n    }\n    get outputKeys() {\n        return this.outputVariables;\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"transform\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"inputVariables\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputVariables\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.transform = fields.transform;\n        this.inputVariables = fields.inputVariables;\n        this.outputVariables = fields.outputVariables;\n    }\n    async _call(values, runManager) {\n        return this.transform(values, runManager?.getChild(\"transform\"));\n    }\n}\n", "import { zodToJsonSchema } from \"zod-to-json-schema\";\nimport { PromptTemplate } from \"../../prompts/prompt.js\";\nimport { JsonKeyOutputFunctionsParser, } from \"../../output_parsers/openai_functions.js\";\nimport { LLMChain } from \"../llm_chain.js\";\nfunction getExtractionFunctions(schema) {\n    return [\n        {\n            name: \"information_extraction\",\n            description: \"Extracts the relevant information from the passage.\",\n            parameters: {\n                type: \"object\",\n                properties: {\n                    info: {\n                        type: \"array\",\n                        items: {\n                            type: schema.type,\n                            properties: schema.properties,\n                            required: schema.required,\n                        },\n                    },\n                },\n                required: [\"info\"],\n            },\n        },\n    ];\n}\nconst _EXTRACTION_TEMPLATE = `Extract and save the relevant entities mentioned in the following passage together with their properties.\n\nPassage:\n{input}\n`;\nexport function createExtractionChain(schema, llm) {\n    const functions = getExtractionFunctions(schema);\n    const prompt = PromptTemplate.fromTemplate(_EXTRACTION_TEMPLATE);\n    const outputParser = new JsonKeyOutputFunctionsParser({ attrName: \"info\" });\n    return new LLMChain({\n        llm,\n        prompt,\n        llmKwargs: { functions },\n        outputParser,\n        tags: [\"openai_functions\", \"extraction\"],\n    });\n}\nexport function createExtractionChainFromZod(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nschema, llm) {\n    return createExtractionChain(zodToJsonSchema(schema), llm);\n}\n", "import { BaseLLMOutputParser } from \"../schema/output_parser.js\";\nexport class OutputFunctionsParser extends BaseLLMOutputParser {\n    constructor(config) {\n        super();\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"chains\", \"openai_functions\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"argsOnly\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        this.argsOnly = config?.argsOnly ?? this.argsOnly;\n    }\n    async parseResult(generations) {\n        if (\"message\" in generations[0]) {\n            const gen = generations[0];\n            const functionCall = gen.message.additional_kwargs.function_call;\n            if (!functionCall) {\n                throw new Error(`No function_call in message ${JSON.stringify(generations)}`);\n            }\n            if (!functionCall.arguments) {\n                throw new Error(`No arguments in function_call ${JSON.stringify(generations)}`);\n            }\n            if (this.argsOnly) {\n                return functionCall.arguments;\n            }\n            return JSON.stringify(functionCall);\n        }\n        else {\n            throw new Error(`No message in generations ${JSON.stringify(generations)}`);\n        }\n    }\n}\nexport class JsonOutputFunctionsParser extends BaseLLMOutputParser {\n    constructor(config) {\n        super();\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"chains\", \"openai_functions\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"outputParser\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"argsOnly\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        this.argsOnly = config?.argsOnly ?? this.argsOnly;\n        this.outputParser = new OutputFunctionsParser(config);\n    }\n    async parseResult(generations) {\n        const result = await this.outputParser.parseResult(generations);\n        if (!result) {\n            throw new Error(`No result from \"OutputFunctionsParser\" ${JSON.stringify(generations)}`);\n        }\n        const parsedResult = JSON.parse(result);\n        if (this.argsOnly) {\n            return parsedResult;\n        }\n        parsedResult.arguments = JSON.parse(parsedResult.arguments);\n        return parsedResult;\n    }\n}\nexport class JsonKeyOutputFunctionsParser extends BaseLLMOutputParser {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"chains\", \"openai_functions\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"outputParser\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new JsonOutputFunctionsParser()\n        });\n        Object.defineProperty(this, \"attrName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.attrName = fields.attrName;\n    }\n    async parseResult(generations) {\n        const result = await this.outputParser.parseResult(generations);\n        return result[this.attrName];\n    }\n}\n", "import { zodToJsonSchema } from \"zod-to-json-schema\";\nimport { PromptTemplate } from \"../../prompts/prompt.js\";\nimport { JsonOutputFunctionsParser, } from \"../../output_parsers/openai_functions.js\";\nimport { LLMChain } from \"../llm_chain.js\";\nfunction getTaggingFunctions(schema) {\n    return [\n        {\n            name: \"information_extraction\",\n            description: \"Extracts the relevant information from the passage.\",\n            parameters: schema,\n        },\n    ];\n}\nconst TAGGING_TEMPLATE = `Extract the desired information from the following passage.\n\nPassage:\n{input}\n`;\nexport function createTaggingChain(schema, llm, options = {}) {\n    const { prompt = PromptTemplate.fromTemplate(TAGGING_TEMPLATE), ...rest } = options;\n    const functions = getTaggingFunctions(schema);\n    const outputParser = new JsonOutputFunctionsParser();\n    return new LLMChain({\n        llm,\n        prompt,\n        llmKwargs: { functions },\n        outputParser,\n        tags: [\"openai_functions\", \"tagging\"],\n        ...rest,\n    });\n}\nexport function createTaggingChainFromZod(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nschema, llm, options) {\n    return createTaggingChain(zodToJsonSchema(schema), llm, options);\n}\n", "\n/*! js-yaml 4.1.0 https://github.com/nodeca/js-yaml @license MIT */\nfunction isNothing(subject) {\n  return (typeof subject === 'undefined') || (subject === null);\n}\n\n\nfunction isObject(subject) {\n  return (typeof subject === 'object') && (subject !== null);\n}\n\n\nfunction toArray(sequence) {\n  if (Array.isArray(sequence)) return sequence;\n  else if (isNothing(sequence)) return [];\n\n  return [ sequence ];\n}\n\n\nfunction extend(target, source) {\n  var index, length, key, sourceKeys;\n\n  if (source) {\n    sourceKeys = Object.keys(source);\n\n    for (index = 0, length = sourceKeys.length; index < length; index += 1) {\n      key = sourceKeys[index];\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\n\nfunction repeat(string, count) {\n  var result = '', cycle;\n\n  for (cycle = 0; cycle < count; cycle += 1) {\n    result += string;\n  }\n\n  return result;\n}\n\n\nfunction isNegativeZero(number) {\n  return (number === 0) && (Number.NEGATIVE_INFINITY === 1 / number);\n}\n\n\nvar isNothing_1      = isNothing;\nvar isObject_1       = isObject;\nvar toArray_1        = toArray;\nvar repeat_1         = repeat;\nvar isNegativeZero_1 = isNegativeZero;\nvar extend_1         = extend;\n\nvar common = {\n\tisNothing: isNothing_1,\n\tisObject: isObject_1,\n\ttoArray: toArray_1,\n\trepeat: repeat_1,\n\tisNegativeZero: isNegativeZero_1,\n\textend: extend_1\n};\n\n// YAML error class. http://stackoverflow.com/questions/8458984\n\n\nfunction formatError(exception, compact) {\n  var where = '', message = exception.reason || '(unknown reason)';\n\n  if (!exception.mark) return message;\n\n  if (exception.mark.name) {\n    where += 'in \"' + exception.mark.name + '\" ';\n  }\n\n  where += '(' + (exception.mark.line + 1) + ':' + (exception.mark.column + 1) + ')';\n\n  if (!compact && exception.mark.snippet) {\n    where += '\\n\\n' + exception.mark.snippet;\n  }\n\n  return message + ' ' + where;\n}\n\n\nfunction YAMLException$1(reason, mark) {\n  // Super constructor\n  Error.call(this);\n\n  this.name = 'YAMLException';\n  this.reason = reason;\n  this.mark = mark;\n  this.message = formatError(this, false);\n\n  // Include stack trace in error object\n  if (Error.captureStackTrace) {\n    // Chrome and NodeJS\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    // FF, IE 10+ and Safari 6+. Fallback for others\n    this.stack = (new Error()).stack || '';\n  }\n}\n\n\n// Inherit from Error\nYAMLException$1.prototype = Object.create(Error.prototype);\nYAMLException$1.prototype.constructor = YAMLException$1;\n\n\nYAMLException$1.prototype.toString = function toString(compact) {\n  return this.name + ': ' + formatError(this, compact);\n};\n\n\nvar exception = YAMLException$1;\n\n// get snippet for a single line, respecting maxLength\nfunction getLine(buffer, lineStart, lineEnd, position, maxLineLength) {\n  var head = '';\n  var tail = '';\n  var maxHalfLength = Math.floor(maxLineLength / 2) - 1;\n\n  if (position - lineStart > maxHalfLength) {\n    head = ' ... ';\n    lineStart = position - maxHalfLength + head.length;\n  }\n\n  if (lineEnd - position > maxHalfLength) {\n    tail = ' ...';\n    lineEnd = position + maxHalfLength - tail.length;\n  }\n\n  return {\n    str: head + buffer.slice(lineStart, lineEnd).replace(/\\t/g, '\u2192') + tail,\n    pos: position - lineStart + head.length // relative position\n  };\n}\n\n\nfunction padStart(string, max) {\n  return common.repeat(' ', max - string.length) + string;\n}\n\n\nfunction makeSnippet(mark, options) {\n  options = Object.create(options || null);\n\n  if (!mark.buffer) return null;\n\n  if (!options.maxLength) options.maxLength = 79;\n  if (typeof options.indent      !== 'number') options.indent      = 1;\n  if (typeof options.linesBefore !== 'number') options.linesBefore = 3;\n  if (typeof options.linesAfter  !== 'number') options.linesAfter  = 2;\n\n  var re = /\\r?\\n|\\r|\\0/g;\n  var lineStarts = [ 0 ];\n  var lineEnds = [];\n  var match;\n  var foundLineNo = -1;\n\n  while ((match = re.exec(mark.buffer))) {\n    lineEnds.push(match.index);\n    lineStarts.push(match.index + match[0].length);\n\n    if (mark.position <= match.index && foundLineNo < 0) {\n      foundLineNo = lineStarts.length - 2;\n    }\n  }\n\n  if (foundLineNo < 0) foundLineNo = lineStarts.length - 1;\n\n  var result = '', i, line;\n  var lineNoLength = Math.min(mark.line + options.linesAfter, lineEnds.length).toString().length;\n  var maxLineLength = options.maxLength - (options.indent + lineNoLength + 3);\n\n  for (i = 1; i <= options.linesBefore; i++) {\n    if (foundLineNo - i < 0) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo - i],\n      lineEnds[foundLineNo - i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo - i]),\n      maxLineLength\n    );\n    result = common.repeat(' ', options.indent) + padStart((mark.line - i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n' + result;\n  }\n\n  line = getLine(mark.buffer, lineStarts[foundLineNo], lineEnds[foundLineNo], mark.position, maxLineLength);\n  result += common.repeat(' ', options.indent) + padStart((mark.line + 1).toString(), lineNoLength) +\n    ' | ' + line.str + '\\n';\n  result += common.repeat('-', options.indent + lineNoLength + 3 + line.pos) + '^' + '\\n';\n\n  for (i = 1; i <= options.linesAfter; i++) {\n    if (foundLineNo + i >= lineEnds.length) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo + i],\n      lineEnds[foundLineNo + i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo + i]),\n      maxLineLength\n    );\n    result += common.repeat(' ', options.indent) + padStart((mark.line + i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n';\n  }\n\n  return result.replace(/\\n$/, '');\n}\n\n\nvar snippet = makeSnippet;\n\nvar TYPE_CONSTRUCTOR_OPTIONS = [\n  'kind',\n  'multi',\n  'resolve',\n  'construct',\n  'instanceOf',\n  'predicate',\n  'represent',\n  'representName',\n  'defaultStyle',\n  'styleAliases'\n];\n\nvar YAML_NODE_KINDS = [\n  'scalar',\n  'sequence',\n  'mapping'\n];\n\nfunction compileStyleAliases(map) {\n  var result = {};\n\n  if (map !== null) {\n    Object.keys(map).forEach(function (style) {\n      map[style].forEach(function (alias) {\n        result[String(alias)] = style;\n      });\n    });\n  }\n\n  return result;\n}\n\nfunction Type$1(tag, options) {\n  options = options || {};\n\n  Object.keys(options).forEach(function (name) {\n    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n      throw new exception('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n    }\n  });\n\n  // TODO: Add tag format check.\n  this.options       = options; // keep original options in case user wants to extend this type later\n  this.tag           = tag;\n  this.kind          = options['kind']          || null;\n  this.resolve       = options['resolve']       || function () { return true; };\n  this.construct     = options['construct']     || function (data) { return data; };\n  this.instanceOf    = options['instanceOf']    || null;\n  this.predicate     = options['predicate']     || null;\n  this.represent     = options['represent']     || null;\n  this.representName = options['representName'] || null;\n  this.defaultStyle  = options['defaultStyle']  || null;\n  this.multi         = options['multi']         || false;\n  this.styleAliases  = compileStyleAliases(options['styleAliases'] || null);\n\n  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n    throw new exception('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n  }\n}\n\nvar type = Type$1;\n\n/*eslint-disable max-len*/\n\n\n\n\n\nfunction compileList(schema, name) {\n  var result = [];\n\n  schema[name].forEach(function (currentType) {\n    var newIndex = result.length;\n\n    result.forEach(function (previousType, previousIndex) {\n      if (previousType.tag === currentType.tag &&\n          previousType.kind === currentType.kind &&\n          previousType.multi === currentType.multi) {\n\n        newIndex = previousIndex;\n      }\n    });\n\n    result[newIndex] = currentType;\n  });\n\n  return result;\n}\n\n\nfunction compileMap(/* lists... */) {\n  var result = {\n        scalar: {},\n        sequence: {},\n        mapping: {},\n        fallback: {},\n        multi: {\n          scalar: [],\n          sequence: [],\n          mapping: [],\n          fallback: []\n        }\n      }, index, length;\n\n  function collectType(type) {\n    if (type.multi) {\n      result.multi[type.kind].push(type);\n      result.multi['fallback'].push(type);\n    } else {\n      result[type.kind][type.tag] = result['fallback'][type.tag] = type;\n    }\n  }\n\n  for (index = 0, length = arguments.length; index < length; index += 1) {\n    arguments[index].forEach(collectType);\n  }\n  return result;\n}\n\n\nfunction Schema$1(definition) {\n  return this.extend(definition);\n}\n\n\nSchema$1.prototype.extend = function extend(definition) {\n  var implicit = [];\n  var explicit = [];\n\n  if (definition instanceof type) {\n    // Schema.extend(type)\n    explicit.push(definition);\n\n  } else if (Array.isArray(definition)) {\n    // Schema.extend([ type1, type2, ... ])\n    explicit = explicit.concat(definition);\n\n  } else if (definition && (Array.isArray(definition.implicit) || Array.isArray(definition.explicit))) {\n    // Schema.extend({ explicit: [ type1, type2, ... ], implicit: [ type1, type2, ... ] })\n    if (definition.implicit) implicit = implicit.concat(definition.implicit);\n    if (definition.explicit) explicit = explicit.concat(definition.explicit);\n\n  } else {\n    throw new exception('Schema.extend argument should be a Type, [ Type ], ' +\n      'or a schema definition ({ implicit: [...], explicit: [...] })');\n  }\n\n  implicit.forEach(function (type$1) {\n    if (!(type$1 instanceof type)) {\n      throw new exception('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n\n    if (type$1.loadKind && type$1.loadKind !== 'scalar') {\n      throw new exception('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');\n    }\n\n    if (type$1.multi) {\n      throw new exception('There is a multi type in the implicit list of a schema. Multi tags can only be listed as explicit.');\n    }\n  });\n\n  explicit.forEach(function (type$1) {\n    if (!(type$1 instanceof type)) {\n      throw new exception('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n  });\n\n  var result = Object.create(Schema$1.prototype);\n\n  result.implicit = (this.implicit || []).concat(implicit);\n  result.explicit = (this.explicit || []).concat(explicit);\n\n  result.compiledImplicit = compileList(result, 'implicit');\n  result.compiledExplicit = compileList(result, 'explicit');\n  result.compiledTypeMap  = compileMap(result.compiledImplicit, result.compiledExplicit);\n\n  return result;\n};\n\n\nvar schema = Schema$1;\n\nvar str = new type('tag:yaml.org,2002:str', {\n  kind: 'scalar',\n  construct: function (data) { return data !== null ? data : ''; }\n});\n\nvar seq = new type('tag:yaml.org,2002:seq', {\n  kind: 'sequence',\n  construct: function (data) { return data !== null ? data : []; }\n});\n\nvar map = new type('tag:yaml.org,2002:map', {\n  kind: 'mapping',\n  construct: function (data) { return data !== null ? data : {}; }\n});\n\nvar failsafe = new schema({\n  explicit: [\n    str,\n    seq,\n    map\n  ]\n});\n\nfunction resolveYamlNull(data) {\n  if (data === null) return true;\n\n  var max = data.length;\n\n  return (max === 1 && data === '~') ||\n         (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));\n}\n\nfunction constructYamlNull() {\n  return null;\n}\n\nfunction isNull(object) {\n  return object === null;\n}\n\nvar _null = new type('tag:yaml.org,2002:null', {\n  kind: 'scalar',\n  resolve: resolveYamlNull,\n  construct: constructYamlNull,\n  predicate: isNull,\n  represent: {\n    canonical: function () { return '~';    },\n    lowercase: function () { return 'null'; },\n    uppercase: function () { return 'NULL'; },\n    camelcase: function () { return 'Null'; },\n    empty:     function () { return '';     }\n  },\n  defaultStyle: 'lowercase'\n});\n\nfunction resolveYamlBoolean(data) {\n  if (data === null) return false;\n\n  var max = data.length;\n\n  return (max === 4 && (data === 'true' || data === 'True' || data === 'TRUE')) ||\n         (max === 5 && (data === 'false' || data === 'False' || data === 'FALSE'));\n}\n\nfunction constructYamlBoolean(data) {\n  return data === 'true' ||\n         data === 'True' ||\n         data === 'TRUE';\n}\n\nfunction isBoolean(object) {\n  return Object.prototype.toString.call(object) === '[object Boolean]';\n}\n\nvar bool = new type('tag:yaml.org,2002:bool', {\n  kind: 'scalar',\n  resolve: resolveYamlBoolean,\n  construct: constructYamlBoolean,\n  predicate: isBoolean,\n  represent: {\n    lowercase: function (object) { return object ? 'true' : 'false'; },\n    uppercase: function (object) { return object ? 'TRUE' : 'FALSE'; },\n    camelcase: function (object) { return object ? 'True' : 'False'; }\n  },\n  defaultStyle: 'lowercase'\n});\n\nfunction isHexCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||\n         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||\n         ((0x61/* a */ <= c) && (c <= 0x66/* f */));\n}\n\nfunction isOctCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));\n}\n\nfunction isDecCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));\n}\n\nfunction resolveYamlInteger(data) {\n  if (data === null) return false;\n\n  var max = data.length,\n      index = 0,\n      hasDigits = false,\n      ch;\n\n  if (!max) return false;\n\n  ch = data[index];\n\n  // sign\n  if (ch === '-' || ch === '+') {\n    ch = data[++index];\n  }\n\n  if (ch === '0') {\n    // 0\n    if (index + 1 === max) return true;\n    ch = data[++index];\n\n    // base 2, base 8, base 16\n\n    if (ch === 'b') {\n      // base 2\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (ch !== '0' && ch !== '1') return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'x') {\n      // base 16\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isHexCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'o') {\n      // base 8\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isOctCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n  }\n\n  // base 10 (except 0)\n\n  // value should not start with `_`;\n  if (ch === '_') return false;\n\n  for (; index < max; index++) {\n    ch = data[index];\n    if (ch === '_') continue;\n    if (!isDecCode(data.charCodeAt(index))) {\n      return false;\n    }\n    hasDigits = true;\n  }\n\n  // Should have digits and should not end with `_`\n  if (!hasDigits || ch === '_') return false;\n\n  return true;\n}\n\nfunction constructYamlInteger(data) {\n  var value = data, sign = 1, ch;\n\n  if (value.indexOf('_') !== -1) {\n    value = value.replace(/_/g, '');\n  }\n\n  ch = value[0];\n\n  if (ch === '-' || ch === '+') {\n    if (ch === '-') sign = -1;\n    value = value.slice(1);\n    ch = value[0];\n  }\n\n  if (value === '0') return 0;\n\n  if (ch === '0') {\n    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n    if (value[1] === 'x') return sign * parseInt(value.slice(2), 16);\n    if (value[1] === 'o') return sign * parseInt(value.slice(2), 8);\n  }\n\n  return sign * parseInt(value, 10);\n}\n\nfunction isInteger(object) {\n  return (Object.prototype.toString.call(object)) === '[object Number]' &&\n         (object % 1 === 0 && !common.isNegativeZero(object));\n}\n\nvar int = new type('tag:yaml.org,2002:int', {\n  kind: 'scalar',\n  resolve: resolveYamlInteger,\n  construct: constructYamlInteger,\n  predicate: isInteger,\n  represent: {\n    binary:      function (obj) { return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1); },\n    octal:       function (obj) { return obj >= 0 ? '0o'  + obj.toString(8) : '-0o'  + obj.toString(8).slice(1); },\n    decimal:     function (obj) { return obj.toString(10); },\n    /* eslint-disable max-len */\n    hexadecimal: function (obj) { return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() :  '-0x' + obj.toString(16).toUpperCase().slice(1); }\n  },\n  defaultStyle: 'decimal',\n  styleAliases: {\n    binary:      [ 2,  'bin' ],\n    octal:       [ 8,  'oct' ],\n    decimal:     [ 10, 'dec' ],\n    hexadecimal: [ 16, 'hex' ]\n  }\n});\n\nvar YAML_FLOAT_PATTERN = new RegExp(\n  // 2.5e4, 2.5 and integers\n  '^(?:[-+]?(?:[0-9][0-9_]*)(?:\\\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' +\n  // .2e4, .2\n  // special case, seems not from spec\n  '|\\\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' +\n  // .inf\n  '|[-+]?\\\\.(?:inf|Inf|INF)' +\n  // .nan\n  '|\\\\.(?:nan|NaN|NAN))$');\n\nfunction resolveYamlFloat(data) {\n  if (data === null) return false;\n\n  if (!YAML_FLOAT_PATTERN.test(data) ||\n      // Quick hack to not allow integers end with `_`\n      // Probably should update regexp & check speed\n      data[data.length - 1] === '_') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlFloat(data) {\n  var value, sign;\n\n  value  = data.replace(/_/g, '').toLowerCase();\n  sign   = value[0] === '-' ? -1 : 1;\n\n  if ('+-'.indexOf(value[0]) >= 0) {\n    value = value.slice(1);\n  }\n\n  if (value === '.inf') {\n    return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n\n  } else if (value === '.nan') {\n    return NaN;\n  }\n  return sign * parseFloat(value, 10);\n}\n\n\nvar SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;\n\nfunction representYamlFloat(object, style) {\n  var res;\n\n  if (isNaN(object)) {\n    switch (style) {\n      case 'lowercase': return '.nan';\n      case 'uppercase': return '.NAN';\n      case 'camelcase': return '.NaN';\n    }\n  } else if (Number.POSITIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '.inf';\n      case 'uppercase': return '.INF';\n      case 'camelcase': return '.Inf';\n    }\n  } else if (Number.NEGATIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '-.inf';\n      case 'uppercase': return '-.INF';\n      case 'camelcase': return '-.Inf';\n    }\n  } else if (common.isNegativeZero(object)) {\n    return '-0.0';\n  }\n\n  res = object.toString(10);\n\n  // JS stringifier can build scientific format without dots: 5e-100,\n  // while YAML requres dot: 5.e-100. Fix it with simple hack\n\n  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;\n}\n\nfunction isFloat(object) {\n  return (Object.prototype.toString.call(object) === '[object Number]') &&\n         (object % 1 !== 0 || common.isNegativeZero(object));\n}\n\nvar float = new type('tag:yaml.org,2002:float', {\n  kind: 'scalar',\n  resolve: resolveYamlFloat,\n  construct: constructYamlFloat,\n  predicate: isFloat,\n  represent: representYamlFloat,\n  defaultStyle: 'lowercase'\n});\n\nvar json = failsafe.extend({\n  implicit: [\n    _null,\n    bool,\n    int,\n    float\n  ]\n});\n\nvar core = json;\n\nvar YAML_DATE_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9])'                    + // [2] month\n  '-([0-9][0-9])$');                   // [3] day\n\nvar YAML_TIMESTAMP_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9]?)'                   + // [2] month\n  '-([0-9][0-9]?)'                   + // [3] day\n  '(?:[Tt]|[ \\\\t]+)'                 + // ...\n  '([0-9][0-9]?)'                    + // [4] hour\n  ':([0-9][0-9])'                    + // [5] minute\n  ':([0-9][0-9])'                    + // [6] second\n  '(?:\\\\.([0-9]*))?'                 + // [7] fraction\n  '(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour\n  '(?::([0-9][0-9]))?))?$');           // [11] tz_minute\n\nfunction resolveYamlTimestamp(data) {\n  if (data === null) return false;\n  if (YAML_DATE_REGEXP.exec(data) !== null) return true;\n  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;\n  return false;\n}\n\nfunction constructYamlTimestamp(data) {\n  var match, year, month, day, hour, minute, second, fraction = 0,\n      delta = null, tz_hour, tz_minute, date;\n\n  match = YAML_DATE_REGEXP.exec(data);\n  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);\n\n  if (match === null) throw new Error('Date resolve error');\n\n  // match: [1] year [2] month [3] day\n\n  year = +(match[1]);\n  month = +(match[2]) - 1; // JS month starts with 0\n  day = +(match[3]);\n\n  if (!match[4]) { // no hour\n    return new Date(Date.UTC(year, month, day));\n  }\n\n  // match: [4] hour [5] minute [6] second [7] fraction\n\n  hour = +(match[4]);\n  minute = +(match[5]);\n  second = +(match[6]);\n\n  if (match[7]) {\n    fraction = match[7].slice(0, 3);\n    while (fraction.length < 3) { // milli-seconds\n      fraction += '0';\n    }\n    fraction = +fraction;\n  }\n\n  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute\n\n  if (match[9]) {\n    tz_hour = +(match[10]);\n    tz_minute = +(match[11] || 0);\n    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds\n    if (match[9] === '-') delta = -delta;\n  }\n\n  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n\n  if (delta) date.setTime(date.getTime() - delta);\n\n  return date;\n}\n\nfunction representYamlTimestamp(object /*, style*/) {\n  return object.toISOString();\n}\n\nvar timestamp = new type('tag:yaml.org,2002:timestamp', {\n  kind: 'scalar',\n  resolve: resolveYamlTimestamp,\n  construct: constructYamlTimestamp,\n  instanceOf: Date,\n  represent: representYamlTimestamp\n});\n\nfunction resolveYamlMerge(data) {\n  return data === '<<' || data === null;\n}\n\nvar merge = new type('tag:yaml.org,2002:merge', {\n  kind: 'scalar',\n  resolve: resolveYamlMerge\n});\n\n/*eslint-disable no-bitwise*/\n\n\n\n\n\n// [ 64, 65, 66 ] -> [ padding, CR, LF ]\nvar BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\n\\r';\n\n\nfunction resolveYamlBinary(data) {\n  if (data === null) return false;\n\n  var code, idx, bitlen = 0, max = data.length, map = BASE64_MAP;\n\n  // Convert one by one.\n  for (idx = 0; idx < max; idx++) {\n    code = map.indexOf(data.charAt(idx));\n\n    // Skip CR/LF\n    if (code > 64) continue;\n\n    // Fail on illegal characters\n    if (code < 0) return false;\n\n    bitlen += 6;\n  }\n\n  // If there are any bits left, source was corrupted\n  return (bitlen % 8) === 0;\n}\n\nfunction constructYamlBinary(data) {\n  var idx, tailbits,\n      input = data.replace(/[\\r\\n=]/g, ''), // remove CR/LF & padding to simplify scan\n      max = input.length,\n      map = BASE64_MAP,\n      bits = 0,\n      result = [];\n\n  // Collect by 6*4 bits (3 bytes)\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 4 === 0) && idx) {\n      result.push((bits >> 16) & 0xFF);\n      result.push((bits >> 8) & 0xFF);\n      result.push(bits & 0xFF);\n    }\n\n    bits = (bits << 6) | map.indexOf(input.charAt(idx));\n  }\n\n  // Dump tail\n\n  tailbits = (max % 4) * 6;\n\n  if (tailbits === 0) {\n    result.push((bits >> 16) & 0xFF);\n    result.push((bits >> 8) & 0xFF);\n    result.push(bits & 0xFF);\n  } else if (tailbits === 18) {\n    result.push((bits >> 10) & 0xFF);\n    result.push((bits >> 2) & 0xFF);\n  } else if (tailbits === 12) {\n    result.push((bits >> 4) & 0xFF);\n  }\n\n  return new Uint8Array(result);\n}\n\nfunction representYamlBinary(object /*, style*/) {\n  var result = '', bits = 0, idx, tail,\n      max = object.length,\n      map = BASE64_MAP;\n\n  // Convert every three bytes to 4 ASCII characters.\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 3 === 0) && idx) {\n      result += map[(bits >> 18) & 0x3F];\n      result += map[(bits >> 12) & 0x3F];\n      result += map[(bits >> 6) & 0x3F];\n      result += map[bits & 0x3F];\n    }\n\n    bits = (bits << 8) + object[idx];\n  }\n\n  // Dump tail\n\n  tail = max % 3;\n\n  if (tail === 0) {\n    result += map[(bits >> 18) & 0x3F];\n    result += map[(bits >> 12) & 0x3F];\n    result += map[(bits >> 6) & 0x3F];\n    result += map[bits & 0x3F];\n  } else if (tail === 2) {\n    result += map[(bits >> 10) & 0x3F];\n    result += map[(bits >> 4) & 0x3F];\n    result += map[(bits << 2) & 0x3F];\n    result += map[64];\n  } else if (tail === 1) {\n    result += map[(bits >> 2) & 0x3F];\n    result += map[(bits << 4) & 0x3F];\n    result += map[64];\n    result += map[64];\n  }\n\n  return result;\n}\n\nfunction isBinary(obj) {\n  return Object.prototype.toString.call(obj) ===  '[object Uint8Array]';\n}\n\nvar binary = new type('tag:yaml.org,2002:binary', {\n  kind: 'scalar',\n  resolve: resolveYamlBinary,\n  construct: constructYamlBinary,\n  predicate: isBinary,\n  represent: representYamlBinary\n});\n\nvar _hasOwnProperty$3 = Object.prototype.hasOwnProperty;\nvar _toString$2       = Object.prototype.toString;\n\nfunction resolveYamlOmap(data) {\n  if (data === null) return true;\n\n  var objectKeys = [], index, length, pair, pairKey, pairHasKey,\n      object = data;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n    pairHasKey = false;\n\n    if (_toString$2.call(pair) !== '[object Object]') return false;\n\n    for (pairKey in pair) {\n      if (_hasOwnProperty$3.call(pair, pairKey)) {\n        if (!pairHasKey) pairHasKey = true;\n        else return false;\n      }\n    }\n\n    if (!pairHasKey) return false;\n\n    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);\n    else return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlOmap(data) {\n  return data !== null ? data : [];\n}\n\nvar omap = new type('tag:yaml.org,2002:omap', {\n  kind: 'sequence',\n  resolve: resolveYamlOmap,\n  construct: constructYamlOmap\n});\n\nvar _toString$1 = Object.prototype.toString;\n\nfunction resolveYamlPairs(data) {\n  if (data === null) return true;\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    if (_toString$1.call(pair) !== '[object Object]') return false;\n\n    keys = Object.keys(pair);\n\n    if (keys.length !== 1) return false;\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return true;\n}\n\nfunction constructYamlPairs(data) {\n  if (data === null) return [];\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    keys = Object.keys(pair);\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return result;\n}\n\nvar pairs = new type('tag:yaml.org,2002:pairs', {\n  kind: 'sequence',\n  resolve: resolveYamlPairs,\n  construct: constructYamlPairs\n});\n\nvar _hasOwnProperty$2 = Object.prototype.hasOwnProperty;\n\nfunction resolveYamlSet(data) {\n  if (data === null) return true;\n\n  var key, object = data;\n\n  for (key in object) {\n    if (_hasOwnProperty$2.call(object, key)) {\n      if (object[key] !== null) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction constructYamlSet(data) {\n  return data !== null ? data : {};\n}\n\nvar set = new type('tag:yaml.org,2002:set', {\n  kind: 'mapping',\n  resolve: resolveYamlSet,\n  construct: constructYamlSet\n});\n\nvar _default = core.extend({\n  implicit: [\n    timestamp,\n    merge\n  ],\n  explicit: [\n    binary,\n    omap,\n    pairs,\n    set\n  ]\n});\n\n/*eslint-disable max-len,no-use-before-define*/\n\n\n\n\n\n\n\nvar _hasOwnProperty$1 = Object.prototype.hasOwnProperty;\n\n\nvar CONTEXT_FLOW_IN   = 1;\nvar CONTEXT_FLOW_OUT  = 2;\nvar CONTEXT_BLOCK_IN  = 3;\nvar CONTEXT_BLOCK_OUT = 4;\n\n\nvar CHOMPING_CLIP  = 1;\nvar CHOMPING_STRIP = 2;\nvar CHOMPING_KEEP  = 3;\n\n\nvar PATTERN_NON_PRINTABLE         = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nvar PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\nvar PATTERN_FLOW_INDICATORS       = /[,\\[\\]\\{\\}]/;\nvar PATTERN_TAG_HANDLE            = /^(?:!|!!|![a-z\\-]+!)$/i;\nvar PATTERN_TAG_URI               = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction is_EOL(c) {\n  return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);\n}\n\nfunction is_WHITE_SPACE(c) {\n  return (c === 0x09/* Tab */) || (c === 0x20/* Space */);\n}\n\nfunction is_WS_OR_EOL(c) {\n  return (c === 0x09/* Tab */) ||\n         (c === 0x20/* Space */) ||\n         (c === 0x0A/* LF */) ||\n         (c === 0x0D/* CR */);\n}\n\nfunction is_FLOW_INDICATOR(c) {\n  return c === 0x2C/* , */ ||\n         c === 0x5B/* [ */ ||\n         c === 0x5D/* ] */ ||\n         c === 0x7B/* { */ ||\n         c === 0x7D/* } */;\n}\n\nfunction fromHexCode(c) {\n  var lc;\n\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  /*eslint-disable no-bitwise*/\n  lc = c | 0x20;\n\n  if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {\n    return lc - 0x61 + 10;\n  }\n\n  return -1;\n}\n\nfunction escapedHexLen(c) {\n  if (c === 0x78/* x */) { return 2; }\n  if (c === 0x75/* u */) { return 4; }\n  if (c === 0x55/* U */) { return 8; }\n  return 0;\n}\n\nfunction fromDecimalCode(c) {\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  return -1;\n}\n\nfunction simpleEscapeSequence(c) {\n  /* eslint-disable indent */\n  return (c === 0x30/* 0 */) ? '\\x00' :\n        (c === 0x61/* a */) ? '\\x07' :\n        (c === 0x62/* b */) ? '\\x08' :\n        (c === 0x74/* t */) ? '\\x09' :\n        (c === 0x09/* Tab */) ? '\\x09' :\n        (c === 0x6E/* n */) ? '\\x0A' :\n        (c === 0x76/* v */) ? '\\x0B' :\n        (c === 0x66/* f */) ? '\\x0C' :\n        (c === 0x72/* r */) ? '\\x0D' :\n        (c === 0x65/* e */) ? '\\x1B' :\n        (c === 0x20/* Space */) ? ' ' :\n        (c === 0x22/* \" */) ? '\\x22' :\n        (c === 0x2F/* / */) ? '/' :\n        (c === 0x5C/* \\ */) ? '\\x5C' :\n        (c === 0x4E/* N */) ? '\\x85' :\n        (c === 0x5F/* _ */) ? '\\xA0' :\n        (c === 0x4C/* L */) ? '\\u2028' :\n        (c === 0x50/* P */) ? '\\u2029' : '';\n}\n\nfunction charFromCodepoint(c) {\n  if (c <= 0xFFFF) {\n    return String.fromCharCode(c);\n  }\n  // Encode UTF-16 surrogate pair\n  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n  return String.fromCharCode(\n    ((c - 0x010000) >> 10) + 0xD800,\n    ((c - 0x010000) & 0x03FF) + 0xDC00\n  );\n}\n\nvar simpleEscapeCheck = new Array(256); // integer, for fast access\nvar simpleEscapeMap = new Array(256);\nfor (var i = 0; i < 256; i++) {\n  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n  simpleEscapeMap[i] = simpleEscapeSequence(i);\n}\n\n\nfunction State$1(input, options) {\n  this.input = input;\n\n  this.filename  = options['filename']  || null;\n  this.schema    = options['schema']    || _default;\n  this.onWarning = options['onWarning'] || null;\n  // (Hidden) Remove? makes the loader to expect YAML 1.1 documents\n  // if such documents have no explicit %YAML directive\n  this.legacy    = options['legacy']    || false;\n\n  this.json      = options['json']      || false;\n  this.listener  = options['listener']  || null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.typeMap       = this.schema.compiledTypeMap;\n\n  this.length     = input.length;\n  this.position   = 0;\n  this.line       = 0;\n  this.lineStart  = 0;\n  this.lineIndent = 0;\n\n  // position of first leading tab in the current line,\n  // used to make sure there are no tabs in the indentation\n  this.firstTabInLine = -1;\n\n  this.documents = [];\n\n  /*\n  this.version;\n  this.checkLineBreaks;\n  this.tagMap;\n  this.anchorMap;\n  this.tag;\n  this.anchor;\n  this.kind;\n  this.result;*/\n\n}\n\n\nfunction generateError(state, message) {\n  var mark = {\n    name:     state.filename,\n    buffer:   state.input.slice(0, -1), // omit trailing \\0\n    position: state.position,\n    line:     state.line,\n    column:   state.position - state.lineStart\n  };\n\n  mark.snippet = snippet(mark);\n\n  return new exception(message, mark);\n}\n\nfunction throwError(state, message) {\n  throw generateError(state, message);\n}\n\nfunction throwWarning(state, message) {\n  if (state.onWarning) {\n    state.onWarning.call(null, generateError(state, message));\n  }\n}\n\n\nvar directiveHandlers = {\n\n  YAML: function handleYamlDirective(state, name, args) {\n\n    var match, major, minor;\n\n    if (state.version !== null) {\n      throwError(state, 'duplication of %YAML directive');\n    }\n\n    if (args.length !== 1) {\n      throwError(state, 'YAML directive accepts exactly one argument');\n    }\n\n    match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n\n    if (match === null) {\n      throwError(state, 'ill-formed argument of the YAML directive');\n    }\n\n    major = parseInt(match[1], 10);\n    minor = parseInt(match[2], 10);\n\n    if (major !== 1) {\n      throwError(state, 'unacceptable YAML version of the document');\n    }\n\n    state.version = args[0];\n    state.checkLineBreaks = (minor < 2);\n\n    if (minor !== 1 && minor !== 2) {\n      throwWarning(state, 'unsupported YAML version of the document');\n    }\n  },\n\n  TAG: function handleTagDirective(state, name, args) {\n\n    var handle, prefix;\n\n    if (args.length !== 2) {\n      throwError(state, 'TAG directive accepts exactly two arguments');\n    }\n\n    handle = args[0];\n    prefix = args[1];\n\n    if (!PATTERN_TAG_HANDLE.test(handle)) {\n      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n    }\n\n    if (_hasOwnProperty$1.call(state.tagMap, handle)) {\n      throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n    }\n\n    if (!PATTERN_TAG_URI.test(prefix)) {\n      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n    }\n\n    try {\n      prefix = decodeURIComponent(prefix);\n    } catch (err) {\n      throwError(state, 'tag prefix is malformed: ' + prefix);\n    }\n\n    state.tagMap[handle] = prefix;\n  }\n};\n\n\nfunction captureSegment(state, start, end, checkJson) {\n  var _position, _length, _character, _result;\n\n  if (start < end) {\n    _result = state.input.slice(start, end);\n\n    if (checkJson) {\n      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n        _character = _result.charCodeAt(_position);\n        if (!(_character === 0x09 ||\n              (0x20 <= _character && _character <= 0x10FFFF))) {\n          throwError(state, 'expected valid JSON character');\n        }\n      }\n    } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n      throwError(state, 'the stream contains non-printable characters');\n    }\n\n    state.result += _result;\n  }\n}\n\nfunction mergeMappings(state, destination, source, overridableKeys) {\n  var sourceKeys, key, index, quantity;\n\n  if (!common.isObject(source)) {\n    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n  }\n\n  sourceKeys = Object.keys(source);\n\n  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n    key = sourceKeys[index];\n\n    if (!_hasOwnProperty$1.call(destination, key)) {\n      destination[key] = source[key];\n      overridableKeys[key] = true;\n    }\n  }\n}\n\nfunction storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode,\n  startLine, startLineStart, startPos) {\n\n  var index, quantity;\n\n  // The output is a plain object here, so keys can only be strings.\n  // We need to convert keyNode to a string, but doing so can hang the process\n  // (deeply nested arrays that explode exponentially using aliases).\n  if (Array.isArray(keyNode)) {\n    keyNode = Array.prototype.slice.call(keyNode);\n\n    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {\n      if (Array.isArray(keyNode[index])) {\n        throwError(state, 'nested arrays are not supported inside keys');\n      }\n\n      if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {\n        keyNode[index] = '[object Object]';\n      }\n    }\n  }\n\n  // Avoid code execution in load() via toString property\n  // (still use its own toString for arrays, timestamps,\n  // and whatever user schema extensions happen to have @@toStringTag)\n  if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {\n    keyNode = '[object Object]';\n  }\n\n\n  keyNode = String(keyNode);\n\n  if (_result === null) {\n    _result = {};\n  }\n\n  if (keyTag === 'tag:yaml.org,2002:merge') {\n    if (Array.isArray(valueNode)) {\n      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n        mergeMappings(state, _result, valueNode[index], overridableKeys);\n      }\n    } else {\n      mergeMappings(state, _result, valueNode, overridableKeys);\n    }\n  } else {\n    if (!state.json &&\n        !_hasOwnProperty$1.call(overridableKeys, keyNode) &&\n        _hasOwnProperty$1.call(_result, keyNode)) {\n      state.line = startLine || state.line;\n      state.lineStart = startLineStart || state.lineStart;\n      state.position = startPos || state.position;\n      throwError(state, 'duplicated mapping key');\n    }\n\n    // used for this specific key only because Object.defineProperty is slow\n    if (keyNode === '__proto__') {\n      Object.defineProperty(_result, keyNode, {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: valueNode\n      });\n    } else {\n      _result[keyNode] = valueNode;\n    }\n    delete overridableKeys[keyNode];\n  }\n\n  return _result;\n}\n\nfunction readLineBreak(state) {\n  var ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x0A/* LF */) {\n    state.position++;\n  } else if (ch === 0x0D/* CR */) {\n    state.position++;\n    if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {\n      state.position++;\n    }\n  } else {\n    throwError(state, 'a line break is expected');\n  }\n\n  state.line += 1;\n  state.lineStart = state.position;\n  state.firstTabInLine = -1;\n}\n\nfunction skipSeparationSpace(state, allowComments, checkIndent) {\n  var lineBreaks = 0,\n      ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    while (is_WHITE_SPACE(ch)) {\n      if (ch === 0x09/* Tab */ && state.firstTabInLine === -1) {\n        state.firstTabInLine = state.position;\n      }\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (allowComments && ch === 0x23/* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);\n    }\n\n    if (is_EOL(ch)) {\n      readLineBreak(state);\n\n      ch = state.input.charCodeAt(state.position);\n      lineBreaks++;\n      state.lineIndent = 0;\n\n      while (ch === 0x20/* Space */) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n    } else {\n      break;\n    }\n  }\n\n  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n    throwWarning(state, 'deficient indentation');\n  }\n\n  return lineBreaks;\n}\n\nfunction testDocumentSeparator(state) {\n  var _position = state.position,\n      ch;\n\n  ch = state.input.charCodeAt(_position);\n\n  // Condition state.position === state.lineStart is tested\n  // in parent on each call, for efficiency. No needs to test here again.\n  if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&\n      ch === state.input.charCodeAt(_position + 1) &&\n      ch === state.input.charCodeAt(_position + 2)) {\n\n    _position += 3;\n\n    ch = state.input.charCodeAt(_position);\n\n    if (ch === 0 || is_WS_OR_EOL(ch)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction writeFoldedLines(state, count) {\n  if (count === 1) {\n    state.result += ' ';\n  } else if (count > 1) {\n    state.result += common.repeat('\\n', count - 1);\n  }\n}\n\n\nfunction readPlainScalar(state, nodeIndent, withinFlowCollection) {\n  var preceding,\n      following,\n      captureStart,\n      captureEnd,\n      hasPendingContent,\n      _line,\n      _lineStart,\n      _lineIndent,\n      _kind = state.kind,\n      _result = state.result,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (is_WS_OR_EOL(ch)      ||\n      is_FLOW_INDICATOR(ch) ||\n      ch === 0x23/* # */    ||\n      ch === 0x26/* & */    ||\n      ch === 0x2A/* * */    ||\n      ch === 0x21/* ! */    ||\n      ch === 0x7C/* | */    ||\n      ch === 0x3E/* > */    ||\n      ch === 0x27/* ' */    ||\n      ch === 0x22/* \" */    ||\n      ch === 0x25/* % */    ||\n      ch === 0x40/* @ */    ||\n      ch === 0x60/* ` */) {\n    return false;\n  }\n\n  if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (is_WS_OR_EOL(following) ||\n        withinFlowCollection && is_FLOW_INDICATOR(following)) {\n      return false;\n    }\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  captureStart = captureEnd = state.position;\n  hasPendingContent = false;\n\n  while (ch !== 0) {\n    if (ch === 0x3A/* : */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following) ||\n          withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        break;\n      }\n\n    } else if (ch === 0x23/* # */) {\n      preceding = state.input.charCodeAt(state.position - 1);\n\n      if (is_WS_OR_EOL(preceding)) {\n        break;\n      }\n\n    } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||\n               withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n      break;\n\n    } else if (is_EOL(ch)) {\n      _line = state.line;\n      _lineStart = state.lineStart;\n      _lineIndent = state.lineIndent;\n      skipSeparationSpace(state, false, -1);\n\n      if (state.lineIndent >= nodeIndent) {\n        hasPendingContent = true;\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      } else {\n        state.position = captureEnd;\n        state.line = _line;\n        state.lineStart = _lineStart;\n        state.lineIndent = _lineIndent;\n        break;\n      }\n    }\n\n    if (hasPendingContent) {\n      captureSegment(state, captureStart, captureEnd, false);\n      writeFoldedLines(state, state.line - _line);\n      captureStart = captureEnd = state.position;\n      hasPendingContent = false;\n    }\n\n    if (!is_WHITE_SPACE(ch)) {\n      captureEnd = state.position + 1;\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  captureSegment(state, captureStart, captureEnd, false);\n\n  if (state.result) {\n    return true;\n  }\n\n  state.kind = _kind;\n  state.result = _result;\n  return false;\n}\n\nfunction readSingleQuotedScalar(state, nodeIndent) {\n  var ch,\n      captureStart, captureEnd;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x27/* ' */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x27/* ' */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (ch === 0x27/* ' */) {\n        captureStart = state.position;\n        state.position++;\n        captureEnd = state.position;\n      } else {\n        return true;\n      }\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a single quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a single quoted scalar');\n}\n\nfunction readDoubleQuotedScalar(state, nodeIndent) {\n  var captureStart,\n      captureEnd,\n      hexLength,\n      hexResult,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x22/* \" */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x22/* \" */) {\n      captureSegment(state, captureStart, state.position, true);\n      state.position++;\n      return true;\n\n    } else if (ch === 0x5C/* \\ */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (is_EOL(ch)) {\n        skipSeparationSpace(state, false, nodeIndent);\n\n        // TODO: rework to inline fn with no type cast?\n      } else if (ch < 256 && simpleEscapeCheck[ch]) {\n        state.result += simpleEscapeMap[ch];\n        state.position++;\n\n      } else if ((tmp = escapedHexLen(ch)) > 0) {\n        hexLength = tmp;\n        hexResult = 0;\n\n        for (; hexLength > 0; hexLength--) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if ((tmp = fromHexCode(ch)) >= 0) {\n            hexResult = (hexResult << 4) + tmp;\n\n          } else {\n            throwError(state, 'expected hexadecimal character');\n          }\n        }\n\n        state.result += charFromCodepoint(hexResult);\n\n        state.position++;\n\n      } else {\n        throwError(state, 'unknown escape sequence');\n      }\n\n      captureStart = captureEnd = state.position;\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a double quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a double quoted scalar');\n}\n\nfunction readFlowCollection(state, nodeIndent) {\n  var readNext = true,\n      _line,\n      _lineStart,\n      _pos,\n      _tag     = state.tag,\n      _result,\n      _anchor  = state.anchor,\n      following,\n      terminator,\n      isPair,\n      isExplicitPair,\n      isMapping,\n      overridableKeys = Object.create(null),\n      keyNode,\n      keyTag,\n      valueNode,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x5B/* [ */) {\n    terminator = 0x5D;/* ] */\n    isMapping = false;\n    _result = [];\n  } else if (ch === 0x7B/* { */) {\n    terminator = 0x7D;/* } */\n    isMapping = true;\n    _result = {};\n  } else {\n    return false;\n  }\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  while (ch !== 0) {\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === terminator) {\n      state.position++;\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = isMapping ? 'mapping' : 'sequence';\n      state.result = _result;\n      return true;\n    } else if (!readNext) {\n      throwError(state, 'missed comma between flow collection entries');\n    } else if (ch === 0x2C/* , */) {\n      // \"flow collection entries can never be completely empty\", as per YAML 1.2, section 7.4\n      throwError(state, \"expected the node content, but found ','\");\n    }\n\n    keyTag = keyNode = valueNode = null;\n    isPair = isExplicitPair = false;\n\n    if (ch === 0x3F/* ? */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following)) {\n        isPair = isExplicitPair = true;\n        state.position++;\n        skipSeparationSpace(state, true, nodeIndent);\n      }\n    }\n\n    _line = state.line; // Save the current line.\n    _lineStart = state.lineStart;\n    _pos = state.position;\n    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n    keyTag = state.tag;\n    keyNode = state.result;\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {\n      isPair = true;\n      ch = state.input.charCodeAt(++state.position);\n      skipSeparationSpace(state, true, nodeIndent);\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      valueNode = state.result;\n    }\n\n    if (isMapping) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos);\n    } else if (isPair) {\n      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos));\n    } else {\n      _result.push(keyNode);\n    }\n\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x2C/* , */) {\n      readNext = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      readNext = false;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a flow collection');\n}\n\nfunction readBlockScalar(state, nodeIndent) {\n  var captureStart,\n      folding,\n      chomping       = CHOMPING_CLIP,\n      didReadContent = false,\n      detectedIndent = false,\n      textIndent     = nodeIndent,\n      emptyLines     = 0,\n      atMoreIndented = false,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x7C/* | */) {\n    folding = false;\n  } else if (ch === 0x3E/* > */) {\n    folding = true;\n  } else {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n\n  while (ch !== 0) {\n    ch = state.input.charCodeAt(++state.position);\n\n    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n      if (CHOMPING_CLIP === chomping) {\n        chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;\n      } else {\n        throwError(state, 'repeat of a chomping mode identifier');\n      }\n\n    } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n      if (tmp === 0) {\n        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n      } else if (!detectedIndent) {\n        textIndent = nodeIndent + tmp - 1;\n        detectedIndent = true;\n      } else {\n        throwError(state, 'repeat of an indentation width identifier');\n      }\n\n    } else {\n      break;\n    }\n  }\n\n  if (is_WHITE_SPACE(ch)) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (is_WHITE_SPACE(ch));\n\n    if (ch === 0x23/* # */) {\n      do { ch = state.input.charCodeAt(++state.position); }\n      while (!is_EOL(ch) && (ch !== 0));\n    }\n  }\n\n  while (ch !== 0) {\n    readLineBreak(state);\n    state.lineIndent = 0;\n\n    ch = state.input.charCodeAt(state.position);\n\n    while ((!detectedIndent || state.lineIndent < textIndent) &&\n           (ch === 0x20/* Space */)) {\n      state.lineIndent++;\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (!detectedIndent && state.lineIndent > textIndent) {\n      textIndent = state.lineIndent;\n    }\n\n    if (is_EOL(ch)) {\n      emptyLines++;\n      continue;\n    }\n\n    // End of the scalar.\n    if (state.lineIndent < textIndent) {\n\n      // Perform the chomping.\n      if (chomping === CHOMPING_KEEP) {\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n      } else if (chomping === CHOMPING_CLIP) {\n        if (didReadContent) { // i.e. only if the scalar is not empty.\n          state.result += '\\n';\n        }\n      }\n\n      // Break this `while` cycle and go to the funciton's epilogue.\n      break;\n    }\n\n    // Folded style: use fancy rules to handle line breaks.\n    if (folding) {\n\n      // Lines starting with white space characters (more-indented lines) are not folded.\n      if (is_WHITE_SPACE(ch)) {\n        atMoreIndented = true;\n        // except for the first content line (cf. Example 8.1)\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n\n      // End of more-indented block.\n      } else if (atMoreIndented) {\n        atMoreIndented = false;\n        state.result += common.repeat('\\n', emptyLines + 1);\n\n      // Just one line break - perceive as the same line.\n      } else if (emptyLines === 0) {\n        if (didReadContent) { // i.e. only if we have already read some scalar content.\n          state.result += ' ';\n        }\n\n      // Several line breaks - perceive as different lines.\n      } else {\n        state.result += common.repeat('\\n', emptyLines);\n      }\n\n    // Literal style: just add exact number of line breaks between content lines.\n    } else {\n      // Keep all line breaks except the header line break.\n      state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n    }\n\n    didReadContent = true;\n    detectedIndent = true;\n    emptyLines = 0;\n    captureStart = state.position;\n\n    while (!is_EOL(ch) && (ch !== 0)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    captureSegment(state, captureStart, state.position, false);\n  }\n\n  return true;\n}\n\nfunction readBlockSequence(state, nodeIndent) {\n  var _line,\n      _tag      = state.tag,\n      _anchor   = state.anchor,\n      _result   = [],\n      following,\n      detected  = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    if (ch !== 0x2D/* - */) {\n      break;\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (!is_WS_OR_EOL(following)) {\n      break;\n    }\n\n    detected = true;\n    state.position++;\n\n    if (skipSeparationSpace(state, true, -1)) {\n      if (state.lineIndent <= nodeIndent) {\n        _result.push(null);\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n    _result.push(state.result);\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a sequence entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'sequence';\n    state.result = _result;\n    return true;\n  }\n  return false;\n}\n\nfunction readBlockMapping(state, nodeIndent, flowIndent) {\n  var following,\n      allowCompact,\n      _line,\n      _keyLine,\n      _keyLineStart,\n      _keyPos,\n      _tag          = state.tag,\n      _anchor       = state.anchor,\n      _result       = {},\n      overridableKeys = Object.create(null),\n      keyTag        = null,\n      keyNode       = null,\n      valueNode     = null,\n      atExplicitKey = false,\n      detected      = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (!atExplicitKey && state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n    _line = state.line; // Save the current line.\n\n    //\n    // Explicit notation case. There are two separate blocks:\n    // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n    //\n    if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {\n\n      if (ch === 0x3F/* ? */) {\n        if (atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n          keyTag = keyNode = valueNode = null;\n        }\n\n        detected = true;\n        atExplicitKey = true;\n        allowCompact = true;\n\n      } else if (atExplicitKey) {\n        // i.e. 0x3A/* : */ === character after the explicit key.\n        atExplicitKey = false;\n        allowCompact = true;\n\n      } else {\n        throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');\n      }\n\n      state.position += 1;\n      ch = following;\n\n    //\n    // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n    //\n    } else {\n      _keyLine = state.line;\n      _keyLineStart = state.lineStart;\n      _keyPos = state.position;\n\n      if (!composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n        // Neither implicit nor explicit notation.\n        // Reading is done. Go to the epilogue.\n        break;\n      }\n\n      if (state.line === _line) {\n        ch = state.input.charCodeAt(state.position);\n\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        if (ch === 0x3A/* : */) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if (!is_WS_OR_EOL(ch)) {\n            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n          }\n\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n            keyTag = keyNode = valueNode = null;\n          }\n\n          detected = true;\n          atExplicitKey = false;\n          allowCompact = false;\n          keyTag = state.tag;\n          keyNode = state.result;\n\n        } else if (detected) {\n          throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n\n      } else if (detected) {\n        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n\n      } else {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        return true; // Keep the result of `composeNode`.\n      }\n    }\n\n    //\n    // Common reading code for both explicit and implicit notations.\n    //\n    if (state.line === _line || state.lineIndent > nodeIndent) {\n      if (atExplicitKey) {\n        _keyLine = state.line;\n        _keyLineStart = state.lineStart;\n        _keyPos = state.position;\n      }\n\n      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n        if (atExplicitKey) {\n          keyNode = state.result;\n        } else {\n          valueNode = state.result;\n        }\n      }\n\n      if (!atExplicitKey) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _keyLine, _keyLineStart, _keyPos);\n        keyTag = keyNode = valueNode = null;\n      }\n\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n    }\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a mapping entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  //\n  // Epilogue.\n  //\n\n  // Special case: last mapping's node contains only the key in explicit notation.\n  if (atExplicitKey) {\n    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n  }\n\n  // Expose the resulting mapping.\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'mapping';\n    state.result = _result;\n  }\n\n  return detected;\n}\n\nfunction readTagProperty(state) {\n  var _position,\n      isVerbatim = false,\n      isNamed    = false,\n      tagHandle,\n      tagName,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x21/* ! */) return false;\n\n  if (state.tag !== null) {\n    throwError(state, 'duplication of a tag property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  if (ch === 0x3C/* < */) {\n    isVerbatim = true;\n    ch = state.input.charCodeAt(++state.position);\n\n  } else if (ch === 0x21/* ! */) {\n    isNamed = true;\n    tagHandle = '!!';\n    ch = state.input.charCodeAt(++state.position);\n\n  } else {\n    tagHandle = '!';\n  }\n\n  _position = state.position;\n\n  if (isVerbatim) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (ch !== 0 && ch !== 0x3E/* > */);\n\n    if (state.position < state.length) {\n      tagName = state.input.slice(_position, state.position);\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      throwError(state, 'unexpected end of the stream within a verbatim tag');\n    }\n  } else {\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n\n      if (ch === 0x21/* ! */) {\n        if (!isNamed) {\n          tagHandle = state.input.slice(_position - 1, state.position + 1);\n\n          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n            throwError(state, 'named tag handle cannot contain such characters');\n          }\n\n          isNamed = true;\n          _position = state.position + 1;\n        } else {\n          throwError(state, 'tag suffix cannot contain exclamation marks');\n        }\n      }\n\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    tagName = state.input.slice(_position, state.position);\n\n    if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n      throwError(state, 'tag suffix cannot contain flow indicator characters');\n    }\n  }\n\n  if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n    throwError(state, 'tag name cannot contain such characters: ' + tagName);\n  }\n\n  try {\n    tagName = decodeURIComponent(tagName);\n  } catch (err) {\n    throwError(state, 'tag name is malformed: ' + tagName);\n  }\n\n  if (isVerbatim) {\n    state.tag = tagName;\n\n  } else if (_hasOwnProperty$1.call(state.tagMap, tagHandle)) {\n    state.tag = state.tagMap[tagHandle] + tagName;\n\n  } else if (tagHandle === '!') {\n    state.tag = '!' + tagName;\n\n  } else if (tagHandle === '!!') {\n    state.tag = 'tag:yaml.org,2002:' + tagName;\n\n  } else {\n    throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n  }\n\n  return true;\n}\n\nfunction readAnchorProperty(state) {\n  var _position,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x26/* & */) return false;\n\n  if (state.anchor !== null) {\n    throwError(state, 'duplication of an anchor property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an anchor node must contain at least one character');\n  }\n\n  state.anchor = state.input.slice(_position, state.position);\n  return true;\n}\n\nfunction readAlias(state) {\n  var _position, alias,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x2A/* * */) return false;\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an alias node must contain at least one character');\n  }\n\n  alias = state.input.slice(_position, state.position);\n\n  if (!_hasOwnProperty$1.call(state.anchorMap, alias)) {\n    throwError(state, 'unidentified alias \"' + alias + '\"');\n  }\n\n  state.result = state.anchorMap[alias];\n  skipSeparationSpace(state, true, -1);\n  return true;\n}\n\nfunction composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n  var allowBlockStyles,\n      allowBlockScalars,\n      allowBlockCollections,\n      indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent\n      atNewLine  = false,\n      hasContent = false,\n      typeIndex,\n      typeQuantity,\n      typeList,\n      type,\n      flowIndent,\n      blockIndent;\n\n  if (state.listener !== null) {\n    state.listener('open', state);\n  }\n\n  state.tag    = null;\n  state.anchor = null;\n  state.kind   = null;\n  state.result = null;\n\n  allowBlockStyles = allowBlockScalars = allowBlockCollections =\n    CONTEXT_BLOCK_OUT === nodeContext ||\n    CONTEXT_BLOCK_IN  === nodeContext;\n\n  if (allowToSeek) {\n    if (skipSeparationSpace(state, true, -1)) {\n      atNewLine = true;\n\n      if (state.lineIndent > parentIndent) {\n        indentStatus = 1;\n      } else if (state.lineIndent === parentIndent) {\n        indentStatus = 0;\n      } else if (state.lineIndent < parentIndent) {\n        indentStatus = -1;\n      }\n    }\n  }\n\n  if (indentStatus === 1) {\n    while (readTagProperty(state) || readAnchorProperty(state)) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n        allowBlockCollections = allowBlockStyles;\n\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      } else {\n        allowBlockCollections = false;\n      }\n    }\n  }\n\n  if (allowBlockCollections) {\n    allowBlockCollections = atNewLine || allowCompact;\n  }\n\n  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n      flowIndent = parentIndent;\n    } else {\n      flowIndent = parentIndent + 1;\n    }\n\n    blockIndent = state.position - state.lineStart;\n\n    if (indentStatus === 1) {\n      if (allowBlockCollections &&\n          (readBlockSequence(state, blockIndent) ||\n           readBlockMapping(state, blockIndent, flowIndent)) ||\n          readFlowCollection(state, flowIndent)) {\n        hasContent = true;\n      } else {\n        if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||\n            readSingleQuotedScalar(state, flowIndent) ||\n            readDoubleQuotedScalar(state, flowIndent)) {\n          hasContent = true;\n\n        } else if (readAlias(state)) {\n          hasContent = true;\n\n          if (state.tag !== null || state.anchor !== null) {\n            throwError(state, 'alias node should not have any properties');\n          }\n\n        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n          hasContent = true;\n\n          if (state.tag === null) {\n            state.tag = '?';\n          }\n        }\n\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else if (indentStatus === 0) {\n      // Special case: block sequences are allowed to have same indentation level as the parent.\n      // http://www.yaml.org/spec/1.2/spec.html#id2799784\n      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n    }\n  }\n\n  if (state.tag === null) {\n    if (state.anchor !== null) {\n      state.anchorMap[state.anchor] = state.result;\n    }\n\n  } else if (state.tag === '?') {\n    // Implicit resolving is not allowed for non-scalar types, and '?'\n    // non-specific tag is only automatically assigned to plain scalars.\n    //\n    // We only need to check kind conformity in case user explicitly assigns '?'\n    // tag, for example like this: \"!<?> [0]\"\n    //\n    if (state.result !== null && state.kind !== 'scalar') {\n      throwError(state, 'unacceptable node kind for !<?> tag; it should be \"scalar\", not \"' + state.kind + '\"');\n    }\n\n    for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n      type = state.implicitTypes[typeIndex];\n\n      if (type.resolve(state.result)) { // `state.result` updated in resolver if matched\n        state.result = type.construct(state.result);\n        state.tag = type.tag;\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n        break;\n      }\n    }\n  } else if (state.tag !== '!') {\n    if (_hasOwnProperty$1.call(state.typeMap[state.kind || 'fallback'], state.tag)) {\n      type = state.typeMap[state.kind || 'fallback'][state.tag];\n    } else {\n      // looking for multi type\n      type = null;\n      typeList = state.typeMap.multi[state.kind || 'fallback'];\n\n      for (typeIndex = 0, typeQuantity = typeList.length; typeIndex < typeQuantity; typeIndex += 1) {\n        if (state.tag.slice(0, typeList[typeIndex].tag.length) === typeList[typeIndex].tag) {\n          type = typeList[typeIndex];\n          break;\n        }\n      }\n    }\n\n    if (!type) {\n      throwError(state, 'unknown tag !<' + state.tag + '>');\n    }\n\n    if (state.result !== null && type.kind !== state.kind) {\n      throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n    }\n\n    if (!type.resolve(state.result, state.tag)) { // `state.result` updated in resolver if matched\n      throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n    } else {\n      state.result = type.construct(state.result, state.tag);\n      if (state.anchor !== null) {\n        state.anchorMap[state.anchor] = state.result;\n      }\n    }\n  }\n\n  if (state.listener !== null) {\n    state.listener('close', state);\n  }\n  return state.tag !== null ||  state.anchor !== null || hasContent;\n}\n\nfunction readDocument(state) {\n  var documentStart = state.position,\n      _position,\n      directiveName,\n      directiveArgs,\n      hasDirectives = false,\n      ch;\n\n  state.version = null;\n  state.checkLineBreaks = state.legacy;\n  state.tagMap = Object.create(null);\n  state.anchorMap = Object.create(null);\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (state.lineIndent > 0 || ch !== 0x25/* % */) {\n      break;\n    }\n\n    hasDirectives = true;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    directiveName = state.input.slice(_position, state.position);\n    directiveArgs = [];\n\n    if (directiveName.length < 1) {\n      throwError(state, 'directive name must not be less than one character in length');\n    }\n\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (ch === 0x23/* # */) {\n        do { ch = state.input.charCodeAt(++state.position); }\n        while (ch !== 0 && !is_EOL(ch));\n        break;\n      }\n\n      if (is_EOL(ch)) break;\n\n      _position = state.position;\n\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      directiveArgs.push(state.input.slice(_position, state.position));\n    }\n\n    if (ch !== 0) readLineBreak(state);\n\n    if (_hasOwnProperty$1.call(directiveHandlers, directiveName)) {\n      directiveHandlers[directiveName](state, directiveName, directiveArgs);\n    } else {\n      throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n    }\n  }\n\n  skipSeparationSpace(state, true, -1);\n\n  if (state.lineIndent === 0 &&\n      state.input.charCodeAt(state.position)     === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {\n    state.position += 3;\n    skipSeparationSpace(state, true, -1);\n\n  } else if (hasDirectives) {\n    throwError(state, 'directives end mark is expected');\n  }\n\n  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n  skipSeparationSpace(state, true, -1);\n\n  if (state.checkLineBreaks &&\n      PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n    throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n  }\n\n  state.documents.push(state.result);\n\n  if (state.position === state.lineStart && testDocumentSeparator(state)) {\n\n    if (state.input.charCodeAt(state.position) === 0x2E/* . */) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    }\n    return;\n  }\n\n  if (state.position < (state.length - 1)) {\n    throwError(state, 'end of the stream or a document separator is expected');\n  } else {\n    return;\n  }\n}\n\n\nfunction loadDocuments(input, options) {\n  input = String(input);\n  options = options || {};\n\n  if (input.length !== 0) {\n\n    // Add tailing `\\n` if not exists\n    if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&\n        input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {\n      input += '\\n';\n    }\n\n    // Strip BOM\n    if (input.charCodeAt(0) === 0xFEFF) {\n      input = input.slice(1);\n    }\n  }\n\n  var state = new State$1(input, options);\n\n  var nullpos = input.indexOf('\\0');\n\n  if (nullpos !== -1) {\n    state.position = nullpos;\n    throwError(state, 'null byte is not allowed in input');\n  }\n\n  // Use 0 as string terminator. That significantly simplifies bounds check.\n  state.input += '\\0';\n\n  while (state.input.charCodeAt(state.position) === 0x20/* Space */) {\n    state.lineIndent += 1;\n    state.position += 1;\n  }\n\n  while (state.position < (state.length - 1)) {\n    readDocument(state);\n  }\n\n  return state.documents;\n}\n\n\nfunction loadAll$1(input, iterator, options) {\n  if (iterator !== null && typeof iterator === 'object' && typeof options === 'undefined') {\n    options = iterator;\n    iterator = null;\n  }\n\n  var documents = loadDocuments(input, options);\n\n  if (typeof iterator !== 'function') {\n    return documents;\n  }\n\n  for (var index = 0, length = documents.length; index < length; index += 1) {\n    iterator(documents[index]);\n  }\n}\n\n\nfunction load$1(input, options) {\n  var documents = loadDocuments(input, options);\n\n  if (documents.length === 0) {\n    /*eslint-disable no-undefined*/\n    return undefined;\n  } else if (documents.length === 1) {\n    return documents[0];\n  }\n  throw new exception('expected a single document in the stream, but found more');\n}\n\n\nvar loadAll_1 = loadAll$1;\nvar load_1    = load$1;\n\nvar loader = {\n\tloadAll: loadAll_1,\n\tload: load_1\n};\n\n/*eslint-disable no-use-before-define*/\n\n\n\n\n\nvar _toString       = Object.prototype.toString;\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar CHAR_BOM                  = 0xFEFF;\nvar CHAR_TAB                  = 0x09; /* Tab */\nvar CHAR_LINE_FEED            = 0x0A; /* LF */\nvar CHAR_CARRIAGE_RETURN      = 0x0D; /* CR */\nvar CHAR_SPACE                = 0x20; /* Space */\nvar CHAR_EXCLAMATION          = 0x21; /* ! */\nvar CHAR_DOUBLE_QUOTE         = 0x22; /* \" */\nvar CHAR_SHARP                = 0x23; /* # */\nvar CHAR_PERCENT              = 0x25; /* % */\nvar CHAR_AMPERSAND            = 0x26; /* & */\nvar CHAR_SINGLE_QUOTE         = 0x27; /* ' */\nvar CHAR_ASTERISK             = 0x2A; /* * */\nvar CHAR_COMMA                = 0x2C; /* , */\nvar CHAR_MINUS                = 0x2D; /* - */\nvar CHAR_COLON                = 0x3A; /* : */\nvar CHAR_EQUALS               = 0x3D; /* = */\nvar CHAR_GREATER_THAN         = 0x3E; /* > */\nvar CHAR_QUESTION             = 0x3F; /* ? */\nvar CHAR_COMMERCIAL_AT        = 0x40; /* @ */\nvar CHAR_LEFT_SQUARE_BRACKET  = 0x5B; /* [ */\nvar CHAR_RIGHT_SQUARE_BRACKET = 0x5D; /* ] */\nvar CHAR_GRAVE_ACCENT         = 0x60; /* ` */\nvar CHAR_LEFT_CURLY_BRACKET   = 0x7B; /* { */\nvar CHAR_VERTICAL_LINE        = 0x7C; /* | */\nvar CHAR_RIGHT_CURLY_BRACKET  = 0x7D; /* } */\n\nvar ESCAPE_SEQUENCES = {};\n\nESCAPE_SEQUENCES[0x00]   = '\\\\0';\nESCAPE_SEQUENCES[0x07]   = '\\\\a';\nESCAPE_SEQUENCES[0x08]   = '\\\\b';\nESCAPE_SEQUENCES[0x09]   = '\\\\t';\nESCAPE_SEQUENCES[0x0A]   = '\\\\n';\nESCAPE_SEQUENCES[0x0B]   = '\\\\v';\nESCAPE_SEQUENCES[0x0C]   = '\\\\f';\nESCAPE_SEQUENCES[0x0D]   = '\\\\r';\nESCAPE_SEQUENCES[0x1B]   = '\\\\e';\nESCAPE_SEQUENCES[0x22]   = '\\\\\"';\nESCAPE_SEQUENCES[0x5C]   = '\\\\\\\\';\nESCAPE_SEQUENCES[0x85]   = '\\\\N';\nESCAPE_SEQUENCES[0xA0]   = '\\\\_';\nESCAPE_SEQUENCES[0x2028] = '\\\\L';\nESCAPE_SEQUENCES[0x2029] = '\\\\P';\n\nvar DEPRECATED_BOOLEANS_SYNTAX = [\n  'y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON',\n  'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'\n];\n\nvar DEPRECATED_BASE60_SYNTAX = /^[-+]?[0-9_]+(?::[0-9_]+)+(?:\\.[0-9_]*)?$/;\n\nfunction compileStyleMap(schema, map) {\n  var result, keys, index, length, tag, style, type;\n\n  if (map === null) return {};\n\n  result = {};\n  keys = Object.keys(map);\n\n  for (index = 0, length = keys.length; index < length; index += 1) {\n    tag = keys[index];\n    style = String(map[tag]);\n\n    if (tag.slice(0, 2) === '!!') {\n      tag = 'tag:yaml.org,2002:' + tag.slice(2);\n    }\n    type = schema.compiledTypeMap['fallback'][tag];\n\n    if (type && _hasOwnProperty.call(type.styleAliases, style)) {\n      style = type.styleAliases[style];\n    }\n\n    result[tag] = style;\n  }\n\n  return result;\n}\n\nfunction encodeHex(character) {\n  var string, handle, length;\n\n  string = character.toString(16).toUpperCase();\n\n  if (character <= 0xFF) {\n    handle = 'x';\n    length = 2;\n  } else if (character <= 0xFFFF) {\n    handle = 'u';\n    length = 4;\n  } else if (character <= 0xFFFFFFFF) {\n    handle = 'U';\n    length = 8;\n  } else {\n    throw new exception('code point within a string may not be greater than 0xFFFFFFFF');\n  }\n\n  return '\\\\' + handle + common.repeat('0', length - string.length) + string;\n}\n\n\nvar QUOTING_TYPE_SINGLE = 1,\n    QUOTING_TYPE_DOUBLE = 2;\n\nfunction State(options) {\n  this.schema        = options['schema'] || _default;\n  this.indent        = Math.max(1, (options['indent'] || 2));\n  this.noArrayIndent = options['noArrayIndent'] || false;\n  this.skipInvalid   = options['skipInvalid'] || false;\n  this.flowLevel     = (common.isNothing(options['flowLevel']) ? -1 : options['flowLevel']);\n  this.styleMap      = compileStyleMap(this.schema, options['styles'] || null);\n  this.sortKeys      = options['sortKeys'] || false;\n  this.lineWidth     = options['lineWidth'] || 80;\n  this.noRefs        = options['noRefs'] || false;\n  this.noCompatMode  = options['noCompatMode'] || false;\n  this.condenseFlow  = options['condenseFlow'] || false;\n  this.quotingType   = options['quotingType'] === '\"' ? QUOTING_TYPE_DOUBLE : QUOTING_TYPE_SINGLE;\n  this.forceQuotes   = options['forceQuotes'] || false;\n  this.replacer      = typeof options['replacer'] === 'function' ? options['replacer'] : null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.explicitTypes = this.schema.compiledExplicit;\n\n  this.tag = null;\n  this.result = '';\n\n  this.duplicates = [];\n  this.usedDuplicates = null;\n}\n\n// Indents every line in a string. Empty lines (\\n only) are not indented.\nfunction indentString(string, spaces) {\n  var ind = common.repeat(' ', spaces),\n      position = 0,\n      next = -1,\n      result = '',\n      line,\n      length = string.length;\n\n  while (position < length) {\n    next = string.indexOf('\\n', position);\n    if (next === -1) {\n      line = string.slice(position);\n      position = length;\n    } else {\n      line = string.slice(position, next + 1);\n      position = next + 1;\n    }\n\n    if (line.length && line !== '\\n') result += ind;\n\n    result += line;\n  }\n\n  return result;\n}\n\nfunction generateNextLine(state, level) {\n  return '\\n' + common.repeat(' ', state.indent * level);\n}\n\nfunction testImplicitResolving(state, str) {\n  var index, length, type;\n\n  for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {\n    type = state.implicitTypes[index];\n\n    if (type.resolve(str)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// [33] s-white ::= s-space | s-tab\nfunction isWhitespace(c) {\n  return c === CHAR_SPACE || c === CHAR_TAB;\n}\n\n// Returns true if the character can be printed without escaping.\n// From YAML 1.2: \"any allowed characters known to be non-printable\n// should also be escaped. [However,] This isn\u2019t mandatory\"\n// Derived from nb-char - \\t - #x85 - #xA0 - #x2028 - #x2029.\nfunction isPrintable(c) {\n  return  (0x00020 <= c && c <= 0x00007E)\n      || ((0x000A1 <= c && c <= 0x00D7FF) && c !== 0x2028 && c !== 0x2029)\n      || ((0x0E000 <= c && c <= 0x00FFFD) && c !== CHAR_BOM)\n      ||  (0x10000 <= c && c <= 0x10FFFF);\n}\n\n// [34] ns-char ::= nb-char - s-white\n// [27] nb-char ::= c-printable - b-char - c-byte-order-mark\n// [26] b-char  ::= b-line-feed | b-carriage-return\n// Including s-white (for some reason, examples doesn't match specs in this aspect)\n// ns-char ::= c-printable - b-line-feed - b-carriage-return - c-byte-order-mark\nfunction isNsCharOrWhitespace(c) {\n  return isPrintable(c)\n    && c !== CHAR_BOM\n    // - b-char\n    && c !== CHAR_CARRIAGE_RETURN\n    && c !== CHAR_LINE_FEED;\n}\n\n// [127]  ns-plain-safe(c) ::= c = flow-out  \u21D2 ns-plain-safe-out\n//                             c = flow-in   \u21D2 ns-plain-safe-in\n//                             c = block-key \u21D2 ns-plain-safe-out\n//                             c = flow-key  \u21D2 ns-plain-safe-in\n// [128] ns-plain-safe-out ::= ns-char\n// [129]  ns-plain-safe-in ::= ns-char - c-flow-indicator\n// [130]  ns-plain-char(c) ::=  ( ns-plain-safe(c) - \u201C:\u201D - \u201C#\u201D )\n//                            | ( /* An ns-char preceding */ \u201C#\u201D )\n//                            | ( \u201C:\u201D /* Followed by an ns-plain-safe(c) */ )\nfunction isPlainSafe(c, prev, inblock) {\n  var cIsNsCharOrWhitespace = isNsCharOrWhitespace(c);\n  var cIsNsChar = cIsNsCharOrWhitespace && !isWhitespace(c);\n  return (\n    // ns-plain-safe\n    inblock ? // c = flow-in\n      cIsNsCharOrWhitespace\n      : cIsNsCharOrWhitespace\n        // - c-flow-indicator\n        && c !== CHAR_COMMA\n        && c !== CHAR_LEFT_SQUARE_BRACKET\n        && c !== CHAR_RIGHT_SQUARE_BRACKET\n        && c !== CHAR_LEFT_CURLY_BRACKET\n        && c !== CHAR_RIGHT_CURLY_BRACKET\n  )\n    // ns-plain-char\n    && c !== CHAR_SHARP // false on '#'\n    && !(prev === CHAR_COLON && !cIsNsChar) // false on ': '\n    || (isNsCharOrWhitespace(prev) && !isWhitespace(prev) && c === CHAR_SHARP) // change to true on '[^ ]#'\n    || (prev === CHAR_COLON && cIsNsChar); // change to true on ':[^ ]'\n}\n\n// Simplified test for values allowed as the first character in plain style.\nfunction isPlainSafeFirst(c) {\n  // Uses a subset of ns-char - c-indicator\n  // where ns-char = nb-char - s-white.\n  // No support of ( ( \u201C?\u201D | \u201C:\u201D | \u201C-\u201D ) /* Followed by an ns-plain-safe(c)) */ ) part\n  return isPrintable(c) && c !== CHAR_BOM\n    && !isWhitespace(c) // - s-white\n    // - (c-indicator ::=\n    // \u201C-\u201D | \u201C?\u201D | \u201C:\u201D | \u201C,\u201D | \u201C[\u201D | \u201C]\u201D | \u201C{\u201D | \u201C}\u201D\n    && c !== CHAR_MINUS\n    && c !== CHAR_QUESTION\n    && c !== CHAR_COLON\n    && c !== CHAR_COMMA\n    && c !== CHAR_LEFT_SQUARE_BRACKET\n    && c !== CHAR_RIGHT_SQUARE_BRACKET\n    && c !== CHAR_LEFT_CURLY_BRACKET\n    && c !== CHAR_RIGHT_CURLY_BRACKET\n    // | \u201C#\u201D | \u201C&\u201D | \u201C*\u201D | \u201C!\u201D | \u201C|\u201D | \u201C=\u201D | \u201C>\u201D | \u201C'\u201D | \u201C\"\u201D\n    && c !== CHAR_SHARP\n    && c !== CHAR_AMPERSAND\n    && c !== CHAR_ASTERISK\n    && c !== CHAR_EXCLAMATION\n    && c !== CHAR_VERTICAL_LINE\n    && c !== CHAR_EQUALS\n    && c !== CHAR_GREATER_THAN\n    && c !== CHAR_SINGLE_QUOTE\n    && c !== CHAR_DOUBLE_QUOTE\n    // | \u201C%\u201D | \u201C@\u201D | \u201C`\u201D)\n    && c !== CHAR_PERCENT\n    && c !== CHAR_COMMERCIAL_AT\n    && c !== CHAR_GRAVE_ACCENT;\n}\n\n// Simplified test for values allowed as the last character in plain style.\nfunction isPlainSafeLast(c) {\n  // just not whitespace or colon, it will be checked to be plain character later\n  return !isWhitespace(c) && c !== CHAR_COLON;\n}\n\n// Same as 'string'.codePointAt(pos), but works in older browsers.\nfunction codePointAt(string, pos) {\n  var first = string.charCodeAt(pos), second;\n  if (first >= 0xD800 && first <= 0xDBFF && pos + 1 < string.length) {\n    second = string.charCodeAt(pos + 1);\n    if (second >= 0xDC00 && second <= 0xDFFF) {\n      // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n      return (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n    }\n  }\n  return first;\n}\n\n// Determines whether block indentation indicator is required.\nfunction needIndentIndicator(string) {\n  var leadingSpaceRe = /^\\n* /;\n  return leadingSpaceRe.test(string);\n}\n\nvar STYLE_PLAIN   = 1,\n    STYLE_SINGLE  = 2,\n    STYLE_LITERAL = 3,\n    STYLE_FOLDED  = 4,\n    STYLE_DOUBLE  = 5;\n\n// Determines which scalar styles are possible and returns the preferred style.\n// lineWidth = -1 => no limit.\n// Pre-conditions: str.length > 0.\n// Post-conditions:\n//    STYLE_PLAIN or STYLE_SINGLE => no \\n are in the string.\n//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).\n//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).\nfunction chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth,\n  testAmbiguousType, quotingType, forceQuotes, inblock) {\n\n  var i;\n  var char = 0;\n  var prevChar = null;\n  var hasLineBreak = false;\n  var hasFoldableLine = false; // only checked if shouldTrackWidth\n  var shouldTrackWidth = lineWidth !== -1;\n  var previousLineBreak = -1; // count the first line correctly\n  var plain = isPlainSafeFirst(codePointAt(string, 0))\n          && isPlainSafeLast(codePointAt(string, string.length - 1));\n\n  if (singleLineOnly || forceQuotes) {\n    // Case: no block styles.\n    // Check for disallowed characters to rule out plain and single.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n  } else {\n    // Case: block styles permitted.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (char === CHAR_LINE_FEED) {\n        hasLineBreak = true;\n        // Check if any line can be folded.\n        if (shouldTrackWidth) {\n          hasFoldableLine = hasFoldableLine ||\n            // Foldable line = too long, and not more-indented.\n            (i - previousLineBreak - 1 > lineWidth &&\n             string[previousLineBreak + 1] !== ' ');\n          previousLineBreak = i;\n        }\n      } else if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n    // in case the end is missing a \\n\n    hasFoldableLine = hasFoldableLine || (shouldTrackWidth &&\n      (i - previousLineBreak - 1 > lineWidth &&\n       string[previousLineBreak + 1] !== ' '));\n  }\n  // Although every style can represent \\n without escaping, prefer block styles\n  // for multiline, since they're more readable and they don't add empty lines.\n  // Also prefer folding a super-long line.\n  if (!hasLineBreak && !hasFoldableLine) {\n    // Strings interpretable as another type have to be quoted;\n    // e.g. the string 'true' vs. the boolean true.\n    if (plain && !forceQuotes && !testAmbiguousType(string)) {\n      return STYLE_PLAIN;\n    }\n    return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n  }\n  // Edge case: block indentation indicator can only have one digit.\n  if (indentPerLevel > 9 && needIndentIndicator(string)) {\n    return STYLE_DOUBLE;\n  }\n  // At this point we know block styles are valid.\n  // Prefer literal style unless we want to fold.\n  if (!forceQuotes) {\n    return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;\n  }\n  return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n}\n\n// Note: line breaking/folding is implemented for only the folded style.\n// NB. We drop the last trailing newline (if any) of a returned block scalar\n//  since the dumper adds its own newline. This always works:\n//    \u2022 No ending newline => unaffected; already using strip \"-\" chomping.\n//    \u2022 Ending newline    => removed then restored.\n//  Importantly, this keeps the \"+\" chomp indicator from gaining an extra line.\nfunction writeScalar(state, string, level, iskey, inblock) {\n  state.dump = (function () {\n    if (string.length === 0) {\n      return state.quotingType === QUOTING_TYPE_DOUBLE ? '\"\"' : \"''\";\n    }\n    if (!state.noCompatMode) {\n      if (DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1 || DEPRECATED_BASE60_SYNTAX.test(string)) {\n        return state.quotingType === QUOTING_TYPE_DOUBLE ? ('\"' + string + '\"') : (\"'\" + string + \"'\");\n      }\n    }\n\n    var indent = state.indent * Math.max(1, level); // no 0-indent scalars\n    // As indentation gets deeper, let the width decrease monotonically\n    // to the lower bound min(state.lineWidth, 40).\n    // Note that this implies\n    //  state.lineWidth \u2264 40 + state.indent: width is fixed at the lower bound.\n    //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.\n    // This behaves better than a constant minimum width which disallows narrower options,\n    // or an indent threshold which causes the width to suddenly increase.\n    var lineWidth = state.lineWidth === -1\n      ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent);\n\n    // Without knowing if keys are implicit/explicit, assume implicit for safety.\n    var singleLineOnly = iskey\n      // No block styles in flow mode.\n      || (state.flowLevel > -1 && level >= state.flowLevel);\n    function testAmbiguity(string) {\n      return testImplicitResolving(state, string);\n    }\n\n    switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth,\n      testAmbiguity, state.quotingType, state.forceQuotes && !iskey, inblock)) {\n\n      case STYLE_PLAIN:\n        return string;\n      case STYLE_SINGLE:\n        return \"'\" + string.replace(/'/g, \"''\") + \"'\";\n      case STYLE_LITERAL:\n        return '|' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(string, indent));\n      case STYLE_FOLDED:\n        return '>' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(foldString(string, lineWidth), indent));\n      case STYLE_DOUBLE:\n        return '\"' + escapeString(string) + '\"';\n      default:\n        throw new exception('impossible error: invalid scalar style');\n    }\n  }());\n}\n\n// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.\nfunction blockHeader(string, indentPerLevel) {\n  var indentIndicator = needIndentIndicator(string) ? String(indentPerLevel) : '';\n\n  // note the special case: the string '\\n' counts as a \"trailing\" empty line.\n  var clip =          string[string.length - 1] === '\\n';\n  var keep = clip && (string[string.length - 2] === '\\n' || string === '\\n');\n  var chomp = keep ? '+' : (clip ? '' : '-');\n\n  return indentIndicator + chomp + '\\n';\n}\n\n// (See the note for writeScalar.)\nfunction dropEndingNewline(string) {\n  return string[string.length - 1] === '\\n' ? string.slice(0, -1) : string;\n}\n\n// Note: a long line without a suitable break point will exceed the width limit.\n// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.\nfunction foldString(string, width) {\n  // In folded style, $k$ consecutive newlines output as $k+1$ newlines\u2014\n  // unless they're before or after a more-indented line, or at the very\n  // beginning or end, in which case $k$ maps to $k$.\n  // Therefore, parse each chunk as newline(s) followed by a content line.\n  var lineRe = /(\\n+)([^\\n]*)/g;\n\n  // first line (possibly an empty line)\n  var result = (function () {\n    var nextLF = string.indexOf('\\n');\n    nextLF = nextLF !== -1 ? nextLF : string.length;\n    lineRe.lastIndex = nextLF;\n    return foldLine(string.slice(0, nextLF), width);\n  }());\n  // If we haven't reached the first content line yet, don't add an extra \\n.\n  var prevMoreIndented = string[0] === '\\n' || string[0] === ' ';\n  var moreIndented;\n\n  // rest of the lines\n  var match;\n  while ((match = lineRe.exec(string))) {\n    var prefix = match[1], line = match[2];\n    moreIndented = (line[0] === ' ');\n    result += prefix\n      + (!prevMoreIndented && !moreIndented && line !== ''\n        ? '\\n' : '')\n      + foldLine(line, width);\n    prevMoreIndented = moreIndented;\n  }\n\n  return result;\n}\n\n// Greedy line breaking.\n// Picks the longest line under the limit each time,\n// otherwise settles for the shortest line over the limit.\n// NB. More-indented lines *cannot* be folded, as that would add an extra \\n.\nfunction foldLine(line, width) {\n  if (line === '' || line[0] === ' ') return line;\n\n  // Since a more-indented line adds a \\n, breaks can't be followed by a space.\n  var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.\n  var match;\n  // start is an inclusive index. end, curr, and next are exclusive.\n  var start = 0, end, curr = 0, next = 0;\n  var result = '';\n\n  // Invariants: 0 <= start <= length-1.\n  //   0 <= curr <= next <= max(0, length-2). curr - start <= width.\n  // Inside the loop:\n  //   A match implies length >= 2, so curr and next are <= length-2.\n  while ((match = breakRe.exec(line))) {\n    next = match.index;\n    // maintain invariant: curr - start <= width\n    if (next - start > width) {\n      end = (curr > start) ? curr : next; // derive end <= length-2\n      result += '\\n' + line.slice(start, end);\n      // skip the space that was output as \\n\n      start = end + 1;                    // derive start <= length-1\n    }\n    curr = next;\n  }\n\n  // By the invariants, start <= length-1, so there is something left over.\n  // It is either the whole string or a part starting from non-whitespace.\n  result += '\\n';\n  // Insert a break if the remainder is too long and there is a break available.\n  if (line.length - start > width && curr > start) {\n    result += line.slice(start, curr) + '\\n' + line.slice(curr + 1);\n  } else {\n    result += line.slice(start);\n  }\n\n  return result.slice(1); // drop extra \\n joiner\n}\n\n// Escapes a double-quoted string.\nfunction escapeString(string) {\n  var result = '';\n  var char = 0;\n  var escapeSeq;\n\n  for (var i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n    char = codePointAt(string, i);\n    escapeSeq = ESCAPE_SEQUENCES[char];\n\n    if (!escapeSeq && isPrintable(char)) {\n      result += string[i];\n      if (char >= 0x10000) result += string[i + 1];\n    } else {\n      result += escapeSeq || encodeHex(char);\n    }\n  }\n\n  return result;\n}\n\nfunction writeFlowSequence(state, level, object) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level, value, false, false) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level, null, false, false))) {\n\n      if (_result !== '') _result += ',' + (!state.condenseFlow ? ' ' : '');\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = '[' + _result + ']';\n}\n\nfunction writeBlockSequence(state, level, object, compact) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level + 1, value, true, true, false, true) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level + 1, null, true, true, false, true))) {\n\n      if (!compact || _result !== '') {\n        _result += generateNextLine(state, level);\n      }\n\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        _result += '-';\n      } else {\n        _result += '- ';\n      }\n\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '[]'; // Empty sequence if no valid values.\n}\n\nfunction writeFlowMapping(state, level, object) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      pairBuffer;\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n\n    pairBuffer = '';\n    if (_result !== '') pairBuffer += ', ';\n\n    if (state.condenseFlow) pairBuffer += '\"';\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level, objectKey, false, false)) {\n      continue; // Skip this pair because of invalid key;\n    }\n\n    if (state.dump.length > 1024) pairBuffer += '? ';\n\n    pairBuffer += state.dump + (state.condenseFlow ? '\"' : '') + ':' + (state.condenseFlow ? '' : ' ');\n\n    if (!writeNode(state, level, objectValue, false, false)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = '{' + _result + '}';\n}\n\nfunction writeBlockMapping(state, level, object, compact) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      explicitPair,\n      pairBuffer;\n\n  // Allow sorting keys so that the output file is deterministic\n  if (state.sortKeys === true) {\n    // Default sorting\n    objectKeyList.sort();\n  } else if (typeof state.sortKeys === 'function') {\n    // Custom sort function\n    objectKeyList.sort(state.sortKeys);\n  } else if (state.sortKeys) {\n    // Something is wrong\n    throw new exception('sortKeys must be a boolean or a function');\n  }\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = '';\n\n    if (!compact || _result !== '') {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level + 1, objectKey, true, true, true)) {\n      continue; // Skip this pair because of invalid key.\n    }\n\n    explicitPair = (state.tag !== null && state.tag !== '?') ||\n                   (state.dump && state.dump.length > 1024);\n\n    if (explicitPair) {\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        pairBuffer += '?';\n      } else {\n        pairBuffer += '? ';\n      }\n    }\n\n    pairBuffer += state.dump;\n\n    if (explicitPair) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n      pairBuffer += ':';\n    } else {\n      pairBuffer += ': ';\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '{}'; // Empty mapping if no valid pairs.\n}\n\nfunction detectType(state, object, explicit) {\n  var _result, typeList, index, length, type, style;\n\n  typeList = explicit ? state.explicitTypes : state.implicitTypes;\n\n  for (index = 0, length = typeList.length; index < length; index += 1) {\n    type = typeList[index];\n\n    if ((type.instanceOf  || type.predicate) &&\n        (!type.instanceOf || ((typeof object === 'object') && (object instanceof type.instanceOf))) &&\n        (!type.predicate  || type.predicate(object))) {\n\n      if (explicit) {\n        if (type.multi && type.representName) {\n          state.tag = type.representName(object);\n        } else {\n          state.tag = type.tag;\n        }\n      } else {\n        state.tag = '?';\n      }\n\n      if (type.represent) {\n        style = state.styleMap[type.tag] || type.defaultStyle;\n\n        if (_toString.call(type.represent) === '[object Function]') {\n          _result = type.represent(object, style);\n        } else if (_hasOwnProperty.call(type.represent, style)) {\n          _result = type.represent[style](object, style);\n        } else {\n          throw new exception('!<' + type.tag + '> tag resolver accepts not \"' + style + '\" style');\n        }\n\n        state.dump = _result;\n      }\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// Serializes `object` and writes it to global `result`.\n// Returns true on success, or false on invalid object.\n//\nfunction writeNode(state, level, object, block, compact, iskey, isblockseq) {\n  state.tag = null;\n  state.dump = object;\n\n  if (!detectType(state, object, false)) {\n    detectType(state, object, true);\n  }\n\n  var type = _toString.call(state.dump);\n  var inblock = block;\n  var tagStr;\n\n  if (block) {\n    block = (state.flowLevel < 0 || state.flowLevel > level);\n  }\n\n  var objectOrArray = type === '[object Object]' || type === '[object Array]',\n      duplicateIndex,\n      duplicate;\n\n  if (objectOrArray) {\n    duplicateIndex = state.duplicates.indexOf(object);\n    duplicate = duplicateIndex !== -1;\n  }\n\n  if ((state.tag !== null && state.tag !== '?') || duplicate || (state.indent !== 2 && level > 0)) {\n    compact = false;\n  }\n\n  if (duplicate && state.usedDuplicates[duplicateIndex]) {\n    state.dump = '*ref_' + duplicateIndex;\n  } else {\n    if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {\n      state.usedDuplicates[duplicateIndex] = true;\n    }\n    if (type === '[object Object]') {\n      if (block && (Object.keys(state.dump).length !== 0)) {\n        writeBlockMapping(state, level, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowMapping(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object Array]') {\n      if (block && (state.dump.length !== 0)) {\n        if (state.noArrayIndent && !isblockseq && level > 0) {\n          writeBlockSequence(state, level - 1, state.dump, compact);\n        } else {\n          writeBlockSequence(state, level, state.dump, compact);\n        }\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowSequence(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object String]') {\n      if (state.tag !== '?') {\n        writeScalar(state, state.dump, level, iskey, inblock);\n      }\n    } else if (type === '[object Undefined]') {\n      return false;\n    } else {\n      if (state.skipInvalid) return false;\n      throw new exception('unacceptable kind of an object to dump ' + type);\n    }\n\n    if (state.tag !== null && state.tag !== '?') {\n      // Need to encode all characters except those allowed by the spec:\n      //\n      // [35] ns-dec-digit    ::=  [#x30-#x39] /* 0-9 */\n      // [36] ns-hex-digit    ::=  ns-dec-digit\n      //                         | [#x41-#x46] /* A-F */ | [#x61-#x66] /* a-f */\n      // [37] ns-ascii-letter ::=  [#x41-#x5A] /* A-Z */ | [#x61-#x7A] /* a-z */\n      // [38] ns-word-char    ::=  ns-dec-digit | ns-ascii-letter | \u201C-\u201D\n      // [39] ns-uri-char     ::=  \u201C%\u201D ns-hex-digit ns-hex-digit | ns-word-char | \u201C#\u201D\n      //                         | \u201C;\u201D | \u201C/\u201D | \u201C?\u201D | \u201C:\u201D | \u201C@\u201D | \u201C&\u201D | \u201C=\u201D | \u201C+\u201D | \u201C$\u201D | \u201C,\u201D\n      //                         | \u201C_\u201D | \u201C.\u201D | \u201C!\u201D | \u201C~\u201D | \u201C*\u201D | \u201C'\u201D | \u201C(\u201D | \u201C)\u201D | \u201C[\u201D | \u201C]\u201D\n      //\n      // Also need to encode '!' because it has special meaning (end of tag prefix).\n      //\n      tagStr = encodeURI(\n        state.tag[0] === '!' ? state.tag.slice(1) : state.tag\n      ).replace(/!/g, '%21');\n\n      if (state.tag[0] === '!') {\n        tagStr = '!' + tagStr;\n      } else if (tagStr.slice(0, 18) === 'tag:yaml.org,2002:') {\n        tagStr = '!!' + tagStr.slice(18);\n      } else {\n        tagStr = '!<' + tagStr + '>';\n      }\n\n      state.dump = tagStr + ' ' + state.dump;\n    }\n  }\n\n  return true;\n}\n\nfunction getDuplicateReferences(object, state) {\n  var objects = [],\n      duplicatesIndexes = [],\n      index,\n      length;\n\n  inspectNode(object, objects, duplicatesIndexes);\n\n  for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {\n    state.duplicates.push(objects[duplicatesIndexes[index]]);\n  }\n  state.usedDuplicates = new Array(length);\n}\n\nfunction inspectNode(object, objects, duplicatesIndexes) {\n  var objectKeyList,\n      index,\n      length;\n\n  if (object !== null && typeof object === 'object') {\n    index = objects.indexOf(object);\n    if (index !== -1) {\n      if (duplicatesIndexes.indexOf(index) === -1) {\n        duplicatesIndexes.push(index);\n      }\n    } else {\n      objects.push(object);\n\n      if (Array.isArray(object)) {\n        for (index = 0, length = object.length; index < length; index += 1) {\n          inspectNode(object[index], objects, duplicatesIndexes);\n        }\n      } else {\n        objectKeyList = Object.keys(object);\n\n        for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n          inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);\n        }\n      }\n    }\n  }\n}\n\nfunction dump$1(input, options) {\n  options = options || {};\n\n  var state = new State(options);\n\n  if (!state.noRefs) getDuplicateReferences(input, state);\n\n  var value = input;\n\n  if (state.replacer) {\n    value = state.replacer.call({ '': value }, '', value);\n  }\n\n  if (writeNode(state, 0, value, true, true)) return state.dump + '\\n';\n\n  return '';\n}\n\nvar dump_1 = dump$1;\n\nvar dumper = {\n\tdump: dump_1\n};\n\nfunction renamed(from, to) {\n  return function () {\n    throw new Error('Function yaml.' + from + ' is removed in js-yaml 4. ' +\n      'Use yaml.' + to + ' instead, which is now safe by default.');\n  };\n}\n\n\nvar Type                = type;\nvar Schema              = schema;\nvar FAILSAFE_SCHEMA     = failsafe;\nvar JSON_SCHEMA         = json;\nvar CORE_SCHEMA         = core;\nvar DEFAULT_SCHEMA      = _default;\nvar load                = loader.load;\nvar loadAll             = loader.loadAll;\nvar dump                = dumper.dump;\nvar YAMLException       = exception;\n\n// Re-export all types in case user wants to create custom schema\nvar types = {\n  binary:    binary,\n  float:     float,\n  map:       map,\n  null:      _null,\n  pairs:     pairs,\n  set:       set,\n  timestamp: timestamp,\n  bool:      bool,\n  int:       int,\n  merge:     merge,\n  omap:      omap,\n  seq:       seq,\n  str:       str\n};\n\n// Removed functions from JS-YAML 3.0.x\nvar safeLoad            = renamed('safeLoad', 'load');\nvar safeLoadAll         = renamed('safeLoadAll', 'loadAll');\nvar safeDump            = renamed('safeDump', 'dump');\n\nvar jsYaml = {\n\tType: Type,\n\tSchema: Schema,\n\tFAILSAFE_SCHEMA: FAILSAFE_SCHEMA,\n\tJSON_SCHEMA: JSON_SCHEMA,\n\tCORE_SCHEMA: CORE_SCHEMA,\n\tDEFAULT_SCHEMA: DEFAULT_SCHEMA,\n\tload: load,\n\tloadAll: loadAll,\n\tdump: dump,\n\tYAMLException: YAMLException,\n\ttypes: types,\n\tsafeLoad: safeLoad,\n\tsafeLoadAll: safeLoadAll,\n\tsafeDump: safeDump\n};\n\nexport default jsYaml;\nexport { CORE_SCHEMA, DEFAULT_SCHEMA, FAILSAFE_SCHEMA, JSON_SCHEMA, Schema, Type, YAMLException, dump, load, loadAll, safeDump, safeLoad, safeLoadAll, types };\n", "import { OpenAPISpec } from \"../../util/openapi.js\";\nimport { BaseChain } from \"../base.js\";\nimport { LLMChain } from \"../llm_chain.js\";\nimport { ChatOpenAI } from \"../../chat_models/openai.js\";\nimport { ChatPromptTemplate, HumanMessagePromptTemplate, } from \"../../prompts/chat.js\";\nimport { SequentialChain } from \"../sequential_chain.js\";\nimport { JsonOutputFunctionsParser } from \"../../output_parsers/openai_functions.js\";\nfunction formatURL(url, pathParams) {\n    const expectedPathParamNames = [...url.matchAll(/{(.*?)}/g)].map((match) => match[1]);\n    const newParams = {};\n    for (const paramName of expectedPathParamNames) {\n        const cleanParamName = paramName.replace(/^\\.;/, \"\").replace(/\\*$/, \"\");\n        const value = pathParams[cleanParamName];\n        let formattedValue;\n        if (Array.isArray(value)) {\n            if (paramName.startsWith(\".\")) {\n                const separator = paramName.endsWith(\"*\") ? \".\" : \",\";\n                formattedValue = `.${value.join(separator)}`;\n            }\n            else if (paramName.startsWith(\",\")) {\n                const separator = paramName.endsWith(\"*\") ? `${cleanParamName}=` : \",\";\n                formattedValue = `${cleanParamName}=${value.join(separator)}`;\n            }\n            else {\n                formattedValue = value.join(\",\");\n            }\n        }\n        else if (typeof value === \"object\") {\n            const kvSeparator = paramName.endsWith(\"*\") ? \"=\" : \",\";\n            const kvStrings = Object.entries(value).map(([k, v]) => k + kvSeparator + v);\n            let entrySeparator;\n            if (paramName.startsWith(\".\")) {\n                entrySeparator = \".\";\n                formattedValue = \".\";\n            }\n            else if (paramName.startsWith(\";\")) {\n                entrySeparator = \";\";\n                formattedValue = \";\";\n            }\n            else {\n                entrySeparator = \",\";\n                formattedValue = \"\";\n            }\n            formattedValue += kvStrings.join(entrySeparator);\n        }\n        else {\n            if (paramName.startsWith(\".\")) {\n                formattedValue = `.${value}`;\n            }\n            else if (paramName.startsWith(\";\")) {\n                formattedValue = `;${cleanParamName}=${value}`;\n            }\n            else {\n                formattedValue = value;\n            }\n        }\n        newParams[paramName] = formattedValue;\n    }\n    let formattedUrl = url;\n    for (const [key, newValue] of Object.entries(newParams)) {\n        formattedUrl = formattedUrl.replace(`{${key}}`, newValue);\n    }\n    return formattedUrl;\n}\nfunction convertOpenAPIParamsToJSONSchema(params, spec) {\n    return params.reduce((jsonSchema, param) => {\n        let schema;\n        if (param.schema) {\n            schema = spec.getSchema(param.schema);\n            // eslint-disable-next-line no-param-reassign\n            jsonSchema.properties[param.name] = convertOpenAPISchemaToJSONSchema(schema, spec);\n        }\n        else if (param.content) {\n            const mediaTypeSchema = Object.values(param.content)[0].schema;\n            if (mediaTypeSchema) {\n                schema = spec.getSchema(mediaTypeSchema);\n            }\n            if (!schema) {\n                return jsonSchema;\n            }\n            if (schema.description === undefined) {\n                schema.description = param.description ?? \"\";\n            }\n            // eslint-disable-next-line no-param-reassign\n            jsonSchema.properties[param.name] = convertOpenAPISchemaToJSONSchema(schema, spec);\n        }\n        else {\n            return jsonSchema;\n        }\n        if (param.required && Array.isArray(jsonSchema.required)) {\n            jsonSchema.required.push(param.name);\n        }\n        return jsonSchema;\n    }, {\n        type: \"object\",\n        properties: {},\n        required: [],\n        additionalProperties: {},\n    });\n}\n// OpenAI throws errors on extraneous schema properties, e.g. if \"required\" is set on individual ones\nfunction convertOpenAPISchemaToJSONSchema(schema, spec) {\n    if (schema.type !== \"object\" && schema.type !== \"array\") {\n        return {\n            type: schema.type ?? \"string\",\n        };\n    }\n    return Object.keys(schema.properties ?? {}).reduce((jsonSchema, propertyName) => {\n        if (!schema.properties) {\n            return jsonSchema;\n        }\n        const openAPIProperty = spec.getSchema(schema.properties[propertyName]);\n        if (openAPIProperty.type === undefined) {\n            return jsonSchema;\n        }\n        // eslint-disable-next-line no-param-reassign\n        jsonSchema.properties[propertyName] = {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            type: openAPIProperty.type,\n            description: openAPIProperty.description,\n        };\n        if (openAPIProperty.required && jsonSchema.required !== undefined) {\n            jsonSchema.required.push(propertyName);\n        }\n        return jsonSchema;\n    }, {\n        type: \"object\",\n        properties: {},\n        required: [],\n        additionalProperties: {},\n    });\n}\nfunction convertOpenAPISpecToOpenAIFunctions(spec) {\n    if (!spec.document.paths) {\n        return { openAIFunctions: [] };\n    }\n    const openAIFunctions = [];\n    const nameToCallMap = {};\n    for (const path of Object.keys(spec.document.paths)) {\n        const pathParameters = spec.getParametersForPath(path);\n        for (const method of spec.getMethodsForPath(path)) {\n            const operation = spec.getOperation(path, method);\n            if (!operation) {\n                return { openAIFunctions: [] };\n            }\n            const operationParametersByLocation = pathParameters\n                .concat(spec.getParametersForOperation(operation))\n                .reduce((operationParams, param) => {\n                if (!operationParams[param.in]) {\n                    // eslint-disable-next-line no-param-reassign\n                    operationParams[param.in] = [];\n                }\n                operationParams[param.in].push(param);\n                return operationParams;\n            }, {});\n            const paramLocationToRequestArgNameMap = {\n                query: \"params\",\n                header: \"headers\",\n                cookie: \"cookies\",\n                path: \"path_params\",\n            };\n            const requestArgsSchema = {};\n            for (const paramLocation of Object.keys(paramLocationToRequestArgNameMap)) {\n                if (operationParametersByLocation[paramLocation]) {\n                    requestArgsSchema[paramLocationToRequestArgNameMap[paramLocation]] =\n                        convertOpenAPIParamsToJSONSchema(operationParametersByLocation[paramLocation], spec);\n                }\n            }\n            const requestBody = spec.getRequestBodyForOperation(operation);\n            if (requestBody?.content !== undefined) {\n                const requestBodySchemas = {};\n                for (const [mediaType, mediaTypeObject] of Object.entries(requestBody.content)) {\n                    if (mediaTypeObject.schema !== undefined) {\n                        const schema = spec.getSchema(mediaTypeObject.schema);\n                        requestBodySchemas[mediaType] = convertOpenAPISchemaToJSONSchema(schema, spec);\n                    }\n                }\n                const mediaTypes = Object.keys(requestBodySchemas);\n                if (mediaTypes.length === 1) {\n                    requestArgsSchema.data = requestBodySchemas[mediaTypes[0]];\n                }\n                else if (mediaTypes.length > 1) {\n                    requestArgsSchema.data = {\n                        anyOf: Object.values(requestBodySchemas),\n                    };\n                }\n            }\n            const openAIFunction = {\n                name: OpenAPISpec.getCleanedOperationId(operation, path, method),\n                description: operation.description ?? operation.summary ?? \"\",\n                parameters: {\n                    type: \"object\",\n                    properties: requestArgsSchema,\n                    // All remaining top-level parameters are required\n                    required: Object.keys(requestArgsSchema),\n                },\n            };\n            openAIFunctions.push(openAIFunction);\n            const baseUrl = (spec.baseUrl ?? \"\").endsWith(\"/\")\n                ? (spec.baseUrl ?? \"\").slice(0, -1)\n                : spec.baseUrl ?? \"\";\n            nameToCallMap[openAIFunction.name] = {\n                method,\n                url: baseUrl + path,\n            };\n        }\n    }\n    return {\n        openAIFunctions,\n        defaultExecutionMethod: async (name, \n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        requestArgs, options) => {\n            const { headers: customHeaders, params: customParams, ...rest } = options ?? {};\n            const { method, url } = nameToCallMap[name];\n            const requestParams = requestArgs.params ?? {};\n            const nonEmptyParams = Object.keys(requestParams).reduce(\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            (filteredArgs, argName) => {\n                if (requestParams[argName] !== \"\" &&\n                    requestParams[argName] !== null &&\n                    requestParams[argName] !== undefined) {\n                    // eslint-disable-next-line no-param-reassign\n                    filteredArgs[argName] = requestParams[argName];\n                }\n                return filteredArgs;\n            }, {});\n            const queryString = new URLSearchParams({\n                ...nonEmptyParams,\n                ...customParams,\n            }).toString();\n            const pathParams = requestArgs.path_params;\n            const formattedUrl = formatURL(url, pathParams) +\n                (queryString.length ? `?${queryString}` : \"\");\n            const headers = {};\n            let body;\n            if (requestArgs.data !== undefined) {\n                let contentType = \"text/plain\";\n                if (typeof requestArgs.data !== \"string\") {\n                    if (typeof requestArgs.data === \"object\") {\n                        contentType = \"application/json\";\n                    }\n                    body = JSON.stringify(requestArgs.data);\n                }\n                else {\n                    body = requestArgs.data;\n                }\n                headers[\"content-type\"] = contentType;\n            }\n            const response = await fetch(formattedUrl, {\n                ...requestArgs,\n                method,\n                headers: {\n                    ...headers,\n                    ...requestArgs.headers,\n                    ...customHeaders,\n                },\n                body,\n                ...rest,\n            });\n            let output;\n            if (response.status < 200 || response.status > 299) {\n                output = `${response.status}: ${response.statusText} for ${name} called with ${JSON.stringify(queryString)}`;\n            }\n            else {\n                output = await response.text();\n            }\n            return output;\n        },\n    };\n}\nclass SimpleRequestChain extends BaseChain {\n    constructor(config) {\n        super();\n        Object.defineProperty(this, \"requestMethod\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"inputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"function\"\n        });\n        Object.defineProperty(this, \"outputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"response\"\n        });\n        this.requestMethod = config.requestMethod;\n    }\n    get inputKeys() {\n        return [this.inputKey];\n    }\n    get outputKeys() {\n        return [this.outputKey];\n    }\n    _chainType() {\n        return \"simple_request_chain\";\n    }\n    /** @ignore */\n    async _call(values, _runManager) {\n        const inputKeyValue = values[this.inputKey];\n        const methodName = inputKeyValue.name;\n        const args = inputKeyValue.arguments;\n        const response = await this.requestMethod(methodName, args);\n        return { [this.outputKey]: response };\n    }\n}\n/**\n * Create a chain for querying an API from a OpenAPI spec.\n * @param spec OpenAPISpec or url/file/text string corresponding to one.\n * @param options Custom options passed into the chain\n * @returns OpenAPIChain\n */\nexport async function createOpenAPIChain(spec, options = {}) {\n    let convertedSpec;\n    if (typeof spec === \"string\") {\n        try {\n            convertedSpec = await OpenAPISpec.fromURL(spec);\n        }\n        catch (e) {\n            try {\n                convertedSpec = OpenAPISpec.fromString(spec);\n            }\n            catch (e) {\n                throw new Error(`Unable to parse spec from source ${spec}.`);\n            }\n        }\n    }\n    else {\n        convertedSpec = OpenAPISpec.fromObject(spec);\n    }\n    const { openAIFunctions, defaultExecutionMethod } = convertOpenAPISpecToOpenAIFunctions(convertedSpec);\n    if (defaultExecutionMethod === undefined) {\n        throw new Error(`Could not parse any valid operations from the provided spec.`);\n    }\n    const { llm = new ChatOpenAI({ modelName: \"gpt-3.5-turbo-0613\" }), prompt = ChatPromptTemplate.fromPromptMessages([\n        HumanMessagePromptTemplate.fromTemplate(\"Use the provided API's to respond to this user query:\\n\\n{query}\"),\n    ]), requestChain = new SimpleRequestChain({\n        requestMethod: async (name, args) => defaultExecutionMethod(name, args, {\n            headers: options.headers,\n            params: options.params,\n        }),\n    }), llmChainInputs = {}, verbose, ...rest } = options;\n    const formatChain = new LLMChain({\n        llm,\n        prompt,\n        outputParser: new JsonOutputFunctionsParser({ argsOnly: false }),\n        outputKey: \"function\",\n        llmKwargs: { functions: openAIFunctions },\n        ...llmChainInputs,\n    });\n    return new SequentialChain({\n        chains: [formatChain, requestChain],\n        outputVariables: [\"response\"],\n        inputVariables: formatChain.inputKeys,\n        verbose,\n        ...rest,\n    });\n}\n", "import { zodToJsonSchema } from \"zod-to-json-schema\";\nimport { Validator } from \"../../util/@cfworker/json-schema/index.js\";\nimport { LLMChain } from \"../llm_chain.js\";\nimport { ChatOpenAI } from \"../../chat_models/openai.js\";\nimport { BaseLLMOutputParser, OutputParserException, } from \"../../schema/output_parser.js\";\nimport { OutputFunctionsParser } from \"../../output_parsers/openai_functions.js\";\nexport class FunctionCallStructuredOutputParser extends BaseLLMOutputParser {\n    constructor(schema) {\n        super();\n        Object.defineProperty(this, \"schema\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: schema\n        });\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"chains\", \"openai_functions\"]\n        });\n        Object.defineProperty(this, \"functionOutputParser\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new OutputFunctionsParser()\n        });\n        Object.defineProperty(this, \"jsonSchemaValidator\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.jsonSchemaValidator = new Validator(schema, \"7\");\n    }\n    async parseResult(generations) {\n        const initialResult = await this.functionOutputParser.parseResult(generations);\n        const parsedResult = JSON.parse(initialResult, (_, value) => {\n            if (value === null) {\n                return undefined;\n            }\n            return value;\n        });\n        const result = this.jsonSchemaValidator.validate(parsedResult);\n        if (result.valid) {\n            return parsedResult;\n        }\n        else {\n            throw new OutputParserException(`Failed to parse. Text: \"${initialResult}\". Error: ${JSON.stringify(result.errors)}`, initialResult);\n        }\n    }\n}\n/**\n * Create a chain that returns output matching a JSON Schema.\n * @param input Object that includes all LLMChainInput fields except \"outputParser\"\n * as well as an additional required \"outputSchema\" JSON Schema object.\n * @returns OpenAPIChain\n */\nexport function createStructuredOutputChain(input) {\n    const { outputSchema, llm = new ChatOpenAI({ modelName: \"gpt-3.5-turbo-0613\", temperature: 0 }), outputKey = \"output\", llmKwargs = {}, ...rest } = input;\n    const functionName = \"output_formatter\";\n    return new LLMChain({\n        llm,\n        llmKwargs: {\n            ...llmKwargs,\n            functions: [\n                {\n                    name: functionName,\n                    description: `Output formatter. Should always be used to format your response to the user.`,\n                    parameters: outputSchema,\n                },\n            ],\n            function_call: {\n                name: functionName,\n            },\n        },\n        outputKey,\n        outputParser: new FunctionCallStructuredOutputParser(outputSchema),\n        ...rest,\n    });\n}\nexport function createStructuredOutputChainFromZod(zodSchema, input) {\n    return createStructuredOutputChain({\n        ...input,\n        outputSchema: zodToJsonSchema(zodSchema),\n    });\n}\n", "import { encodePointer } from \"./pointer.js\";\nexport const schemaKeyword = {\n    additionalItems: true,\n    unevaluatedItems: true,\n    items: true,\n    contains: true,\n    additionalProperties: true,\n    unevaluatedProperties: true,\n    propertyNames: true,\n    not: true,\n    if: true,\n    then: true,\n    else: true,\n};\nexport const schemaArrayKeyword = {\n    prefixItems: true,\n    items: true,\n    allOf: true,\n    anyOf: true,\n    oneOf: true,\n};\nexport const schemaMapKeyword = {\n    $defs: true,\n    definitions: true,\n    properties: true,\n    patternProperties: true,\n    dependentSchemas: true,\n};\nexport const ignoredKeyword = {\n    id: true,\n    $id: true,\n    $ref: true,\n    $schema: true,\n    $anchor: true,\n    $vocabulary: true,\n    $comment: true,\n    default: true,\n    enum: true,\n    const: true,\n    required: true,\n    type: true,\n    maximum: true,\n    minimum: true,\n    exclusiveMaximum: true,\n    exclusiveMinimum: true,\n    multipleOf: true,\n    maxLength: true,\n    minLength: true,\n    pattern: true,\n    format: true,\n    maxItems: true,\n    minItems: true,\n    uniqueItems: true,\n    maxProperties: true,\n    minProperties: true,\n};\n/**\n * Default base URI for schemas without an $id.\n * https://json-schema.org/draft/2019-09/json-schema-core.html#initial-base\n * https://tools.ietf.org/html/rfc3986#section-5.1\n */\nexport let initialBaseURI = \n// @ts-ignore\ntypeof self !== \"undefined\" && self.location\n    ? //@ts-ignore\n        /* #__PURE__ */ new URL(self.location.origin + self.location.pathname + location.search)\n    : /* #__PURE__ */ new URL(\"https://github.com/cfworker\");\nexport function dereference(schema, lookup = Object.create(null), baseURI = initialBaseURI, basePointer = \"\") {\n    if (schema && typeof schema === \"object\" && !Array.isArray(schema)) {\n        const id = schema.$id || schema.id;\n        if (id) {\n            const url = new URL(id, baseURI.href);\n            if (url.hash.length > 1) {\n                lookup[url.href] = schema;\n            }\n            else {\n                url.hash = \"\"; // normalize hash https://url.spec.whatwg.org/#dom-url-hash\n                if (basePointer === \"\") {\n                    baseURI = url;\n                }\n                else {\n                    dereference(schema, lookup, baseURI);\n                }\n            }\n        }\n    }\n    else if (schema !== true && schema !== false) {\n        return lookup;\n    }\n    // compute the schema's URI and add it to the mapping.\n    const schemaURI = baseURI.href + (basePointer ? \"#\" + basePointer : \"\");\n    if (lookup[schemaURI] !== undefined) {\n        throw new Error(`Duplicate schema URI \"${schemaURI}\".`);\n    }\n    lookup[schemaURI] = schema;\n    // exit early if this is a boolean schema.\n    if (schema === true || schema === false) {\n        return lookup;\n    }\n    // set the schema's absolute URI.\n    if (schema.__absolute_uri__ === undefined) {\n        Object.defineProperty(schema, \"__absolute_uri__\", {\n            enumerable: false,\n            value: schemaURI,\n        });\n    }\n    // if a $ref is found, resolve it's absolute URI.\n    if (schema.$ref && schema.__absolute_ref__ === undefined) {\n        const url = new URL(schema.$ref, baseURI.href);\n        url.hash = url.hash; // normalize hash https://url.spec.whatwg.org/#dom-url-hash\n        Object.defineProperty(schema, \"__absolute_ref__\", {\n            enumerable: false,\n            value: url.href,\n        });\n    }\n    // if a $recursiveRef is found, resolve it's absolute URI.\n    if (schema.$recursiveRef && schema.__absolute_recursive_ref__ === undefined) {\n        const url = new URL(schema.$recursiveRef, baseURI.href);\n        url.hash = url.hash; // normalize hash https://url.spec.whatwg.org/#dom-url-hash\n        Object.defineProperty(schema, \"__absolute_recursive_ref__\", {\n            enumerable: false,\n            value: url.href,\n        });\n    }\n    // if an $anchor is found, compute it's URI and add it to the mapping.\n    if (schema.$anchor) {\n        const url = new URL(\"#\" + schema.$anchor, baseURI.href);\n        lookup[url.href] = schema;\n    }\n    // process subschemas.\n    for (let key in schema) {\n        if (ignoredKeyword[key]) {\n            continue;\n        }\n        const keyBase = `${basePointer}/${encodePointer(key)}`;\n        const subSchema = schema[key];\n        if (Array.isArray(subSchema)) {\n            if (schemaArrayKeyword[key]) {\n                const length = subSchema.length;\n                for (let i = 0; i < length; i++) {\n                    dereference(subSchema[i], lookup, baseURI, `${keyBase}/${i}`);\n                }\n            }\n        }\n        else if (schemaMapKeyword[key]) {\n            for (let subKey in subSchema) {\n                dereference(subSchema[subKey], lookup, baseURI, `${keyBase}/${encodePointer(subKey)}`);\n            }\n        }\n        else {\n            dereference(subSchema, lookup, baseURI, keyBase);\n        }\n    }\n    return lookup;\n}\n// schema identification examples\n// https://json-schema.org/draft/2019-09/json-schema-core.html#rfc.appendix.A\n// $ref delegation\n// https://github.com/json-schema-org/json-schema-spec/issues/514\n// output format\n// https://json-schema.org/draft/2019-09/json-schema-core.html#output\n// JSON pointer\n// https://tools.ietf.org/html/rfc6901\n// JSON relative pointer\n// https://tools.ietf.org/html/draft-handrews-relative-json-pointer-01\n", "// based on https://github.com/epoberezkin/ajv/blob/master/lib/compile/formats.js\nconst DATE = /^(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)$/;\nconst DAYS = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst TIME = /^(\\d\\d):(\\d\\d):(\\d\\d)(\\.\\d+)?(z|[+-]\\d\\d(?::?\\d\\d)?)?$/i;\nconst HOSTNAME = /^(?=.{1,253}\\.?$)[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?(?:\\.[a-z0-9](?:[-0-9a-z]{0,61}[0-9a-z])?)*\\.?$/i;\n// const URI = /^(?:[a-z][a-z0-9+\\-.]*:)(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\\?(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;\nconst URIREF = /^(?:[a-z][a-z0-9+\\-.]*:)?(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'\"()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'\"()*+,;=:@]|%[0-9a-f]{2})*)*)?(?:\\?(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'\"()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;\n// uri-template: https://tools.ietf.org/html/rfc6570\nconst URITEMPLATE = /^(?:(?:[^\\x00-\\x20\"'<>%\\\\^`{|}]|%[0-9a-f]{2})|\\{[+#./;?&=,!@|]?(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?(?:,(?:[a-z0-9_]|%[0-9a-f]{2})+(?::[1-9][0-9]{0,3}|\\*)?)*\\})*$/i;\n// For the source: https://gist.github.com/dperini/729294\n// For test cases: https://mathiasbynens.be/demo/url-regex\nconst URL_ = /^(?:(?:https?|ftp):\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!10(?:\\.\\d{1,3}){3})(?!127(?:\\.\\d{1,3}){3})(?!169\\.254(?:\\.\\d{1,3}){2})(?!192\\.168(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-?)*[a-z\\u{00a1}-\\u{ffff}0-9]+)(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}0-9]+-?)*[a-z\\u{00a1}-\\u{ffff}0-9]+)*(?:\\.(?:[a-z\\u{00a1}-\\u{ffff}]{2,})))(?::\\d{2,5})?(?:\\/[^\\s]*)?$/iu;\nconst UUID = /^(?:urn:uuid:)?[0-9a-f]{8}-(?:[0-9a-f]{4}-){3}[0-9a-f]{12}$/i;\nconst JSON_POINTER = /^(?:\\/(?:[^~/]|~0|~1)*)*$/;\nconst JSON_POINTER_URI_FRAGMENT = /^#(?:\\/(?:[a-z0-9_\\-.!$&'()*+,;:=@]|%[0-9a-f]{2}|~0|~1)*)*$/i;\nconst RELATIVE_JSON_POINTER = /^(?:0|[1-9][0-9]*)(?:#|(?:\\/(?:[^~/]|~0|~1)*)*)$/;\n// date: http://tools.ietf.org/html/rfc3339#section-5.6\nconst FASTDATE = /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d$/;\n// date-time: http://tools.ietf.org/html/rfc3339#section-5.6\nconst FASTTIME = /^(?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d(?::?\\d\\d)?)?$/i;\nconst FASTDATETIME = /^\\d\\d\\d\\d-[0-1]\\d-[0-3]\\d[t\\s](?:[0-2]\\d:[0-5]\\d:[0-5]\\d|23:59:60)(?:\\.\\d+)?(?:z|[+-]\\d\\d(?::?\\d\\d)?)$/i;\n// uri: https://github.com/mafintosh/is-my-json-valid/blob/master/formats.js\n// const FASTURI = /^(?:[a-z][a-z0-9+-.]*:)(?:\\/?\\/)?[^\\s]*$/i;\nconst FASTURIREFERENCE = /^(?:(?:[a-z][a-z0-9+-.]*:)?\\/?\\/)?(?:[^\\\\\\s#][^\\s#]*)?(?:#[^\\\\\\s]*)?$/i;\n// https://github.com/ExodusMovement/schemasafe/blob/master/src/formats.js\nconst EMAIL = (input) => {\n    if (input[0] === '\"')\n        return false;\n    const [name, host, ...rest] = input.split(\"@\");\n    if (!name ||\n        !host ||\n        rest.length !== 0 ||\n        name.length > 64 ||\n        host.length > 253)\n        return false;\n    if (name[0] === \".\" || name.endsWith(\".\") || name.includes(\"..\"))\n        return false;\n    if (!/^[a-z0-9.-]+$/i.test(host) ||\n        !/^[a-z0-9.!#$%&'*+/=?^_`{|}~-]+$/i.test(name))\n        return false;\n    return host\n        .split(\".\")\n        .every((part) => /^[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?$/i.test(part));\n};\n// optimized https://www.safaribooksonline.com/library/view/regular-expressions-cookbook/9780596802837/ch07s16.html\nconst IPV4 = /^(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/;\n// optimized http://stackoverflow.com/questions/53497/regular-expression-that-matches-valid-ipv6-addresses\nconst IPV6 = /^((([0-9a-f]{1,4}:){7}([0-9a-f]{1,4}|:))|(([0-9a-f]{1,4}:){6}(:[0-9a-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9a-f]{1,4}:){5}(((:[0-9a-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9a-f]{1,4}:){4}(((:[0-9a-f]{1,4}){1,3})|((:[0-9a-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){3}(((:[0-9a-f]{1,4}){1,4})|((:[0-9a-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){2}(((:[0-9a-f]{1,4}){1,5})|((:[0-9a-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(([0-9a-f]{1,4}:){1}(((:[0-9a-f]{1,4}){1,6})|((:[0-9a-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9a-f]{1,4}){1,7})|((:[0-9a-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3}))|:)))$/i;\n// https://github.com/ExodusMovement/schemasafe/blob/master/src/formats.js\nconst DURATION = (input) => input.length > 1 &&\n    input.length < 80 &&\n    (/^P\\d+([.,]\\d+)?W$/.test(input) ||\n        (/^P[\\dYMDTHS]*(\\d[.,]\\d+)?[YMDHS]$/.test(input) &&\n            /^P([.,\\d]+Y)?([.,\\d]+M)?([.,\\d]+D)?(T([.,\\d]+H)?([.,\\d]+M)?([.,\\d]+S)?)?$/.test(input)));\nfunction bind(r) {\n    return r.test.bind(r);\n}\nexport const fullFormat = {\n    date,\n    time: /* #__PURE__ */ time.bind(undefined, false),\n    \"date-time\": date_time,\n    duration: DURATION,\n    uri,\n    \"uri-reference\": /* #__PURE__ */ bind(URIREF),\n    \"uri-template\": /* #__PURE__ */ bind(URITEMPLATE),\n    url: /* #__PURE__ */ bind(URL_),\n    email: EMAIL,\n    hostname: /* #__PURE__ */ bind(HOSTNAME),\n    ipv4: /* #__PURE__ */ bind(IPV4),\n    ipv6: /* #__PURE__ */ bind(IPV6),\n    regex: regex,\n    uuid: /* #__PURE__ */ bind(UUID),\n    \"json-pointer\": /* #__PURE__ */ bind(JSON_POINTER),\n    \"json-pointer-uri-fragment\": /* #__PURE__ */ bind(JSON_POINTER_URI_FRAGMENT),\n    \"relative-json-pointer\": /* #__PURE__ */ bind(RELATIVE_JSON_POINTER),\n};\nexport const fastFormat = {\n    ...fullFormat,\n    date: /* #__PURE__ */ bind(FASTDATE),\n    time: /* #__PURE__ */ bind(FASTTIME),\n    \"date-time\": /* #__PURE__ */ bind(FASTDATETIME),\n    \"uri-reference\": /* #__PURE__ */ bind(FASTURIREFERENCE),\n};\nfunction isLeapYear(year) {\n    // https://tools.ietf.org/html/rfc3339#appendix-C\n    return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n}\nfunction date(str) {\n    // full-date from http://tools.ietf.org/html/rfc3339#section-5.6\n    const matches = str.match(DATE);\n    if (!matches)\n        return false;\n    const year = +matches[1];\n    const month = +matches[2];\n    const day = +matches[3];\n    return (month >= 1 &&\n        month <= 12 &&\n        day >= 1 &&\n        day <= (month == 2 && isLeapYear(year) ? 29 : DAYS[month]));\n}\nfunction time(full, str) {\n    const matches = str.match(TIME);\n    if (!matches)\n        return false;\n    const hour = +matches[1];\n    const minute = +matches[2];\n    const second = +matches[3];\n    const timeZone = !!matches[5];\n    return (((hour <= 23 && minute <= 59 && second <= 59) ||\n        (hour == 23 && minute == 59 && second == 60)) &&\n        (!full || timeZone));\n}\nconst DATE_TIME_SEPARATOR = /t|\\s/i;\nfunction date_time(str) {\n    // http://tools.ietf.org/html/rfc3339#section-5.6\n    const dateTime = str.split(DATE_TIME_SEPARATOR);\n    return dateTime.length == 2 && date(dateTime[0]) && time(true, dateTime[1]);\n}\nconst NOT_URI_FRAGMENT = /\\/|:/;\nconst URI_PATTERN = /^(?:[a-z][a-z0-9+\\-.]*:)(?:\\/?\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:]|%[0-9a-f]{2})*@)?(?:\\[(?:(?:(?:(?:[0-9a-f]{1,4}:){6}|::(?:[0-9a-f]{1,4}:){5}|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::)(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?))|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|[Vv][0-9a-f]+\\.[a-z0-9\\-._~!$&'()*+,;=:]+)\\]|(?:(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d\\d?)|(?:[a-z0-9\\-._~!$&'()*+,;=]|%[0-9a-f]{2})*)(?::\\d*)?(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*|\\/(?:(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)?|(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})+(?:\\/(?:[a-z0-9\\-._~!$&'()*+,;=:@]|%[0-9a-f]{2})*)*)(?:\\?(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?(?:#(?:[a-z0-9\\-._~!$&'()*+,;=:@/?]|%[0-9a-f]{2})*)?$/i;\nfunction uri(str) {\n    // http://jmrware.com/articles/2009/uri_regexp/URI_regex.html + optional protocol + required \".\"\n    return NOT_URI_FRAGMENT.test(str) && URI_PATTERN.test(str);\n}\nconst Z_ANCHOR = /[^\\\\]\\\\Z/;\nfunction regex(str) {\n    if (Z_ANCHOR.test(str))\n        return false;\n    try {\n        new RegExp(str);\n        return true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n", "import { AsyncCaller } from \"../util/async_caller.js\";\nexport class Embeddings {\n    constructor(params) {\n        /**\n         * The async caller should be used by subclasses to make any async calls,\n         * which will thus benefit from the concurrency and retry logic.\n         */\n        Object.defineProperty(this, \"caller\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.caller = new AsyncCaller(params ?? {});\n    }\n}\n", "import { Configuration, OpenAIApi, } from \"openai\";\nimport { getEnvironmentVariable, isNode } from \"../util/env.js\";\nimport fetchAdapter from \"../util/axios-fetch-adapter.js\";\nimport { chunkArray } from \"../util/chunk.js\";\nimport { Embeddings } from \"./base.js\";\nimport { getEndpoint } from \"../util/azure.js\";\nexport class OpenAIEmbeddings extends Embeddings {\n    constructor(fields, configuration) {\n        super(fields ?? {});\n        Object.defineProperty(this, \"modelName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"text-embedding-ada-002\"\n        });\n        Object.defineProperty(this, \"batchSize\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 512\n        });\n        Object.defineProperty(this, \"stripNewLines\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"timeout\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"azureOpenAIApiVersion\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"azureOpenAIApiKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"azureOpenAIApiInstanceName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"azureOpenAIApiDeploymentName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"azureOpenAIBasePath\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"client\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"clientConfig\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        const apiKey = fields?.openAIApiKey ?? getEnvironmentVariable(\"OPENAI_API_KEY\");\n        const azureApiKey = fields?.azureOpenAIApiKey ??\n            getEnvironmentVariable(\"AZURE_OPENAI_API_KEY\");\n        if (!azureApiKey && !apiKey) {\n            throw new Error(\"OpenAI or Azure OpenAI API key not found\");\n        }\n        const azureApiInstanceName = fields?.azureOpenAIApiInstanceName ??\n            getEnvironmentVariable(\"AZURE_OPENAI_API_INSTANCE_NAME\");\n        const azureApiDeploymentName = (fields?.azureOpenAIApiEmbeddingsDeploymentName ||\n            fields?.azureOpenAIApiDeploymentName) ??\n            (getEnvironmentVariable(\"AZURE_OPENAI_API_EMBEDDINGS_DEPLOYMENT_NAME\") ||\n                getEnvironmentVariable(\"AZURE_OPENAI_API_DEPLOYMENT_NAME\"));\n        const azureApiVersion = fields?.azureOpenAIApiVersion ??\n            getEnvironmentVariable(\"AZURE_OPENAI_API_VERSION\");\n        this.azureOpenAIBasePath =\n            fields?.azureOpenAIBasePath ??\n                getEnvironmentVariable(\"AZURE_OPENAI_BASE_PATH\");\n        this.modelName = fields?.modelName ?? this.modelName;\n        this.batchSize = fields?.batchSize ?? (azureApiKey ? 1 : this.batchSize);\n        this.stripNewLines = fields?.stripNewLines ?? this.stripNewLines;\n        this.timeout = fields?.timeout;\n        this.azureOpenAIApiVersion = azureApiVersion;\n        this.azureOpenAIApiKey = azureApiKey;\n        this.azureOpenAIApiInstanceName = azureApiInstanceName;\n        this.azureOpenAIApiDeploymentName = azureApiDeploymentName;\n        if (this.azureOpenAIApiKey) {\n            if (!this.azureOpenAIApiInstanceName) {\n                throw new Error(\"Azure OpenAI API instance name not found\");\n            }\n            if (!this.azureOpenAIApiDeploymentName) {\n                throw new Error(\"Azure OpenAI API deployment name not found\");\n            }\n            if (!this.azureOpenAIApiVersion) {\n                throw new Error(\"Azure OpenAI API version not found\");\n            }\n        }\n        this.clientConfig = {\n            apiKey,\n            ...configuration,\n        };\n    }\n    async embedDocuments(texts) {\n        const subPrompts = chunkArray(this.stripNewLines ? texts.map((t) => t.replace(/\\n/g, \" \")) : texts, this.batchSize);\n        const embeddings = [];\n        for (let i = 0; i < subPrompts.length; i += 1) {\n            const input = subPrompts[i];\n            const { data } = await this.embeddingWithRetry({\n                model: this.modelName,\n                input,\n            });\n            for (let j = 0; j < input.length; j += 1) {\n                embeddings.push(data.data[j].embedding);\n            }\n        }\n        return embeddings;\n    }\n    async embedQuery(text) {\n        const { data } = await this.embeddingWithRetry({\n            model: this.modelName,\n            input: this.stripNewLines ? text.replace(/\\n/g, \" \") : text,\n        });\n        return data.data[0].embedding;\n    }\n    async embeddingWithRetry(request) {\n        if (!this.client) {\n            const openAIEndpointConfig = {\n                azureOpenAIApiDeploymentName: this.azureOpenAIApiDeploymentName,\n                azureOpenAIApiInstanceName: this.azureOpenAIApiInstanceName,\n                azureOpenAIApiKey: this.azureOpenAIApiKey,\n                azureOpenAIBasePath: this.azureOpenAIBasePath,\n                basePath: this.clientConfig.basePath,\n            };\n            const endpoint = getEndpoint(openAIEndpointConfig);\n            const clientConfig = new Configuration({\n                ...this.clientConfig,\n                basePath: endpoint,\n                baseOptions: {\n                    timeout: this.timeout,\n                    adapter: isNode() ? undefined : fetchAdapter,\n                    ...this.clientConfig.baseOptions,\n                },\n            });\n            this.client = new OpenAIApi(clientConfig);\n        }\n        const axiosOptions = {};\n        if (this.azureOpenAIApiKey) {\n            axiosOptions.headers = {\n                \"api-key\": this.azureOpenAIApiKey,\n                ...axiosOptions.headers,\n            };\n            axiosOptions.params = {\n                \"api-version\": this.azureOpenAIApiVersion,\n                ...axiosOptions.params,\n            };\n        }\n        return this.caller.call(this.client.createEmbedding.bind(this.client), request, axiosOptions);\n    }\n}\n", "import { LLM } from \"./base.js\";\nimport { getEnvironmentVariable } from \"../util/env.js\";\nexport class AI21 extends LLM {\n    constructor(fields) {\n        super(fields ?? {});\n        Object.defineProperty(this, \"model\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"j2-jumbo-instruct\"\n        });\n        Object.defineProperty(this, \"temperature\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0.7\n        });\n        Object.defineProperty(this, \"maxTokens\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 1024\n        });\n        Object.defineProperty(this, \"minTokens\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"topP\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 1\n        });\n        Object.defineProperty(this, \"presencePenalty\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: AI21.getDefaultAI21PenaltyData()\n        });\n        Object.defineProperty(this, \"countPenalty\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: AI21.getDefaultAI21PenaltyData()\n        });\n        Object.defineProperty(this, \"frequencyPenalty\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: AI21.getDefaultAI21PenaltyData()\n        });\n        Object.defineProperty(this, \"numResults\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 1\n        });\n        Object.defineProperty(this, \"logitBias\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"ai21ApiKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"stop\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"baseUrl\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.model = fields?.model ?? this.model;\n        this.temperature = fields?.temperature ?? this.temperature;\n        this.maxTokens = fields?.maxTokens ?? this.maxTokens;\n        this.minTokens = fields?.minTokens ?? this.minTokens;\n        this.topP = fields?.topP ?? this.topP;\n        this.presencePenalty = fields?.presencePenalty ?? this.presencePenalty;\n        this.countPenalty = fields?.countPenalty ?? this.countPenalty;\n        this.frequencyPenalty = fields?.frequencyPenalty ?? this.frequencyPenalty;\n        this.numResults = fields?.numResults ?? this.numResults;\n        this.logitBias = fields?.logitBias;\n        this.ai21ApiKey =\n            fields?.ai21ApiKey ?? getEnvironmentVariable(\"AI21_API_KEY\");\n        this.stop = fields?.stop;\n        this.baseUrl = fields?.baseUrl;\n    }\n    validateEnvironment() {\n        if (!this.ai21ApiKey) {\n            throw new Error(`No AI21 API key found. Please set it as \"AI21_API_KEY\" in your environment variables.`);\n        }\n    }\n    static getDefaultAI21PenaltyData() {\n        return {\n            scale: 0,\n            applyToWhitespaces: true,\n            applyToPunctuations: true,\n            applyToNumbers: true,\n            applyToStopwords: true,\n            applyToEmojis: true,\n        };\n    }\n    /** Get the type of LLM. */\n    _llmType() {\n        return \"ai21\";\n    }\n    /** Get the default parameters for calling AI21 API. */\n    get defaultParams() {\n        return {\n            temperature: this.temperature,\n            maxTokens: this.maxTokens,\n            minTokens: this.minTokens,\n            topP: this.topP,\n            presencePenalty: this.presencePenalty,\n            countPenalty: this.countPenalty,\n            frequencyPenalty: this.frequencyPenalty,\n            numResults: this.numResults,\n            logitBias: this.logitBias,\n        };\n    }\n    /** Get the identifying parameters for this LLM. */\n    get identifyingParams() {\n        return { ...this.defaultParams, model: this.model };\n    }\n    /** Call out to AI21's complete endpoint.\n     Args:\n         prompt: The prompt to pass into the model.\n     stop: Optional list of stop words to use when generating.\n  \n         Returns:\n     The string generated by the model.\n  \n     Example:\n     let response = ai21._call(\"Tell me a joke.\");\n     */\n    async _call(prompt, options) {\n        let stop = options?.stop;\n        this.validateEnvironment();\n        if (this.stop && stop && this.stop.length > 0 && stop.length > 0) {\n            throw new Error(\"`stop` found in both the input and default params.\");\n        }\n        stop = this.stop ?? stop ?? [];\n        const baseUrl = this.baseUrl ?? this.model === \"j1-grande-instruct\"\n            ? \"https://api.ai21.com/studio/v1/experimental\"\n            : \"https://api.ai21.com/studio/v1\";\n        const url = `${baseUrl}/${this.model}/complete`;\n        const headers = {\n            Authorization: `Bearer ${this.ai21ApiKey}`,\n            \"Content-Type\": \"application/json\",\n        };\n        const data = { prompt, stopSequences: stop, ...this.defaultParams };\n        const responseData = await this.caller.callWithOptions({}, async () => {\n            const response = await fetch(url, {\n                method: \"POST\",\n                headers,\n                body: JSON.stringify(data),\n                signal: options.signal,\n            });\n            if (!response.ok) {\n                const error = new Error(`AI21 call failed with status code ${response.status}`);\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                error.response = response;\n                throw error;\n            }\n            return response.json();\n        });\n        if (!responseData.completions ||\n            responseData.completions.length === 0 ||\n            !responseData.completions[0].data) {\n            throw new Error(\"No completions found in response\");\n        }\n        return responseData.completions[0].data.text ?? \"\";\n    }\n}\n", "import { LLM } from \"./base.js\";\nimport { getEnvironmentVariable } from \"../util/env.js\";\nexport class AlephAlpha extends LLM {\n    constructor(fields) {\n        super(fields ?? {});\n        Object.defineProperty(this, \"model\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"luminous-base\"\n        });\n        Object.defineProperty(this, \"maximum_tokens\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 64\n        });\n        Object.defineProperty(this, \"minimum_tokens\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0\n        });\n        Object.defineProperty(this, \"echo\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"temperature\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0.0\n        });\n        Object.defineProperty(this, \"top_k\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"top_p\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0.0\n        });\n        Object.defineProperty(this, \"presence_penalty\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"frequency_penalty\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"sequence_penalty\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"sequence_penalty_min_length\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"repetition_penalties_include_prompt\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"repetition_penalties_include_completion\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"use_multiplicative_presence_penalty\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"use_multiplicative_frequency_penalty\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"use_multiplicative_sequence_penalty\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"penalty_bias\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"penalty_exceptions\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"penalty_exceptions_include_stop_sequences\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"best_of\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"n\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"logit_bias\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"log_probs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tokens\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"raw_completion\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"disable_optimizations\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"completion_bias_inclusion\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"completion_bias_inclusion_first_token_only\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"completion_bias_exclusion\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"completion_bias_exclusion_first_token_only\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"contextual_control_threshold\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"control_log_additive\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"aleph_alpha_api_key\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: getEnvironmentVariable(\"ALEPH_ALPHA_API_KEY\")\n        });\n        Object.defineProperty(this, \"stop\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"base_url\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"https://api.aleph-alpha.com/complete\"\n        });\n        this.model = fields?.model ?? this.model;\n        this.temperature = fields?.temperature ?? this.temperature;\n        this.maximum_tokens = fields?.maximum_tokens ?? this.maximum_tokens;\n        this.minimum_tokens = fields?.minimum_tokens ?? this.minimum_tokens;\n        this.top_k = fields?.top_k ?? this.top_k;\n        this.top_p = fields?.top_p ?? this.top_p;\n        this.presence_penalty = fields?.presence_penalty ?? this.presence_penalty;\n        this.frequency_penalty =\n            fields?.frequency_penalty ?? this.frequency_penalty;\n        this.sequence_penalty = fields?.sequence_penalty ?? this.sequence_penalty;\n        this.sequence_penalty_min_length =\n            fields?.sequence_penalty_min_length ?? this.sequence_penalty_min_length;\n        this.repetition_penalties_include_prompt =\n            fields?.repetition_penalties_include_prompt ??\n                this.repetition_penalties_include_prompt;\n        this.repetition_penalties_include_completion =\n            fields?.repetition_penalties_include_completion ??\n                this.repetition_penalties_include_completion;\n        this.use_multiplicative_presence_penalty =\n            fields?.use_multiplicative_presence_penalty ??\n                this.use_multiplicative_presence_penalty;\n        this.use_multiplicative_frequency_penalty =\n            fields?.use_multiplicative_frequency_penalty ??\n                this.use_multiplicative_frequency_penalty;\n        this.use_multiplicative_sequence_penalty =\n            fields?.use_multiplicative_sequence_penalty ??\n                this.use_multiplicative_sequence_penalty;\n        this.penalty_bias = fields?.penalty_bias ?? this.penalty_bias;\n        this.penalty_exceptions =\n            fields?.penalty_exceptions ?? this.penalty_exceptions;\n        this.penalty_exceptions_include_stop_sequences =\n            fields?.penalty_exceptions_include_stop_sequences ??\n                this.penalty_exceptions_include_stop_sequences;\n        this.best_of = fields?.best_of ?? this.best_of;\n        this.n = fields?.n ?? this.n;\n        this.logit_bias = fields?.logit_bias ?? this.logit_bias;\n        this.log_probs = fields?.log_probs ?? this.log_probs;\n        this.tokens = fields?.tokens ?? this.tokens;\n        this.raw_completion = fields?.raw_completion ?? this.raw_completion;\n        this.disable_optimizations =\n            fields?.disable_optimizations ?? this.disable_optimizations;\n        this.completion_bias_inclusion =\n            fields?.completion_bias_inclusion ?? this.completion_bias_inclusion;\n        this.completion_bias_inclusion_first_token_only =\n            fields?.completion_bias_inclusion_first_token_only ??\n                this.completion_bias_inclusion_first_token_only;\n        this.completion_bias_exclusion =\n            fields?.completion_bias_exclusion ?? this.completion_bias_exclusion;\n        this.completion_bias_exclusion_first_token_only =\n            fields?.completion_bias_exclusion_first_token_only ??\n                this.completion_bias_exclusion_first_token_only;\n        this.contextual_control_threshold =\n            fields?.contextual_control_threshold ?? this.contextual_control_threshold;\n        this.control_log_additive =\n            fields?.control_log_additive ?? this.control_log_additive;\n        this.aleph_alpha_api_key =\n            fields?.aleph_alpha_api_key ?? this.aleph_alpha_api_key;\n        this.stop = fields?.stop ?? this.stop;\n    }\n    validateEnvironment() {\n        if (!this.aleph_alpha_api_key) {\n            throw new Error(\"Aleph Alpha API Key is missing in environment variables.\");\n        }\n    }\n    /** Get the default parameters for calling Aleph Alpha API. */\n    get defaultParams() {\n        return {\n            model: this.model,\n            temperature: this.temperature,\n            maximum_tokens: this.maximum_tokens,\n            minimum_tokens: this.minimum_tokens,\n            top_k: this.top_k,\n            top_p: this.top_p,\n            presence_penalty: this.presence_penalty,\n            frequency_penalty: this.frequency_penalty,\n            sequence_penalty: this.sequence_penalty,\n            sequence_penalty_min_length: this.sequence_penalty_min_length,\n            repetition_penalties_include_prompt: this.repetition_penalties_include_prompt,\n            repetition_penalties_include_completion: this.repetition_penalties_include_completion,\n            use_multiplicative_presence_penalty: this.use_multiplicative_presence_penalty,\n            use_multiplicative_frequency_penalty: this.use_multiplicative_frequency_penalty,\n            use_multiplicative_sequence_penalty: this.use_multiplicative_sequence_penalty,\n            penalty_bias: this.penalty_bias,\n            penalty_exceptions: this.penalty_exceptions,\n            penalty_exceptions_include_stop_sequences: this.penalty_exceptions_include_stop_sequences,\n            best_of: this.best_of,\n            n: this.n,\n            logit_bias: this.logit_bias,\n            log_probs: this.log_probs,\n            tokens: this.tokens,\n            raw_completion: this.raw_completion,\n            disable_optimizations: this.disable_optimizations,\n            completion_bias_inclusion: this.completion_bias_inclusion,\n            completion_bias_inclusion_first_token_only: this.completion_bias_inclusion_first_token_only,\n            completion_bias_exclusion: this.completion_bias_exclusion,\n            completion_bias_exclusion_first_token_only: this.completion_bias_exclusion_first_token_only,\n            contextual_control_threshold: this.contextual_control_threshold,\n            control_log_additive: this.control_log_additive,\n        };\n    }\n    /** Get the identifying parameters for this LLM. */\n    get identifyingParams() {\n        return { ...this.defaultParams };\n    }\n    /** Get the type of LLM. */\n    _llmType() {\n        return \"aleph_alpha\";\n    }\n    async _call(prompt, options) {\n        let stop = options?.stop;\n        this.validateEnvironment();\n        if (this.stop && stop && this.stop.length > 0 && stop.length > 0) {\n            throw new Error(\"`stop` found in both the input and default params.\");\n        }\n        stop = this.stop ?? stop ?? [];\n        const headers = {\n            Authorization: `Bearer ${this.aleph_alpha_api_key}`,\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\",\n        };\n        const data = { prompt, stop_sequences: stop, ...this.defaultParams };\n        const responseData = await this.caller.call(async () => {\n            const response = await fetch(this.base_url, {\n                method: \"POST\",\n                headers,\n                body: JSON.stringify(data),\n                signal: options.signal,\n            });\n            if (!response.ok) {\n                // consume the response body to release the connection\n                // https://undici.nodejs.org/#/?id=garbage-collection\n                const text = await response.text();\n                const error = new Error(`Aleph Alpha call failed with status ${response.status} and body ${text}`);\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                error.response = response;\n                throw error;\n            }\n            return response.json();\n        });\n        if (!responseData.completions ||\n            responseData.completions.length === 0 ||\n            !responseData.completions[0].completion) {\n            throw new Error(\"No completions found in response\");\n        }\n        return responseData.completions[0].completion ?? \"\";\n    }\n}\n", "import { CallbackManager, parseCallbackConfigArg, } from \"../callbacks/manager.js\";\nimport { Serializable } from \"../load/serializable.js\";\nexport class BaseRetriever extends Serializable {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"callbacks\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"verbose\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.callbacks = fields?.callbacks;\n        this.tags = fields?.tags ?? [];\n        this.metadata = fields?.metadata ?? {};\n        this.verbose = fields?.verbose ?? false;\n    }\n    /**\n     * TODO: This should be an abstract method, but we'd like to avoid breaking\n     * changes to people currently using subclassed custom retrievers.\n     * Change it on next major release.\n     */\n    _getRelevantDocuments(_query, _callbacks) {\n        throw new Error(\"Not implemented!\");\n    }\n    async getRelevantDocuments(query, config) {\n        const parsedConfig = parseCallbackConfigArg(config);\n        const callbackManager_ = await CallbackManager.configure(parsedConfig.callbacks, this.callbacks, parsedConfig.tags, this.tags, parsedConfig.metadata, this.metadata, { verbose: this.verbose });\n        const runManager = await callbackManager_?.handleRetrieverStart(this.toJSON(), query);\n        try {\n            const results = await this._getRelevantDocuments(query, runManager);\n            await runManager?.handleRetrieverEnd(results);\n            return results;\n        }\n        catch (error) {\n            await runManager?.handleRetrieverError(error);\n            throw error;\n        }\n    }\n}\n", "import { BaseRetriever } from \"../schema/retriever.js\";\nimport { Serializable } from \"../load/serializable.js\";\nexport class VectorStoreRetriever extends BaseRetriever {\n    get lc_namespace() {\n        return [\"langchain\", \"retrievers\", \"base\"];\n    }\n    _vectorstoreType() {\n        return this.vectorStore._vectorstoreType();\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"vectorStore\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"k\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 4\n        });\n        Object.defineProperty(this, \"filter\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.vectorStore = fields.vectorStore;\n        this.k = fields.k ?? this.k;\n        this.filter = fields.filter;\n    }\n    async _getRelevantDocuments(query, runManager) {\n        return this.vectorStore.similaritySearch(query, this.k, this.filter, runManager?.getChild(\"vectorstore\"));\n    }\n    async addDocuments(documents, options) {\n        return this.vectorStore.addDocuments(documents, options);\n    }\n}\nexport class VectorStore extends Serializable {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(embeddings, dbConfig) {\n        super(dbConfig);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"vectorstores\", this._vectorstoreType()]\n        });\n        Object.defineProperty(this, \"embeddings\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.embeddings = embeddings;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async delete(_params) {\n        throw new Error(\"Not implemented.\");\n    }\n    async similaritySearch(query, k = 4, filter = undefined, _callbacks = undefined // implement passing to embedQuery later\n    ) {\n        const results = await this.similaritySearchVectorWithScore(await this.embeddings.embedQuery(query), k, filter);\n        return results.map((result) => result[0]);\n    }\n    async similaritySearchWithScore(query, k = 4, filter = undefined, _callbacks = undefined // implement passing to embedQuery later\n    ) {\n        return this.similaritySearchVectorWithScore(await this.embeddings.embedQuery(query), k, filter);\n    }\n    static fromTexts(_texts, _metadatas, _embeddings, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _dbConfig) {\n        throw new Error(\"the Langchain vectorstore implementation you are using forgot to override this, please report a bug\");\n    }\n    static fromDocuments(_docs, _embeddings, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _dbConfig) {\n        throw new Error(\"the Langchain vectorstore implementation you are using forgot to override this, please report a bug\");\n    }\n    asRetriever(kOrFields, filter, callbacks, tags, metadata, verbose) {\n        if (typeof kOrFields === \"number\") {\n            return new VectorStoreRetriever({\n                vectorStore: this,\n                k: kOrFields,\n                filter,\n                tags: [...(tags ?? []), this._vectorstoreType()],\n                metadata,\n                verbose,\n                callbacks,\n            });\n        }\n        else {\n            return new VectorStoreRetriever({\n                vectorStore: this,\n                k: kOrFields?.k,\n                filter: kOrFields?.filter,\n                tags: [...(kOrFields?.tags ?? []), this._vectorstoreType()],\n                metadata: kOrFields?.metadata,\n                verbose: kOrFields?.verbose,\n                callbacks: kOrFields?.callbacks,\n            });\n        }\n    }\n}\nexport class SaveableVectorStore extends VectorStore {\n    static load(_directory, _embeddings) {\n        throw new Error(\"Not implemented\");\n    }\n}\n", "import binarySearch from 'binary-search';\nimport { ascending } from 'num-sort';\n\n/**\n * Function that creates the tree\n * @param {Array<Array<number>>} spectrum\n * @param {object} [options]\n * @return {Tree|null}\n * left and right have the same structure than the parent,\n * or are null if they are leaves\n */\nexport function createTree(spectrum, options = {}) {\n  var X = spectrum[0];\n  const {\n    minWindow = 0.16,\n    threshold = 0.01,\n    from = X[0],\n    to = X[X.length - 1]\n  } = options;\n\n  return mainCreateTree(\n    spectrum[0],\n    spectrum[1],\n    from,\n    to,\n    minWindow,\n    threshold\n  );\n}\n\nfunction mainCreateTree(X, Y, from, to, minWindow, threshold) {\n  if (to - from < minWindow) {\n    return null;\n  }\n\n  // search first point\n  var start = binarySearch(X, from, ascending);\n  if (start < 0) {\n    start = ~start;\n  }\n\n  // stop at last point\n  var sum = 0;\n  var center = 0;\n  for (var i = start; i < X.length; i++) {\n    if (X[i] >= to) {\n      break;\n    }\n    sum += Y[i];\n    center += X[i] * Y[i];\n  }\n\n  if (sum < threshold) {\n    return null;\n  }\n\n  center /= sum;\n  if (center - from < 1e-6 || to - center < 1e-6) {\n    return null;\n  }\n  if (center - from < minWindow / 4) {\n    return mainCreateTree(X, Y, center, to, minWindow, threshold);\n  } else {\n    if (to - center < minWindow / 4) {\n      return mainCreateTree(X, Y, from, center, minWindow, threshold);\n    } else {\n      return new Tree(\n        sum,\n        center,\n        mainCreateTree(X, Y, from, center, minWindow, threshold),\n        mainCreateTree(X, Y, center, to, minWindow, threshold)\n      );\n    }\n  }\n}\n\nclass Tree {\n  constructor(sum, center, left, right) {\n    this.sum = sum;\n    this.center = center;\n    this.left = left;\n    this.right = right;\n  }\n}\n", "import { similarity as ml_distance_similarity } from \"ml-distance\";\nimport { VectorStore } from \"./base.js\";\nimport { Document } from \"../document.js\";\nexport class MemoryVectorStore extends VectorStore {\n    _vectorstoreType() {\n        return \"memory\";\n    }\n    constructor(embeddings, { similarity, ...rest } = {}) {\n        super(embeddings, rest);\n        Object.defineProperty(this, \"memoryVectors\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"similarity\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.similarity = similarity ?? ml_distance_similarity.cosine;\n    }\n    async addDocuments(documents) {\n        const texts = documents.map(({ pageContent }) => pageContent);\n        return this.addVectors(await this.embeddings.embedDocuments(texts), documents);\n    }\n    async addVectors(vectors, documents) {\n        const memoryVectors = vectors.map((embedding, idx) => ({\n            content: documents[idx].pageContent,\n            embedding,\n            metadata: documents[idx].metadata,\n        }));\n        this.memoryVectors = this.memoryVectors.concat(memoryVectors);\n    }\n    async similaritySearchVectorWithScore(query, k, filter) {\n        const filterFunction = (memoryVector) => {\n            if (!filter) {\n                return true;\n            }\n            const doc = new Document({\n                metadata: memoryVector.metadata,\n                pageContent: memoryVector.content,\n            });\n            return filter(doc);\n        };\n        const filteredMemoryVectors = this.memoryVectors.filter(filterFunction);\n        const searches = filteredMemoryVectors\n            .map((vector, index) => ({\n            similarity: this.similarity(query, vector.embedding),\n            index,\n        }))\n            .sort((a, b) => (a.similarity > b.similarity ? -1 : 0))\n            .slice(0, k);\n        const result = searches.map((search) => [\n            new Document({\n                metadata: filteredMemoryVectors[search.index].metadata,\n                pageContent: filteredMemoryVectors[search.index].content,\n            }),\n            search.similarity,\n        ]);\n        return result;\n    }\n    static async fromTexts(texts, metadatas, embeddings, dbConfig) {\n        const docs = [];\n        for (let i = 0; i < texts.length; i += 1) {\n            const metadata = Array.isArray(metadatas) ? metadatas[i] : metadatas;\n            const newDoc = new Document({\n                pageContent: texts[i],\n                metadata,\n            });\n            docs.push(newDoc);\n        }\n        return MemoryVectorStore.fromDocuments(docs, embeddings, dbConfig);\n    }\n    static async fromDocuments(docs, embeddings, dbConfig) {\n        const instance = new this(embeddings, dbConfig);\n        await instance.addDocuments(docs);\n        return instance;\n    }\n    static async fromExistingIndex(embeddings, dbConfig) {\n        const instance = new this(embeddings, dbConfig);\n        return instance;\n    }\n}\n", "import { VectorStore } from \"./base.js\";\nimport { Document } from \"../document.js\";\nconst IdColumnSymbol = Symbol(\"id\");\nconst ContentColumnSymbol = Symbol(\"content\");\nconst OpMap = {\n    equals: \"=\",\n    lt: \"<\",\n    lte: \"<=\",\n    gt: \">\",\n    gte: \">=\",\n    not: \"<>\",\n};\nclass PrismaVectorStore extends VectorStore {\n    _vectorstoreType() {\n        return \"prisma\";\n    }\n    constructor(embeddings, config) {\n        super(embeddings, {});\n        Object.defineProperty(this, \"tableName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"vectorColumnName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"selectColumns\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"filter\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"idColumn\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"contentColumn\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"db\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"Prisma\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.Prisma = config.prisma;\n        this.db = config.db;\n        const entries = Object.entries(config.columns);\n        const idColumn = entries.find((i) => i[1] === IdColumnSymbol)?.[0];\n        const contentColumn = entries.find((i) => i[1] === ContentColumnSymbol)?.[0];\n        if (idColumn == null)\n            throw new Error(\"Missing ID column\");\n        if (contentColumn == null)\n            throw new Error(\"Missing content column\");\n        this.idColumn = idColumn;\n        this.contentColumn = contentColumn;\n        this.tableName = config.tableName;\n        this.vectorColumnName = config.vectorColumnName;\n        this.selectColumns = entries\n            .map(([key, alias]) => (alias && key) || null)\n            .filter((x) => !!x);\n        if (config.filter) {\n            this.filter = config.filter;\n        }\n    }\n    static withModel(db) {\n        function create(embeddings, config) {\n            return new PrismaVectorStore(embeddings, { ...config, db });\n        }\n        async function fromTexts(texts, metadatas, embeddings, dbConfig) {\n            const docs = [];\n            for (let i = 0; i < texts.length; i += 1) {\n                const metadata = Array.isArray(metadatas) ? metadatas[i] : metadatas;\n                const newDoc = new Document({\n                    pageContent: texts[i],\n                    metadata,\n                });\n                docs.push(newDoc);\n            }\n            return PrismaVectorStore.fromDocuments(docs, embeddings, {\n                ...dbConfig,\n                db,\n            });\n        }\n        async function fromDocuments(docs, embeddings, dbConfig) {\n            const instance = new PrismaVectorStore(embeddings, { ...dbConfig, db });\n            await instance.addDocuments(docs);\n            return instance;\n        }\n        return { create, fromTexts, fromDocuments };\n    }\n    async addModels(models) {\n        return this.addDocuments(models.map((metadata) => {\n            const pageContent = metadata[this.contentColumn];\n            if (typeof pageContent !== \"string\")\n                throw new Error(\"Content column must be a string\");\n            return new Document({ pageContent, metadata });\n        }));\n    }\n    async addDocuments(documents) {\n        const texts = documents.map(({ pageContent }) => pageContent);\n        return this.addVectors(await this.embeddings.embedDocuments(texts), documents);\n    }\n    async addVectors(vectors, documents) {\n        // table name, column name cannot be parametrised\n        // these fields are thus not escaped by Prisma and can be dangerous if user input is used\n        const idColumnRaw = this.Prisma.raw(`\"${this.idColumn}\"`);\n        const tableNameRaw = this.Prisma.raw(`\"${this.tableName}\"`);\n        const vectorColumnRaw = this.Prisma.raw(`\"${this.vectorColumnName}\"`);\n        await this.db.$transaction(vectors.map((vector, idx) => this.db.$executeRaw `\n          UPDATE ${tableNameRaw}\n          SET ${vectorColumnRaw} = ${`[${vector.join(\",\")}]`}::vector\n          WHERE ${idColumnRaw} = ${documents[idx].metadata[this.idColumn]}\n        `));\n    }\n    async similaritySearch(query, k = 4, _filter = undefined, // not used. here to make the interface compatible with the other stores\n    _callbacks = undefined // implement passing to embedQuery later\n    ) {\n        const results = await this.similaritySearchVectorWithScore(await this.embeddings.embedQuery(query), k);\n        return results.map((result) => result[0]);\n    }\n    async similaritySearchWithScore(query, k, filter, _callbacks = undefined // implement passing to embedQuery later\n    ) {\n        return super.similaritySearchWithScore(query, k, filter);\n    }\n    async similaritySearchVectorWithScore(query, k, filter) {\n        // table name, column names cannot be parametrised\n        // these fields are thus not escaped by Prisma and can be dangerous if user input is used\n        const vectorColumnRaw = this.Prisma.raw(`\"${this.vectorColumnName}\"`);\n        const tableNameRaw = this.Prisma.raw(`\"${this.tableName}\"`);\n        const selectRaw = this.Prisma.raw(this.selectColumns.map((x) => `\"${x}\"`).join(\", \"));\n        const vector = `[${query.join(\",\")}]`;\n        const articles = await this.db.$queryRaw(this.Prisma.join([\n            this.Prisma.sql `\n            SELECT ${selectRaw}, ${vectorColumnRaw} <=> ${vector}::vector as \"_distance\"\n            FROM ${tableNameRaw}\n          `,\n            this.buildSqlFilterStr(filter ?? this.filter),\n            this.Prisma.sql `\n            ORDER BY \"_distance\" ASC\n            LIMIT ${k};\n          `,\n        ].filter((x) => x != null), \"\"));\n        const results = [];\n        for (const article of articles) {\n            if (article._distance != null && article[this.contentColumn] != null) {\n                results.push([\n                    new Document({\n                        pageContent: article[this.contentColumn],\n                        metadata: article,\n                    }),\n                    article._distance,\n                ]);\n            }\n        }\n        return results;\n    }\n    buildSqlFilterStr(filter) {\n        if (filter == null)\n            return null;\n        return this.Prisma.join(Object.entries(filter).flatMap(([key, ops]) => Object.entries(ops).map(([opName, value]) => {\n            // column name, operators cannot be parametrised\n            // these fields are thus not escaped by Prisma and can be dangerous if user input is used\n            const colRaw = this.Prisma.raw(`\"${key}\"`);\n            const opRaw = this.Prisma.raw(OpMap[opName]);\n            return this.Prisma.sql `${colRaw} ${opRaw} ${value}`;\n        })), \" AND \", \" WHERE \");\n    }\n    static async fromTexts(texts, metadatas, embeddings, dbConfig) {\n        const docs = [];\n        for (let i = 0; i < texts.length; i += 1) {\n            const metadata = Array.isArray(metadatas) ? metadatas[i] : metadatas;\n            const newDoc = new Document({\n                pageContent: texts[i],\n                metadata,\n            });\n            docs.push(newDoc);\n        }\n        return PrismaVectorStore.fromDocuments(docs, embeddings, dbConfig);\n    }\n    static async fromDocuments(docs, embeddings, dbConfig) {\n        const instance = new PrismaVectorStore(embeddings, dbConfig);\n        await instance.addDocuments(docs);\n        return instance;\n    }\n}\nObject.defineProperty(PrismaVectorStore, \"IdColumn\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: IdColumnSymbol\n});\nObject.defineProperty(PrismaVectorStore, \"ContentColumn\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: ContentColumnSymbol\n});\nexport { PrismaVectorStore };\n", "import { Document } from \"../document.js\";\nimport { FakeEmbeddings } from \"../embeddings/fake.js\";\nimport { getEnvironmentVariable } from \"../util/env.js\";\nimport { VectorStore } from \"./base.js\";\nexport class VectaraStore extends VectorStore {\n    get lc_secrets() {\n        return {\n            apiKey: \"VECTARA_API_KEY\",\n            corpusId: \"VECTARA_CORPUS_ID\",\n            customerId: \"VECTARA_CUSTOMER_ID\",\n        };\n    }\n    get lc_aliases() {\n        return {\n            apiKey: \"vectara_api_key\",\n            corpusId: \"vectara_corpus_id\",\n            customerId: \"vectara_customer_id\",\n        };\n    }\n    _vectorstoreType() {\n        return \"vectara\";\n    }\n    constructor(args) {\n        // Vectara doesn't need embeddings, but we need to pass something to the parent constructor\n        // The embeddings are abstracted out from the user in Vectara.\n        super(new FakeEmbeddings(), args);\n        Object.defineProperty(this, \"apiEndpoint\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"api.vectara.io\"\n        });\n        Object.defineProperty(this, \"apiKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"corpusId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"customerId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"verbose\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        const apiKey = args.apiKey ?? getEnvironmentVariable(\"VECTARA_API_KEY\");\n        if (!apiKey) {\n            throw new Error(\"Vectara api key is not provided.\");\n        }\n        this.apiKey = apiKey;\n        const corpusId = args.corpusId ?? getEnvironmentVariable(\"VECTARA_CORPUS_ID\");\n        if (!corpusId) {\n            throw new Error(\"Vectara corpus id is not provided.\");\n        }\n        this.corpusId = corpusId;\n        const customerId = args.customerId ?? getEnvironmentVariable(\"VECTARA_CUSTOMER_ID\");\n        if (!customerId) {\n            throw new Error(\"Vectara customer id is not provided.\");\n        }\n        this.customerId = customerId;\n        this.verbose = args.verbose ?? false;\n    }\n    async getJsonHeader() {\n        return {\n            headers: {\n                \"x-api-key\": this.apiKey,\n                \"Content-Type\": \"application/json\",\n                \"customer-id\": this.customerId.toString(),\n            },\n        };\n    }\n    async addVectors(_vectors, _documents) {\n        throw new Error(\"Method not implemented. Please call addDocuments instead.\");\n    }\n    async addDocuments(documents) {\n        const headers = await this.getJsonHeader();\n        let countAdded = 0;\n        for (const [index, document] of documents.entries()) {\n            const data = {\n                customer_id: this.customerId,\n                corpus_id: this.corpusId,\n                document: {\n                    document_id: document.metadata?.document_id ?? `${Date.now()}${index}`,\n                    title: document.metadata?.title ?? \"\",\n                    metadata_json: JSON.stringify(document.metadata ?? {}),\n                    section: [\n                        {\n                            text: document.pageContent,\n                        },\n                    ],\n                },\n            };\n            try {\n                const response = await fetch(`https://${this.apiEndpoint}/v1/index`, {\n                    method: \"POST\",\n                    headers: headers?.headers,\n                    body: JSON.stringify(data),\n                });\n                const result = await response.json();\n                if (result.status?.code !== \"OK\" &&\n                    result.status?.code !== \"ALREADY_EXISTS\") {\n                    const error = new Error(`Vectara API returned status code ${result.code}: ${result.message}`);\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    error.code = 500;\n                    throw error;\n                }\n                else {\n                    countAdded += 1;\n                }\n            }\n            catch (e) {\n                const error = new Error(`Error ${e.message} while adding document ${document}`);\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                error.code = 500;\n                throw error;\n            }\n        }\n        if (this.verbose) {\n            console.log(`Added ${countAdded} documents to Vectara`);\n        }\n    }\n    async similaritySearchWithScore(query, k = 10, filter = undefined) {\n        const headers = await this.getJsonHeader();\n        const data = {\n            query: [\n                {\n                    query,\n                    numResults: k,\n                    corpusKey: [\n                        {\n                            customerId: this.customerId,\n                            corpusId: this.corpusId,\n                            metadataFilter: filter?.filter ?? \"\",\n                            lexicalInterpolationConfig: { lambda: filter?.lambda ?? 0.025 },\n                        },\n                    ],\n                },\n            ],\n        };\n        const response = await fetch(`https://${this.apiEndpoint}/v1/query`, {\n            method: \"POST\",\n            headers: headers?.headers,\n            body: JSON.stringify(data),\n        });\n        if (response.status !== 200) {\n            throw new Error(`Vectara API returned status code ${response.status}`);\n        }\n        const result = await response.json();\n        const responses = result.responseSet[0].response;\n        const documentsAndScores = responses.map((response) => [\n            new Document({\n                pageContent: response.text,\n                metadata: response.metadata,\n            }),\n            response.score,\n        ]);\n        return documentsAndScores;\n    }\n    async similaritySearch(query, k = 10, filter = undefined) {\n        const resultWithScore = await this.similaritySearchWithScore(query, k, filter);\n        return resultWithScore.map((result) => result[0]);\n    }\n    async similaritySearchVectorWithScore(_query, _k, _filter) {\n        throw new Error(\"Method not implemented. Please call similaritySearch or similaritySearchWithScore instead.\");\n    }\n    static fromTexts(texts, metadatas, _embeddings, args) {\n        const docs = [];\n        for (let i = 0; i < texts.length; i += 1) {\n            const metadata = Array.isArray(metadatas) ? metadatas[i] : metadatas;\n            const newDoc = new Document({\n                pageContent: texts[i],\n                metadata,\n            });\n            docs.push(newDoc);\n        }\n        return VectaraStore.fromDocuments(docs, new FakeEmbeddings(), args);\n    }\n    static async fromDocuments(docs, _embeddings, args) {\n        const instance = new this(args);\n        await instance.addDocuments(docs);\n        return instance;\n    }\n}\n", "export { BufferMemory } from \"./buffer_memory.js\";\nexport { BaseMemory, getInputValue, getBufferString } from \"./base.js\";\nexport { ConversationSummaryMemory, } from \"./summary.js\";\nexport { BufferWindowMemory, } from \"./buffer_window_memory.js\";\nexport { BaseChatMemory } from \"./chat_memory.js\";\nexport { ChatMessageHistory } from \"../stores/message/in_memory.js\";\nexport { MotorheadMemory } from \"./motorhead_memory.js\";\nexport { VectorStoreRetrieverMemory, } from \"./vector_store.js\";\nexport { EntityMemory } from \"./entity_memory.js\";\nexport { ENTITY_MEMORY_CONVERSATION_TEMPLATE } from \"./prompt.js\";\n", "import { LLMChain } from \"../chains/llm_chain.js\";\nimport { SystemMessage } from \"../schema/index.js\";\nimport { getBufferString, } from \"./base.js\";\nimport { BaseChatMemory } from \"./chat_memory.js\";\nimport { SUMMARY_PROMPT } from \"./prompt.js\";\nexport class ConversationSummaryMemory extends BaseChatMemory {\n    constructor(fields) {\n        const { returnMessages, inputKey, outputKey, chatHistory, humanPrefix, aiPrefix, llm, prompt, summaryChatMessageClass, } = fields;\n        super({ returnMessages, inputKey, outputKey, chatHistory });\n        Object.defineProperty(this, \"buffer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"\"\n        });\n        Object.defineProperty(this, \"memoryKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"history\"\n        });\n        Object.defineProperty(this, \"humanPrefix\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"Human\"\n        });\n        Object.defineProperty(this, \"aiPrefix\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"AI\"\n        });\n        Object.defineProperty(this, \"llm\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"prompt\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: SUMMARY_PROMPT\n        });\n        Object.defineProperty(this, \"summaryChatMessageClass\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: SystemMessage\n        });\n        this.memoryKey = fields?.memoryKey ?? this.memoryKey;\n        this.humanPrefix = humanPrefix ?? this.humanPrefix;\n        this.aiPrefix = aiPrefix ?? this.aiPrefix;\n        this.llm = llm;\n        this.prompt = prompt ?? this.prompt;\n        this.summaryChatMessageClass =\n            summaryChatMessageClass ?? this.summaryChatMessageClass;\n    }\n    get memoryKeys() {\n        return [this.memoryKey];\n    }\n    async predictNewSummary(messages, existingSummary) {\n        const newLines = getBufferString(messages, this.humanPrefix, this.aiPrefix);\n        const chain = new LLMChain({ llm: this.llm, prompt: this.prompt });\n        return await chain.predict({\n            summary: existingSummary,\n            new_lines: newLines,\n        });\n    }\n    async loadMemoryVariables(_) {\n        if (this.returnMessages) {\n            const result = {\n                [this.memoryKey]: [new this.summaryChatMessageClass(this.buffer)],\n            };\n            return result;\n        }\n        const result = { [this.memoryKey]: this.buffer };\n        return result;\n    }\n    async saveContext(inputValues, outputValues) {\n        await super.saveContext(inputValues, outputValues);\n        const messages = await this.chatHistory.getMessages();\n        this.buffer = await this.predictNewSummary(messages.slice(-2), this.buffer);\n    }\n    async clear() {\n        await super.clear();\n        this.buffer = \"\";\n    }\n}\n", "import { PromptTemplate } from \"../prompts/prompt.js\";\nconst _DEFAULT_SUMMARIZER_TEMPLATE = `Progressively summarize the lines of conversation provided, adding onto the previous summary returning a new summary.\n\nEXAMPLE\nCurrent summary:\nThe human asks what the AI thinks of artificial intelligence. The AI thinks artificial intelligence is a force for good.\n\nNew lines of conversation:\nHuman: Why do you think artificial intelligence is a force for good?\nAI: Because artificial intelligence will help humans reach their full potential.\n\nNew summary:\nThe human asks what the AI thinks of artificial intelligence. The AI thinks artificial intelligence is a force for good because it will help humans reach their full potential.\nEND OF EXAMPLE\n\nCurrent summary:\n{summary}\n\nNew lines of conversation:\n{new_lines}\n\nNew summary:`;\n// eslint-disable-next-line spaced-comment\nexport const SUMMARY_PROMPT = /*#__PURE__*/ new PromptTemplate({\n    inputVariables: [\"summary\", \"new_lines\"],\n    template: _DEFAULT_SUMMARIZER_TEMPLATE,\n});\nexport const _DEFAULT_ENTITY_MEMORY_CONVERSATION_TEMPLATE = `You are an assistant to a human, powered by a large language model trained by OpenAI.\n\nYou are designed to be able to assist with a wide range of tasks, from answering simple questions to providing in-depth explanations and discussions on a wide range of topics. As a language model, you are able to generate human-like text based on the input you receive, allowing you to engage in natural-sounding conversations and provide responses that are coherent and relevant to the topic at hand.\n\nYou are constantly learning and improving, and your capabilities are constantly evolving. You are able to process and understand large amounts of text, and can use this knowledge to provide accurate and informative responses to a wide range of questions. You have access to some personalized information provided by the human in the Context section below. Additionally, you are able to generate your own text based on the input you receive, allowing you to engage in discussions and provide explanations and descriptions on a wide range of topics.\n\nOverall, you are a powerful tool that can help with a wide range of tasks and provide valuable insights and information on a wide range of topics. Whether the human needs help with a specific question or just wants to have a conversation about a particular topic, you are here to assist.\n\nContext:\n{entities}\n\nCurrent conversation:\n{history}\nLast line:\nHuman: {input}\nYou:`;\nexport const ENTITY_MEMORY_CONVERSATION_TEMPLATE = \n// eslint-disable-next-line spaced-comment\n/*#__PURE__*/ new PromptTemplate({\n    inputVariables: [\"entities\", \"history\", \"input\"],\n    template: _DEFAULT_ENTITY_MEMORY_CONVERSATION_TEMPLATE,\n});\nexport const _DEFAULT_ENTITY_EXTRACTION_TEMPLATE = `You are an AI assistant reading the transcript of a conversation between an AI and a human. Extract all of the proper nouns from the last line of conversation. As a guideline, a proper noun is generally capitalized. You should definitely extract all names and places.\n\nThe conversation history is provided just in case of a coreference (e.g. \"What do you know about him\" where \"him\" is defined in a previous line) -- ignore items mentioned there that are not in the last line.\n\nReturn the output as a single comma-separated list, or NONE if there is nothing of note to return (e.g. the user is just issuing a greeting or having a simple conversation).\n\nEXAMPLE\nConversation history:\nPerson #1: my name is Jacob. how's it going today?\nAI: \"It's going great! How about you?\"\nPerson #1: good! busy working on Langchain. lots to do.\nAI: \"That sounds like a lot of work! What kind of things are you doing to make Langchain better?\"\nLast line:\nPerson #1: i'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff.\nOutput: Jacob,Langchain\nEND OF EXAMPLE\n\nEXAMPLE\nConversation history:\nPerson #1: how's it going today?\nAI: \"It's going great! How about you?\"\nPerson #1: good! busy working on Langchain. lots to do.\nAI: \"That sounds like a lot of work! What kind of things are you doing to make Langchain better?\"\nLast line:\nPerson #1: i'm trying to improve Langchain's interfaces, the UX, its integrations with various products the user might want ... a lot of stuff. I'm working with Person #2.\nOutput: Langchain, Person #2\nEND OF EXAMPLE\n\nConversation history (for reference only):\n{history}\nLast line of conversation (for extraction):\nHuman: {input}\n\nOutput:`;\n// eslint-disable-next-line spaced-comment\nexport const ENTITY_EXTRACTION_PROMPT = /*#__PURE__*/ new PromptTemplate({\n    inputVariables: [\"history\", \"input\"],\n    template: _DEFAULT_ENTITY_EXTRACTION_TEMPLATE,\n});\nexport const _DEFAULT_ENTITY_SUMMARIZATION_TEMPLATE = `You are an AI assistant helping a human keep track of facts about relevant people, places, and concepts in their life. Update and add to the summary of the provided entity in the \"Entity\" section based on the last line of your conversation with the human. If you are writing the summary for the first time, return a single sentence.\nThe update should only include facts that are relayed in the last line of conversation about the provided entity, and should only contain facts about the provided entity.\n\nIf there is no new information about the provided entity or the information is not worth noting (not an important or relevant fact to remember long-term), output the exact string \"UNCHANGED\" below.\n\nFull conversation history (for context):\n{history}\n\nEntity to summarize:\n{entity}\n\nExisting summary of {entity}:\n{summary}\n\nLast line of conversation:\nHuman: {input}\nUpdated summary (or the exact string \"UNCHANGED\" if there is no new information about {entity} above):`;\n// eslint-disable-next-line spaced-comment\nexport const ENTITY_SUMMARIZATION_PROMPT = /*#__PURE__*/ new PromptTemplate({\n    inputVariables: [\"entity\", \"summary\", \"history\", \"input\"],\n    template: _DEFAULT_ENTITY_SUMMARIZATION_TEMPLATE,\n});\n", "import { getBufferString } from \"./base.js\";\nimport { BaseChatMemory } from \"./chat_memory.js\";\nexport class BufferWindowMemory extends BaseChatMemory {\n    constructor(fields) {\n        super({\n            returnMessages: fields?.returnMessages ?? false,\n            chatHistory: fields?.chatHistory,\n            inputKey: fields?.inputKey,\n            outputKey: fields?.outputKey,\n        });\n        Object.defineProperty(this, \"humanPrefix\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"Human\"\n        });\n        Object.defineProperty(this, \"aiPrefix\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"AI\"\n        });\n        Object.defineProperty(this, \"memoryKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"history\"\n        });\n        Object.defineProperty(this, \"k\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 5\n        });\n        this.humanPrefix = fields?.humanPrefix ?? this.humanPrefix;\n        this.aiPrefix = fields?.aiPrefix ?? this.aiPrefix;\n        this.memoryKey = fields?.memoryKey ?? this.memoryKey;\n        this.k = fields?.k ?? this.k;\n    }\n    get memoryKeys() {\n        return [this.memoryKey];\n    }\n    async loadMemoryVariables(_values) {\n        const messages = await this.chatHistory.getMessages();\n        if (this.returnMessages) {\n            const result = {\n                [this.memoryKey]: messages.slice(-this.k * 2),\n            };\n            return result;\n        }\n        const result = {\n            [this.memoryKey]: getBufferString(messages.slice(-this.k * 2), this.humanPrefix, this.aiPrefix),\n        };\n        return result;\n    }\n}\n", "import { BaseChatMemory } from \"./chat_memory.js\";\nimport { getBufferString, getInputValue, getOutputValue, } from \"./base.js\";\nimport { AsyncCaller } from \"../util/async_caller.js\";\nconst MANAGED_URL = \"https://api.getmetal.io/v1/motorhead\";\nexport class MotorheadMemory extends BaseChatMemory {\n    constructor(fields) {\n        const { sessionId, url, memoryKey, timeout, returnMessages, inputKey, outputKey, chatHistory, apiKey, clientId, ...rest } = fields;\n        super({ returnMessages, inputKey, outputKey, chatHistory });\n        Object.defineProperty(this, \"url\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: MANAGED_URL\n        });\n        Object.defineProperty(this, \"timeout\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 3000\n        });\n        Object.defineProperty(this, \"memoryKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"history\"\n        });\n        Object.defineProperty(this, \"sessionId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"context\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"caller\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // Managed Params\n        Object.defineProperty(this, \"apiKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"clientId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.caller = new AsyncCaller(rest);\n        this.sessionId = sessionId;\n        this.url = url ?? this.url;\n        this.memoryKey = memoryKey ?? this.memoryKey;\n        this.timeout = timeout ?? this.timeout;\n        this.apiKey = apiKey;\n        this.clientId = clientId;\n    }\n    get memoryKeys() {\n        return [this.memoryKey];\n    }\n    _getHeaders() {\n        const isManaged = this.url === MANAGED_URL;\n        const headers = {\n            \"Content-Type\": \"application/json\",\n        };\n        if (isManaged && !(this.apiKey && this.clientId)) {\n            throw new Error(\"apiKey and clientId are required for managed motorhead. Visit https://getmetal.io to get your keys.\");\n        }\n        if (isManaged && this.apiKey && this.clientId) {\n            headers[\"x-metal-api-key\"] = this.apiKey;\n            headers[\"x-metal-client-id\"] = this.clientId;\n        }\n        return headers;\n    }\n    async init() {\n        const res = await this.caller.call(fetch, `${this.url}/sessions/${this.sessionId}/memory`, {\n            signal: this.timeout ? AbortSignal.timeout(this.timeout) : undefined,\n            headers: this._getHeaders(),\n        });\n        const json = await res.json();\n        const data = json?.data || json; // Managed Motorhead returns { data: { messages: [], context: \"NONE\" } }\n        const { messages = [], context = \"NONE\" } = data;\n        await Promise.all(messages.reverse().map(async (message) => {\n            if (message.role === \"AI\") {\n                await this.chatHistory.addAIChatMessage(message.content);\n            }\n            else {\n                await this.chatHistory.addUserMessage(message.content);\n            }\n        }));\n        if (context && context !== \"NONE\") {\n            this.context = context;\n        }\n    }\n    async loadMemoryVariables(_values) {\n        const messages = await this.chatHistory.getMessages();\n        if (this.returnMessages) {\n            const result = {\n                [this.memoryKey]: messages,\n            };\n            return result;\n        }\n        const result = {\n            [this.memoryKey]: getBufferString(messages),\n        };\n        return result;\n    }\n    async saveContext(inputValues, outputValues) {\n        const input = getInputValue(inputValues, this.inputKey);\n        const output = getOutputValue(outputValues, this.outputKey);\n        await Promise.all([\n            this.caller.call(fetch, `${this.url}/sessions/${this.sessionId}/memory`, {\n                signal: this.timeout ? AbortSignal.timeout(this.timeout) : undefined,\n                method: \"POST\",\n                body: JSON.stringify({\n                    messages: [\n                        { role: \"Human\", content: `${input}` },\n                        { role: \"AI\", content: `${output}` },\n                    ],\n                }),\n                headers: this._getHeaders(),\n            }),\n            super.saveContext(inputValues, outputValues),\n        ]);\n    }\n}\n", "import { Document } from \"../document.js\";\nimport { BaseMemory, getInputValue, } from \"./base.js\";\nexport class VectorStoreRetrieverMemory extends BaseMemory {\n    constructor(fields) {\n        super();\n        Object.defineProperty(this, \"vectorStoreRetriever\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"inputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"memoryKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"returnDocs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.vectorStoreRetriever = fields.vectorStoreRetriever;\n        this.inputKey = fields.inputKey;\n        this.memoryKey = fields.memoryKey ?? \"memory\";\n        this.returnDocs = fields.returnDocs ?? false;\n    }\n    get memoryKeys() {\n        return [this.memoryKey];\n    }\n    async loadMemoryVariables(values) {\n        const query = getInputValue(values, this.inputKey);\n        const results = await this.vectorStoreRetriever.getRelevantDocuments(query);\n        return {\n            [this.memoryKey]: this.returnDocs\n                ? results\n                : results.map((r) => r.pageContent).join(\"\\n\"),\n        };\n    }\n    async saveContext(inputValues, outputValues) {\n        const text = Object.entries(inputValues)\n            .filter(([k]) => k !== this.memoryKey)\n            .concat(Object.entries(outputValues))\n            .map(([k, v]) => `${k}: ${v}`)\n            .join(\"\\n\");\n        await this.vectorStoreRetriever.addDocuments([\n            new Document({ pageContent: text }),\n        ]);\n    }\n}\n", "import { BaseChatMemory } from \"./chat_memory.js\";\nimport { ENTITY_EXTRACTION_PROMPT, ENTITY_SUMMARIZATION_PROMPT, } from \"./prompt.js\";\nimport { getBufferString, getPromptInputKey, } from \"./base.js\";\nimport { LLMChain } from \"../chains/llm_chain.js\";\nimport { InMemoryEntityStore } from \"./stores/entity/in_memory.js\";\n// Entity extractor & summarizer to memory.\nexport class EntityMemory extends BaseChatMemory {\n    constructor(fields) {\n        super({\n            chatHistory: fields.chatHistory,\n            returnMessages: fields.returnMessages ?? false,\n            inputKey: fields.inputKey,\n            outputKey: fields.outputKey,\n        });\n        Object.defineProperty(this, \"entityExtractionChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"entitySummarizationChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"entityStore\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"entityCache\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"k\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 3\n        });\n        Object.defineProperty(this, \"chatHistoryKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"history\"\n        });\n        Object.defineProperty(this, \"llm\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"entitiesKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"entities\"\n        });\n        Object.defineProperty(this, \"humanPrefix\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"aiPrefix\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.llm = fields.llm;\n        this.humanPrefix = fields.humanPrefix;\n        this.aiPrefix = fields.aiPrefix;\n        this.chatHistoryKey = fields.chatHistoryKey ?? this.chatHistoryKey;\n        this.entitiesKey = fields.entitiesKey ?? this.entitiesKey;\n        this.entityExtractionChain = new LLMChain({\n            llm: this.llm,\n            prompt: fields.entityExtractionPrompt ?? ENTITY_EXTRACTION_PROMPT,\n        });\n        this.entitySummarizationChain = new LLMChain({\n            llm: this.llm,\n            prompt: fields.entitySummarizationPrompt ?? ENTITY_SUMMARIZATION_PROMPT,\n        });\n        this.entityStore = fields.entityStore ?? new InMemoryEntityStore();\n        this.entityCache = fields.entityCache ?? this.entityCache;\n        this.k = fields.k ?? this.k;\n    }\n    get memoryKeys() {\n        return [this.chatHistoryKey];\n    }\n    // Will always return list of memory variables.\n    get memoryVariables() {\n        return [this.entitiesKey, this.chatHistoryKey];\n    }\n    // Return history buffer.\n    async loadMemoryVariables(inputs) {\n        const promptInputKey = this.inputKey ?? getPromptInputKey(inputs, this.memoryVariables);\n        const messages = await this.chatHistory.getMessages();\n        const serializedMessages = getBufferString(messages.slice(-this.k * 2), this.humanPrefix, this.aiPrefix);\n        const output = await this.entityExtractionChain.predict({\n            history: serializedMessages,\n            input: inputs[promptInputKey],\n        });\n        const entities = output.trim() === \"NONE\" ? [] : output.split(\",\").map((w) => w.trim());\n        const entitySummaries = {};\n        for (const entity of entities) {\n            entitySummaries[entity] = await this.entityStore.get(entity, \"No current information known.\");\n        }\n        this.entityCache = [...entities];\n        const buffer = this.returnMessages\n            ? messages.slice(-this.k * 2)\n            : serializedMessages;\n        return {\n            [this.chatHistoryKey]: buffer,\n            [this.entitiesKey]: entitySummaries,\n        };\n    }\n    // Save context from this conversation to buffer.\n    async saveContext(inputs, outputs) {\n        await super.saveContext(inputs, outputs);\n        const promptInputKey = this.inputKey ?? getPromptInputKey(inputs, this.memoryVariables);\n        const messages = await this.chatHistory.getMessages();\n        const serializedMessages = getBufferString(messages.slice(-this.k * 2), this.humanPrefix, this.aiPrefix);\n        const inputData = inputs[promptInputKey];\n        for (const entity of this.entityCache) {\n            const existingSummary = await this.entityStore.get(entity, \"No current information known.\");\n            const output = await this.entitySummarizationChain.predict({\n                summary: existingSummary,\n                entity,\n                history: serializedMessages,\n                input: inputData,\n            });\n            if (output.trim() !== \"UNCHANGED\") {\n                await this.entityStore.set(entity, output.trim());\n            }\n        }\n    }\n    // Clear memory contents.\n    async clear() {\n        await super.clear();\n        await this.entityStore.clear();\n    }\n}\n", "import { BaseEntityStore } from \"../../../schema/index.js\";\nexport class InMemoryEntityStore extends BaseEntityStore {\n    constructor() {\n        super();\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"stores\", \"entity\", \"in_memory\"]\n        });\n        Object.defineProperty(this, \"store\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.store = Object.create(null);\n    }\n    async get(key, defaultValue) {\n        return key in this.store ? this.store[key] : defaultValue;\n    }\n    async set(key, value) {\n        this.store[key] = value;\n    }\n    async delete(key) {\n        delete this.store[key];\n    }\n    async exists(key) {\n        return key in this.store;\n    }\n    async clear() {\n        this.store = Object.create(null);\n    }\n}\n", "import { RecursiveCharacterTextSplitter, } from \"../text_splitter.js\";\nexport class BaseDocumentLoader {\n    async loadAndSplit(splitter = new RecursiveCharacterTextSplitter()) {\n        const docs = await this.load();\n        return splitter.splitDocuments(docs);\n    }\n}\n", "import { Document } from \"../../document.js\";\nimport { BaseDocumentLoader } from \"../base.js\";\nexport class SortXYZBlockchainLoader extends BaseDocumentLoader {\n    constructor({ apiKey, query }) {\n        super();\n        Object.defineProperty(this, \"contractAddress\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"blockchain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"apiKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"queryType\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"sql\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"limit\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        if (!apiKey) {\n            throw new Error(`apiKey is required! Head over to https://docs.sort.xyz/docs/api-keys to get your free Sort API key.`);\n        }\n        this.apiKey = apiKey;\n        if (typeof query === \"string\") {\n            this.sql = query;\n        }\n        else {\n            this.contractAddress = query.contractAddress.toLowerCase();\n            this.blockchain = query.blockchain;\n            this.queryType = query.type;\n            this.limit = query.limit ?? 100;\n        }\n    }\n    async load() {\n        if (this.limit > 1000) {\n            throw new Error(`Limit is set too high. Please set limit to 1000 or lower.`);\n        }\n        const docs = [];\n        let queryOffset = 0;\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            let query = \"\";\n            if (this.sql) {\n                query = this.sql;\n            }\n            else if (this.queryType === \"NFTMetadata\") {\n                // All parameters here are user defined\n                query = `SELECT * FROM ${this.blockchain}.nft_metadata WHERE contract_address = '${this.contractAddress}' ORDER BY token_id DESC LIMIT ${this.limit} OFFSET ${queryOffset}`;\n            }\n            else if (this.queryType === \"latestTransactions\") {\n                // All parameters here are user defined\n                query = `SELECT * FROM ${this.blockchain}.transaction t, ethereum.block b WHERE t.to_address = '${this.contractAddress}' AND b.id=t.block_id ORDER BY b.timestamp DESC LIMIT ${this.limit} OFFSET ${queryOffset}`;\n            }\n            try {\n                const response = await fetch(\"https://api.sort.xyz/v1/queries/run\", {\n                    method: \"POST\",\n                    headers: {\n                        \"x-api-key\": this.apiKey,\n                        Accept: \"application/json\",\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify({ query }),\n                });\n                const fullResponse = await response.json();\n                // Reached the end, no more records\n                if (fullResponse &&\n                    fullResponse.data &&\n                    fullResponse.data.records.length === 0) {\n                    break;\n                }\n                const data = fullResponse?.data || [];\n                for (let i = 0; i < data.records.length; i += 1) {\n                    const doc = new Document({\n                        pageContent: JSON.stringify(data.records[i], null, 2),\n                        metadata: {\n                            row: i,\n                        },\n                    });\n                    docs.push(doc);\n                }\n                queryOffset += this.limit;\n                if (queryOffset >= this.limit || this.sql) {\n                    break;\n                }\n            }\n            catch (error) {\n                console.error(\"Error:\", error);\n            }\n        }\n        return docs;\n    }\n}\n", "import { zodToJsonSchema } from \"zod-to-json-schema\";\nimport { Document } from \"../document.js\";\nimport { BaseDocumentTransformer } from \"../schema/document.js\";\nimport { createTaggingChain, } from \"../chains/openai_functions/index.js\";\nimport { ChatOpenAI } from \"../chat_models/openai.js\";\nexport class MetadataTagger extends BaseDocumentTransformer {\n    constructor(fields) {\n        super();\n        Object.defineProperty(this, \"taggingChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.taggingChain = fields.taggingChain;\n        if (this.taggingChain.inputKeys.length !== 1) {\n            throw new Error(\"Invalid input chain. The input chain must have exactly one input.\");\n        }\n        if (this.taggingChain.outputKeys.length !== 1) {\n            throw new Error(\"Invalid input chain. The input chain must have exactly one output.\");\n        }\n    }\n    async transformDocuments(documents) {\n        const newDocuments = [];\n        for (const document of documents) {\n            const taggingChainResponse = await this.taggingChain.call({\n                [this.taggingChain.inputKeys[0]]: document.pageContent,\n            });\n            const extractedMetadata = taggingChainResponse[this.taggingChain.outputKeys[0]];\n            const newDocument = new Document({\n                pageContent: document.pageContent,\n                metadata: { ...extractedMetadata, ...document.metadata },\n            });\n            newDocuments.push(newDocument);\n        }\n        return newDocuments;\n    }\n}\nexport function createMetadataTagger(schema, options) {\n    const { llm = new ChatOpenAI({ modelName: \"gpt-3.5-turbo-0613\" }), ...rest } = options;\n    const taggingChain = createTaggingChain(schema, llm, rest);\n    return new MetadataTagger({ taggingChain });\n}\nexport function createMetadataTaggerFromZod(schema, options) {\n    return createMetadataTagger(zodToJsonSchema(schema), options);\n}\n", "import * as qs from 'qs';\nimport { VERSION } from './version';\nimport { Stream } from './streaming';\nimport { APIError, APIConnectionError, APIConnectionTimeoutError } from './error';\nimport type { Readable } from './_shims/node-readable';\nimport { getDefaultAgent, type Agent } from './_shims/agent';\nimport {\n  fetch,\n  isPolyfilled as fetchIsPolyfilled,\n  type RequestInfo,\n  type RequestInit,\n  type Response,\n} from './_shims/fetch.js';\nimport { isMultipartBody } from './uploads';\nexport {\n  maybeMultipartFormRequestOptions,\n  multipartFormRequestOptions,\n  createForm,\n  type Uploadable,\n} from './uploads';\n\nconst MAX_RETRIES = 2;\n\nexport type Fetch = (url: RequestInfo, init?: RequestInit) => Promise<Response>;\n\nexport abstract class APIClient {\n  baseURL: string;\n  maxRetries: number;\n  timeout: number;\n  httpAgent: Agent | undefined;\n\n  private fetch: Fetch;\n  protected idempotencyHeader?: string;\n\n  constructor({\n    baseURL,\n    maxRetries,\n    timeout = 60 * 1000, // 60s\n    httpAgent,\n    fetch: overridenFetch,\n  }: {\n    baseURL: string;\n    maxRetries?: number | undefined;\n    timeout: number | undefined;\n    httpAgent: Agent | undefined;\n    fetch: Fetch | undefined;\n  }) {\n    this.baseURL = baseURL;\n    this.maxRetries = validatePositiveInteger('maxRetries', maxRetries ?? MAX_RETRIES);\n    this.timeout = validatePositiveInteger('timeout', timeout);\n    this.httpAgent = httpAgent;\n\n    this.fetch = overridenFetch ?? fetch;\n  }\n\n  protected authHeaders(): Headers {\n    return {};\n  }\n\n  /**\n   * Override this to add your own default headers, for example:\n   *\n   *  {\n   *    ...super.defaultHeaders(),\n   *    Authorization: 'Bearer 123',\n   *  }\n   */\n  protected defaultHeaders(): Headers {\n    return {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      'User-Agent': this.getUserAgent(),\n      ...getPlatformHeaders(),\n      ...this.authHeaders(),\n    };\n  }\n\n  protected abstract defaultQuery(): DefaultQuery | undefined;\n\n  /**\n   * Override this to add your own headers validation:\n   */\n  protected validateHeaders(headers: Headers, customHeaders: Headers) {}\n\n  /**\n   * Override this to add your own qs.stringify options, for example:\n   *\n   *  {\n   *    ...super.qsOptions(),\n   *    strictNullHandling: true,\n   *  }\n   */\n  protected qsOptions(): qs.IStringifyOptions | undefined {\n    return {};\n  }\n\n  protected defaultIdempotencyKey(): string {\n    return `stainless-node-retry-${uuid4()}`;\n  }\n\n  get<Req extends {}, Rsp>(path: string, opts?: RequestOptions<Req>): Promise<Rsp> {\n    return this.request({ method: 'get', path, ...opts });\n  }\n  post<Req extends {}, Rsp>(path: string, opts?: RequestOptions<Req>): Promise<Rsp> {\n    return this.request({ method: 'post', path, ...opts });\n  }\n  patch<Req extends {}, Rsp>(path: string, opts?: RequestOptions<Req>): Promise<Rsp> {\n    return this.request({ method: 'patch', path, ...opts });\n  }\n  put<Req extends {}, Rsp>(path: string, opts?: RequestOptions<Req>): Promise<Rsp> {\n    return this.request({ method: 'put', path, ...opts });\n  }\n  delete<Req extends {}, Rsp>(path: string, opts?: RequestOptions<Req>): Promise<Rsp> {\n    return this.request({ method: 'delete', path, ...opts });\n  }\n\n  getAPIList<Item, PageClass extends AbstractPage<Item> = AbstractPage<Item>>(\n    path: string,\n    Page: new (...args: any[]) => PageClass,\n    opts?: RequestOptions<any>,\n  ): PagePromise<PageClass> {\n    return this.requestAPIList(Page, { method: 'get', path, ...opts });\n  }\n\n  private calculateContentLength(body: unknown): string | null {\n    if (typeof body === 'string') {\n      if (typeof Buffer !== 'undefined') {\n        return Buffer.byteLength(body, 'utf8').toString();\n      }\n\n      const encoder = new TextEncoder();\n      const encoded = encoder.encode(body);\n      return encoded.length.toString();\n    }\n\n    return null;\n  }\n\n  buildRequest<Req extends {}>(\n    options: FinalRequestOptions<Req>,\n  ): { req: RequestInit; url: string; timeout: number } {\n    const { method, path, query, headers: headers = {} } = options;\n\n    const body =\n      isMultipartBody(options.body) ? options.body.body\n      : options.body ? JSON.stringify(options.body, null, 2)\n      : null;\n    const contentLength = this.calculateContentLength(body);\n\n    const url = this.buildURL(path!, query);\n    if ('timeout' in options) validatePositiveInteger('timeout', options.timeout);\n    const timeout = options.timeout ?? this.timeout;\n    const httpAgent = options.httpAgent ?? this.httpAgent ?? getDefaultAgent(url);\n    const minAgentTimeout = timeout + 1000;\n    if ((httpAgent as any)?.options && minAgentTimeout > ((httpAgent as any).options.timeout ?? 0)) {\n      // Allow any given request to bump our agent active socket timeout.\n      // This may seem strange, but leaking active sockets should be rare and not particularly problematic,\n      // and without mutating agent we would need to create more of them.\n      // This tradeoff optimizes for performance.\n      (httpAgent as any).options.timeout = minAgentTimeout;\n    }\n\n    if (this.idempotencyHeader && method !== 'get') {\n      if (!options.idempotencyKey) options.idempotencyKey = this.defaultIdempotencyKey();\n      headers[this.idempotencyHeader] = options.idempotencyKey;\n    }\n\n    const reqHeaders: Record<string, string> = {\n      ...(contentLength && { 'Content-Length': contentLength }),\n      ...this.defaultHeaders(),\n      ...headers,\n    };\n    // let builtin fetch set the Content-Type for multipart bodies\n    if (isMultipartBody(options.body) && !fetchIsPolyfilled) {\n      delete reqHeaders['Content-Type'];\n    }\n\n    // Strip any headers being explicitly omitted with null\n    Object.keys(reqHeaders).forEach((key) => reqHeaders[key] === null && delete reqHeaders[key]);\n\n    const req: RequestInit = {\n      method,\n      ...(body && { body: body as any }),\n      headers: reqHeaders,\n      ...(httpAgent && { agent: httpAgent }),\n    };\n\n    this.validateHeaders(reqHeaders, headers);\n\n    return { req, url, timeout };\n  }\n\n  /**\n   * Used as a callback for mutating the given `RequestInit` object.\n   *\n   * This is useful for cases where you want to add certain headers based off of\n   * the request properties, e.g. `method` or `url`.\n   */\n  protected async prepareRequest(request: RequestInit, { url }: { url: string }): Promise<void> {}\n\n  protected makeStatusError(\n    status: number | undefined,\n    error: Object | undefined,\n    message: string | undefined,\n    headers: Headers | undefined,\n  ) {\n    return APIError.generate(status, error, message, headers);\n  }\n\n  async request<Req extends {}, Rsp>(\n    options: FinalRequestOptions<Req>,\n    retriesRemaining = options.maxRetries ?? this.maxRetries,\n  ): Promise<APIResponse<Rsp>> {\n    const { req, url, timeout } = this.buildRequest(options);\n    await this.prepareRequest(req, { url });\n\n    this.debug('request', url, options, req.headers);\n\n    const controller = new AbortController();\n    const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(castToError);\n\n    if (response instanceof Error) {\n      if (retriesRemaining) return this.retryRequest(options, retriesRemaining);\n      if (response.name === 'AbortError') throw new APIConnectionTimeoutError();\n      throw new APIConnectionError({ cause: response });\n    }\n\n    const responseHeaders = createResponseHeaders(response.headers);\n\n    if (!response.ok) {\n      if (retriesRemaining && this.shouldRetry(response)) {\n        return this.retryRequest(options, retriesRemaining, responseHeaders);\n      }\n\n      const errText = await response.text().catch(() => 'Unknown');\n      const errJSON = safeJSON(errText);\n      const errMessage = errJSON ? undefined : errText;\n\n      this.debug('response', response.status, url, responseHeaders, errMessage);\n\n      const err = this.makeStatusError(response.status, errJSON, errMessage, responseHeaders);\n      throw err;\n    }\n\n    if (options.stream) {\n      // Note: there is an invariant here that isn't represented in the type system\n      // that if you set `stream: true` the response type must also be `Stream<T>`\n      return new Stream<Rsp>(response, controller) as any;\n    }\n\n    const contentType = response.headers.get('content-type');\n    if (contentType?.includes('application/json')) {\n      const json = await response.json();\n\n      if (typeof json === 'object' && json != null) {\n        /** @deprecated \u2013\u00A0we expect to change this interface in the near future. */\n        Object.defineProperty(json, 'responseHeaders', {\n          enumerable: false,\n          writable: false,\n          value: responseHeaders,\n        });\n      }\n\n      this.debug('response', response.status, url, responseHeaders, json);\n\n      return json as APIResponse<Rsp>;\n    }\n\n    // TODO handle blob, arraybuffer, other content types, etc.\n    const text = response.text();\n    this.debug('response', response.status, url, responseHeaders, text);\n    return text as Promise<any>;\n  }\n\n  requestAPIList<Item = unknown, PageClass extends AbstractPage<Item> = AbstractPage<Item>>(\n    Page: new (...args: ConstructorParameters<typeof AbstractPage>) => PageClass,\n    options: FinalRequestOptions,\n  ): PagePromise<PageClass> {\n    const requestPromise = this.request(options) as Promise<APIResponse<unknown>>;\n    return new PagePromise(this, requestPromise, options, Page);\n  }\n\n  buildURL<Req>(path: string, query: Req | undefined): string {\n    const url =\n      isAbsoluteURL(path) ?\n        new URL(path)\n      : new URL(this.baseURL + (this.baseURL.endsWith('/') && path.startsWith('/') ? path.slice(1) : path));\n\n    const defaultQuery = this.defaultQuery();\n    if (!isEmptyObj(defaultQuery)) {\n      query = { ...defaultQuery, ...query } as Req;\n    }\n\n    if (query) {\n      url.search = qs.stringify(query, this.qsOptions());\n    }\n\n    return url.toString();\n  }\n\n  async fetchWithTimeout(\n    url: RequestInfo,\n    init: RequestInit | undefined,\n    ms: number,\n    controller: AbortController,\n  ): Promise<Response> {\n    const { signal, ...options } = init || {};\n    if (signal) signal.addEventListener('abort', () => controller.abort());\n\n    const timeout = setTimeout(() => controller.abort(), ms);\n\n    return this.getRequestClient()\n      .fetch(url, { signal: controller.signal as any, ...options })\n      .finally(() => {\n        clearTimeout(timeout);\n      });\n  }\n\n  protected getRequestClient(): RequestClient {\n    return { fetch: this.fetch };\n  }\n\n  private shouldRetry(response: Response): boolean {\n    // Note this is not a standard header.\n    const shouldRetryHeader = response.headers.get('x-should-retry');\n\n    // If the server explicitly says whether or not to retry, obey.\n    if (shouldRetryHeader === 'true') return true;\n    if (shouldRetryHeader === 'false') return false;\n\n    // Retry on lock timeouts.\n    if (response.status === 409) return true;\n\n    // Retry on rate limits.\n    if (response.status === 429) return true;\n\n    // Retry internal errors.\n    if (response.status >= 500) return true;\n\n    return false;\n  }\n\n  private async retryRequest<Req extends {}, Rsp>(\n    options: FinalRequestOptions<Req>,\n    retriesRemaining: number,\n    responseHeaders?: Headers | undefined,\n  ): Promise<Rsp> {\n    retriesRemaining -= 1;\n\n    // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n    //\n    // TODO: we may want to handle the case where the header is using the http-date syntax: \"Retry-After: <http-date>\".\n    // See https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After#syntax for details.\n    const retryAfter = parseInt(responseHeaders?.['retry-after'] || '');\n\n    const maxRetries = options.maxRetries ?? this.maxRetries;\n    const timeout = this.calculateRetryTimeoutSeconds(retriesRemaining, retryAfter, maxRetries) * 1000;\n    await sleep(timeout);\n\n    return this.request(options, retriesRemaining);\n  }\n\n  private calculateRetryTimeoutSeconds(\n    retriesRemaining: number,\n    retryAfter: number,\n    maxRetries: number,\n  ): number {\n    const initialRetryDelay = 0.5;\n    const maxRetryDelay = 2;\n\n    // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n    // just do what it says.\n    if (Number.isInteger(retryAfter) && retryAfter <= 60) {\n      return retryAfter;\n    }\n\n    const numRetries = maxRetries - retriesRemaining;\n\n    // Apply exponential backoff, but not more than the max.\n    const sleepSeconds = Math.min(initialRetryDelay * Math.pow(numRetries - 1, 2), maxRetryDelay);\n\n    // Apply some jitter, plus-or-minus half a second.\n    const jitter = Math.random() - 0.5;\n\n    return sleepSeconds + jitter;\n  }\n\n  private getUserAgent(): string {\n    return `${this.constructor.name}/JS ${VERSION}`;\n  }\n\n  private debug(action: string, ...args: any[]) {\n    if (typeof process !== 'undefined' && process.env['DEBUG'] === 'true') {\n      console.log(`${this.constructor.name}:DEBUG:${action}`, ...args);\n    }\n  }\n}\n\nexport class APIResource {\n  protected client: APIClient;\n  constructor(client: APIClient) {\n    this.client = client;\n\n    this.get = client.get.bind(client);\n    this.post = client.post.bind(client);\n    this.patch = client.patch.bind(client);\n    this.put = client.put.bind(client);\n    this.delete = client.delete.bind(client);\n    this.getAPIList = client.getAPIList.bind(client);\n  }\n\n  protected get: APIClient['get'];\n  protected post: APIClient['post'];\n  protected patch: APIClient['patch'];\n  protected put: APIClient['put'];\n  protected delete: APIClient['delete'];\n  protected getAPIList: APIClient['getAPIList'];\n}\n\nexport type PageInfo = { url: URL } | { params: Record<string, unknown> | null };\n\nexport abstract class AbstractPage<Item> implements AsyncIterable<Item> {\n  #client: APIClient;\n  protected options: FinalRequestOptions;\n\n  constructor(client: APIClient, response: APIResponse<unknown>, options: FinalRequestOptions) {\n    this.#client = client;\n    this.options = options;\n  }\n\n  /**\n   * @deprecated Use nextPageInfo instead\n   */\n  abstract nextPageParams(): Partial<Record<string, unknown>> | null;\n  abstract nextPageInfo(): PageInfo | null;\n\n  abstract getPaginatedItems(): Item[];\n\n  hasNextPage(): boolean {\n    const items = this.getPaginatedItems();\n    if (!items.length) return false;\n    return this.nextPageInfo() != null;\n  }\n\n  async getNextPage(): Promise<AbstractPage<Item>> {\n    const nextInfo = this.nextPageInfo();\n    if (!nextInfo) {\n      throw new Error(\n        'No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.',\n      );\n    }\n    const nextOptions = { ...this.options };\n    if ('params' in nextInfo) {\n      nextOptions.query = { ...nextOptions.query, ...nextInfo.params };\n    } else if ('url' in nextInfo) {\n      const params = [...Object.entries(nextOptions.query || {}), ...nextInfo.url.searchParams.entries()];\n      for (const [key, value] of params) {\n        nextInfo.url.searchParams.set(key, value);\n      }\n      nextOptions.query = undefined;\n      nextOptions.path = nextInfo.url.toString();\n    }\n    return await this.#client.requestAPIList(this.constructor as any, nextOptions);\n  }\n\n  async *iterPages() {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let page: AbstractPage<Item> = this;\n    yield page;\n    while (page.hasNextPage()) {\n      page = await page.getNextPage();\n      yield page;\n    }\n  }\n\n  async *[Symbol.asyncIterator]() {\n    for await (const page of this.iterPages()) {\n      for (const item of page.getPaginatedItems()) {\n        yield item;\n      }\n    }\n  }\n}\n\nexport class PagePromise<\n    PageClass extends AbstractPage<Item>,\n    Item = ReturnType<PageClass['getPaginatedItems']>[number],\n  >\n  extends Promise<PageClass>\n  implements AsyncIterable<Item>\n{\n  /**\n   * This subclass of Promise will resolve to an instantiated Page once the request completes.\n   */\n  constructor(\n    client: APIClient,\n    requestPromise: Promise<APIResponse<unknown>>,\n    options: FinalRequestOptions,\n    Page: new (...args: ConstructorParameters<typeof AbstractPage>) => PageClass,\n  ) {\n    super((resolve, reject) =>\n      requestPromise.then((response) => resolve(new Page(client, response, options))).catch(reject),\n    );\n  }\n\n  /**\n   * Enable subclassing Promise.\n   * Ref: https://stackoverflow.com/a/60328122\n   */\n  static get [Symbol.species]() {\n    return Promise;\n  }\n\n  /**\n   * Allow auto-paginating iteration on an unawaited list call, eg:\n   *\n   *    for await (const item of client.items.list()) {\n   *      console.log(item)\n   *    }\n   */\n  async *[Symbol.asyncIterator]() {\n    const page = await this;\n    for await (const item of page) {\n      yield item;\n    }\n  }\n}\n\nexport const createResponseHeaders = (\n  headers: Awaited<ReturnType<Fetch>>['headers'],\n): Record<string, string> => {\n  return new Proxy(\n    Object.fromEntries(\n      // @ts-ignore\n      headers.entries(),\n    ),\n    {\n      get(target, name) {\n        const key = name.toString();\n        return target[key.toLowerCase()] || target[key];\n      },\n    },\n  );\n};\n\ntype HTTPMethod = 'get' | 'post' | 'put' | 'patch' | 'delete';\n\nexport type RequestClient = { fetch: Fetch };\nexport type Headers = Record<string, string | null | undefined>;\nexport type DefaultQuery = Record<string, string | undefined>;\nexport type KeysEnum<T> = { [P in keyof Required<T>]: true };\n\nexport type RequestOptions<Req extends {} = Record<string, unknown> | Readable> = {\n  method?: HTTPMethod;\n  path?: string;\n  query?: Req | undefined;\n  body?: Req | undefined;\n  headers?: Headers | undefined;\n\n  maxRetries?: number;\n  stream?: boolean | undefined;\n  timeout?: number;\n  httpAgent?: Agent;\n  idempotencyKey?: string;\n};\n\n// This is required so that we can determine if a given object matches the RequestOptions\n// type at runtime. While this requires duplication, it is enforced by the TypeScript\n// compiler such that any missing / extraneous keys will cause an error.\nconst requestOptionsKeys: KeysEnum<RequestOptions> = {\n  method: true,\n  path: true,\n  query: true,\n  body: true,\n  headers: true,\n\n  maxRetries: true,\n  stream: true,\n  timeout: true,\n  httpAgent: true,\n  idempotencyKey: true,\n};\n\nexport const isRequestOptions = (obj: unknown): obj is RequestOptions => {\n  return (\n    typeof obj === 'object' &&\n    obj !== null &&\n    !isEmptyObj(obj) &&\n    Object.keys(obj).every((k) => hasOwn(requestOptionsKeys, k))\n  );\n};\n\nexport type FinalRequestOptions<Req extends {} = Record<string, unknown> | Readable> = RequestOptions<Req> & {\n  method: HTTPMethod;\n  path: string;\n};\n\nexport type APIResponse<T> = T & {\n  /** @deprecated - we plan to add a different way to access raw response information shortly. */\n  responseHeaders: Headers;\n};\n\ndeclare const Deno: any;\ndeclare const EdgeRuntime: any;\ntype Arch = 'x32' | 'x64' | 'arm' | 'arm64' | `other:${string}` | 'unknown';\ntype PlatformName =\n  | 'MacOS'\n  | 'Linux'\n  | 'Windows'\n  | 'FreeBSD'\n  | 'OpenBSD'\n  | 'iOS'\n  | 'Android'\n  | `Other:${string}`\n  | 'Unknown';\ntype PlatformProperties = {\n  'X-Stainless-Lang': 'js';\n  'X-Stainless-Package-Version': string;\n  'X-Stainless-OS': PlatformName;\n  'X-Stainless-Arch': Arch;\n  'X-Stainless-Runtime': 'node' | 'deno' | 'edge' | 'unknown';\n  'X-Stainless-Runtime-Version': string;\n};\nconst getPlatformProperties = (): PlatformProperties => {\n  if (typeof Deno !== 'undefined' && Deno.build != null) {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': normalizePlatform(Deno.build.os),\n      'X-Stainless-Arch': normalizeArch(Deno.build.arch),\n      'X-Stainless-Runtime': 'deno',\n      'X-Stainless-Runtime-Version': Deno.version,\n    };\n  }\n  if (typeof EdgeRuntime !== 'undefined') {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': 'Unknown',\n      'X-Stainless-Arch': `other:${EdgeRuntime}`,\n      'X-Stainless-Runtime': 'edge',\n      'X-Stainless-Runtime-Version': process.version,\n    };\n  }\n  // Check if Node.js\n  if (Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]') {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': normalizePlatform(process.platform),\n      'X-Stainless-Arch': normalizeArch(process.arch),\n      'X-Stainless-Runtime': 'node',\n      'X-Stainless-Runtime-Version': process.version,\n    };\n  }\n  // TODO add support for Cloudflare workers, browsers, etc.\n  return {\n    'X-Stainless-Lang': 'js',\n    'X-Stainless-Package-Version': VERSION,\n    'X-Stainless-OS': 'Unknown',\n    'X-Stainless-Arch': 'unknown',\n    'X-Stainless-Runtime': 'unknown',\n    'X-Stainless-Runtime-Version': 'unknown',\n  };\n};\n\nconst normalizeArch = (arch: string): Arch => {\n  // Node docs:\n  // - https://nodejs.org/api/process.html#processarch\n  // Deno docs:\n  // - https://doc.deno.land/deno/stable/~/Deno.build\n  if (arch === 'x32') return 'x32';\n  if (arch === 'x86_64' || arch === 'x64') return 'x64';\n  if (arch === 'arm') return 'arm';\n  if (arch === 'aarch64' || arch === 'arm64') return 'arm64';\n  if (arch) return `other:${arch}`;\n  return 'unknown';\n};\n\nconst normalizePlatform = (platform: string): PlatformName => {\n  // Node platforms:\n  // - https://nodejs.org/api/process.html#processplatform\n  // Deno platforms:\n  // - https://doc.deno.land/deno/stable/~/Deno.build\n  // - https://github.com/denoland/deno/issues/14799\n\n  platform = platform.toLowerCase();\n\n  // NOTE: this iOS check is untested and may not work\n  // Node does not work natively on IOS, there is a fork at\n  // https://github.com/nodejs-mobile/nodejs-mobile\n  // however it is unknown at the time of writing how to detect if it is running\n  if (platform.includes('ios')) return 'iOS';\n  if (platform === 'android') return 'Android';\n  if (platform === 'darwin') return 'MacOS';\n  if (platform === 'win32') return 'Windows';\n  if (platform === 'freebsd') return 'FreeBSD';\n  if (platform === 'openbsd') return 'OpenBSD';\n  if (platform === 'linux') return 'Linux';\n  if (platform) return `Other:${platform}`;\n  return 'Unknown';\n};\n\nlet _platformHeaders: PlatformProperties;\nconst getPlatformHeaders = () => {\n  return (_platformHeaders ??= getPlatformProperties());\n};\n\nexport const safeJSON = (text: string) => {\n  try {\n    return JSON.parse(text);\n  } catch (err) {\n    return undefined;\n  }\n};\n\n// https://stackoverflow.com/a/19709846\nconst startsWithSchemeRegexp = new RegExp('^(?:[a-z]+:)?//', 'i');\nconst isAbsoluteURL = (url: string): boolean => {\n  return startsWithSchemeRegexp.test(url);\n};\n\nconst sleep = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms));\n\nconst validatePositiveInteger = (name: string, n: number) => {\n  if (!Number.isInteger(n)) {\n    throw new Error(`${name} must be an integer`);\n  }\n  if (n < 0) {\n    throw new Error(`${name} must be a positive integer`);\n  }\n  return n;\n};\n\nexport const castToError = (err: any): Error => {\n  if (err instanceof Error) return err;\n  return new Error(err);\n};\n\nexport const ensurePresent = <T>(value: T | null | undefined): T => {\n  if (value == null) throw new Error(`Expected a value to be given but received ${value} instead.`);\n  return value;\n};\n\nexport const coerceInteger = (value: unknown): number => {\n  if (typeof value === 'number') return Math.round(value);\n  if (typeof value === 'string') return parseInt(value, 10);\n\n  throw new Error(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\n\nexport const coerceFloat = (value: unknown): number => {\n  if (typeof value === 'number') return value;\n  if (typeof value === 'string') return parseFloat(value);\n\n  throw new Error(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\n\nexport const coerceBoolean = (value: unknown): boolean => {\n  if (typeof value === 'boolean') return value;\n  if (typeof value === 'string') return value === 'true';\n  return Boolean(value);\n};\n\n// https://stackoverflow.com/a/34491287\nexport function isEmptyObj(obj: Object | null | undefined): boolean {\n  if (!obj) return true;\n  for (const _k in obj) return false;\n  return true;\n}\n\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nexport function hasOwn(obj: Object, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\n/**\n * https://stackoverflow.com/a/2117523\n */\nconst uuid4 = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = (Math.random() * 16) | 0;\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n\nexport interface HeadersProtocol {\n  get: (header: string) => string | null | undefined;\n}\nexport type HeadersLike = Record<string, string | string[] | undefined> | HeadersProtocol;\n\nexport const isHeadersProtocol = (headers: any): headers is HeadersProtocol => {\n  return typeof headers?.get === 'function';\n};\n\nexport const getHeader = (headers: HeadersLike, key: string): string | null | undefined => {\n  const lowerKey = key.toLowerCase();\n  if (isHeadersProtocol(headers)) return headers.get(key) || headers.get(lowerKey);\n  const value = headers[key] || headers[lowerKey];\n  if (Array.isArray(value)) {\n    if (value.length <= 1) return value[0];\n    console.warn(`Received ${value.length} entries for the ${key} header, using the first entry.`);\n    return value[0];\n  }\n  return value;\n};\n", "export const VERSION = '0.5.4'; // x-release-please-version\n", "// File generated from our OpenAPI spec by Stainless.\n\nimport { castToError, Headers } from './core';\n\nexport class APIError extends Error {\n  readonly status: number | undefined;\n  readonly headers: Headers | undefined;\n  readonly error: Object | undefined;\n\n  constructor(\n    status: number | undefined,\n    error: Object | undefined,\n    message: string | undefined,\n    headers: Headers | undefined,\n  ) {\n    super(message || (error as any)?.message || 'Unknown error occurred.');\n    this.status = status;\n    this.headers = headers;\n    this.error = error;\n  }\n\n  static generate(\n    status: number | undefined,\n    errorResponse: Object | undefined,\n    message: string | undefined,\n    headers: Headers | undefined,\n  ) {\n    if (!status) {\n      return new APIConnectionError({ cause: castToError(errorResponse) });\n    }\n\n    const error = errorResponse as Record<string, any>;\n\n    if (status === 400) {\n      return new BadRequestError(status, error, message, headers);\n    }\n\n    if (status === 401) {\n      return new AuthenticationError(status, error, message, headers);\n    }\n\n    if (status === 403) {\n      return new PermissionDeniedError(status, error, message, headers);\n    }\n\n    if (status === 404) {\n      return new NotFoundError(status, error, message, headers);\n    }\n\n    if (status === 409) {\n      return new ConflictError(status, error, message, headers);\n    }\n\n    if (status === 422) {\n      return new UnprocessableEntityError(status, error, message, headers);\n    }\n\n    if (status === 429) {\n      return new RateLimitError(status, error, message, headers);\n    }\n\n    if (status >= 500) {\n      return new InternalServerError(status, error, message, headers);\n    }\n\n    return new APIError(status, error, message, headers);\n  }\n}\n\nexport class APIConnectionError extends APIError {\n  override readonly status: undefined = undefined;\n\n  constructor({ message, cause }: { message?: string; cause?: Error | undefined }) {\n    super(undefined, undefined, message || 'Connection error.', undefined);\n    // in some environments the 'cause' property is already declared\n    // @ts-ignore\n    if (cause) this.cause = cause;\n  }\n}\n\nexport class APIConnectionTimeoutError extends APIConnectionError {\n  constructor() {\n    super({ message: 'Request timed out.' });\n  }\n}\n\nexport class BadRequestError extends APIError {\n  override readonly status: 400 = 400;\n}\n\nexport class AuthenticationError extends APIError {\n  override readonly status: 401 = 401;\n}\n\nexport class PermissionDeniedError extends APIError {\n  override readonly status: 403 = 403;\n}\n\nexport class NotFoundError extends APIError {\n  override readonly status: 404 = 404;\n}\n\nexport class ConflictError extends APIError {\n  override readonly status: 409 = 409;\n}\n\nexport class UnprocessableEntityError extends APIError {\n  override readonly status: 422 = 422;\n}\n\nexport class RateLimitError extends APIError {\n  override readonly status: 429 = 429;\n}\n\nexport class InternalServerError extends APIError {}\n", "import type { Response } from './_shims/fetch.js';\n\nimport { APIResponse, Headers, createResponseHeaders } from './core';\n\nimport { safeJSON } from './core';\nimport { APIError } from './error';\n\ntype Bytes = string | ArrayBuffer | Uint8Array | Buffer | null | undefined;\n\ntype ServerSentEvent = {\n  event: string | null;\n  data: string;\n  raw: string[];\n};\n\nexport class Stream<Item> implements AsyncIterable<Item>, APIResponse<Stream<Item>> {\n  /** @deprecated - please use the async iterator instead. We plan to add additional helper methods shortly. */\n  response: Response;\n  /** @deprecated - we plan to add a different way to access raw response information shortly. */\n  responseHeaders: Headers;\n  controller: AbortController;\n\n  private decoder: SSEDecoder;\n\n  constructor(response: Response, controller: AbortController) {\n    this.response = response;\n    this.controller = controller;\n    this.decoder = new SSEDecoder();\n    this.responseHeaders = createResponseHeaders(response.headers);\n  }\n\n  private async *iterMessages(): AsyncGenerator<ServerSentEvent, void, unknown> {\n    if (!this.response.body) {\n      this.controller.abort();\n      throw new Error(`Attempted to iterate over a response with no body`);\n    }\n    const lineDecoder = new LineDecoder();\n\n    const iter = readableStreamAsyncIterable<Bytes>(this.response.body);\n    for await (const chunk of iter) {\n      for (const line of lineDecoder.decode(chunk)) {\n        const sse = this.decoder.decode(line);\n        if (sse) yield sse;\n      }\n    }\n\n    for (const line of lineDecoder.flush()) {\n      const sse = this.decoder.decode(line);\n      if (sse) yield sse;\n    }\n  }\n\n  async *[Symbol.asyncIterator](): AsyncIterator<Item, any, undefined> {\n    try {\n      for await (const sse of this.iterMessages()) {\n        if (sse.event === 'completion') {\n          try {\n            yield JSON.parse(sse.data);\n          } catch (e) {\n            console.error(`Could not parse message into JSON:`, sse.data);\n            console.error(`From chunk:`, sse.raw);\n            throw e;\n          }\n        }\n\n        if (sse.event === 'ping') {\n          continue;\n        }\n\n        if (sse.event === 'error') {\n          const errText = sse.data;\n          const errJSON = safeJSON(errText);\n          const errMessage = errJSON ? undefined : errText;\n\n          throw APIError.generate(undefined, errJSON, errMessage, this.responseHeaders);\n        }\n      }\n    } catch (e) {\n      // If the user calls `stream.controller.abort()`, we should exit without throwing.\n      if (e instanceof Error && e.name === 'AbortError') return;\n      throw e;\n    } finally {\n      // If the user `break`s, abort the ongoing request.\n      this.controller.abort();\n    }\n  }\n}\n\nclass SSEDecoder {\n  private data: string[];\n  private event: string | null;\n  private chunks: string[];\n\n  constructor() {\n    this.event = null;\n    this.data = [];\n    this.chunks = [];\n  }\n\n  decode(line: string) {\n    if (line.endsWith('\\r')) {\n      line = line.substring(0, line.length - 1);\n    }\n\n    if (!line) {\n      // empty line and we didn't previously encounter any messages\n      if (!this.event && !this.data.length) return null;\n\n      const sse: ServerSentEvent = {\n        event: this.event,\n        data: this.data.join('\\n'),\n        raw: this.chunks,\n      };\n\n      this.event = null;\n      this.data = [];\n      this.chunks = [];\n\n      return sse;\n    }\n\n    this.chunks.push(line);\n\n    if (line.startsWith(':')) {\n      return null;\n    }\n\n    let [fieldname, _, value] = partition(line, ':');\n\n    if (value.startsWith(' ')) {\n      value = value.substring(1);\n    }\n\n    if (fieldname === 'event') {\n      this.event = value;\n    } else if (fieldname === 'data') {\n      this.data.push(value);\n    }\n\n    return null;\n  }\n}\n\n/**\n * A re-implementation of httpx's `LineDecoder` in Python that handles incrementally\n * reading lines from text.\n *\n * https://github.com/encode/httpx/blob/920333ea98118e9cf617f246905d7b202510941c/httpx/_decoders.py#L258\n */\nclass LineDecoder {\n  // prettier-ignore\n  static NEWLINE_CHARS = new Set(['\\n', '\\r', '\\x0b', '\\x0c', '\\x1c', '\\x1d', '\\x1e', '\\x85', '\\u2028', '\\u2029']);\n  static NEWLINE_REGEXP = /\\r\\n|[\\n\\r\\x0b\\x0c\\x1c\\x1d\\x1e\\x85\\u2028\\u2029]/g;\n\n  buffer: string[];\n  trailingCR: boolean;\n  textDecoder: any; // TextDecoder found in browsers; not typed to avoid pulling in either \"dom\" or \"node\" types.\n\n  constructor() {\n    this.buffer = [];\n    this.trailingCR = false;\n  }\n\n  decode(chunk: Bytes): string[] {\n    let text = this.decodeText(chunk);\n\n    if (this.trailingCR) {\n      text = '\\r' + text;\n      this.trailingCR = false;\n    }\n    if (text.endsWith('\\r')) {\n      this.trailingCR = true;\n      text = text.slice(0, -1);\n    }\n\n    if (!text) {\n      return [];\n    }\n\n    const trailingNewline = LineDecoder.NEWLINE_CHARS.has(text[text.length - 1] || '');\n    let lines = text.split(LineDecoder.NEWLINE_REGEXP);\n\n    if (lines.length === 1 && !trailingNewline) {\n      this.buffer.push(lines[0]!);\n      return [];\n    }\n\n    if (this.buffer.length > 0) {\n      lines = [this.buffer.join('') + lines[0], ...lines.slice(1)];\n      this.buffer = [];\n    }\n\n    if (!trailingNewline) {\n      this.buffer = [lines.pop() || ''];\n    }\n\n    return lines;\n  }\n\n  decodeText(bytes: Bytes): string {\n    if (bytes == null) return '';\n    if (typeof bytes === 'string') return bytes;\n\n    // Node:\n    if (typeof Buffer !== 'undefined') {\n      if (bytes instanceof Buffer) {\n        return bytes.toString();\n      }\n      if (bytes instanceof Uint8Array) {\n        return Buffer.from(bytes).toString();\n      }\n\n      throw new Error(\n        `Unexpected: received non-Uint8Array (${bytes.constructor.name}) stream chunk in an environment with a global \"Buffer\" defined, which this library assumes to be Node. Please report this error.`,\n      );\n    }\n\n    // Browser\n    if (typeof TextDecoder !== 'undefined') {\n      if (bytes instanceof Uint8Array || bytes instanceof ArrayBuffer) {\n        this.textDecoder ??= new TextDecoder('utf8');\n        return this.textDecoder.decode(bytes);\n      }\n\n      throw new Error(\n        `Unexpected: received non-Uint8Array/ArrayBuffer (${\n          (bytes as any).constructor.name\n        }) in a web platform. Please report this error.`,\n      );\n    }\n\n    throw new Error(\n      `Unexpected: neither Buffer nor TextDecoder are available as globals. Please report this error.`,\n    );\n  }\n\n  flush(): string[] {\n    if (!this.buffer.length && !this.trailingCR) {\n      return [];\n    }\n\n    const lines = [this.buffer.join('')];\n    this.buffer = [];\n    this.trailingCR = false;\n    return lines;\n  }\n}\n\nfunction partition(str: string, delimiter: string): [string, string, string] {\n  const index = str.indexOf(delimiter);\n  if (index !== -1) {\n    return [str.substring(0, index), delimiter, str.substring(index + delimiter.length)];\n  }\n\n  return [str, '', ''];\n}\n\n/**\n * Most browsers don't yet have async iterable support for ReadableStream,\n * and Node has a very different way of reading bytes from its \"ReadableStream\".\n *\n * This polyfill was pulled from https://github.com/MattiasBuelens/web-streams-polyfill/pull/122#issuecomment-1627354490\n */\nfunction readableStreamAsyncIterable<T>(stream: any): AsyncIterableIterator<T> {\n  if (stream[Symbol.asyncIterator]) return stream;\n\n  const reader = stream.getReader();\n  return {\n    async next() {\n      try {\n        const result = await reader.read();\n        if (result?.done) reader.releaseLock(); // release lock when stream becomes closed\n        return result;\n      } catch (e) {\n        reader.releaseLock(); // release lock when stream becomes errored\n        throw e;\n      }\n    },\n    async return() {\n      const cancelPromise = reader.cancel();\n      reader.releaseLock();\n      await cancelPromise;\n      return { done: true, value: undefined };\n    },\n    [Symbol.asyncIterator]() {\n      return this;\n    },\n  };\n}\n", "/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n *\n * This is a stub for non-node environments.\n * In node environments, it gets replaced agent.node.ts by the package export map\n */\n\nexport type Agent = any;\n\nexport const getDefaultAgent = (url: string): any => {\n  return undefined;\n};\n", "/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\n\n// If we accidentally call fetch with the wrong this binding,\n// in the browser it would throw:\n//   TypeError: Failed to execute 'fetch' on 'Window': Illegal invocation\nconst _fetch = fetch.bind(undefined);\nconst _Request = Request;\nconst _Response = Response;\nconst _Headers = Headers;\n\nexport const isPolyfilled = false;\n\nexport { _fetch as fetch, _Request as Request, _Response as Response, _Headers as Headers };\n", "/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\n\nconst _FormData = FormData;\nconst _File = File;\nconst _Blob = Blob;\n\nexport { _FormData as FormData, _File as File, _Blob as Blob };\n\nexport const isPolyfilled = false;\n", "/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n *\n * This is a stub that gets replaced by fileFromPath.node.js for node environments\n * in the package export map\n */\n\nimport type { FilePropertyBag, File } from './formdata.js';\n\nexport type FileFromPathOptions = Omit<FilePropertyBag, 'lastModified'>;\n\n/**\n * This is a stub for non-node environments that just throws an error.\n * In node environments, this module will be replaced by util/node/fileFromPath by the\n * package import map.\n */\nexport async function fileFromPath(path: string): Promise<File>;\nexport async function fileFromPath(path: string, filename?: string): Promise<File>;\nexport async function fileFromPath(path: string, options?: FileFromPathOptions): Promise<File>;\nexport async function fileFromPath(\n  path: string,\n  filename?: string,\n  options?: FileFromPathOptions,\n): Promise<File>;\nexport async function fileFromPath(): Promise<File> {\n  throw new Error(\n    'The `fileFromPath` function is only supported in Node. See the README for more details: https://www.github.com/anthropics/anthropic-sdk-typescript#file-uploads',\n  );\n}\n", "import { type RequestOptions } from './core';\nimport { type Readable } from './_shims/node-readable';\nimport { type BodyInit } from './_shims/fetch.js';\nimport { FormData, File, type FilePropertyBag } from './_shims/formdata.js';\nimport { getMultipartRequestOptions } from './_shims/getMultipartRequestOptions';\nimport { fileFromPath } from './_shims/fileFromPath';\nimport { type FsReadStream, isFsReadStream } from './_shims/node-readable';\n\nexport { fileFromPath };\n\nexport type BlobPart = string | ArrayBuffer | ArrayBufferView | BlobLike | Uint8Array | DataView;\n\n/**\n * Typically, this is a native \"File\" class.\n *\n * We provide the {@link toFile} utility to convert a variety of objects\n * into the File class.\n *\n * For convenience, you can also pass a fetch Response, or in Node,\n * the result of fs.createReadStream().\n */\nexport type Uploadable = FileLike | ResponseLike | FsReadStream;\n\n/**\n * Intended to match web.Blob, node.Blob, node-fetch.Blob, etc.\n */\nexport interface BlobLike {\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/size) */\n  readonly size: number;\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/type) */\n  readonly type: string;\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/text) */\n  text(): Promise<string>;\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/Blob/slice) */\n  slice(start?: number, end?: number): BlobLike;\n  // unfortunately @types/node-fetch@^2.6.4 doesn't type the arrayBuffer method\n}\n\n/**\n * Intended to match web.File, node.File, node-fetch.File, etc.\n */\nexport interface FileLike extends BlobLike {\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/File/lastModified) */\n  readonly lastModified: number;\n  /** [MDN Reference](https://developer.mozilla.org/docs/Web/API/File/name) */\n  readonly name: string;\n}\n\n/**\n * Intended to match web.Response, node.Response, node-fetch.Response, etc.\n */\nexport interface ResponseLike {\n  url: string;\n  blob(): Promise<BlobLike>;\n}\n\nexport const isResponseLike = (value: any): value is ResponseLike =>\n  value != null &&\n  typeof value === 'object' &&\n  typeof value.url === 'string' &&\n  typeof value.blob === 'function';\n\nexport const isFileLike = (value: any): value is FileLike =>\n  value != null &&\n  typeof value === 'object' &&\n  typeof value.name === 'string' &&\n  typeof value.lastModified === 'number' &&\n  isBlobLike(value);\n\n/**\n * The BlobLike type omits arrayBuffer() because @types/node-fetch@^2.6.4 lacks it; but this check\n * adds the arrayBuffer() method type because it is available and used at runtime\n */\nexport const isBlobLike = (value: any): value is BlobLike & { arrayBuffer(): Promise<ArrayBuffer> } =>\n  value != null &&\n  typeof value === 'object' &&\n  typeof value.size === 'number' &&\n  typeof value.type === 'string' &&\n  typeof value.text === 'function' &&\n  typeof value.slice === 'function' &&\n  typeof value.arrayBuffer === 'function';\n\nexport const isUploadable = (value: any): value is Uploadable => {\n  return isFileLike(value) || isResponseLike(value) || isFsReadStream(value);\n};\n\nexport type ToFileInput = Uploadable | Exclude<BlobPart, string> | AsyncIterable<BlobPart>;\n\n/**\n * Helper for creating a {@link File} to pass to an SDK upload method from a variety of different data formats\n * @param bits the raw content of the file.  Can be an {@link Uploadable}, {@link BlobPart}, or {@link AsyncIterable} of {@link BlobPart}s\n * @param {string=} name the name of the file. If omitted, toFile will try to determine a file name from bits if possible\n * @param {Object=} options additional properties\n * @param {string=} options.type the MIME type of the content\n * @param {number=} options.lastModified the last modified timestamp\n * @returns a {@link File} with the given properties\n */\nexport async function toFile(\n  value: ToFileInput | PromiseLike<ToFileInput>,\n  name?: string | null | undefined,\n  options: FilePropertyBag | undefined = {},\n): Promise<FileLike> {\n  if (isResponseLike(value)) {\n    const blob = await value.blob();\n    name ||= new URL(value.url).pathname.split(/[\\\\/]/).pop() ?? 'unknown_file';\n\n    return new File([blob as any], name, options);\n  }\n\n  const bits = await getBytes(value);\n\n  name ||= getName(value) ?? 'unknown_file';\n\n  if (!options.type) {\n    const type = (bits[0] as any)?.type;\n    if (typeof type === 'string') {\n      options = { ...options, type };\n    }\n  }\n\n  return new File(bits, name, options);\n}\n\nasync function getBytes(value: ToFileInput | PromiseLike<ToFileInput>): Promise<Array<BlobPart>> {\n  // resolve input promise or promiselike object\n  value = await value;\n\n  let parts: Array<BlobPart> = [];\n  if (\n    typeof value === 'string' ||\n    ArrayBuffer.isView(value) || // includes Uint8Array, Buffer, etc.\n    value instanceof ArrayBuffer\n  ) {\n    parts.push(value);\n  } else if (isBlobLike(value)) {\n    parts.push(await value.arrayBuffer());\n  } else if (\n    isAsyncIterableIterator(value) // includes Readable, ReadableStream, etc.\n  ) {\n    for await (const chunk of value) {\n      parts.push(chunk as BlobPart); // TODO, consider validating?\n    }\n  } else {\n    throw new Error(\n      `Unexpected data type: ${typeof value}; constructor: ${\n        value?.constructor?.name\n      }; props: ${propsForError(value)}`,\n    );\n  }\n\n  return parts;\n}\n\nfunction propsForError(value: any): string {\n  const props = Object.getOwnPropertyNames(value);\n  return `[${props.map((p) => `\"${p}\"`).join(', ')}]`;\n}\n\nfunction getName(value: any): string | undefined {\n  return (\n    getStringFromMaybeBuffer(value.name) ||\n    getStringFromMaybeBuffer(value.filename) ||\n    // For fs.ReadStream\n    getStringFromMaybeBuffer(value.path)?.split(/[\\\\/]/).pop()\n  );\n}\n\nconst getStringFromMaybeBuffer = (x: string | Buffer | unknown): string | undefined => {\n  if (typeof x === 'string') return x;\n  if (typeof Buffer !== 'undefined' && x instanceof Buffer) return String(x);\n  return undefined;\n};\n\nconst isAsyncIterableIterator = (value: any): value is AsyncIterableIterator<unknown> =>\n  value != null && typeof value === 'object' && typeof value[Symbol.asyncIterator] === 'function';\n\nexport class MultipartBody {\n  constructor(public body: Readable | BodyInit) {}\n  get [Symbol.toStringTag](): string {\n    return 'MultipartBody';\n  }\n}\n\nexport const isMultipartBody = (body: any): body is MultipartBody =>\n  body && typeof body === 'object' && body.body && body[Symbol.toStringTag] === 'MultipartBody';\n\n/**\n * Returns a multipart/form-data request if any part of the given request body contains a File / Blob value.\n * Otherwise returns the request as is.\n */\nexport const maybeMultipartFormRequestOptions = async <T extends {} = Record<string, unknown>>(\n  opts: RequestOptions<T>,\n): Promise<RequestOptions<T | MultipartBody>> => {\n  if (!hasUploadableValue(opts.body)) return opts;\n\n  const form = await createForm(opts.body);\n  return getMultipartRequestOptions(form, opts);\n};\n\nexport const multipartFormRequestOptions = async <T extends {} = Record<string, unknown>>(\n  opts: RequestOptions<T>,\n): Promise<RequestOptions<T | MultipartBody>> => {\n  const form = await createForm(opts.body);\n  return getMultipartRequestOptions(form, opts);\n};\n\nexport const createForm = async <T = Record<string, unknown>>(body: T | undefined): Promise<FormData> => {\n  const form = new FormData();\n  await Promise.all(Object.entries(body || {}).map(([key, value]) => addFormValue(form, key, value)));\n  return form;\n};\n\nconst hasUploadableValue = (value: unknown): boolean => {\n  if (isUploadable(value)) return true;\n  if (Array.isArray(value)) return value.some(hasUploadableValue);\n  if (value && typeof value === 'object') {\n    for (const k in value) {\n      if (hasUploadableValue((value as any)[k])) return true;\n    }\n  }\n  return false;\n};\n\nconst addFormValue = async (form: FormData, key: string, value: unknown): Promise<void> => {\n  if (value === undefined) return;\n  if (value == null) {\n    throw new TypeError(\n      `Received null for \"${key}\"; to pass null in FormData, you must use the string 'null'`,\n    );\n  }\n\n  // TODO: make nested formats configurable\n  if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n    form.append(key, value);\n  } else if (isUploadable(value)) {\n    const file = await toFile(value);\n    form.append(key, file);\n  } else if (Array.isArray(value)) {\n    await Promise.all(value.map((entry) => addFormValue(form, key + '[]', entry)));\n  } else if (typeof value === 'object') {\n    await Promise.all(\n      Object.entries(value).map(([name, prop]) => addFormValue(form, `${key}[${name}]`, prop)),\n    );\n  } else {\n    throw new TypeError(\n      `Invalid value given to form, expected a string, number, boolean, object, Array, File or Blob but got ${value} instead`,\n    );\n  }\n};\n", "// File generated from our OpenAPI spec by Stainless.\n\nimport type { Anthropic } from './index';\n\nexport class APIResource {\n  protected client: Anthropic;\n  constructor(client: Anthropic) {\n    this.client = client;\n\n    this.get = client.get.bind(client);\n    this.post = client.post.bind(client);\n    this.patch = client.patch.bind(client);\n    this.put = client.put.bind(client);\n    this.delete = client.delete.bind(client);\n    this.getAPIList = client.getAPIList.bind(client);\n  }\n\n  protected get: Anthropic['get'];\n  protected post: Anthropic['post'];\n  protected patch: Anthropic['patch'];\n  protected put: Anthropic['put'];\n  protected delete: Anthropic['delete'];\n  protected getAPIList: Anthropic['getAPIList'];\n}\n", "// File generated from our OpenAPI spec by Stainless.\n\nimport * as Core from '../core';\nimport { APIResource } from '../resource';\nimport * as API from '.';\nimport { Stream } from '../streaming';\n\nexport class Completions extends APIResource {\n  /**\n   * Create a completion\n   */\n  create(\n    body: CompletionCreateParams.CompletionRequestNonStreaming,\n    options?: Core.RequestOptions,\n  ): Promise<Core.APIResponse<Completion>>;\n  create(\n    body: CompletionCreateParams.CompletionRequestStreaming,\n    options?: Core.RequestOptions,\n  ): Promise<Core.APIResponse<Stream<Completion>>>;\n  create(\n    body: CompletionCreateParams,\n    options?: Core.RequestOptions,\n  ): Promise<Core.APIResponse<Completion | Stream<Completion>>> {\n    return this.post('/v1/complete', { body, timeout: 600000, ...options, stream: body.stream ?? false });\n  }\n}\n\nexport interface Completion {\n  /**\n   * The resulting completion up to and excluding the stop sequences.\n   */\n  completion: string;\n\n  /**\n   * The model that performed the completion.\n   */\n  model: string;\n\n  /**\n   * The reason that we stopped sampling.\n   *\n   * This may be one the following values:\n   *\n   * - `\"stop_sequence\"`: we reached a stop sequence \u2014 either provided by you via the\n   *   `stop_sequences` parameter, or a stop sequence built into the model\n   * - `\"max_tokens\"`: we exceeded `max_tokens_to_sample` or the model's maximum\n   */\n  stop_reason: string;\n}\n\nexport type CompletionCreateParams =\n  | CompletionCreateParams.CompletionRequestNonStreaming\n  | CompletionCreateParams.CompletionRequestStreaming;\n\nexport namespace CompletionCreateParams {\n  export interface CompletionRequestNonStreaming {\n    /**\n     * The maximum number of tokens to generate before stopping.\n     *\n     * Note that our models may stop _before_ reaching this maximum. This parameter\n     * only specifies the absolute maximum number of tokens to generate.\n     */\n    max_tokens_to_sample: number;\n\n    /**\n     * The model that will complete your prompt.\n     *\n     * As we improve Claude, we develop new versions of it that you can query. This\n     * parameter controls which version of Claude answers your request. Right now we\n     * are offering two model families: Claude, and Claude Instant. You can use them by\n     * setting `model` to `\"claude-2\"` or `\"claude-instant-1\"`, respectively. See\n     * [models](https://docs.anthropic.com/claude/reference/selecting-a-model) for\n     * additional details.\n     */\n    model: string;\n\n    /**\n     * The prompt that you want Claude to complete.\n     *\n     * For proper response generation you will need to format your prompt as follows:\n     *\n     * ```javascript\n     * const userQuestion = r\"Why is the sky blue?\";\n     * const prompt = `\\n\\nHuman: ${userQuestion}\\n\\nAssistant:`;\n     * ```\n     *\n     * See our\n     * [comments on prompts](https://docs.anthropic.com/claude/docs/introduction-to-prompt-design)\n     * for more context.\n     */\n    prompt: string;\n\n    /**\n     * An object describing metadata about the request.\n     */\n    metadata?: CompletionCreateParams.CompletionRequestNonStreaming.Metadata;\n\n    /**\n     * Sequences that will cause the model to stop generating completion text.\n     *\n     * Our models stop on `\"\\n\\nHuman:\"`, and may include additional built-in stop\n     * sequences in the future. By providing the stop_sequences parameter, you may\n     * include additional strings that will cause the model to stop generating.\n     */\n    stop_sequences?: Array<string>;\n\n    /**\n     * Whether to incrementally stream the response using server-sent events.\n     *\n     * See\n     * [this guide to SSE events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events)\n     * for details.\n     */\n    stream?: false;\n\n    /**\n     * Amount of randomness injected into the response.\n     *\n     * Defaults to 1. Ranges from 0 to 1. Use temp closer to 0 for analytical /\n     * multiple choice, and closer to 1 for creative and generative tasks.\n     */\n    temperature?: number;\n\n    /**\n     * Only sample from the top K options for each subsequent token.\n     *\n     * Used to remove \"long tail\" low probability responses.\n     * [Learn more technical details here](https://towardsdatascience.com/how-to-sample-from-language-models-682bceb97277).\n     */\n    top_k?: number;\n\n    /**\n     * Use nucleus sampling.\n     *\n     * In nucleus sampling, we compute the cumulative distribution over all the options\n     * for each subsequent token in decreasing probability order and cut it off once it\n     * reaches a particular probability specified by `top_p`. You should either alter\n     * `temperature` or `top_p`, but not both.\n     */\n    top_p?: number;\n  }\n\n  export namespace CompletionRequestNonStreaming {\n    /**\n     * An object describing metadata about the request.\n     */\n    export interface Metadata {\n      /**\n       * An external identifier for the user who is associated with the request.\n       *\n       * This should be a uuid, hash value, or other opaque identifier. Anthropic may use\n       * this id to help detect abuse. Do not include any identifying information such as\n       * name, email address, or phone number.\n       */\n      user_id?: string;\n    }\n  }\n\n  export interface CompletionRequestStreaming {\n    /**\n     * The maximum number of tokens to generate before stopping.\n     *\n     * Note that our models may stop _before_ reaching this maximum. This parameter\n     * only specifies the absolute maximum number of tokens to generate.\n     */\n    max_tokens_to_sample: number;\n\n    /**\n     * The model that will complete your prompt.\n     *\n     * As we improve Claude, we develop new versions of it that you can query. This\n     * parameter controls which version of Claude answers your request. Right now we\n     * are offering two model families: Claude, and Claude Instant. You can use them by\n     * setting `model` to `\"claude-2\"` or `\"claude-instant-1\"`, respectively. See\n     * [models](https://docs.anthropic.com/claude/reference/selecting-a-model) for\n     * additional details.\n     */\n    model: string;\n\n    /**\n     * The prompt that you want Claude to complete.\n     *\n     * For proper response generation you will need to format your prompt as follows:\n     *\n     * ```javascript\n     * const userQuestion = r\"Why is the sky blue?\";\n     * const prompt = `\\n\\nHuman: ${userQuestion}\\n\\nAssistant:`;\n     * ```\n     *\n     * See our\n     * [comments on prompts](https://docs.anthropic.com/claude/docs/introduction-to-prompt-design)\n     * for more context.\n     */\n    prompt: string;\n\n    /**\n     * Whether to incrementally stream the response using server-sent events.\n     *\n     * See\n     * [this guide to SSE events](https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events)\n     * for details.\n     */\n    stream: true;\n\n    /**\n     * An object describing metadata about the request.\n     */\n    metadata?: CompletionCreateParams.CompletionRequestStreaming.Metadata;\n\n    /**\n     * Sequences that will cause the model to stop generating completion text.\n     *\n     * Our models stop on `\"\\n\\nHuman:\"`, and may include additional built-in stop\n     * sequences in the future. By providing the stop_sequences parameter, you may\n     * include additional strings that will cause the model to stop generating.\n     */\n    stop_sequences?: Array<string>;\n\n    /**\n     * Amount of randomness injected into the response.\n     *\n     * Defaults to 1. Ranges from 0 to 1. Use temp closer to 0 for analytical /\n     * multiple choice, and closer to 1 for creative and generative tasks.\n     */\n    temperature?: number;\n\n    /**\n     * Only sample from the top K options for each subsequent token.\n     *\n     * Used to remove \"long tail\" low probability responses.\n     * [Learn more technical details here](https://towardsdatascience.com/how-to-sample-from-language-models-682bceb97277).\n     */\n    top_k?: number;\n\n    /**\n     * Use nucleus sampling.\n     *\n     * In nucleus sampling, we compute the cumulative distribution over all the options\n     * for each subsequent token in decreasing probability order and cut it off once it\n     * reaches a particular probability specified by `top_p`. You should either alter\n     * `temperature` or `top_p`, but not both.\n     */\n    top_p?: number;\n  }\n\n  export namespace CompletionRequestStreaming {\n    /**\n     * An object describing metadata about the request.\n     */\n    export interface Metadata {\n      /**\n       * An external identifier for the user who is associated with the request.\n       *\n       * This should be a uuid, hash value, or other opaque identifier. Anthropic may use\n       * this id to help detect abuse. Do not include any identifying information such as\n       * name, email address, or phone number.\n       */\n      user_id?: string;\n    }\n  }\n}\n\nexport namespace Completions {\n  export import Completion = API.Completion;\n  export import CompletionCreateParams = API.CompletionCreateParams;\n}\n", "// File generated from our OpenAPI spec by Stainless.\n\nimport * as qs from 'qs';\nimport * as Core from './core';\nimport * as API from './resources/index';\nimport * as Errors from './error';\nimport type { Agent } from './_shims/agent';\nimport * as Uploads from './uploads';\n\ntype Config = {\n  /**\n   * Defaults to process.env[\"ANTHROPIC_API_KEY\"]. Set it to null if you want to send unauthenticated requests.\n   */\n  apiKey?: string | null;\n\n  /**\n   * Override the default base URL for the API, e.g., \"https://api.example.com/v2/\"\n   */\n  baseURL?: string;\n\n  /**\n   * The maximum amount of time (in milliseconds) that the client should wait for a response\n   * from the server before timing out a single request.\n   *\n   * Note that request timeouts are retried by default, so in a worst-case scenario you may wait\n   * much longer than this timeout before the promise succeeds or fails.\n   */\n  timeout?: number;\n\n  /**\n   * An HTTP agent used to manage HTTP(S) connections.\n   *\n   * If not provided, an agent will be constructed by default in the Node.js environment,\n   * otherwise no agent is used.\n   */\n  httpAgent?: Agent;\n\n  /**\n   * Specify a custom `fetch` function implementation.\n   *\n   * If not provided, we use `node-fetch` on Node.js and otherwise expect that `fetch` is\n   * defined globally.\n   */\n  fetch?: Core.Fetch | undefined;\n\n  /**\n   * The maximum number of times that the client will retry a request in case of a\n   * temporary failure, like a network error or a 5XX error from the server.\n   *\n   * @default 2\n   */\n  maxRetries?: number;\n\n  /**\n   * Default headers to include with every request to the API.\n   *\n   * These can be removed in individual requests by explicitly setting the\n   * header to `undefined` or `null` in request options.\n   */\n  defaultHeaders?: Core.Headers;\n\n  /**\n   * Default query parameters to include with every request to the API.\n   *\n   * These can be removed in individual requests by explicitly setting the\n   * param to `undefined` in request options.\n   */\n  defaultQuery?: Core.DefaultQuery;\n\n  authToken?: string | null;\n};\n\n/** Instantiate the API Client. */\nexport class Anthropic extends Core.APIClient {\n  apiKey: string | null;\n  authToken?: string | null;\n\n  private _options: Config;\n\n  constructor(config?: Config) {\n    const options: Config = {\n      apiKey: typeof process === 'undefined' ? '' : process.env['ANTHROPIC_API_KEY'] || '',\n      baseURL: 'https://api.anthropic.com',\n      ...config,\n    };\n\n    super({\n      baseURL: options.baseURL!,\n      timeout: options.timeout,\n      httpAgent: options.httpAgent,\n      maxRetries: options.maxRetries,\n      fetch: options.fetch,\n    });\n    this.apiKey = options.apiKey || null;\n    this._options = options;\n\n    this.authToken = config?.authToken || process.env['ANTHROPIC_AUTH_TOKEN'] || null;\n  }\n\n  completions: API.Completions = new API.Completions(this);\n\n  protected override defaultQuery(): Core.DefaultQuery | undefined {\n    return this._options.defaultQuery;\n  }\n\n  protected override defaultHeaders(): Core.Headers {\n    return {\n      ...super.defaultHeaders(),\n      'anthropic-version': '2023-06-01',\n      ...this._options.defaultHeaders,\n    };\n  }\n\n  protected override validateHeaders(headers: Core.Headers, customHeaders: Core.Headers) {\n    if (this.apiKey && headers['X-Api-Key']) {\n      return;\n    }\n    if (customHeaders['X-Api-Key'] === null) {\n      return;\n    }\n\n    if (this.authToken && headers['Authorization']) {\n      return;\n    }\n    if (customHeaders['Authorization'] === null) {\n      return;\n    }\n\n    throw new Error(\n      'Could not resolve authentication method. Expected either apiKey or authToken to be set. Or for one of the \"X-Api-Key\" or \"Authorization\" headers to be explicitly omitted',\n    );\n  }\n\n  protected override authHeaders(): Core.Headers {\n    const apiKeyHeader = this.apiKeyHeader();\n    if (apiKeyHeader != null && !Core.isEmptyObj(apiKeyHeader)) {\n      return apiKeyHeader;\n    }\n    const authTokenBearer = this.authTokenBearer();\n    if (authTokenBearer != null && !Core.isEmptyObj(authTokenBearer)) {\n      return authTokenBearer;\n    }\n    return {};\n  }\n\n  protected apiKeyHeader(): Core.Headers {\n    if (this.apiKey == null) {\n      return {};\n    }\n    return { 'X-Api-Key': this.apiKey };\n  }\n\n  protected authTokenBearer(): Core.Headers {\n    if (this.authToken == null) {\n      return {};\n    }\n    return { Authorization: `Bearer ${this.authToken}` };\n  }\n\n  protected override qsOptions(): qs.IStringifyOptions {\n    return { arrayFormat: 'comma' };\n  }\n\n  static HUMAN_PROMPT = '\\n\\nHuman:';\n  static AI_PROMPT = '\\n\\nAssistant:';\n\n  static APIError = Errors.APIError;\n  static APIConnectionError = Errors.APIConnectionError;\n  static APIConnectionTimeoutError = Errors.APIConnectionTimeoutError;\n  static NotFoundError = Errors.NotFoundError;\n  static ConflictError = Errors.ConflictError;\n  static RateLimitError = Errors.RateLimitError;\n  static BadRequestError = Errors.BadRequestError;\n  static AuthenticationError = Errors.AuthenticationError;\n  static InternalServerError = Errors.InternalServerError;\n  static PermissionDeniedError = Errors.PermissionDeniedError;\n  static UnprocessableEntityError = Errors.UnprocessableEntityError;\n}\n\nexport const { HUMAN_PROMPT, AI_PROMPT } = Anthropic;\n\nexport const {\n  APIError,\n  APIConnectionError,\n  APIConnectionTimeoutError,\n  NotFoundError,\n  ConflictError,\n  RateLimitError,\n  BadRequestError,\n  AuthenticationError,\n  InternalServerError,\n  PermissionDeniedError,\n  UnprocessableEntityError,\n} = Errors;\n\nexport import toFile = Uploads.toFile;\nexport import fileFromPath = Uploads.fileFromPath;\n\nexport namespace Anthropic {\n  // Helper functions\n  export import toFile = Uploads.toFile;\n  export import fileFromPath = Uploads.fileFromPath;\n\n  export import Completions = API.Completions;\n  export import Completion = API.Completion;\n  export import CompletionCreateParams = API.CompletionCreateParams;\n}\n\nexport default Anthropic;\n", "import * as AnthropicApi from \"@anthropic-ai/sdk\";\nimport { AIMessage, } from \"../schema/index.js\";\nimport { getEnvironmentVariable } from \"../util/env.js\";\nimport { BaseChatModel } from \"./base.js\";\n// Anthropic's 0.5.3 SDK currently has a collision with the default exported class\n// and an exported namespace that causes issues when transpiling to CommonJS\nconst AnthropicClientConstructor = AnthropicApi.Anthropic ?? AnthropicApi.default;\nfunction getAnthropicPromptFromMessage(type) {\n    switch (type) {\n        case \"ai\":\n            return AnthropicApi.AI_PROMPT;\n        case \"human\":\n            return AnthropicApi.HUMAN_PROMPT;\n        case \"system\":\n            return \"\";\n        default:\n            throw new Error(`Unknown message type: ${type}`);\n    }\n}\nconst DEFAULT_STOP_SEQUENCES = [AnthropicApi.HUMAN_PROMPT];\n/**\n * Wrapper around Anthropic large language models.\n *\n * To use you should have the `@anthropic-ai/sdk` package installed, with the\n * `ANTHROPIC_API_KEY` environment variable set.\n *\n * @remarks\n * Any parameters that are valid to be passed to {@link\n * https://console.anthropic.com/docs/api/reference |\n * `anthropic.complete`} can be passed through {@link invocationKwargs},\n * even if not explicitly available on this class.\n *\n */\nexport class ChatAnthropic extends BaseChatModel {\n    get lc_secrets() {\n        return {\n            anthropicApiKey: \"ANTHROPIC_API_KEY\",\n        };\n    }\n    get lc_aliases() {\n        return {\n            modelName: \"model\",\n        };\n    }\n    constructor(fields) {\n        super(fields ?? {});\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"anthropicApiKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"apiUrl\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"temperature\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 1\n        });\n        Object.defineProperty(this, \"topK\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: -1\n        });\n        Object.defineProperty(this, \"topP\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: -1\n        });\n        Object.defineProperty(this, \"maxTokensToSample\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 2048\n        });\n        Object.defineProperty(this, \"modelName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"claude-v1\"\n        });\n        Object.defineProperty(this, \"invocationKwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"stopSequences\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"streaming\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        // Used for non-streaming requests\n        Object.defineProperty(this, \"batchClient\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // Used for streaming requests\n        Object.defineProperty(this, \"streamingClient\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.anthropicApiKey =\n            fields?.anthropicApiKey ?? getEnvironmentVariable(\"ANTHROPIC_API_KEY\");\n        if (!this.anthropicApiKey) {\n            throw new Error(\"Anthropic API key not found\");\n        }\n        // Support overriding the default API URL (i.e., https://api.anthropic.com)\n        this.apiUrl = fields?.anthropicApiUrl;\n        this.modelName = fields?.modelName ?? this.modelName;\n        this.invocationKwargs = fields?.invocationKwargs ?? {};\n        this.temperature = fields?.temperature ?? this.temperature;\n        this.topK = fields?.topK ?? this.topK;\n        this.topP = fields?.topP ?? this.topP;\n        this.maxTokensToSample =\n            fields?.maxTokensToSample ?? this.maxTokensToSample;\n        this.stopSequences = fields?.stopSequences ?? this.stopSequences;\n        this.streaming = fields?.streaming ?? false;\n    }\n    /**\n     * Get the parameters used to invoke the model\n     */\n    invocationParams(options) {\n        return {\n            model: this.modelName,\n            temperature: this.temperature,\n            top_k: this.topK,\n            top_p: this.topP,\n            stop_sequences: options?.stop?.concat(DEFAULT_STOP_SEQUENCES) ??\n                this.stopSequences ??\n                DEFAULT_STOP_SEQUENCES,\n            max_tokens_to_sample: this.maxTokensToSample,\n            stream: this.streaming,\n            ...this.invocationKwargs,\n        };\n    }\n    /** @ignore */\n    _identifyingParams() {\n        return {\n            model_name: this.modelName,\n            ...this.invocationParams(),\n        };\n    }\n    /**\n     * Get the identifying parameters for the model\n     */\n    identifyingParams() {\n        return {\n            model_name: this.modelName,\n            ...this.invocationParams(),\n        };\n    }\n    formatMessagesAsPrompt(messages) {\n        return (messages\n            .map((message) => {\n            const messagePrompt = getAnthropicPromptFromMessage(message._getType());\n            return `${messagePrompt} ${message.content}`;\n        })\n            .join(\"\") + AnthropicApi.AI_PROMPT);\n    }\n    /** @ignore */\n    async _generate(messages, options, runManager) {\n        if (this.stopSequences && options.stop) {\n            throw new Error(`\"stopSequence\" parameter found in input and default params`);\n        }\n        const params = this.invocationParams(options);\n        const response = await this.completionWithRetry({\n            ...params,\n            prompt: this.formatMessagesAsPrompt(messages),\n        }, { signal: options.signal }, runManager);\n        const generations = response.completion\n            .split(AnthropicApi.AI_PROMPT)\n            .map((message) => ({\n            text: message,\n            message: new AIMessage(message),\n        }));\n        return {\n            generations,\n        };\n    }\n    /** @ignore */\n    async completionWithRetry(request, options, runManager) {\n        if (!this.anthropicApiKey) {\n            throw new Error(\"Missing Anthropic API key.\");\n        }\n        let makeCompletionRequest;\n        let asyncCallerOptions = {};\n        if (request.stream) {\n            if (!this.streamingClient) {\n                const options = this.apiUrl ? { apiUrl: this.apiUrl } : undefined;\n                this.streamingClient = new AnthropicClientConstructor({\n                    ...options,\n                    apiKey: this.anthropicApiKey,\n                });\n            }\n            makeCompletionRequest = async () => {\n                const stream = await this.streamingClient.completions.create({\n                    ...request,\n                });\n                const completion = {\n                    completion: \"\",\n                    model: \"\",\n                    stop_reason: \"\",\n                };\n                for await (const data of stream) {\n                    completion.stop_reason = data.stop_reason;\n                    completion.model = data.model;\n                    if (options.signal?.aborted) {\n                        stream.controller.abort();\n                        throw new Error(\"AbortError: User aborted the request.\");\n                    }\n                    if (data.stop_reason) {\n                        break;\n                    }\n                    const part = data.completion;\n                    if (part) {\n                        completion.completion += part;\n                        // eslint-disable-next-line no-void\n                        void runManager?.handleLLMNewToken(part ?? \"\");\n                    }\n                }\n                return completion;\n            };\n        }\n        else {\n            if (!this.batchClient) {\n                const options = this.apiUrl ? { apiUrl: this.apiUrl } : undefined;\n                this.batchClient = new AnthropicClientConstructor({\n                    ...options,\n                    apiKey: this.anthropicApiKey,\n                });\n            }\n            asyncCallerOptions = { signal: options.signal };\n            makeCompletionRequest = async () => this.batchClient.completions.create({ ...request });\n        }\n        return this.caller.callWithOptions(asyncCallerOptions, makeCompletionRequest);\n    }\n    _llmType() {\n        return \"anthropic\";\n    }\n    /** @ignore */\n    _combineLLMOutput() {\n        return [];\n    }\n}\n", "import { BaseChatModel } from \"./base.js\";\nimport { AIMessage, } from \"../schema/index.js\";\nimport { getEnvironmentVariable } from \"../util/env.js\";\nfunction messageTypeToWenxinRole(type) {\n    switch (type) {\n        case \"ai\":\n            return \"assistant\";\n        case \"human\":\n            return \"user\";\n        case \"system\":\n            throw new Error(\"System messages not supported\");\n        default:\n            throw new Error(`Unknown message type: ${type}`);\n    }\n}\n/**\n * Wrapper around Baidu ERNIE large language models that use the Chat endpoint.\n *\n * To use you should have the `BAIDU_API_KEY` and `BAIDU_SECRET_KEY`\n * environment variable set.\n *\n * @augments BaseLLM\n * @augments BaiduERNIEInput\n */\nexport class ChatBaiduWenxin extends BaseChatModel {\n    get callKeys() {\n        return [\"stop\", \"signal\", \"options\"];\n    }\n    get lc_secrets() {\n        return {\n            baiduApiKey: \"BAIDU_API_KEY\",\n            baiduSecretKey: \"BAIDU_SECRET_KEY\",\n        };\n    }\n    get lc_aliases() {\n        return undefined;\n    }\n    constructor(fields) {\n        super(fields ?? {});\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"baiduApiKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"baiduSecretKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"accessToken\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"streaming\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"prefixMessages\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"userId\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"modelName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"ERNIE-Bot-turbo\"\n        });\n        Object.defineProperty(this, \"apiUrl\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"temperature\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"topP\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"penaltyScore\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.baiduApiKey =\n            fields?.baiduApiKey ?? getEnvironmentVariable(\"BAIDU_API_KEY\");\n        if (!this.baiduApiKey) {\n            throw new Error(\"Baidu API key not found\");\n        }\n        this.baiduSecretKey =\n            fields?.baiduSecretKey ?? getEnvironmentVariable(\"BAIDU_SECRET_KEY\");\n        if (!this.baiduSecretKey) {\n            throw new Error(\"Baidu Secret key not found\");\n        }\n        this.streaming = fields?.streaming ?? this.streaming;\n        this.prefixMessages = fields?.prefixMessages ?? this.prefixMessages;\n        this.userId = fields?.userId ?? this.userId;\n        this.temperature = fields?.temperature ?? this.temperature;\n        this.topP = fields?.topP ?? this.topP;\n        this.penaltyScore = fields?.penaltyScore ?? this.penaltyScore;\n        this.modelName = fields?.modelName ?? this.modelName;\n        if (this.modelName === \"ERNIE-Bot\") {\n            this.apiUrl =\n                \"https://aip.baidubce.com/rpc/2.0/ai_custom/v1/wenxinworkshop/chat/completions\";\n            this.temperature = this.temperature ?? 0.95;\n            this.topP = this.topP ?? 0.8;\n            this.penaltyScore = this.penaltyScore ?? 1.0;\n        }\n        else if (this.modelName === \"ERNIE-Bot-turbo\") {\n            this.apiUrl =\n                \"https://aip.baidubce.com/rpc/2.0/ai_custom/v1/wenxinworkshop/chat/eb-instant\";\n            // Validate the input\n            if (this.temperature) {\n                throw new Error(\"Temperature is not supported forERNIE-Bot-turbo model\");\n            }\n            if (this.topP) {\n                throw new Error(\"TopP is not supported for ERNIE-Bot-turbo model\");\n            }\n            if (this.penaltyScore) {\n                throw new Error(\"PenaltyScore is not supported for ERNIE-Bot-turbo model\");\n            }\n        }\n        else {\n            throw new Error(`Invalid model name: ${this.modelName}`);\n        }\n    }\n    async getAccessToken(options) {\n        const url = `https://aip.baidubce.com/oauth/2.0/token?grant_type=client_credentials&client_id=${this.baiduApiKey}&client_secret=${this.baiduSecretKey}`;\n        const response = await fetch(url, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Accept: \"application/json\",\n            },\n            signal: options?.signal,\n        });\n        if (!response.ok) {\n            const text = await response.text();\n            const error = new Error(`Baidu get access token failed with status code ${response.status}, response: ${text}`);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            error.response = response;\n            throw error;\n        }\n        const json = await response.json();\n        return json.access_token;\n    }\n    /**\n     * Get the parameters used to invoke the model\n     */\n    invocationParams() {\n        return {\n            stream: this.streaming,\n            user_id: this.userId,\n            temperature: this.temperature,\n            top_p: this.topP,\n            penalty_score: this.penaltyScore,\n        };\n    }\n    /**\n     * Get the identifying parameters for the model\n     */\n    identifyingParams() {\n        return {\n            model_name: this.modelName,\n            ...this.invocationParams(),\n        };\n    }\n    /** @ignore */\n    async _generate(messages, options, runManager) {\n        const tokenUsage = {};\n        const params = this.invocationParams();\n        const messagesMapped = messages.map((message) => ({\n            role: messageTypeToWenxinRole(message._getType()),\n            content: message.text,\n        }));\n        const data = params.stream\n            ? await new Promise((resolve, reject) => {\n                let response;\n                let rejected = false;\n                let resolved = false;\n                this.completionWithRetry({\n                    ...params,\n                    messages: messagesMapped,\n                }, true, options?.signal, (event) => {\n                    const data = JSON.parse(event.data);\n                    if (data?.error_code) {\n                        if (rejected) {\n                            return;\n                        }\n                        rejected = true;\n                        reject(data);\n                        return;\n                    }\n                    const message = data;\n                    // on the first message set the response properties\n                    if (!response) {\n                        response = {\n                            id: message.id,\n                            object: message.object,\n                            created: message.created,\n                            result: message.result,\n                            need_clear_history: message.need_clear_history,\n                            usage: message.usage,\n                        };\n                    }\n                    else {\n                        response.result += message.result;\n                        response.created = message.created;\n                        response.need_clear_history = message.need_clear_history;\n                        response.usage = message.usage;\n                    }\n                    // TODO this should pass part.index to the callback\n                    // when that's supported there\n                    // eslint-disable-next-line no-void\n                    void runManager?.handleLLMNewToken(message.result ?? \"\");\n                    if (message.is_end) {\n                        if (resolved || rejected) {\n                            return;\n                        }\n                        resolved = true;\n                        resolve(response);\n                    }\n                }).catch((error) => {\n                    if (!rejected) {\n                        rejected = true;\n                        reject(error);\n                    }\n                });\n            })\n            : await this.completionWithRetry({\n                ...params,\n                messages: messagesMapped,\n            }, false, options?.signal);\n        const { completion_tokens: completionTokens, prompt_tokens: promptTokens, total_tokens: totalTokens, } = data.usage ?? {};\n        if (completionTokens) {\n            tokenUsage.completionTokens =\n                (tokenUsage.completionTokens ?? 0) + completionTokens;\n        }\n        if (promptTokens) {\n            tokenUsage.promptTokens = (tokenUsage.promptTokens ?? 0) + promptTokens;\n        }\n        if (totalTokens) {\n            tokenUsage.totalTokens = (tokenUsage.totalTokens ?? 0) + totalTokens;\n        }\n        const generations = [];\n        const text = data.result ?? \"\";\n        generations.push({\n            text,\n            message: new AIMessage(text),\n        });\n        return {\n            generations,\n            llmOutput: { tokenUsage },\n        };\n    }\n    /** @ignore */\n    async completionWithRetry(request, stream, signal, onmessage) {\n        // The first run will get the accessToken\n        if (!this.accessToken) {\n            this.accessToken = await this.getAccessToken();\n        }\n        const makeCompletionRequest = async () => {\n            const url = `${this.apiUrl}?access_token=${this.accessToken}`;\n            const response = await fetch(url, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(request),\n                signal,\n            });\n            if (!stream) {\n                return response.json();\n            }\n            else {\n                if (response.body) {\n                    const reader = response.body.getReader();\n                    const decoder = new TextDecoder(\"utf-8\");\n                    let data = \"\";\n                    let continueReading = true;\n                    while (continueReading) {\n                        const { done, value } = await reader.read();\n                        if (done) {\n                            continueReading = false;\n                            break;\n                        }\n                        data += decoder.decode(value);\n                        let continueProcessing = true;\n                        while (continueProcessing) {\n                            const newlineIndex = data.indexOf(\"\\n\");\n                            if (newlineIndex === -1) {\n                                continueProcessing = false;\n                                break;\n                            }\n                            const line = data.slice(0, newlineIndex);\n                            data = data.slice(newlineIndex + 1);\n                            if (line.startsWith(\"data:\")) {\n                                const event = new MessageEvent(\"message\", {\n                                    data: line.slice(\"data:\".length).trim(),\n                                });\n                                onmessage?.(event);\n                            }\n                        }\n                    }\n                }\n            }\n        };\n        return this.caller.call(makeCompletionRequest);\n    }\n    _llmType() {\n        return \"baiduwenxin\";\n    }\n    /** @ignore */\n    _combineLLMOutput() {\n        return [];\n    }\n}\n", "export { BaseCallbackHandler, } from \"./base.js\";\nexport { BaseTracer } from \"./handlers/tracer.js\";\nexport { ConsoleCallbackHandler } from \"./handlers/console.js\";\nexport { LangChainTracer } from \"./handlers/tracer_langchain.js\";\nexport { LangChainTracerV1 } from \"./handlers/tracer_langchain_v1.js\";\nexport { getTracingCallbackHandler, getTracingV2CallbackHandler, } from \"./handlers/initialize.js\";\nexport { CallbackManager, CallbackManagerForChainRun, CallbackManagerForLLMRun, CallbackManagerForToolRun, TraceGroup, traceAsGroup, } from \"./manager.js\";\nexport { awaitAllCallbacks, consumeCallback } from \"./promises.js\";\n", "import { BaseOutputParser, OutputParserException, } from \"../schema/output_parser.js\";\n/**\n * Class to parse the output of an LLM call to a list.\n * @augments BaseOutputParser\n */\nexport class ListOutputParser extends BaseOutputParser {\n}\n/**\n * Class to parse the output of an LLM call as a comma-separated list.\n * @augments ListOutputParser\n */\nexport class CommaSeparatedListOutputParser extends ListOutputParser {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"output_parsers\", \"list\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n    }\n    async parse(text) {\n        try {\n            return text\n                .trim()\n                .split(\",\")\n                .map((s) => s.trim());\n        }\n        catch (e) {\n            throw new OutputParserException(`Could not parse output: ${text}`, text);\n        }\n    }\n    getFormatInstructions() {\n        return `Your response should be a list of comma separated values, eg: \\`foo, bar, baz\\``;\n    }\n}\n/**\n * Class to parse the output of an LLM call to a list with a specific length and separator.\n * @augments ListOutputParser\n */\nexport class CustomListOutputParser extends ListOutputParser {\n    constructor({ length, separator }) {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"output_parsers\", \"list\"]\n        });\n        Object.defineProperty(this, \"length\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"separator\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.length = length;\n        this.separator = separator || \",\";\n    }\n    async parse(text) {\n        try {\n            const items = text\n                .trim()\n                .split(this.separator)\n                .map((s) => s.trim());\n            if (this.length !== undefined && items.length !== this.length) {\n                throw new OutputParserException(`Incorrect number of items. Expected ${this.length}, got ${items.length}.`);\n            }\n            return items;\n        }\n        catch (e) {\n            if (Object.getPrototypeOf(e) === OutputParserException.prototype) {\n                throw e;\n            }\n            throw new OutputParserException(`Could not parse output: ${text}`);\n        }\n    }\n    getFormatInstructions() {\n        return `Your response should be a list of ${this.length} items separated by \"${this.separator}\" (eg: \\`foo${this.separator} bar${this.separator} baz\\`)`;\n    }\n}\n", "import { BaseOutputParser, OutputParserException, } from \"../schema/output_parser.js\";\n/**\n * Class to parse the output of an LLM call into a dictionary.\n * @augments BaseOutputParser\n */\nexport class RegexParser extends BaseOutputParser {\n    get lc_attributes() {\n        return {\n            regex: this.lc_kwargs.regex,\n        };\n    }\n    constructor(fields, outputKeys, defaultOutputKey) {\n        // eslint-disable-next-line no-instanceof/no-instanceof\n        if (typeof fields === \"string\" || fields instanceof RegExp) {\n            // eslint-disable-next-line no-param-reassign, @typescript-eslint/no-non-null-assertion\n            fields = { regex: fields, outputKeys: outputKeys, defaultOutputKey };\n        }\n        // eslint-disable-next-line no-instanceof/no-instanceof\n        if (fields.regex instanceof RegExp) {\n            // eslint-disable-next-line no-param-reassign\n            fields.regex = {\n                pattern: fields.regex.source,\n                flags: fields.regex.flags,\n            };\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"output_parsers\", \"regex\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"regex\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputKeys\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"defaultOutputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.regex =\n            // eslint-disable-next-line no-nested-ternary\n            typeof fields.regex === \"string\"\n                ? new RegExp(fields.regex)\n                : \"pattern\" in fields.regex\n                    ? new RegExp(fields.regex.pattern, fields.regex.flags)\n                    : fields.regex;\n        this.outputKeys = fields.outputKeys;\n        this.defaultOutputKey = fields.defaultOutputKey;\n    }\n    _type() {\n        return \"regex_parser\";\n    }\n    async parse(text) {\n        const match = text.match(this.regex);\n        if (match) {\n            return this.outputKeys.reduce((acc, key, index) => {\n                acc[key] = match[index + 1];\n                return acc;\n            }, {});\n        }\n        if (this.defaultOutputKey === undefined) {\n            throw new OutputParserException(`Could not parse output: ${text}`, text);\n        }\n        return this.outputKeys.reduce((acc, key) => {\n            acc[key] = key === this.defaultOutputKey ? text : \"\";\n            return acc;\n        }, {});\n    }\n    getFormatInstructions() {\n        return `Your response should match the following regex: ${this.regex}`;\n    }\n}\n", "import { BaseOutputParser } from \"../schema/output_parser.js\";\n/**\n * Class to combine multiple output parsers\n * @augments BaseOutputParser\n */\nexport class CombiningOutputParser extends BaseOutputParser {\n    constructor(fields, ...parsers) {\n        if (parsers.length > 0 || !(\"parsers\" in fields)) {\n            // eslint-disable-next-line no-param-reassign\n            fields = {\n                parsers: [fields, ...parsers],\n            };\n        }\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"output_parsers\", \"combining\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"parsers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputDelimiter\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"-----\"\n        });\n        this.parsers = fields.parsers;\n    }\n    async parse(input, callbacks) {\n        const inputs = input\n            .trim()\n            .split(new RegExp(`${this.outputDelimiter}Output \\\\d+${this.outputDelimiter}`))\n            .slice(1);\n        const ret = {};\n        for (const [i, p] of this.parsers.entries()) {\n            let parsed;\n            try {\n                let extracted = inputs[i].includes(\"```\")\n                    ? inputs[i].trim().split(/```/)[1]\n                    : inputs[i].trim();\n                if (extracted.endsWith(this.outputDelimiter)) {\n                    extracted = extracted.slice(0, -this.outputDelimiter.length);\n                }\n                parsed = await p.parse(extracted, callbacks);\n            }\n            catch (e) {\n                parsed = await p.parse(input.trim(), callbacks);\n            }\n            Object.assign(ret, parsed);\n        }\n        return ret;\n    }\n    getFormatInstructions() {\n        return `${[\n            `Return the following ${this.parsers.length} outputs, each formatted as described below. Include the delimiter characters \"${this.outputDelimiter}\" in your response:`,\n            ...this.parsers.map((p, i) => `${this.outputDelimiter}Output ${i + 1}${this.outputDelimiter}\\n${p\n                .getFormatInstructions()\n                .trim()}\\n${this.outputDelimiter}`),\n        ].join(\"\\n\\n\")}\\n`;\n    }\n}\n", "import { BaseRetriever } from \"../../schema/retriever.js\";\nimport { AsyncCaller } from \"../../util/async_caller.js\";\nexport class RemoteRetriever extends BaseRetriever {\n    get lc_secrets() {\n        return {\n            \"auth.bearer\": \"REMOTE_RETRIEVER_AUTH_BEARER\",\n        };\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"url\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"auth\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"headers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"asyncCaller\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        const { url, auth, ...rest } = fields;\n        this.url = url;\n        this.auth = auth;\n        this.headers = {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            ...(this.auth && this.auth.bearer\n                ? { Authorization: `Bearer ${this.auth.bearer}` }\n                : {}),\n        };\n        this.asyncCaller = new AsyncCaller(rest);\n    }\n    async _getRelevantDocuments(query) {\n        const body = this.createJsonBody(query);\n        const response = await this.asyncCaller.call(() => fetch(this.url, {\n            method: \"POST\",\n            headers: this.headers,\n            body: JSON.stringify(body),\n        }));\n        if (!response.ok) {\n            throw new Error(`Failed to retrieve documents from ${this.url}: ${response.status} ${response.statusText}`);\n        }\n        const json = await response.json();\n        return this.processJsonResponse(json);\n    }\n}\n", "import { Document } from \"../../document.js\";\nimport { RemoteRetriever, } from \"./base.js\";\nexport class ChatGPTPluginRetriever extends RemoteRetriever {\n    constructor({ topK = 4, filter, ...rest }) {\n        super(rest);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"retrievers\", \"remote\", \"chatgpt-plugin\"]\n        });\n        Object.defineProperty(this, \"topK\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"filter\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.topK = topK;\n        this.filter = filter;\n    }\n    createJsonBody(query) {\n        return {\n            queries: [\n                {\n                    query,\n                    top_k: this.topK,\n                    filter: this.filter,\n                },\n            ],\n        };\n    }\n    processJsonResponse(json) {\n        const results = json?.results?.[0]?.results;\n        if (!results) {\n            // Note an empty array of results would not fall into this case\n            throw new Error(\"No results returned from ChatGPTPluginRetriever\");\n        }\n        return results.map(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (result) => new Document({\n            pageContent: result.text,\n            metadata: result.metadata,\n        }));\n    }\n}\n", "import { Document } from \"../../document.js\";\nimport { RemoteRetriever, } from \"./base.js\";\nexport class RemoteLangChainRetriever extends RemoteRetriever {\n    constructor({ inputKey = \"message\", responseKey = \"response\", pageContentKey = \"page_content\", metadataKey = \"metadata\", ...rest }) {\n        super(rest);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"retrievers\", \"remote\", \"remote-retriever\"]\n        });\n        Object.defineProperty(this, \"inputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"responseKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"pageContentKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"metadataKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.inputKey = inputKey;\n        this.responseKey = responseKey;\n        this.pageContentKey = pageContentKey;\n        this.metadataKey = metadataKey;\n    }\n    createJsonBody(query) {\n        return {\n            [this.inputKey]: query,\n        };\n    }\n    processJsonResponse(json) {\n        return json[this.responseKey].map(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (r) => new Document({\n            pageContent: r[this.pageContentKey],\n            metadata: r[this.metadataKey],\n        }));\n    }\n}\n", "import { BaseRetriever } from \"../schema/retriever.js\";\nimport { Document } from \"../document.js\";\nimport { AsyncCaller } from \"../util/async_caller.js\";\nexport class DataberryRetriever extends BaseRetriever {\n    get lc_secrets() {\n        return { apiKey: \"DATABERRY_API_KEY\" };\n    }\n    get lc_aliases() {\n        return { apiKey: \"api_key\" };\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"retrievers\", \"databerry\"]\n        });\n        Object.defineProperty(this, \"caller\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"datastoreUrl\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"topK\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"apiKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        const { datastoreUrl, apiKey, topK, ...rest } = fields;\n        this.caller = new AsyncCaller(rest);\n        this.datastoreUrl = datastoreUrl;\n        this.apiKey = apiKey;\n        this.topK = topK;\n    }\n    async _getRelevantDocuments(query) {\n        const r = await this.caller.call(fetch, this.datastoreUrl, {\n            method: \"POST\",\n            body: JSON.stringify({\n                query,\n                ...(this.topK ? { topK: this.topK } : {}),\n            }),\n            headers: {\n                \"Content-Type\": \"application/json\",\n                ...(this.apiKey ? { Authorization: `Bearer ${this.apiKey}` } : {}),\n            },\n        });\n        const { results } = (await r.json());\n        return results.map(({ text, score, source, ...rest }) => new Document({\n            pageContent: text,\n            metadata: {\n                score,\n                source,\n                ...rest,\n            },\n        }));\n    }\n}\n", "import { Document } from \"../../document.js\";\nimport { LLMChain } from \"../../chains/llm_chain.js\";\nimport { PromptTemplate } from \"../../prompts/index.js\";\nimport { BaseOutputParser } from \"../../schema/output_parser.js\";\nimport { BaseDocumentCompressor } from \"./index.js\";\nimport { PROMPT_TEMPLATE } from \"./chain_extract_prompt.js\";\nfunction defaultGetInput(query, doc) {\n    return { question: query, context: doc.pageContent };\n}\nclass NoOutputParser extends BaseOutputParser {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\n                \"langchain\",\n                \"retrievers\",\n                \"document_compressors\",\n                \"chain_extract\",\n            ]\n        });\n        Object.defineProperty(this, \"noOutputStr\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"NO_OUTPUT\"\n        });\n    }\n    parse(text) {\n        const cleanedText = text.trim();\n        if (cleanedText === this.noOutputStr) {\n            return Promise.resolve(\"\");\n        }\n        return Promise.resolve(cleanedText);\n    }\n    getFormatInstructions() {\n        throw new Error(\"Method not implemented.\");\n    }\n}\nfunction getDefaultChainPrompt() {\n    const outputParser = new NoOutputParser();\n    const template = PROMPT_TEMPLATE(outputParser.noOutputStr);\n    return new PromptTemplate({\n        template,\n        inputVariables: [\"question\", \"context\"],\n        outputParser,\n    });\n}\nexport class LLMChainExtractor extends BaseDocumentCompressor {\n    constructor({ llmChain, getInput }) {\n        super();\n        Object.defineProperty(this, \"llmChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"getInput\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: defaultGetInput\n        });\n        this.llmChain = llmChain;\n        this.getInput = getInput;\n    }\n    async compressDocuments(documents, query) {\n        const compressedDocs = await Promise.all(documents.map(async (doc) => {\n            const input = this.getInput(query, doc);\n            const output = await this.llmChain.predict(input);\n            return output.length > 0\n                ? new Document({\n                    pageContent: output,\n                    metadata: doc.metadata,\n                })\n                : undefined;\n        }));\n        return compressedDocs.filter((doc) => doc !== undefined);\n    }\n    static fromLLM(llm, prompt, getInput) {\n        const _prompt = prompt || getDefaultChainPrompt();\n        const _getInput = getInput || defaultGetInput;\n        const llmChain = new LLMChain({ llm, prompt: _prompt });\n        return new LLMChainExtractor({ llmChain, getInput: _getInput });\n    }\n}\n", "import { StringPromptValue } from \"../prompts/base.js\";\nimport { PromptTemplate } from \"../prompts/prompt.js\";\nimport { VectorStoreRetriever, } from \"../vectorstores/base.js\";\nexport class HydeRetriever extends VectorStoreRetriever {\n    get lc_namespace() {\n        return [\"langchain\", \"retrievers\", \"hyde\"];\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"llm\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"promptTemplate\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.llm = fields.llm;\n        this.promptTemplate =\n            typeof fields.promptTemplate === \"string\"\n                ? getPromptTemplateFromKey(fields.promptTemplate)\n                : fields.promptTemplate;\n        if (this.promptTemplate) {\n            const { inputVariables } = this.promptTemplate;\n            if (inputVariables.length !== 1 && inputVariables[0] !== \"question\") {\n                throw new Error(`Prompt template must accept a single input variable 'question'. Invalid input variables for prompt template: ${inputVariables}`);\n            }\n        }\n    }\n    async _getRelevantDocuments(query, runManager) {\n        let value = new StringPromptValue(query);\n        // Use a custom template if provided\n        if (this.promptTemplate) {\n            value = await this.promptTemplate.formatPromptValue({ question: query });\n        }\n        // Get a hypothetical answer from the LLM\n        const res = await this.llm.generatePrompt([value]);\n        const answer = res.generations[0][0].text;\n        // Retrieve relevant documents based on the hypothetical answer\n        const results = await this.vectorStore.similaritySearch(answer, this.k, this.filter, runManager?.getChild(\"vectorstore\"));\n        return results;\n    }\n}\nexport function getPromptTemplateFromKey(key) {\n    let template;\n    switch (key) {\n        case \"websearch\":\n            template = `Please write a passage to answer the question \nQuestion: {question}\nPassage:`;\n            break;\n        case \"scifact\":\n            template = `Please write a scientific paper passage to support/refute the claim \nClaim: {question}\nPassage:`;\n            break;\n        case \"arguana\":\n            template = `Please write a counter argument for the passage \nPassage: {question}\nCounter Argument:`;\n            break;\n        case \"trec-covid\":\n            template = `Please write a scientific paper passage to answer the question\nQuestion: {question}\nPassage:`;\n            break;\n        case \"fiqa\":\n            template = `Please write a financial article passage to answer the question\nQuestion: {question}\nPassage:`;\n            break;\n        case \"dbpedia-entity\":\n            template = `Please write a passage to answer the question.\nQuestion: {question}\nPassage:`;\n            break;\n        case \"trec-news\":\n            template = `Please write a news passage about the topic.\nTopic: {question}\nPassage:`;\n            break;\n        case \"mr-tydi\":\n            template = `Please write a passage in Swahili/Korean/Japanese/Bengali to answer the question in detail.\nQuestion: {question}\nPassage:`;\n            break;\n        default:\n            throw new Error(`Invalid prompt key: ${key}`);\n    }\n    return PromptTemplate.fromTemplate(template);\n}\n", "import { Document } from \"../document.js\";\nimport { RemoteRetriever, } from \"./remote/base.js\";\nexport class VespaRetriever extends RemoteRetriever {\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"retrievers\", \"vespa\"]\n        });\n        Object.defineProperty(this, \"query_body\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"content_field\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.query_body = fields.query_body;\n        this.content_field = fields.content_field;\n        this.url = `${this.url}/search/?`;\n    }\n    createJsonBody(query) {\n        return {\n            ...this.query_body,\n            query,\n        };\n    }\n    processJsonResponse(json) {\n        return json.root.children.map((doc) => new Document({\n            pageContent: doc.fields[this.content_field],\n            metadata: { id: doc.id },\n        }));\n    }\n}\n", "import { Docstore } from \"../../schema/index.js\";\nexport class InMemoryDocstore extends Docstore {\n    constructor(docs) {\n        super();\n        Object.defineProperty(this, \"_docs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._docs = docs ?? new Map();\n    }\n    async search(search) {\n        const result = this._docs.get(search);\n        if (!result) {\n            throw new Error(`ID ${search} not found.`);\n        }\n        else {\n            return result;\n        }\n    }\n    async add(texts) {\n        const keys = [...this._docs.keys()];\n        const overlapping = Object.keys(texts).filter((x) => keys.includes(x));\n        if (overlapping.length > 0) {\n            throw new Error(`Tried to add ids that already exist: ${overlapping}`);\n        }\n        for (const [key, value] of Object.entries(texts)) {\n            this._docs.set(key, value);\n        }\n    }\n}\nexport class SynchronousInMemoryDocstore {\n    constructor(docs) {\n        Object.defineProperty(this, \"_docs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this._docs = docs ?? new Map();\n    }\n    search(search) {\n        const result = this._docs.get(search);\n        if (!result) {\n            throw new Error(`ID ${search} not found.`);\n        }\n        else {\n            return result;\n        }\n    }\n    add(texts) {\n        const keys = [...this._docs.keys()];\n        const overlapping = Object.keys(texts).filter((x) => keys.includes(x));\n        if (overlapping.length > 0) {\n            throw new Error(`Tried to add ids that already exist: ${overlapping}`);\n        }\n        for (const [key, value] of Object.entries(texts)) {\n            this._docs.set(key, value);\n        }\n    }\n}\n", "import { BaseFileStore } from \"../../schema/index.js\";\nexport class InMemoryFileStore extends BaseFileStore {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"stores\", \"file\", \"in_memory\"]\n        });\n        Object.defineProperty(this, \"files\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Map()\n        });\n    }\n    async readFile(path) {\n        const contents = this.files.get(path);\n        if (contents === undefined) {\n            throw new Error(`File not found: ${path}`);\n        }\n        return contents;\n    }\n    async writeFile(path, contents) {\n        this.files.set(path, contents);\n    }\n}\n", "import { BaseChatPromptTemplate } from \"../../prompts/chat.js\";\nimport { HumanMessage, SystemMessage, } from \"../../schema/index.js\";\nimport { getPrompt } from \"./prompt_generator.js\";\nexport class AutoGPTPrompt extends BaseChatPromptTemplate {\n    constructor(fields) {\n        super({ inputVariables: [\"goals\", \"memory\", \"messages\", \"user_input\"] });\n        Object.defineProperty(this, \"aiName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"aiRole\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tools\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tokenCounter\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"sendTokenLimit\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.aiName = fields.aiName;\n        this.aiRole = fields.aiRole;\n        this.tools = fields.tools;\n        this.tokenCounter = fields.tokenCounter;\n        this.sendTokenLimit = fields.sendTokenLimit || 4196;\n    }\n    _getPromptType() {\n        return \"autogpt\";\n    }\n    constructFullPrompt(goals) {\n        const promptStart = `Your decisions must always be made independently \n            without seeking user assistance. Play to your strengths \n            as an LLM and pursue simple strategies with no legal complications. \n            If you have completed all your tasks, \n            make sure to use the \"finish\" command.`;\n        let fullPrompt = `You are ${this.aiName}, ${this.aiRole}\\n${promptStart}\\n\\nGOALS:\\n\\n`;\n        goals.forEach((goal, index) => {\n            fullPrompt += `${index + 1}. ${goal}\\n`;\n        });\n        fullPrompt += `\\n\\n${getPrompt(this.tools)}`;\n        return fullPrompt;\n    }\n    async formatMessages({ goals, memory, messages: previousMessages, user_input, }) {\n        const basePrompt = new SystemMessage(this.constructFullPrompt(goals));\n        const timePrompt = new SystemMessage(`The current time and date is ${new Date().toLocaleString()}`);\n        const usedTokens = (await this.tokenCounter(basePrompt.content)) +\n            (await this.tokenCounter(timePrompt.content));\n        const relevantDocs = await memory.getRelevantDocuments(JSON.stringify(previousMessages.slice(-10)));\n        const relevantMemory = relevantDocs.map((d) => d.pageContent);\n        let relevantMemoryTokens = await relevantMemory.reduce(async (acc, doc) => (await acc) + (await this.tokenCounter(doc)), Promise.resolve(0));\n        while (usedTokens + relevantMemoryTokens > 2500) {\n            relevantMemory.pop();\n            relevantMemoryTokens = await relevantMemory.reduce(async (acc, doc) => (await acc) + (await this.tokenCounter(doc)), Promise.resolve(0));\n        }\n        const contentFormat = `This reminds you of these events from your past:\\n${relevantMemory.join(\"\\n\")}\\n\\n`;\n        const memoryMessage = new SystemMessage(contentFormat);\n        const usedTokensWithMemory = (await usedTokens) + (await this.tokenCounter(memoryMessage.content));\n        const historicalMessages = [];\n        for (const message of previousMessages.slice(-10).reverse()) {\n            const messageTokens = await this.tokenCounter(message.content);\n            if (usedTokensWithMemory + messageTokens > this.sendTokenLimit - 1000) {\n                break;\n            }\n            historicalMessages.unshift(message);\n        }\n        const inputMessage = new HumanMessage(user_input);\n        const messages = [\n            basePrompt,\n            timePrompt,\n            memoryMessage,\n            ...historicalMessages,\n            inputMessage,\n        ];\n        return messages;\n    }\n    async partial(_values) {\n        throw new Error(\"Method not implemented.\");\n    }\n    serialize() {\n        throw new Error(\"Method not implemented.\");\n    }\n}\n", "import { zodToJsonSchema } from \"zod-to-json-schema\";\nimport { FINISH_NAME } from \"./schema.js\";\nexport class PromptGenerator {\n    constructor() {\n        Object.defineProperty(this, \"constraints\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"commands\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"resources\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"performance_evaluation\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"response_format\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.constraints = [];\n        this.commands = [];\n        this.resources = [];\n        this.performance_evaluation = [];\n        this.response_format = {\n            thoughts: {\n                text: \"thought\",\n                reasoning: \"reasoning\",\n                plan: \"- short bulleted\\n- list that conveys\\n- long-term plan\",\n                criticism: \"constructive self-criticism\",\n                speak: \"thoughts summary to say to user\",\n            },\n            command: { name: \"command name\", args: { \"arg name\": \"value\" } },\n        };\n    }\n    add_constraint(constraint) {\n        this.constraints.push(constraint);\n    }\n    add_tool(tool) {\n        this.commands.push(tool);\n    }\n    _generate_command_string(tool) {\n        let output = `\"${tool.name}\": ${tool.description}`;\n        output += `, args json schema: ${JSON.stringify(zodToJsonSchema(tool.schema).properties)}`;\n        return output;\n    }\n    add_resource(resource) {\n        this.resources.push(resource);\n    }\n    add_performance_evaluation(evaluation) {\n        this.performance_evaluation.push(evaluation);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _generate_numbered_list(items, item_type = \"list\") {\n        if (item_type === \"command\") {\n            const command_strings = items.map((item, i) => `${i + 1}. ${this._generate_command_string(item)}`);\n            const finish_description = \"use this to signal that you have finished all your objectives\";\n            const finish_args = '\"response\": \"final response to let people know you have finished your objectives\"';\n            const finish_string = `${items.length + 1}. ${FINISH_NAME}: ${finish_description}, args: ${finish_args}`;\n            return command_strings.concat([finish_string]).join(\"\\n\");\n        }\n        return items.map((item, i) => `${i + 1}. ${item}`).join(\"\\n\");\n    }\n    generate_prompt_string() {\n        const formatted_response_format = JSON.stringify(this.response_format, null, 4);\n        const prompt_string = `Constraints:\\n${this._generate_numbered_list(this.constraints)}\\n\\n` +\n            `Commands:\\n${this._generate_numbered_list(this.commands, \"command\")}\\n\\n` +\n            `Resources:\\n${this._generate_numbered_list(this.resources)}\\n\\n` +\n            `Performance Evaluation:\\n${this._generate_numbered_list(this.performance_evaluation)}\\n\\n` +\n            `You should only respond in JSON format as described below ` +\n            `\\nResponse Format: \\n${formatted_response_format} ` +\n            `\\nEnsure the response can be parsed by Python json.loads`;\n        return prompt_string;\n    }\n}\nexport function getPrompt(tools) {\n    const prompt_generator = new PromptGenerator();\n    prompt_generator.add_constraint(\"~4000 word limit for short term memory. \" +\n        \"Your short term memory is short, \" +\n        \"so immediately save important information to files.\");\n    prompt_generator.add_constraint(\"If you are unsure how you previously did something \" +\n        \"or want to recall past events, \" +\n        \"thinking about similar events will help you remember.\");\n    prompt_generator.add_constraint(\"No user assistance\");\n    prompt_generator.add_constraint('Exclusively use the commands listed in double quotes e.g. \"command name\"');\n    for (const tool of tools) {\n        prompt_generator.add_tool(tool);\n    }\n    prompt_generator.add_resource(\"Internet access for searches and information gathering.\");\n    prompt_generator.add_resource(\"Long Term memory management.\");\n    prompt_generator.add_resource(\"GPT-3.5 powered Agents for delegation of simple tasks.\");\n    prompt_generator.add_resource(\"File output.\");\n    prompt_generator.add_performance_evaluation(\"Continuously review and analyze your actions \" +\n        \"to ensure you are performing to the best of your abilities.\");\n    prompt_generator.add_performance_evaluation(\"Constructively self-criticize your big-picture behavior constantly.\");\n    prompt_generator.add_performance_evaluation(\"Reflect on past decisions and strategies to refine your approach.\");\n    prompt_generator.add_performance_evaluation(\"Every command has a cost, so be smart and efficient. \" +\n        \"Aim to complete tasks in the least number of steps.\");\n    const prompt_string = prompt_generator.generate_prompt_string();\n    return prompt_string;\n}\n", "import { BaseOutputParser } from \"../../schema/output_parser.js\";\nexport function preprocessJsonInput(inputStr) {\n    // Replace single backslashes with double backslashes,\n    // while leaving already escaped ones intact\n    const correctedStr = inputStr.replace(/(?<!\\\\)\\\\(?![\"\\\\/bfnrt]|u[0-9a-fA-F]{4})/g, \"\\\\\\\\\");\n    return correctedStr;\n}\nexport class AutoGPTOutputParser extends BaseOutputParser {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"experimental\", \"autogpt\"]\n        });\n    }\n    getFormatInstructions() {\n        throw new Error(\"Method not implemented.\");\n    }\n    async parse(text) {\n        let parsed;\n        try {\n            parsed = JSON.parse(text);\n        }\n        catch (error) {\n            const preprocessedText = preprocessJsonInput(text);\n            try {\n                parsed = JSON.parse(preprocessedText);\n            }\n            catch (error) {\n                return {\n                    name: \"ERROR\",\n                    args: { error: `Could not parse invalid json: ${text}` },\n                };\n            }\n        }\n        try {\n            return {\n                name: parsed.command.name,\n                args: parsed.command.args,\n            };\n        }\n        catch (error) {\n            return {\n                name: \"ERROR\",\n                args: { error: `Incomplete command args: ${parsed}` },\n            };\n        }\n    }\n}\n", "import { LLMChain } from \"../../chains/llm_chain.js\";\nimport { AutoGPTOutputParser } from \"./output_parser.js\";\nimport { AutoGPTPrompt } from \"./prompt.js\";\nimport { AIMessage, HumanMessage, SystemMessage, } from \"../../schema/index.js\";\n// import { HumanInputRun } from \"./tools/human/tool\"; // TODO\nimport { FINISH_NAME } from \"./schema.js\";\nimport { TokenTextSplitter } from \"../../text_splitter.js\";\nimport { getEmbeddingContextSize, getModelContextSize, } from \"../../base_language/count_tokens.js\";\nexport class AutoGPT {\n    constructor({ aiName, memory, chain, outputParser, tools, feedbackTool, maxIterations, }) {\n        Object.defineProperty(this, \"aiName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"memory\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"fullMessageHistory\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"nextActionCount\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"chain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputParser\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tools\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"feedbackTool\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"maxIterations\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // Currently not generic enough to support any text splitter.\n        Object.defineProperty(this, \"textSplitter\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.aiName = aiName;\n        this.memory = memory;\n        this.fullMessageHistory = [];\n        this.nextActionCount = 0;\n        this.chain = chain;\n        this.outputParser = outputParser;\n        this.tools = tools;\n        this.feedbackTool = feedbackTool;\n        this.maxIterations = maxIterations;\n        const chunkSize = getEmbeddingContextSize(\"modelName\" in memory.vectorStore.embeddings\n            ? memory.vectorStore.embeddings.modelName\n            : undefined);\n        this.textSplitter = new TokenTextSplitter({\n            chunkSize,\n            chunkOverlap: Math.round(chunkSize / 10),\n        });\n    }\n    static fromLLMAndTools(llm, tools, { aiName, aiRole, memory, maxIterations = 100, \n    // humanInTheLoop = false,\n    outputParser = new AutoGPTOutputParser(), }) {\n        const prompt = new AutoGPTPrompt({\n            aiName,\n            aiRole,\n            tools,\n            tokenCounter: llm.getNumTokens.bind(llm),\n            sendTokenLimit: getModelContextSize(\"modelName\" in llm ? llm.modelName : \"gpt2\"),\n        });\n        // const feedbackTool = humanInTheLoop ? new HumanInputRun() : null;\n        const chain = new LLMChain({ llm, prompt });\n        return new AutoGPT({\n            aiName,\n            memory,\n            chain,\n            outputParser,\n            tools,\n            // feedbackTool,\n            maxIterations,\n        });\n    }\n    async run(goals) {\n        const user_input = \"Determine which next command to use, and respond using the format specified above:\";\n        let loopCount = 0;\n        while (loopCount < this.maxIterations) {\n            loopCount += 1;\n            const { text: assistantReply } = await this.chain.call({\n                goals,\n                user_input,\n                memory: this.memory,\n                messages: this.fullMessageHistory,\n            });\n            // Print the assistant reply\n            console.log(assistantReply);\n            this.fullMessageHistory.push(new HumanMessage(user_input));\n            this.fullMessageHistory.push(new AIMessage(assistantReply));\n            const action = await this.outputParser.parse(assistantReply);\n            const tools = this.tools.reduce((acc, tool) => ({ ...acc, [tool.name]: tool }), {});\n            if (action.name === FINISH_NAME) {\n                return action.args.response;\n            }\n            let result;\n            if (action.name in tools) {\n                const tool = tools[action.name];\n                let observation;\n                try {\n                    observation = await tool.call(action.args);\n                }\n                catch (e) {\n                    observation = `Error in args: ${e}`;\n                }\n                result = `Command ${tool.name} returned: ${observation}`;\n            }\n            else if (action.name === \"ERROR\") {\n                result = `Error: ${action.args}. `;\n            }\n            else {\n                result = `Unknown command '${action.name}'. Please refer to the 'COMMANDS' list for available commands and only respond in the specified JSON format.`;\n            }\n            let memoryToAdd = `Assistant Reply: ${assistantReply}\\nResult: ${result} `;\n            if (this.feedbackTool) {\n                const feedback = `\\n${await this.feedbackTool.call(\"Input: \")}`;\n                if (feedback === \"q\" || feedback === \"stop\") {\n                    console.log(\"EXITING\");\n                    return \"EXITING\";\n                }\n                memoryToAdd += feedback;\n            }\n            const documents = await this.textSplitter.createDocuments([memoryToAdd]);\n            await this.memory.addDocuments(documents);\n            this.fullMessageHistory.push(new SystemMessage(result));\n        }\n        return undefined;\n    }\n}\n", "import { LLMChain } from \"../../chains/llm_chain.js\";\nimport { PromptTemplate } from \"../../prompts/prompt.js\";\n/** Chain to generate tasks. */\nexport class TaskCreationChain extends LLMChain {\n    static fromLLM(fields) {\n        const taskCreationTemplate = `You are an task creation AI that uses the result of an execution agent` +\n            ` to create new tasks with the following objective: {objective},` +\n            ` The last completed task has the result: {result}.` +\n            ` This result was based on this task description: {task_description}.` +\n            ` These are incomplete tasks: {incomplete_tasks}.` +\n            ` Based on the result, create new tasks to be completed` +\n            ` by the AI system that do not overlap with incomplete tasks.` +\n            ` Return the tasks as an array.`;\n        const prompt = new PromptTemplate({\n            template: taskCreationTemplate,\n            inputVariables: [\n                \"result\",\n                \"task_description\",\n                \"incomplete_tasks\",\n                \"objective\",\n            ],\n        });\n        return new TaskCreationChain({ prompt, ...fields });\n    }\n}\n", "import { LLMChain } from \"../../chains/llm_chain.js\";\nimport { PromptTemplate } from \"../../prompts/prompt.js\";\n/** Chain to execute tasks. */\nexport class TaskExecutionChain extends LLMChain {\n    static fromLLM(fields) {\n        const executionTemplate = `You are an AI who performs one task based on the following objective: ` +\n            `{objective}.` +\n            `Take into account these previously completed tasks: {context}.` +\n            ` Your task: {task}. Response:`;\n        const prompt = new PromptTemplate({\n            template: executionTemplate,\n            inputVariables: [\"objective\", \"context\", \"task\"],\n        });\n        return new TaskExecutionChain({ prompt, ...fields });\n    }\n}\n", "import { LLMChain } from \"../../chains/llm_chain.js\";\nimport { PromptTemplate } from \"../../prompts/prompt.js\";\n/** Chain to prioritize tasks. */\nexport class TaskPrioritizationChain extends LLMChain {\n    static fromLLM(fields) {\n        const taskPrioritizationTemplate = `You are a task prioritization AI tasked with cleaning the formatting of ` +\n            `and reprioritizing the following tasks: {task_names}.` +\n            ` Consider the ultimate objective of your team: {objective}.` +\n            ` Do not remove any tasks. Return the result as a numbered list, like:` +\n            ` #. First task` +\n            ` #. Second task` +\n            ` Start the task list with number {next_task_id}.`;\n        const prompt = new PromptTemplate({\n            template: taskPrioritizationTemplate,\n            inputVariables: [\"task_names\", \"next_task_id\", \"objective\"],\n        });\n        return new TaskPrioritizationChain({ prompt, ...fields });\n    }\n}\n", "import { BaseChain } from \"../../chains/base.js\";\nimport { Document } from \"../../document.js\";\nimport { TaskCreationChain } from \"./task_creation.js\";\nimport { TaskExecutionChain } from \"./task_execution.js\";\nimport { TaskPrioritizationChain } from \"./task_prioritization.js\";\nexport class BabyAGI extends BaseChain {\n    constructor({ creationChain, prioritizationChain, executionChain, vectorstore, maxIterations = 100, verbose, callbacks, }) {\n        super(undefined, verbose, callbacks);\n        Object.defineProperty(this, \"taskList\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"creationChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"prioritizationChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"executionChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"taskIDCounter\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"vectorstore\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"maxIterations\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.taskList = [];\n        this.creationChain = creationChain;\n        this.prioritizationChain = prioritizationChain;\n        this.executionChain = executionChain;\n        this.taskIDCounter = 1;\n        this.vectorstore = vectorstore;\n        this.maxIterations = maxIterations;\n    }\n    _chainType() {\n        return \"BabyAGI\";\n    }\n    get inputKeys() {\n        return [\"objective\", \"firstTask\"];\n    }\n    get outputKeys() {\n        return [];\n    }\n    async addTask(task) {\n        this.taskList.push(task);\n    }\n    printTaskList() {\n        console.log(\"\\x1b[95m\\x1b[1m\\n*****TASK LIST*****\\n\\x1b[0m\\x1b[0m\");\n        for (const t of this.taskList) {\n            console.log(`${t.taskID}: ${t.taskName}`);\n        }\n    }\n    printNextTask(task) {\n        console.log(\"\\x1b[92m\\x1b[1m\\n*****NEXT TASK*****\\n\\x1b[0m\\x1b[0m\");\n        console.log(`${task.taskID}: ${task.taskName}`);\n    }\n    printTaskResult(result) {\n        console.log(\"\\x1b[93m\\x1b[1m\\n*****TASK RESULT*****\\n\\x1b[0m\\x1b[0m\");\n        console.log(result.trim());\n    }\n    async getNextTasks(result, task_description, objective, runManager) {\n        const taskNames = this.taskList.map((t) => t.taskName);\n        const incomplete_tasks = taskNames.join(\", \");\n        const { [this.creationChain.outputKeys[0]]: text } = await this.creationChain.call({\n            result,\n            task_description,\n            incomplete_tasks,\n            objective,\n        }, runManager?.getChild());\n        const newTasks = text.split(\"\\n\");\n        return newTasks\n            .filter((taskName) => taskName.trim())\n            .map((taskName) => ({ taskName }));\n    }\n    async prioritizeTasks(thisTaskID, objective, runManager) {\n        const taskNames = this.taskList.map((t) => t.taskName);\n        const nextTaskID = thisTaskID + 1;\n        const { [this.prioritizationChain.outputKeys[0]]: text } = await this.prioritizationChain.call({\n            task_names: taskNames.join(\", \"),\n            next_task_id: String(nextTaskID),\n            objective,\n        }, runManager?.getChild());\n        const newTasks = text.trim().split(\"\\n\");\n        const prioritizedTaskList = [];\n        for (const taskString of newTasks) {\n            const taskParts = taskString.trim().split(\".\", 2);\n            if (taskParts.length === 2) {\n                const taskID = taskParts[0].trim();\n                const taskName = taskParts[1].trim();\n                prioritizedTaskList.push({ taskID, taskName });\n            }\n        }\n        return prioritizedTaskList;\n    }\n    async getTopTasks(query, k = 5) {\n        const results = await this.vectorstore.similaritySearch(query, k);\n        if (!results) {\n            return [];\n        }\n        return results.map((item) => String(item.metadata.task));\n    }\n    async executeTask(objective, task, runManager) {\n        const context = await this.getTopTasks(objective);\n        const { [this.executionChain.outputKeys[0]]: text } = await this.executionChain.call({\n            objective,\n            context: context.join(\"\\n\"),\n            task,\n        }, runManager?.getChild());\n        return text;\n    }\n    async _call({ objective, firstTask = \"Make a todo list\" }, runManager) {\n        this.taskList = [];\n        this.taskIDCounter = 1;\n        await this.addTask({ taskID: \"1\", taskName: firstTask });\n        let numIters = 0;\n        while (numIters < this.maxIterations && this.taskList.length > 0) {\n            this.printTaskList();\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const task = this.taskList.shift();\n            this.printNextTask(task);\n            const result = await this.executeTask(objective, task.taskName, runManager);\n            const thisTaskID = parseInt(task.taskID, 10);\n            this.printTaskResult(result);\n            await this.vectorstore.addDocuments([\n                new Document({\n                    pageContent: result,\n                    metadata: { task: task.taskName },\n                }),\n            ]);\n            const newTasks = await this.getNextTasks(result, task.taskName, objective, runManager);\n            for (const newTask of newTasks) {\n                this.taskIDCounter += 1;\n                newTask.taskID = this.taskIDCounter.toFixed();\n                await this.addTask(newTask);\n            }\n            this.taskList = await this.prioritizeTasks(thisTaskID, objective, runManager);\n            numIters += 1;\n        }\n        return {};\n    }\n    serialize() {\n        throw new Error(\"Method not implemented.\");\n    }\n    static fromLLM({ llm, vectorstore, executionChain, verbose, callbacks, ...rest }) {\n        const creationChain = TaskCreationChain.fromLLM({\n            llm,\n            verbose,\n            callbacks,\n        });\n        const prioritizationChain = TaskPrioritizationChain.fromLLM({\n            llm,\n            verbose,\n            callbacks,\n        });\n        return new BabyAGI({\n            creationChain,\n            prioritizationChain,\n            executionChain: executionChain ||\n                TaskExecutionChain.fromLLM({ llm, verbose, callbacks }),\n            vectorstore,\n            verbose,\n            callbacks,\n            ...rest,\n        });\n    }\n}\n", "import { LLMChain } from \"../../chains/llm_chain.js\";\nimport { PromptTemplate } from \"../../prompts/index.js\";\nimport { Document } from \"../../document.js\";\nimport { BaseMemory } from \"../../memory/base.js\";\nexport class GenerativeAgentMemory extends BaseMemory {\n    constructor(llm, memoryRetriever, config) {\n        super();\n        Object.defineProperty(this, \"llm\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"memoryRetriever\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"verbose\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"reflectionThreshold\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"currentPlan\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"importanceWeight\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0.15\n        });\n        Object.defineProperty(this, \"aggregateImportance\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 0.0\n        });\n        Object.defineProperty(this, \"maxTokensLimit\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 1200\n        });\n        Object.defineProperty(this, \"queriesKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"queries\"\n        });\n        Object.defineProperty(this, \"mostRecentMemoriesTokenKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"recent_memories_token\"\n        });\n        Object.defineProperty(this, \"addMemoryKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"addMemory\"\n        });\n        Object.defineProperty(this, \"relevantMemoriesKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"relevant_memories\"\n        });\n        Object.defineProperty(this, \"relevantMemoriesSimpleKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"relevant_memories_simple\"\n        });\n        Object.defineProperty(this, \"mostRecentMemoriesKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"most_recent_memories\"\n        });\n        Object.defineProperty(this, \"nowKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"now\"\n        });\n        Object.defineProperty(this, \"reflecting\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        this.llm = llm;\n        this.memoryRetriever = memoryRetriever;\n        this.verbose = config?.verbose ?? this.verbose;\n        this.reflectionThreshold =\n            config?.reflectionThreshold ?? this.reflectionThreshold;\n        this.importanceWeight = config?.importanceWeight ?? this.importanceWeight;\n        this.maxTokensLimit = config?.maxTokensLimit ?? this.maxTokensLimit;\n    }\n    getRelevantMemoriesKey() {\n        return this.relevantMemoriesKey;\n    }\n    getMostRecentMemoriesTokenKey() {\n        return this.mostRecentMemoriesTokenKey;\n    }\n    getAddMemoryKey() {\n        return this.addMemoryKey;\n    }\n    getCurrentTimeKey() {\n        return this.nowKey;\n    }\n    get memoryKeys() {\n        // Return an array of memory keys\n        return [this.relevantMemoriesKey, this.mostRecentMemoriesKey];\n    }\n    chain(prompt) {\n        const chain = new LLMChain({\n            llm: this.llm,\n            prompt,\n            verbose: this.verbose,\n            outputKey: \"output\",\n        });\n        return chain;\n    }\n    static parseList(text) {\n        // parse a newine seperates string into a list of strings\n        return text.split(\"\\n\").map((s) => s.trim());\n    }\n    async getTopicsOfReflection(lastK = 50) {\n        const prompt = PromptTemplate.fromTemplate(\"{observations}\\n\\n\" +\n            \"Given only the information above, what are the 3 most salient\" +\n            \" high-level questions we can answer about the subjects in\" +\n            \" the statements? Provide each question on a new line.\\n\\n\");\n        const observations = this.memoryRetriever.getMemoryStream().slice(-lastK);\n        const observationStr = observations\n            .map((o) => o.pageContent)\n            .join(\"\\n\");\n        const result = await this.chain(prompt).run(observationStr);\n        return GenerativeAgentMemory.parseList(result);\n    }\n    async getInsightsOnTopic(topic, now) {\n        // generate insights on a topic of reflection, based on pertinent memories\n        const prompt = PromptTemplate.fromTemplate(\"Statements about {topic}\\n\" +\n            \"{related_statements}\\n\\n\" +\n            \"What 5 high-level insights can you infer from the above statements?\" +\n            \" (example format: insight (because of 1, 5, 3))\");\n        const relatedMemories = await this.fetchMemories(topic, now);\n        const relatedStatements = relatedMemories\n            .map((memory, index) => `${index + 1}. ${memory.pageContent}`)\n            .join(\"\\n\");\n        const result = await this.chain(prompt).call({\n            topic,\n            relatedStatements,\n        });\n        return GenerativeAgentMemory.parseList(result.output); // added output\n    }\n    async pauseToReflect(now) {\n        if (this.verbose) {\n            console.log(\"Pausing to reflect...\");\n        }\n        const newInsights = [];\n        const topics = await this.getTopicsOfReflection();\n        for (const topic of topics) {\n            const insights = await this.getInsightsOnTopic(topic, now);\n            for (const insight of insights) {\n                // add memory\n                await this.addMemory(insight, now);\n            }\n            newInsights.push(...insights);\n        }\n        return newInsights;\n    }\n    async scoreMemoryImportance(memoryContent) {\n        // score the absolute importance of a given memory\n        const prompt = PromptTemplate.fromTemplate(\"On the scale of 1 to 10, where 1 is purely mundane\" +\n            \" (e.g., brushing teeth, making bed) and 10 is\" +\n            \" extremely poignant (e.g., a break up, college\" +\n            \" acceptance), rate the likely poignancy of the\" +\n            \" following piece of memory. Respond with a single integer.\" +\n            \"\\nMemory: {memory_content}\" +\n            \"\\nRating: \");\n        const score = await this.chain(prompt).run({\n            memoryContent,\n        });\n        const strippedScore = score.trim();\n        if (this.verbose) {\n            console.log(\"Importance score:\", strippedScore);\n        }\n        const match = strippedScore.match(/^\\D*(\\d+)/);\n        if (match) {\n            const capturedNumber = parseFloat(match[1]);\n            const result = (capturedNumber / 10) * this.importanceWeight;\n            return result;\n        }\n        else {\n            return 0.0;\n        }\n    }\n    async addMemory(memoryContent, now) {\n        // add an observation or memory to the agent's memory\n        const importanceScore = await this.scoreMemoryImportance(memoryContent);\n        this.aggregateImportance += importanceScore;\n        const document = new Document({\n            pageContent: memoryContent,\n            metadata: {\n                importance: importanceScore,\n            },\n        });\n        await this.memoryRetriever.addDocuments([document]);\n        // after an agent has processed a certain amoung of memories (as measured by aggregate importance),\n        // it is time to pause and reflect on recent events to add more synthesized memories to the agent's\n        // memory stream.\n        if (this.reflectionThreshold !== undefined &&\n            this.aggregateImportance > this.reflectionThreshold &&\n            !this.reflecting) {\n            this.reflecting = true;\n            await this.pauseToReflect(now);\n            this.aggregateImportance = 0.0;\n            this.reflecting = false;\n        }\n    }\n    // TODO: Mock \"now\" to simulate different times\n    async fetchMemories(observation, _now) {\n        return this.memoryRetriever.getRelevantDocuments(observation);\n    }\n    formatMemoriesDetail(relevantMemories) {\n        if (!relevantMemories.length) {\n            return \"No relevant information.\";\n        }\n        const contentStrings = new Set();\n        const content = [];\n        for (const memory of relevantMemories) {\n            if (memory.pageContent in contentStrings) {\n                continue;\n            }\n            contentStrings.add(memory.pageContent);\n            const createdTime = memory.metadata.created_at.toLocaleString(\"en-US\", {\n                month: \"long\",\n                day: \"numeric\",\n                year: \"numeric\",\n                hour: \"numeric\",\n                minute: \"numeric\",\n                hour12: true,\n            });\n            content.push(`${createdTime}: ${memory.pageContent.trim()}`);\n        }\n        const joinedContent = content.map((mem) => `${mem}`).join(\"\\n\");\n        return joinedContent;\n    }\n    formatMemoriesSimple(relevantMemories) {\n        const joinedContent = relevantMemories\n            .map((mem) => `${mem.pageContent}`)\n            .join(\"; \");\n        return joinedContent;\n    }\n    async getMemoriesUntilLimit(consumedTokens) {\n        // reduce the number of tokens in the documents\n        const result = [];\n        for (const doc of this.memoryRetriever\n            .getMemoryStream()\n            .slice()\n            .reverse()) {\n            if (consumedTokens >= this.maxTokensLimit) {\n                if (this.verbose) {\n                    console.log(\"Exceeding max tokens for LLM, filtering memories\");\n                }\n                break;\n            }\n            // eslint-disable-next-line no-param-reassign\n            consumedTokens += await this.llm.getNumTokens(doc.pageContent);\n            if (consumedTokens < this.maxTokensLimit) {\n                result.push(doc);\n            }\n        }\n        return this.formatMemoriesSimple(result);\n    }\n    get memoryVariables() {\n        // input keys this memory class will load dynamically\n        return [];\n    }\n    async loadMemoryVariables(inputs) {\n        const queries = inputs[this.queriesKey];\n        const now = inputs[this.nowKey];\n        if (queries !== undefined) {\n            const relevantMemories = (await Promise.all(queries.map((query) => this.fetchMemories(query, now)))).flat();\n            return {\n                [this.relevantMemoriesKey]: this.formatMemoriesDetail(relevantMemories),\n                [this.relevantMemoriesSimpleKey]: this.formatMemoriesSimple(relevantMemories),\n            };\n        }\n        const mostRecentMemoriesToken = inputs[this.mostRecentMemoriesTokenKey];\n        if (mostRecentMemoriesToken !== undefined) {\n            return {\n                [this.mostRecentMemoriesKey]: await this.getMemoriesUntilLimit(mostRecentMemoriesToken),\n            };\n        }\n        return {};\n    }\n    async saveContext(_inputs, outputs) {\n        // save the context of this model run to memory\n        const mem = outputs[this.addMemoryKey];\n        const now = outputs[this.nowKey];\n        if (mem) {\n            await this.addMemory(mem, now);\n        }\n    }\n    clear() {\n        // TODO: clear memory contents\n    }\n}\n", "import { LLMChain } from \"../../chains/llm_chain.js\";\nimport { PromptTemplate } from \"../../prompts/index.js\";\nexport class GenerativeAgent {\n    // TODO: Add support for daily summaries\n    // private dailySummaries: string[] = []; // summary of the events in the plan that the agent took.\n    constructor(llm, memory, config) {\n        // a character with memory and innate characterisitics\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        }); // the character's name\n        Object.defineProperty(this, \"age\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        }); // the optional age of the character\n        Object.defineProperty(this, \"traits\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        }); // permanent traits to ascribe to the character\n        Object.defineProperty(this, \"status\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        }); // the traits of the character you wish not to change\n        Object.defineProperty(this, \"memory\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"llm\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        }); // the underlying language model\n        Object.defineProperty(this, \"verbose\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        }); // false\n        Object.defineProperty(this, \"summary\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        }); // stateful self-summary generated via reflection on the character's memory.\n        Object.defineProperty(this, \"summaryRefreshSeconds\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 3600\n        });\n        Object.defineProperty(this, \"lastRefreshed\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        }); // the last time the character's summary was regenerated\n        this.llm = llm;\n        this.memory = memory;\n        this.name = config.name;\n        this.age = config.age;\n        this.traits = config.traits;\n        this.status = config.status;\n        this.verbose = config.verbose ?? this.verbose;\n        this.summary = \"\";\n        this.summaryRefreshSeconds =\n            config.summaryRefreshSeconds ?? this.summaryRefreshSeconds;\n        this.lastRefreshed = new Date();\n        // this.dailySummaries = config.dailySummaries ?? this.dailySummaries;\n    }\n    // LLM methods\n    parseList(text) {\n        // parse a newline-seperated string into a list of strings\n        const lines = text.trim().split(\"\\n\");\n        const result = lines.map((line) => line.replace(/^\\s*\\d+\\.\\s*/, \"\").trim());\n        return result;\n    }\n    chain(prompt) {\n        const chain = new LLMChain({\n            llm: this.llm,\n            prompt,\n            verbose: this.verbose,\n            outputKey: \"output\",\n            memory: this.memory,\n        });\n        return chain;\n    }\n    async getEntityFromObservations(observation) {\n        const prompt = PromptTemplate.fromTemplate(\"What is the observed entity in the following observation? {observation}\" +\n            \"\\nEntity=\");\n        const result = await this.chain(prompt).call({\n            observation,\n        });\n        return result.output;\n    }\n    async getEntityAction(observation, entityName) {\n        const prompt = PromptTemplate.fromTemplate(\"What is the {entity} doing in the following observation? {observation}\" +\n            \"\\nThe {entity} is\");\n        const result = await this.chain(prompt).call({\n            entity: entityName,\n            observation,\n        });\n        const trimmedResult = result.output.trim();\n        return trimmedResult;\n    }\n    async summarizeRelatedMemories(observation) {\n        // summarize memories that are most relevant to an observation\n        const prompt = PromptTemplate.fromTemplate(`\n{q1}?\nContext from memory:\n{relevant_memories}\nRelevant context:`);\n        const entityName = await this.getEntityFromObservations(observation);\n        const entityAction = await this.getEntityAction(observation, entityName);\n        const q1 = `What is the relationship between ${this.name} and ${entityName}`;\n        const q2 = `${entityName} is ${entityAction}`;\n        const response = await this.chain(prompt).call({\n            q1,\n            queries: [q1, q2],\n        });\n        return response.output.trim(); // added output\n    }\n    async _generateReaction(observation, suffix, now) {\n        // react to a given observation or dialogue act\n        const prompt = PromptTemplate.fromTemplate(`{agent_summary_description}` +\n            `\\nIt is {current_time}.` +\n            `\\n{agent_name}'s status: {agent_status}` +\n            `\\nSummary of relevant context from {agent_name}'s memory:` +\n            \"\\n{relevant_memories}\" +\n            `\\nMost recent observations: {most_recent_memories}` +\n            `\\nObservation: {observation}` +\n            `\\n\\n${suffix}`);\n        const agentSummaryDescription = await this.getSummary(); // now = now in param\n        const relevantMemoriesStr = await this.summarizeRelatedMemories(observation);\n        const currentTime = (now || new Date()).toLocaleString(\"en-US\", {\n            month: \"long\",\n            day: \"numeric\",\n            year: \"numeric\",\n            hour: \"numeric\",\n            minute: \"numeric\",\n            hour12: true,\n        });\n        const chainInputs = {\n            agent_summary_description: agentSummaryDescription,\n            current_time: currentTime,\n            agent_name: this.name,\n            observation,\n            agent_status: this.status,\n            most_recent_memories: \"\",\n        };\n        chainInputs[this.memory.getRelevantMemoriesKey()] = relevantMemoriesStr;\n        const consumedTokens = await this.llm.getNumTokens(await prompt.format({ ...chainInputs }));\n        chainInputs[this.memory.getMostRecentMemoriesTokenKey()] = consumedTokens;\n        const response = await this.chain(prompt).call(chainInputs);\n        return response.output.trim();\n    }\n    _cleanResponse(text) {\n        if (text === undefined) {\n            return \"\";\n        }\n        const regex = new RegExp(`^${this.name} `);\n        return text.replace(regex, \"\").trim();\n    }\n    async generateReaction(observation, now) {\n        const callToActionTemplate = `Should {agent_name} react to the observation, and if so,` +\n            ` what would be an appropriate reaction? Respond in one line.` +\n            ` If the action is to engage in dialogue, write:\\nSAY: \"what to say\"` +\n            ` \\notherwise, write:\\nREACT: {agent_name}'s reaction (if anything).` +\n            ` \\nEither do nothing, react, or say something but not both.\\n\\n`;\n        const fullResult = await this._generateReaction(observation, callToActionTemplate, now);\n        const result = fullResult.trim().split(\"\\n\")[0];\n        await this.memory.saveContext({}, {\n            [this.memory.getAddMemoryKey()]: `${this.name} observed ${observation} and reacted by ${result}`,\n            [this.memory.getCurrentTimeKey()]: now,\n        });\n        if (result.includes(\"REACT:\")) {\n            const reaction = this._cleanResponse(result.split(\"SAY:\").pop());\n            return [false, `${this.name} ${reaction}`];\n        }\n        if (result.includes(\"SAY:\")) {\n            const saidValue = this._cleanResponse(result.split(\"SAY:\").pop());\n            return [true, `${this.name} said ${saidValue}`];\n        }\n        return [false, result];\n    }\n    async generateDialogueResponse(observation, now) {\n        const callToActionTemplate = `What would ${this.name} say? To end the conversation, write: GOODBYE: \"what to say\". Otherwise to continue the conversation, write: SAY: \"what to say next\"\\n\\n`;\n        const fullResult = await this._generateReaction(observation, callToActionTemplate, now);\n        const result = fullResult.trim().split(\"\\n\")[0] ?? \"\";\n        if (result.includes(\"GOODBYE:\")) {\n            const farewell = this._cleanResponse(result.split(\"GOODBYE:\").pop() ?? \"\");\n            await this.memory.saveContext({}, {\n                [this.memory\n                    .addMemoryKey]: `${this.name} observed ${observation} and said ${farewell}`,\n                [this.memory.getCurrentTimeKey()]: now,\n            });\n            return [false, `${this.name} said ${farewell}`];\n        }\n        if (result.includes(\"SAY:\")) {\n            const responseText = this._cleanResponse(result.split(\"SAY:\").pop() ?? \"\");\n            await this.memory.saveContext({}, {\n                [this.memory\n                    .addMemoryKey]: `${this.name} observed ${observation} and said ${responseText}`,\n                [this.memory.getCurrentTimeKey()]: now,\n            });\n            return [true, `${this.name} said ${responseText}`];\n        }\n        return [false, result];\n    }\n    // Agent stateful' summary methods\n    // Each dialog or response prompt includes a header\n    // summarizing the agent's self-description. This is\n    // updated periodically through probing it's memories\n    async getSummary(config = {}) {\n        const { now = new Date(), forceRefresh = false } = config;\n        const sinceRefresh = Math.floor((now.getTime() - this.lastRefreshed.getTime()) / 1000);\n        if (!this.summary ||\n            sinceRefresh >= this.summaryRefreshSeconds ||\n            forceRefresh) {\n            this.summary = await this.computeAgentSummary();\n            this.lastRefreshed = now;\n        }\n        let age;\n        if (this.age) {\n            age = this.age;\n        }\n        else {\n            age = \"N/A\";\n        }\n        return `Name: ${this.name} (age: ${age})\nInnate traits: ${this.traits}\n${this.summary}`;\n    }\n    async computeAgentSummary() {\n        const prompt = PromptTemplate.fromTemplate(\"How would you summarize {name}'s core characteristics given the following statements:\\n\" +\n            \"----------\" +\n            \"{relevant_memories}\" +\n            \"----------\" +\n            \"Do not embellish.\" +\n            \"\\n\\nSummary: \");\n        // the agent seeks to think about their core characterisitics\n        const result = await this.chain(prompt).call({\n            name: this.name,\n            queries: [`${this.name}'s core characteristics`],\n        });\n        return result.output.trim();\n    }\n    getFullHeader(config = {}) {\n        const { now = new Date(), forceRefresh = false } = config;\n        // return a full header of the agent's status, summary, and current time.\n        const summary = this.getSummary({ now, forceRefresh });\n        const currentTimeString = now.toLocaleString(\"en-US\", {\n            month: \"long\",\n            day: \"numeric\",\n            year: \"numeric\",\n            hour: \"numeric\",\n            minute: \"numeric\",\n            hour12: true,\n        });\n        return `${summary}\\nIt is ${currentTimeString}.\\n${this.name}'s status: ${this.status}`;\n    }\n}\n", "import { BaseChain } from \"../../chains/base.js\";\nimport { ListStepContainer, LLMPlanner, ChainStepExecutor, } from \"./base.js\";\nimport { AgentExecutor } from \"../../agents/executor.js\";\nimport { DEFAULT_STEP_EXECUTOR_HUMAN_CHAT_MESSAGE_TEMPLATE, PLANNER_CHAT_PROMPT, } from \"./prompt.js\";\nimport { LLMChain } from \"../../chains/llm_chain.js\";\nimport { PlanOutputParser } from \"./outputParser.js\";\nimport { ChatAgent } from \"../../agents/chat/index.js\";\nexport class PlanAndExecuteAgentExecutor extends BaseChain {\n    constructor(input) {\n        super(input);\n        Object.defineProperty(this, \"planner\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"stepExecutor\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"stepContainer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new ListStepContainer()\n        });\n        Object.defineProperty(this, \"inputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"input\"\n        });\n        Object.defineProperty(this, \"outputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"output\"\n        });\n        this.planner = input.planner;\n        this.stepExecutor = input.stepExecutor;\n        this.stepContainer = input.stepContainer ?? this.stepContainer;\n        this.inputKey = input.inputKey ?? this.inputKey;\n        this.outputKey = input.outputKey ?? this.outputKey;\n    }\n    get inputKeys() {\n        return [this.inputKey];\n    }\n    get outputKeys() {\n        return [this.outputKey];\n    }\n    static getDefaultPlanner({ llm }) {\n        const plannerLlmChain = new LLMChain({\n            llm,\n            prompt: PLANNER_CHAT_PROMPT,\n        });\n        return new LLMPlanner(plannerLlmChain, new PlanOutputParser());\n    }\n    static getDefaultStepExecutor({ llm, tools, humanMessageTemplate = DEFAULT_STEP_EXECUTOR_HUMAN_CHAT_MESSAGE_TEMPLATE, }) {\n        const agent = ChatAgent.fromLLMAndTools(llm, tools, {\n            humanMessageTemplate,\n        });\n        return new ChainStepExecutor(AgentExecutor.fromAgentAndTools({\n            agent,\n            tools,\n        }));\n    }\n    static fromLLMAndTools({ llm, tools, humanMessageTemplate, }) {\n        const executor = new PlanAndExecuteAgentExecutor({\n            planner: PlanAndExecuteAgentExecutor.getDefaultPlanner({ llm }),\n            stepExecutor: PlanAndExecuteAgentExecutor.getDefaultStepExecutor({\n                llm,\n                tools,\n                humanMessageTemplate,\n            }),\n        });\n        return executor;\n    }\n    /** @ignore */\n    async _call(inputs, runManager) {\n        const plan = await this.planner.plan(inputs.input, runManager?.getChild());\n        if (!plan.steps?.length) {\n            throw new Error(\"Could not create and parse a plan to answer your question - please try again.\");\n        }\n        plan.steps[plan.steps.length - 1].text += ` The original question was: ${inputs.input}.`;\n        for (const step of plan.steps) {\n            const newInputs = {\n                ...inputs,\n                previous_steps: JSON.stringify(this.stepContainer.getSteps()),\n                current_step: step.text,\n            };\n            const response = await this.stepExecutor.step(newInputs, runManager?.getChild());\n            this.stepContainer.addStep(step, response);\n        }\n        return { [this.outputKey]: this.stepContainer.getFinalResponse() };\n    }\n    _chainType() {\n        return \"agent_executor\";\n    }\n    serialize() {\n        throw new Error(\"Cannot serialize an AgentExecutor\");\n    }\n}\n", "import { ChatPromptTemplate, HumanMessagePromptTemplate, SystemMessagePromptTemplate, } from \"../../prompts/chat.js\";\nexport const PLANNER_SYSTEM_PROMPT_MESSAGE_TEMPLATE = [\n    `Let's first understand the problem and devise a plan to solve the problem.`,\n    `Please output the plan starting with the header \"Plan:\"`,\n    `and then followed by a numbered list of steps.`,\n    `Please make the plan the minimum number of steps required`,\n    `to answer the query or complete the task accurately and precisely.`,\n    `Your steps should be general, and should not require a specific method to solve a step. If the task is a question,`,\n    `the final step in the plan must be the following: \"Given the above steps taken,`,\n    `please respond to the original query.\"`,\n    `At the end of your plan, say \"<END_OF_PLAN>\"`,\n].join(\" \");\nexport const PLANNER_CHAT_PROMPT = \n/* #__PURE__ */ ChatPromptTemplate.fromPromptMessages([\n    /* #__PURE__ */ SystemMessagePromptTemplate.fromTemplate(PLANNER_SYSTEM_PROMPT_MESSAGE_TEMPLATE),\n    /* #__PURE__ */ HumanMessagePromptTemplate.fromTemplate(`{input}`),\n]);\nexport const DEFAULT_STEP_EXECUTOR_HUMAN_CHAT_MESSAGE_TEMPLATE = `Previous steps: {previous_steps}\n\nCurrent objective: {current_step}\n\n{agent_scratchpad}\n\nYou may extract and combine relevant data from your previous steps when responding to me.`;\n", "import { BaseOutputParser } from \"../../schema/output_parser.js\";\nimport { PLANNER_SYSTEM_PROMPT_MESSAGE_TEMPLATE } from \"./prompt.js\";\nexport class PlanOutputParser extends BaseOutputParser {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"experimental\", \"plan_and_execute\"]\n        });\n    }\n    async parse(text) {\n        return {\n            steps: text\n                .split(/\\n\\d+\\.\\s?/)\n                .slice(1)\n                .map((step) => ({ text: step.replace(`<END_OF_PLAN>`, \"\") })),\n        };\n    }\n    getFormatInstructions() {\n        return PLANNER_SYSTEM_PROMPT_MESSAGE_TEMPLATE;\n    }\n}\n", "import { optionalImportEntrypoints } from \"./import_constants.js\";\nimport * as importMap from \"./import_map.js\";\nimport { keyFromJson, mapKeys } from \"./map_keys.js\";\nimport { getEnvironmentVariable } from \"../util/env.js\";\nfunction combineAliasesAndInvert(constructor) {\n    const aliases = {};\n    for (\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let current = constructor; current && current.prototype; current = Object.getPrototypeOf(current)) {\n        Object.assign(aliases, Reflect.get(current.prototype, \"lc_aliases\"));\n    }\n    return Object.entries(aliases).reduce((acc, [key, value]) => {\n        acc[value] = key;\n        return acc;\n    }, {});\n}\nasync function reviver(value) {\n    const { optionalImportsMap, secretsMap, path = [\"$\"] } = this;\n    const pathStr = path.join(\".\");\n    if (typeof value === \"object\" &&\n        value !== null &&\n        !Array.isArray(value) &&\n        \"lc\" in value &&\n        \"type\" in value &&\n        \"id\" in value &&\n        value.lc === 1 &&\n        value.type === \"secret\") {\n        const serialized = value;\n        const [key] = serialized.id;\n        if (key in secretsMap) {\n            return secretsMap[key];\n        }\n        else {\n            const secretValueInEnv = getEnvironmentVariable(key);\n            if (secretValueInEnv) {\n                return secretValueInEnv;\n            }\n            else {\n                throw new Error(`Missing key \"${key}\" for ${pathStr} in load(secretsMap={})`);\n            }\n        }\n    }\n    else if (typeof value === \"object\" &&\n        value !== null &&\n        !Array.isArray(value) &&\n        \"lc\" in value &&\n        \"type\" in value &&\n        \"id\" in value &&\n        value.lc === 1 &&\n        value.type === \"not_implemented\") {\n        const serialized = value;\n        const str = JSON.stringify(serialized);\n        throw new Error(`Trying to load an object that doesn't implement serialization: ${pathStr} -> ${str}`);\n    }\n    else if (typeof value === \"object\" &&\n        value !== null &&\n        !Array.isArray(value) &&\n        \"lc\" in value &&\n        \"type\" in value &&\n        \"id\" in value &&\n        \"kwargs\" in value &&\n        value.lc === 1) {\n        const serialized = value;\n        const str = JSON.stringify(serialized);\n        const [name, ...namespaceReverse] = serialized.id.slice().reverse();\n        const namespace = namespaceReverse.reverse();\n        let module;\n        if (optionalImportEntrypoints.includes(namespace.join(\"/\")) ||\n            namespace.join(\"/\") in optionalImportsMap) {\n            if (namespace.join(\"/\") in optionalImportsMap) {\n                module = await optionalImportsMap[namespace.join(\"/\")];\n            }\n            else {\n                throw new Error(`Missing key \"${namespace.join(\"/\")}\" for ${pathStr} in load(optionalImportsMap={})`);\n            }\n        }\n        else {\n            // Currently, we only support langchain imports.\n            if (namespace[0] === \"langchain\") {\n                namespace.shift();\n            }\n            else {\n                throw new Error(`Invalid namespace: ${pathStr} -> ${str}`);\n            }\n            // The root namespace \"langchain\" is not a valid import.\n            if (namespace.length === 0) {\n                throw new Error(`Invalid namespace: ${pathStr} -> ${str}`);\n            }\n            // Find the longest matching namespace.\n            let importMapKey;\n            do {\n                importMapKey = namespace.join(\"__\");\n                if (importMapKey in importMap) {\n                    break;\n                }\n                else {\n                    namespace.pop();\n                }\n            } while (namespace.length > 0);\n            // If no matching namespace is found, throw an error.\n            if (importMapKey in importMap) {\n                module = importMap[importMapKey];\n            }\n        }\n        if (typeof module !== \"object\" || module === null) {\n            throw new Error(`Invalid namespace: ${pathStr} -> ${str}`);\n        }\n        // Extract the builder from the import map.\n        const builder = module[name];\n        if (typeof builder !== \"function\") {\n            throw new Error(`Invalid identifer: ${pathStr} -> ${str}`);\n        }\n        // Recurse on the arguments, which may be serialized objects themselves\n        const kwargs = await reviver.call({ ...this, path: [...path, \"kwargs\"] }, serialized.kwargs);\n        // Construct the object\n        if (serialized.type === \"constructor\") {\n            // eslint-disable-next-line new-cap, @typescript-eslint/no-explicit-any\n            const instance = new builder(mapKeys(kwargs, keyFromJson, combineAliasesAndInvert(builder)));\n            // Minification in severless/edge runtimes will mange the\n            // name of classes presented in traces. As the names in import map\n            // are present as-is even with minification, use these names instead\n            Object.defineProperty(instance.constructor, \"name\", { value: name });\n            return instance;\n        }\n        else {\n            throw new Error(`Invalid type: ${pathStr} -> ${str}`);\n        }\n    }\n    else if (typeof value === \"object\" && value !== null) {\n        if (Array.isArray(value)) {\n            return Promise.all(value.map((v, i) => reviver.call({ ...this, path: [...path, `${i}`] }, v)));\n        }\n        else {\n            return Object.fromEntries(await Promise.all(Object.entries(value).map(async ([key, value]) => [\n                key,\n                await reviver.call({ ...this, path: [...path, key] }, value),\n            ])));\n        }\n    }\n    return value;\n}\nexport async function load(text, secretsMap = {}, optionalImportsMap = {}) {\n    const json = JSON.parse(text);\n    return reviver.call({ secretsMap, optionalImportsMap }, json);\n}\n", "export * from '../dist/load/serializable.js'", "export * from './dist/base_language/index.js'", "export * from '../dist/llms/base.js'", "export * from '../dist/llms/openai.js'", "export * from './dist/prompts/index.js'", "export * from './dist/document.js'", "export * from '../dist/chat_models/base.js'", "export * from '../dist/chat_models/openai.js'", "export * from './dist/schema/index.js'", "export * from '../dist/schema/output_parser.js'", "export * from './dist/cache/index.js'", "import { Document } from \"../../document.js\";\nimport { CheerioWebBaseLoader } from \"./cheerio.js\";\nexport class HNLoader extends CheerioWebBaseLoader {\n    constructor(webPath) {\n        super(webPath);\n        Object.defineProperty(this, \"webPath\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: webPath\n        });\n    }\n    async load() {\n        const $ = await this.scrape();\n        if (this.webPath.includes(\"item\")) {\n            return this.loadComments($);\n        }\n        return this.loadResults($);\n    }\n    loadComments($) {\n        const comments = $(\"tr[class='athing comtr']\");\n        const title = $(\"tr[id='pagespace']\").attr(\"title\");\n        const documents = [];\n        comments.each((_index, comment) => {\n            const text = $(comment).text().trim();\n            const metadata = { source: this.webPath, title };\n            documents.push(new Document({ pageContent: text, metadata }));\n        });\n        return documents;\n    }\n    loadResults($) {\n        const items = $(\"tr[class='athing']\");\n        const documents = [];\n        items.each((_index, item) => {\n            const ranking = $(item).find(\"span[class='rank']\").text();\n            const link = $(item).find(\"span[class='titleline'] a\").attr(\"href\");\n            const title = $(item).find(\"span[class='titleline']\").text().trim();\n            const metadata = {\n                source: this.webPath,\n                title,\n                link,\n                ranking,\n            };\n            documents.push(new Document({ pageContent: title, metadata }));\n        });\n        return documents;\n    }\n}\n", "import { Document } from \"../../document.js\";\nimport { BaseDocumentLoader } from \"../base.js\";\nimport { AsyncCaller } from \"../../util/async_caller.js\";\nexport class CheerioWebBaseLoader extends BaseDocumentLoader {\n    constructor(webPath, fields) {\n        super();\n        Object.defineProperty(this, \"webPath\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: webPath\n        });\n        Object.defineProperty(this, \"timeout\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"caller\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"selector\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"textDecoder\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        const { timeout, selector, textDecoder, ...rest } = fields ?? {};\n        this.timeout = timeout ?? 10000;\n        this.caller = new AsyncCaller(rest);\n        this.selector = selector ?? \"body\";\n        this.textDecoder = textDecoder;\n    }\n    static async _scrape(url, caller, timeout, textDecoder) {\n        const { load } = await CheerioWebBaseLoader.imports();\n        const response = await caller.call(fetch, url, {\n            signal: timeout ? AbortSignal.timeout(timeout) : undefined,\n        });\n        const html = textDecoder?.decode(await response.arrayBuffer()) ??\n            (await response.text());\n        return load(html);\n    }\n    async scrape() {\n        return CheerioWebBaseLoader._scrape(this.webPath, this.caller, this.timeout, this.textDecoder);\n    }\n    async load() {\n        const $ = await this.scrape();\n        const text = $(this.selector).text();\n        const metadata = { source: this.webPath };\n        return [new Document({ pageContent: text, metadata })];\n    }\n    static async imports() {\n        try {\n            const { load } = await import(\"cheerio\");\n            return { load };\n        }\n        catch (e) {\n            console.error(e);\n            throw new Error(\"Please install cheerio as a dependency with, e.g. `yarn add cheerio`\");\n        }\n    }\n}\n", "/**\n * Welcome to Cloudflare Workers! This is your first worker.\n *\n * - Run `wrangler dev src/index.ts` in your terminal to start a development server\n * - Open a browser tab at http://localhost:8787/ to see your worker in action\n * - Run `wrangler publish src/index.ts --name my-worker` to publish your worker\n *\n * Learn more at https://developers.cloudflare.com/workers/\n */\n\n// import all entrypoints to test, do not do this in your own app\nimport \"./entrypoints.js\";\n\n// Import a few things we'll use to test the exports\nimport { LLMChain } from \"langchain/chains\";\nimport { ChatOpenAI } from \"langchain/chat_models/openai\";\nimport {\n  ChatPromptTemplate,\n  HumanMessagePromptTemplate,\n} from \"langchain/prompts\";\nimport { OpenAI } from \"langchain/llms/openai\";\nimport { OpenAIEmbeddings } from \"langchain/embeddings/openai\";\nimport { HNLoader } from \"langchain/document_loaders/web/hn\";\n\nexport interface Env {\n  OPENAI_API_KEY?: string;\n  AZURE_OPENAI_API_KEY?: string;\n  AZURE_OPENAI_API_INSTANCE_NAME?: string;\n  AZURE_OPENAI_API_DEPLOYMENT_NAME?: string;\n  AZURE_OPENAI_API_VERSION?: string;\n}\n\nexport default {\n  async fetch(\n    request: Request,\n    env: Env,\n    ctx: ExecutionContext\n  ): Promise<Response> {\n\n    const constructorParameters\n      = env.AZURE_OPENAI_API_KEY ? {\n        azureOpenAIApiKey: env.AZURE_OPENAI_API_KEY,\n        azureOpenAIApiInstanceName: env.AZURE_OPENAI_API_INSTANCE_NAME,\n        azureOpenAIApiDeploymentName: env.AZURE_OPENAI_API_DEPLOYMENT_NAME,\n        azureOpenAIApiVersion: env.AZURE_OPENAI_API_VERSION,\n      } \n      : {\n        openAIApiKey: env.OPENAI_API_KEY,\n      }\n\n    // Intantiate a few things to test the exports\n    new OpenAI(constructorParameters);\n    const emb = new OpenAIEmbeddings(constructorParameters);\n\n    // Test a document loader\n    new HNLoader(\"https://news.ycombinator.com/item?id=28275939\");\n\n    // Test a chain + prompt + model\n    const chain = new LLMChain({\n      llm: new ChatOpenAI(constructorParameters),\n      prompt: ChatPromptTemplate.fromPromptMessages([\n        HumanMessagePromptTemplate.fromTemplate(\"{input}\"),\n      ]),\n    });\n    const res = await chain.run(\"hello\");\n\n    return new Response(\n      `Hello, from Cloudflare Worker at ${request.url}. Assistant says: ${res}`\n    );\n  },\n};\n"],
  "mappings": "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QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,MAAK,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,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,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,gBAAgB,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,GAAE,EAAC,GAAE,qBAAoB,GAAE,KAAI,GAAE,uBAAsB,CAAC,GAAE,CAAC,GAAE,EAAC,GAAE,sBAAqB,GAAE,KAAI,GAAE,wBAAuB,CAAC,GAAE,CAAC,IAAG,UAAU,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,GAAE,gBAAgB,GAAE,CAAC,GAAE,eAAe,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,GAAE,aAAa,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,IAAG,WAAW,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,MAAM,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,EAAC,GAAE,aAAY,GAAE,KAAI,GAAE,aAAY,CAAC,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,EAAC,GAAE,SAAQ,GAAE,KAAI,GAAE,SAAQ,CAAC,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,EAAC,GAAE,cAAa,GAAE,KAAI,GAAE,cAAa,CAAC,GAAE,CAAC,GAAE,EAAC,GAAE,cAAa,GAAE,KAAI,GAAE,cAAa,CAAC,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,MAAM,GAAE,CAAC,GAAE,MAAM,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,EAAC,GAAE,cAAa,GAAE,KAAI,GAAE,sBAAqB,CAAC,GAAE,CAAC,GAAE,EAAC,GAAE,oBAAmB,GAAE,KAAI,GAAE,4BAA2B,CAAC,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,EAAC,GAAE,UAAS,GAAE,OAAM,GAAE,UAAS,CAAC,GAAE,CAAC,GAAE,EAAC,GAAE,UAAS,GAAE,OAAM,GAAE,UAAS,CAAC,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,EAAC,GAAE,mBAAkB,GAAE,KAAI,GAAE,qBAAoB,CAAC,GAAE,CAAC,GAAE,EAAC,GAAE,SAAQ,GAAE,KAAI,GAAE,qBAAoB,CAAC,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,YAAY,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,eAAe,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,MAAM,GAAE,CAAC,GAAE,MAAM,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,EAAC,GAAE,UAAS,GAAE,KAAI,GAAE,UAAS,CAAC,GAAE,CAAC,GAAE,EAAC,GAAE,UAAS,GAAE,KAAI,GAAE,UAAS,CAAC,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,EAAC,GAAE,WAAU,GAAE,OAAM,GAAE,kBAAiB,CAAC,GAAE,CAAC,GAAE,EAAC,GAAE,WAAU,GAAE,OAAM,GAAE,kBAAiB,CAAC,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,WAAW,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,EAAC,GAAE,WAAU,GAAE,MAAK,GAAE,WAAU,CAAC,GAAE,CAAC,OAAM,EAAC,GAAE,IAAI,IAAkC,4BAAY,CAAC,CAAC,OAAM,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,IAAG,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,OAAO,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,GAAE,CAAC,GAAE,QAAQ,CAAC,CAAC,CAAC,EAAC,CAAC,GAAE,CAAC,MAAK,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,SAAS,GAAE,CAAC,GAAE,UAAU,GAAE,CAAC,GAAE,UAAU,CAAC,CAAC,CAAC;;;;;ACe59tB,SAAU,UAAUC,MAAW;AACjC,MAAI,MAAM;AACV,MAAI,UAAU;AACd,MAAI;AAEJ,UAAQ,QAAQ,YAAY,KAAKA,IAAG,OAAO,MAAM;AAC7C,UAAM,IAAI,MAAM;AAChB,UAAM,OAAOA,KAAI,WAAW,CAAC;AAC7B,UAAMC,QAAO,WAAW,IAAI,IAAI;AAEhC,QAAIA,UAAS,QAAW;AACpB,aAAOD,KAAI,UAAU,SAAS,CAAC,IAAIC;AACnC,gBAAU,IAAI;WACX;AACH,aAAO,GAAGD,KAAI,UAAU,SAAS,CAAC,OAAO,aACrCA,MACA,CAAC,EACH,SAAS,EAAE;AAEb,gBAAU,YAAY,aAAa,QAC9B,OAAO,WAAY,KAAM;;;AAKtC,SAAO,MAAMA,KAAI,OAAO,OAAO;AACnC;AAaA,SAAS,WACLE,QACAC,MAAwB;AAExB,SAAO,SAASC,QAAOC,OAAY;AAC/B,QAAI;AACJ,QAAI,UAAU;AACd,QAAI,SAAS;AAEb,WAAQ,QAAQH,OAAM,KAAKG,KAAI,GAAI;AAC/B,UAAI,YAAY,MAAM,OAAO;AACzB,kBAAUA,MAAK,UAAU,SAAS,MAAM,KAAK;;AAIjD,gBAAUF,KAAI,IAAI,MAAM,GAAG,WAAW,CAAC,CAAC;AAGxC,gBAAU,MAAM,QAAQ;;AAG5B,WAAO,SAASE,MAAK,UAAU,OAAO;EAC1C;AACJ;AA7FA,IAAa,aAEP,YASO,cA2FA,YAQA,iBAeA;AA7Hb;;AAAO,IAAM,cAAc;AAE3B,IAAM,aAAa,oBAAI,IAAI;MACvB,CAAC,IAAI,QAAQ;MACb,CAAC,IAAI,OAAO;MACZ,CAAC,IAAI,QAAQ;MACb,CAAC,IAAI,MAAM;MACX,CAAC,IAAI,MAAM;KACd;AAGM,IAAM,eAET,OAAO,UAAU,eAAe,OAC1B,CAACL,MAAaM,WAA0BN,KAAI,YAAYM,MAAK,IAE7D,CAAC,GAAWA,YACP,EAAE,WAAWA,MAAK,IAAI,WAAY,SAC5B,EAAE,WAAWA,MAAK,IAAI,SAAU,OACjC,EAAE,WAAWA,SAAQ,CAAC,IACtB,QACA,QACA,EAAE,WAAWA,MAAK;AAgF/B,IAAM,aAAa,WAAW,YAAY,UAAU;AAQpD,IAAM,kBAAkB,WAC3B,eACA,oBAAI,IAAI;MACJ,CAAC,IAAI,QAAQ;MACb,CAAC,IAAI,OAAO;MACZ,CAAC,KAAK,QAAQ;KACjB,CAAC;AASC,IAAM,aAAa,WACtB,gBACA,oBAAI,IAAI;MACJ,CAAC,IAAI,OAAO;MACZ,CAAC,IAAI,MAAM;MACX,CAAC,IAAI,MAAM;MACX,CAAC,KAAK,QAAQ;KACjB,CAAC;;;;;ACpIN;;;AACA;;;;;ACDA,IAUY,aAQA,cAOA;AAzBZ,IAAAC,YAAA;;;AACA;AACA;AAkKA;AAQA;AAQA;AA1KA,KAAA,SAAYC,cAAW;AAEnB,MAAAA,aAAAA,aAAA,SAAA,KAAA;AAEA,MAAAA,aAAAA,aAAA,UAAA,KAAA;IACJ,GALY,gBAAA,cAAW,CAAA,EAAA;AAQvB,KAAA,SAAYC,eAAY;AAEpB,MAAAA,cAAAA,cAAA,YAAA,KAAA;AAEA,MAAAA,cAAAA,cAAA,YAAA,KAAA;IACJ,GALY,iBAAA,eAAY,CAAA,EAAA;AAOxB,KAAA,SAAYC,eAAY;AAKpB,MAAAA,cAAAA,cAAA,UAAA,KAAA;AAMA,MAAAA,cAAAA,cAAA,WAAA,KAAA;AAKA,MAAAA,cAAAA,cAAA,eAAA,KAAA;AAKA,MAAAA,cAAAA,cAAA,eAAA,KAAA;AAKA,MAAAA,cAAAA,cAAA,UAAA,KAAA;IACJ,GA3BY,iBAAA,eAAY,CAAA,EAAA;;;;;ACzBxB,IAAa,cAuCA;AAvCb;AAAA;AAAO,IAAM,eAAe,IAAI,IAAI;AAAA,MAChC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ,EAAE,IAAI,CAACC,SAAQ,CAACA,KAAI,YAAY,GAAGA,IAAG,CAAC,CAAC;AACjC,IAAM,iBAAiB,IAAI,IAAI;AAAA,MAClxC,SAAS,cAAc,OAAO;AAC1B,SAAO,MAAM,QAAQ,MAAM,QAAQ;AACvC;AAIA,SAAS,iBAAiBC,aAAY,MAAM;AACxC,MAAIC;AACJ,MAAI,CAACD;AACD;AACJ,QAAME,YAAWD,MAAK,KAAK,oBAAoB,QAAQA,QAAO,SAASA,MAAK,KAAK,oBAAoB,QAC/F,gBACA,KAAK,WAAW,KAAK,mBAAmB,SACpC,YACA;AACV,SAAO,OAAO,KAAKD,WAAU,EACxB,IAAI,CAAC,QAAQ;AACd,QAAIC,KAAI;AACR,UAAM,SAASA,MAAKD,YAAW,UAAU,QAAQC,QAAO,SAASA,MAAK;AACtE,QAAI,KAAK,YAAY,WAAW;AAE5B,aAAO,KAAK,eAAe,IAAI,GAAG,OAAO,QAAQ,OAAO,SAAS,KAAK;AAAA,IAC1E;AACA,QAAI,CAAC,KAAK,cAAc,CAAC,KAAK,WAAW,UAAU,IAAI;AACnD,aAAO;AAAA,IACX;AACA,WAAO,GAAG,QAAQC,QAAO,KAAK;AAAA,EAClC,CAAC,EACI,KAAK,GAAG;AACjB;AAiCO,SAAS,OAAO,MAAM,UAAU,CAAC,GAAG;AACvC,QAAM,QAAQ,YAAY,OAAO,OAAO,CAAC,IAAI;AAC7C,MAAI,SAAS;AACb,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACnC,cAAU,WAAW,MAAM,IAAI,OAAO;AAAA,EAC1C;AACA,SAAO;AACX;AAEA,SAAS,WAAW,MAAM,SAAS;AAC/B,UAAQ,KAAK,MAAM;AAAA,IACf,KAAiB;AACb,aAAO,OAAO,KAAK,UAAU,OAAO;AAAA,IAExC,KAAiB;AAAA,IACjB,KAAiB;AACb,aAAO,gBAAgB,IAAI;AAAA,IAC/B,KAAiB;AACb,aAAO,cAAc,IAAI;AAAA,IAC7B,KAAiB;AACb,aAAO,YAAY,IAAI;AAAA,IAC3B,KAAiB;AAAA,IACjB,KAAiB;AAAA,IACjB,KAAiB;AACb,aAAO,UAAU,MAAM,OAAO;AAAA,IAClC,KAAiB;AACb,aAAO,WAAW,MAAM,OAAO;AAAA,EACvC;AACJ;AAaA,SAAS,UAAU,MAAM,MAAM;AAC3B,MAAID;AAEJ,MAAI,KAAK,YAAY,WAAW;AAE5B,SAAK,QAAQA,MAAK,aAAa,IAAI,KAAK,IAAI,OAAO,QAAQA,QAAO,SAASA,MAAK,KAAK;AAErF,QAAI,KAAK,UACL,6BAA6B,IAAI,KAAK,OAAO,IAAI,GAAG;AACpD,aAAO,EAAE,GAAG,MAAM,SAAS,MAAM;AAAA,IACrC;AAAA,EACJ;AACA,MAAI,CAAC,KAAK,WAAW,gBAAgB,IAAI,KAAK,IAAI,GAAG;AACjD,WAAO,EAAE,GAAG,MAAM,SAAS,UAAU;AAAA,EACzC;AACA,MAAI,MAAM,IAAI,KAAK;AACnB,QAAM,UAAU,iBAAiB,KAAK,SAAS,IAAI;AACnD,MAAI,SAAS;AACT,WAAO,IAAI;AAAA,EACf;AACA,MAAI,KAAK,SAAS,WAAW,MACxB,KAAK,UAEE,KAAK,oBAAoB,QAEzB,KAAK,mBAAmB,UAAU,IAAI,KAAK,IAAI,IAAI;AAC3D,QAAI,CAAC,KAAK;AACN,aAAO;AACX,WAAO;AAAA,EACX,OACK;AACD,WAAO;AACP,QAAI,KAAK,SAAS,SAAS,GAAG;AAC1B,aAAO,OAAO,KAAK,UAAU,IAAI;AAAA,IACrC;AACA,QAAI,KAAK,WAAW,CAAC,UAAU,IAAI,KAAK,IAAI,GAAG;AAC3C,aAAO,KAAK,KAAK;AAAA,IACrB;AAAA,EACJ;AACA,SAAO;AACX;AACA,SAAS,gBAAgB,MAAM;AAC3B,SAAO,IAAI,KAAK;AACpB;AACA,SAAS,WAAW,MAAM,MAAM;AAC5B,MAAIA;AACJ,MAAIE,QAAO,KAAK,QAAQ;AAExB,QAAMF,MAAK,KAAK,oBAAoB,QAAQA,QAAO,SAASA,MAAK,KAAK,oBAAoB,SACtF,EAAE,CAAC,KAAK,WACJ,KAAK,UACL,kBAAkB,IAAI,KAAK,OAAO,IAAI,IAAI;AAC9C,IAAAE,QACI,KAAK,WAAW,KAAK,mBAAmB,SAClC,UAAUA,KAAI,IACd,WAAWA,KAAI;AAAA,EAC7B;AACA,SAAOA;AACX;AACA,SAAS,YAAY,MAAM;AACvB,SAAO,YAAY,KAAK,SAAS,GAAG;AACxC;AACA,SAAS,cAAc,MAAM;AACzB,SAAO,OAAO,KAAK;AACvB;AA7LA,IAYM,mBA2CA,WAqCC,aAqBD,8BAWA;AA5HN,IAAAC,YAAA;AAAA;AAGA;AACA,IAAAA;AAOA;AACA,IAAM,oBAAoB,oBAAI,IAAI;AAAA,MAC9B;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ,CAAC;AAkCD,IAAM,YAAY,oBAAI,IAAI;AAAA,MACtB;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ,CAAC;AAiBD,IAAO,cAAQ;AAqBf,IAAM,+BAA+B,oBAAI,IAAI;AAAA,MACzC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ,CAAC;AACD,IAAM,kBAAkB,oBAAI,IAAI,CAAC,OAAO,MAAM,CAAC;AAAA;AAAA;;;AC1GzC,SAAU,aACZ,MACA,SAA8B;AAE9B,SAAO,YAAW,MAAM,OAAO;AACnC;AASM,SAAU,aACZ,MACA,SAA8B;AAE9B,SAAO,YAAY,IAAI,IACjB,KAAK,SAAS,IAAI,CAACC,UAAS,aAAaA,OAAM,OAAO,CAAC,EAAE,KAAK,EAAE,IAChE;AACV;AAUM,SAAU,QAAQ,MAAyB;AAC7C,MAAI,MAAM,QAAQ,IAAI;AAAG,WAAO,KAAK,IAAI,OAAO,EAAE,KAAK,EAAE;AACzD,MAAIC,OAAM,IAAI;AAAG,WAAO,KAAK,SAAS,OAAO,OAAO,QAAQ,KAAK,QAAQ;AACzE,MAAI,QAAQ,IAAI;AAAG,WAAO,QAAQ,KAAK,QAAQ;AAC/C,MAAI,OAAO,IAAI;AAAG,WAAO,KAAK;AAC9B,SAAO;AACX;AAUM,SAAU,YAAY,MAAyB;AACjD,MAAI,MAAM,QAAQ,IAAI;AAAG,WAAO,KAAK,IAAI,WAAW,EAAE,KAAK,EAAE;AAC7D,MAAI,YAAY,IAAI,KAAK,CAAC,UAAU,IAAI,GAAG;AACvC,WAAO,YAAY,KAAK,QAAQ;;AAEpC,MAAI,OAAO,IAAI;AAAG,WAAO,KAAK;AAC9B,SAAO;AACX;AAUM,SAAU,UAAU,MAAyB;AAC/C,MAAI,MAAM,QAAQ,IAAI;AAAG,WAAO,KAAK,IAAI,SAAS,EAAE,KAAK,EAAE;AAC3D,MAAI,YAAY,IAAI,MAAM,KAAK,SAAS,YAAY,OAAO,QAAQ,IAAI,IAAI;AACvE,WAAO,UAAU,KAAK,QAAQ;;AAElC,MAAI,OAAO,IAAI;AAAG,WAAO,KAAK;AAC9B,SAAO;AACX;AAzFA,IAAAC,kBAAA;;IAAAC;AAQA,IAAAA;AACA;;;;;ACOM,SAAU,YAAY,MAAa;AACrC,SAAO,YAAY,IAAI,IAAI,KAAK,WAAW,CAAA;AAC/C;AAUM,SAAU,UAAU,MAAa;AACnC,SAAO,KAAK,UAAU;AAC1B;AAaM,SAAU,YAAY,MAAa;AACrC,QAAMC,UAAS,UAAU,IAAI;AAC7B,MAAIA,WAAU;AAAM,WAAO,YAAYA,OAAM;AAE7C,QAAMC,YAAW,CAAC,IAAI;AACtB,MAAI,EAAE,MAAAC,OAAM,MAAAC,MAAI,IAAK;AACrB,SAAOD,SAAQ,MAAM;AACjB,IAAAD,UAAS,QAAQC,KAAI;AACrB,KAAC,EAAE,MAAAA,MAAI,IAAKA;;AAEhB,SAAOC,SAAQ,MAAM;AACjB,IAAAF,UAAS,KAAKE,KAAI;AAClB,KAAC,EAAE,MAAAA,MAAI,IAAKA;;AAEhB,SAAOF;AACX;AAUM,SAAU,kBACZ,MACA,MAAY;;AAEZ,UAAOG,MAAA,KAAK,aAAO,QAAAA,QAAA,SAAA,SAAAA,IAAG;AAC1B;AAUM,SAAU,UAAU,MAAe,MAAY;AACjD,SACI,KAAK,WAAW,QAChB,OAAO,UAAU,eAAe,KAAK,KAAK,SAAS,IAAI,KACvD,KAAK,QAAQ,SAAS;AAE9B;AASM,SAAUC,SAAQ,MAAa;AACjC,SAAO,KAAK;AAChB;AASM,SAAU,mBAAmB,MAAa;AAC5C,MAAI,EAAE,MAAAF,MAAI,IAAK;AACf,SAAOA,UAAS,QAAQ,CAACG,OAAMH,KAAI;AAAG,KAAC,EAAE,MAAAA,MAAI,IAAKA;AAClD,SAAOA;AACX;AASM,SAAU,mBAAmB,MAAa;AAC5C,MAAI,EAAE,MAAAD,MAAI,IAAK;AACf,SAAOA,UAAS,QAAQ,CAACI,OAAMJ,KAAI;AAAG,KAAC,EAAE,MAAAA,MAAI,IAAKA;AAClD,SAAOA;AACX;AA9HA;;IAAAK;;;;;ACQM,SAAU,cAAc,MAAe;AACzC,MAAI,KAAK;AAAM,SAAK,KAAK,OAAO,KAAK;AACrC,MAAI,KAAK;AAAM,SAAK,KAAK,OAAO,KAAK;AAErC,MAAI,KAAK,QAAQ;AACb,UAAM,SAAS,KAAK,OAAO;AAC3B,WAAO,OAAO,OAAO,YAAY,IAAI,GAAG,CAAC;;AAEjD;AASM,SAAU,eAAe,MAAiB,aAAsB;AAClE,QAAMC,QAAQ,YAAY,OAAO,KAAK;AACtC,MAAIA,OAAM;AACN,IAAAA,MAAK,OAAO;;AAGhB,QAAMC,QAAQ,YAAY,OAAO,KAAK;AACtC,MAAIA,OAAM;AACN,IAAAA,MAAK,OAAO;;AAGhB,QAAMC,UAAU,YAAY,SAAS,KAAK;AAC1C,MAAIA,SAAQ;AACR,UAAM,SAASA,QAAO;AACtB,WAAO,OAAO,YAAY,IAAI,KAAK;AACnC,SAAK,SAAS;;AAEtB;AASM,SAAU,YAAY,MAAe,OAAgB;AACvD,gBAAc,KAAK;AAEnB,QAAM,OAAO;AACb,QAAM,SAAS;AAEf,MAAI,KAAK,SAAS,KAAK,KAAK,IAAI,GAAG;AAC/B,UAAM,UAAU,KAAK,SAAS,KAAK,SAAS,SAAS;AACrD,YAAQ,OAAO;AACf,UAAM,OAAO;SACV;AACH,UAAM,OAAO;;AAErB;AASM,SAAU,OAAO,MAAiBD,OAAe;AACnD,gBAAcA,KAAI;AAElB,QAAM,EAAE,QAAAC,QAAM,IAAK;AACnB,QAAM,WAAW,KAAK;AAEtB,EAAAD,MAAK,OAAO;AACZ,EAAAA,MAAK,OAAO;AACZ,OAAK,OAAOA;AACZ,EAAAA,MAAK,SAASC;AAEd,MAAI,UAAU;AACV,aAAS,OAAOD;AAChB,QAAIC,SAAQ;AACR,YAAM,SAASA,QAAO;AACtB,aAAO,OAAO,OAAO,YAAY,QAAQ,GAAG,GAAGD,KAAI;;aAEhDC,SAAQ;AACf,IAAAA,QAAO,SAAS,KAAKD,KAAI;;AAEjC;AASM,SAAU,aAAa,MAAe,OAAgB;AACxD,gBAAc,KAAK;AAEnB,QAAM,SAAS;AACf,QAAM,OAAO;AAEb,MAAI,KAAK,SAAS,QAAQ,KAAK,MAAM,GAAG;AACpC,UAAM,UAAU,KAAK,SAAS;AAC9B,YAAQ,OAAO;AACf,UAAM,OAAO;SACV;AACH,UAAM,OAAO;;AAErB;AASM,SAAU,QAAQ,MAAiBD,OAAe;AACpD,gBAAcA,KAAI;AAElB,QAAM,EAAE,QAAAE,QAAM,IAAK;AACnB,MAAIA,SAAQ;AACR,UAAM,SAASA,QAAO;AACtB,WAAO,OAAO,OAAO,QAAQ,IAAI,GAAG,GAAGF,KAAI;;AAG/C,MAAI,KAAK,MAAM;AACX,SAAK,KAAK,OAAOA;;AAGrB,EAAAA,MAAK,SAASE;AACd,EAAAF,MAAK,OAAO,KAAK;AACjB,EAAAA,MAAK,OAAO;AACZ,OAAK,OAAOA;AAChB;AA3IA;;;;;;ACUM,SAAU,OACZ,MACA,MACA,UAAU,MACV,QAAQ,UAAQ;AAEhB,MAAI,CAAC,MAAM,QAAQ,IAAI;AAAG,WAAO,CAAC,IAAI;AACtC,SAAO,KAAK,MAAM,MAAM,SAAS,KAAK;AAC1C;AAYM,SAAU,KACZ,MACA,OACA,SACA,OAAa;AAEb,QAAM,SAAoB,CAAA;AAE1B,aAAW,QAAQ,OAAO;AACtB,QAAI,KAAK,IAAI,GAAG;AACZ,aAAO,KAAK,IAAI;AAChB,UAAI,EAAE,SAAS;AAAG;;AAGtB,QAAI,WAAW,YAAY,IAAI,KAAK,KAAK,SAAS,SAAS,GAAG;AAC1D,YAAMG,YAAW,KAAK,MAAM,KAAK,UAAU,SAAS,KAAK;AACzD,aAAO,KAAK,GAAGA,SAAQ;AACvB,eAASA,UAAS;AAClB,UAAI,SAAS;AAAG;;;AAIxB,SAAO;AACX;AAWM,SAAU,aACZ,MACA,OAAU;AAEV,SAAO,MAAM,KAAK,IAAI;AAC1B;AAWM,SAAU,QACZ,MACA,OACA,UAAU,MAAI;AAEd,MAAI,OAAO;AAEX,WAAS,IAAI,GAAG,IAAI,MAAM,UAAU,CAAC,MAAM,KAAK;AAC5C,UAAM,UAAU,MAAM;AACtB,QAAI,CAACC,OAAM,OAAO,GAAG;AACjB;eACO,KAAK,OAAO,GAAG;AACtB,aAAO;eACA,WAAW,QAAQ,SAAS,SAAS,GAAG;AAC/C,aAAO,QAAQ,MAAM,QAAQ,UAAU,IAAI;;;AAInD,SAAO;AACX;AAQM,SAAU,UACZ,MACA,OAAgB;AAEhB,SAAO,MAAM,KACT,CAAC,YACGA,OAAM,OAAO,MACZ,KAAK,OAAO,KACR,QAAQ,SAAS,SAAS,KACvB,UAAU,MAAM,QAAQ,QAAQ,EAAG;AAEvD;AAYM,SAAU,QACZ,MACA,OAAgB;;AAEhB,QAAM,SAAoB,CAAA;AAC1B,QAAM,QAAQ,MAAM,OAAOA,MAAK;AAChC,MAAI;AACJ,SAAQ,OAAO,MAAM,MAAK,GAAK;AAC3B,UAAMD,aAAWE,MAAA,KAAK,cAAQ,QAAAA,QAAA,SAAA,SAAAA,IAAE,OAAOD,MAAK;AAC5C,QAAID,aAAYA,UAAS,SAAS,GAAG;AACjC,YAAM,QAAQ,GAAGA,SAAQ;;AAE7B,QAAI,KAAK,IAAI;AAAG,aAAO,KAAK,IAAI;;AAEpC,SAAO;AACX;AAnJA;;IAAAG;;;;;ACuDA,SAAS,eACL,QACA,OAAwD;AAExD,MAAI,OAAO,UAAU,YAAY;AAC7B,WAAO,CAAC,SAAkBC,OAAM,IAAI,KAAK,MAAM,KAAK,QAAQ,OAAO;;AAEvE,SAAO,CAAC,SAAkBA,OAAM,IAAI,KAAK,KAAK,QAAQ,YAAY;AACtE;AAQA,SAAS,aAAa,GAAa,GAAW;AAC1C,SAAO,CAAC,SAAkB,EAAE,IAAI,KAAK,EAAE,IAAI;AAC/C;AAOA,SAAS,YAAY,SAAwB;AACzC,QAAM,QAAQ,OAAO,KAAK,OAAO,EAAE,IAAI,CAAC,QAAO;AAC3C,UAAM,QAAQ,QAAQ;AACtB,WAAO,OAAO,UAAU,eAAe,KAAK,QAAQ,GAAG,IACjD,OAAO,KAAK,KAAK,IACjB,eAAe,KAAK,KAAK;EACnC,CAAC;AAED,SAAO,MAAM,WAAW,IAAI,OAAO,MAAM,OAAO,YAAY;AAChE;AAQM,SAAU,YAAY,SAA0B,MAAa;AAC/D,QAAM,OAAO,YAAY,OAAO;AAChC,SAAO,OAAO,KAAK,IAAI,IAAI;AAC/B;AAUM,SAAU,YACZ,SACA,OACA,SACA,QAAQ,UAAQ;AAEhB,QAAM,OAAO,YAAY,OAAO;AAChC,SAAO,OAAO,OAAO,MAAM,OAAO,SAAS,KAAK,IAAI,CAAA;AACxD;AASM,SAAU,eACZ,IACA,OACA,UAAU,MAAI;AAEd,MAAI,CAAC,MAAM,QAAQ,KAAK;AAAG,YAAQ,CAAC,KAAK;AACzC,SAAO,QAAQ,eAAe,MAAM,EAAE,GAAG,OAAO,OAAO;AAC3D;AAUM,SAAU,qBACZ,SACA,OACA,UAAU,MACV,QAAQ,UAAQ;AAEhB,SAAO,OACH,OAAO,YAAY,OAAO,GAC1B,OACA,SACA,KAAK;AAEb;AAUM,SAAU,qBACZC,OACA,OACA,UAAU,MACV,QAAQ,UAAQ;AAEhB,SAAO,OAAO,OAAO,YAAYA,KAAc,GAAG,OAAO,SAAS,KAAK;AAC3E;AA7KA,IAuBM;AAvBN;;IAAAC;AAEA;AAqBA,IAAM,SAGF;MACA,SAAS,MAAI;AACT,YAAI,OAAO,SAAS,YAAY;AAC5B,iBAAO,CAAC,SAAkBF,OAAM,IAAI,KAAK,KAAK,KAAK,IAAI;mBAChD,SAAS,KAAK;AACrB,iBAAOA;;AAEX,eAAO,CAAC,SAAkBA,OAAM,IAAI,KAAK,KAAK,SAAS;MAC3D;MACA,SAASC,OAAI;AACT,YAAI,OAAOA,UAAS,YAAY;AAC5B,iBAAO,CAAC,SAAkBA,MAAK,KAAK,IAAI;;AAE5C,eAAO,CAAC,SAAkB,KAAK,SAASA;MAC5C;MACA,aAAaE,OAAI;AACb,YAAI,OAAOA,UAAS,YAAY;AAC5B,iBAAO,CAAC,SAAkB,OAAO,IAAI,KAAKA,MAAK,KAAK,IAAI;;AAE5D,eAAO,CAAC,SAAkB,OAAO,IAAI,KAAK,KAAK,SAASA;MAC5D;;;;;;ACrCE,SAAU,cAAc,OAAgB;AAC1C,MAAI,MAAM,MAAM;AAMhB,SAAO,EAAE,OAAO,GAAG;AACf,UAAM,OAAO,MAAM;AAOnB,QAAI,MAAM,KAAK,MAAM,YAAY,MAAM,MAAM,CAAC,KAAK,GAAG;AAClD,YAAM,OAAO,KAAK,CAAC;AACnB;;AAGJ,aAAS,WAAW,KAAK,QAAQ,UAAU,WAAW,SAAS,QAAQ;AACnE,UAAI,MAAM,SAAS,QAAQ,GAAG;AAC1B,cAAM,OAAO,KAAK,CAAC;AACnB;;;;AAKZ,SAAO;AACX;AAuCM,SAAU,wBACZ,OACA,OAAc;AAEd,QAAM,WAAyB,CAAA;AAC/B,QAAM,WAAyB,CAAA;AAE/B,MAAI,UAAU,OAAO;AACjB,WAAO;;AAGX,MAAI,UAAU,YAAY,KAAK,IAAI,QAAQ,MAAM;AACjD,SAAO,SAAS;AACZ,aAAS,QAAQ,OAAO;AACxB,cAAU,QAAQ;;AAEtB,YAAU,YAAY,KAAK,IAAI,QAAQ,MAAM;AAC7C,SAAO,SAAS;AACZ,aAAS,QAAQ,OAAO;AACxB,cAAU,QAAQ;;AAGtB,QAAM,SAAS,KAAK,IAAI,SAAS,QAAQ,SAAS,MAAM;AACxD,MAAI,MAAM;AACV,SAAO,MAAM,UAAU,SAAS,SAAS,SAAS,MAAM;AACpD;;AAGJ,MAAI,QAAQ,GAAG;AACX,WAAO,iBAAiB;;AAG5B,QAAM,eAAe,SAAS,MAAM;AACpC,QAAMC,YAAsB,aAAa;AACzC,QAAM,WAAW,SAAS;AAC1B,QAAM,WAAW,SAAS;AAE1B,MAAIA,UAAS,QAAQ,QAAQ,IAAIA,UAAS,QAAQ,QAAQ,GAAG;AACzD,QAAI,iBAAiB,OAAO;AACxB,aAAO,iBAAiB,YAAY,iBAAiB;;AAEzD,WAAO,iBAAiB;;AAE5B,MAAI,iBAAiB,OAAO;AACxB,WAAO,iBAAiB,YAAY,iBAAiB;;AAEzD,SAAO,iBAAiB;AAC5B;AAWM,SAAU,WAA8B,OAAU;AACpD,UAAQ,MAAM,OAAO,CAAC,MAAM,GAAG,QAAQ,CAAC,IAAI,SAAS,MAAM,IAAI,CAAC,CAAC;AAEjE,QAAM,KAAK,CAAC,GAAG,MAAK;AAChB,UAAM,WAAW,wBAAwB,GAAG,CAAC;AAC7C,QAAI,WAAW,iBAAiB,WAAW;AACvC,aAAO;eACA,WAAW,iBAAiB,WAAW;AAC9C,aAAO;;AAEX,WAAO;EACX,CAAC;AAED,SAAO;AACX;AArJA,IA2CkB;AA3ClB,IAAAC,gBAAA;;IAAAC;AA2CA,KAAA,SAAkBC,mBAAgB;AAC9B,MAAAA,kBAAAA,kBAAA,kBAAA,KAAA;AACA,MAAAA,kBAAAA,kBAAA,eAAA,KAAA;AACA,MAAAA,kBAAAA,kBAAA,eAAA,KAAA;AACA,MAAAA,kBAAAA,kBAAA,cAAA,KAAA;AACA,MAAAA,kBAAAA,kBAAA,kBAAA,MAAA;IACJ,GANkB,qBAAA,mBAAgB,CAAA,EAAA;;;;;ACuC5B,SAAU,QAAQ,KAAc;AAClC,QAAM,WAAW,cAAc,aAAa,GAAG;AAE/C,SAAO,CAAC,WACF,OACA,SAAS,SAAS,SAClB,YAAY,QAAQ,IACpB,WAAW,QAAQ;AAC7B;AAQA,SAAS,YAAY,UAAiB;;AAClC,QAAM,SAAS,SAAS;AAExB,QAAM,OAAa;IACf,MAAM;IACN,OAAO,qBAAqB,SAAS,MAAM,EAAE,IAAI,CAAC,SAAQ;;AACtD,YAAM,EAAE,UAAAC,UAAQ,IAAK;AACrB,YAAM,QAAkB,EAAE,OAAO,iBAAiBA,SAAQ,EAAC;AAE3D,uBAAiB,OAAO,MAAM,MAAMA,SAAQ;AAC5C,uBAAiB,OAAO,SAAS,SAASA,SAAQ;AAElD,YAAMC,SAAOC,MAAA,cAAc,QAAQF,SAAQ,OAAC,QAAAE,QAAA,SAAA,SAAAA,IAAE,QAAQ;AACtD,UAAID,OAAM;AACN,cAAM,OAAOA;;AAGjB,YAAM,cACFE,OAAM,WAAWH,SAAQ,KAAKG,OAAM,WAAWH,SAAQ;AAC3D,UAAI,aAAa;AACb,cAAM,cAAc;;AAGxB,YAAM,UAAUG,OAAM,WAAWH,SAAQ;AACzC,UAAI,SAAS;AACT,cAAM,UAAU,IAAI,KAAK,OAAO;;AAGpC,aAAO;IACX,CAAC;;AAGL,mBAAiB,MAAM,MAAM,MAAM,MAAM;AACzC,mBAAiB,MAAM,SAAS,SAAS,MAAM;AAC/C,QAAM,QAAOE,MAAA,cAAc,QAAQ,MAAM,OAAC,QAAAA,QAAA,SAAA,SAAAA,IAAE,QAAQ;AACpD,MAAI,MAAM;AACN,SAAK,OAAO;;AAEhB,mBAAiB,MAAM,eAAe,YAAY,MAAM;AAExD,QAAM,UAAUC,OAAM,WAAW,MAAM;AACvC,MAAI,SAAS;AACT,SAAK,UAAU,IAAI,KAAK,OAAO;;AAGnC,mBAAiB,MAAM,UAAU,SAAS,QAAQ,IAAI;AAEtD,SAAO;AACX;AAQA,SAAS,WAAW,UAAiB;;AACjC,QAAM,UAAS,MAAAD,MAAA,cAAc,WAAW,SAAS,QAAQ,OAAC,QAAAA,QAAA,SAAA,SAAAA,IAAE,cAAQ,QAAA,OAAA,SAAA,KAAI,CAAA;AAExE,QAAM,OAAa;IACf,MAAM,SAAS,KAAK,OAAO,GAAG,CAAC;IAC/B,IAAI;IACJ,OAAO,qBAAqB,QAAQ,SAAS,QAAQ,EAAE,IACnD,CAAC,SAAiB;AACd,YAAM,EAAE,UAAAF,UAAQ,IAAK;AACrB,YAAM,QAAkB,EAAE,OAAO,iBAAiBA,SAAQ,EAAC;AAC3D,uBAAiB,OAAO,MAAM,QAAQA,SAAQ;AAC9C,uBAAiB,OAAO,SAAS,SAASA,SAAQ;AAClD,uBAAiB,OAAO,QAAQ,QAAQA,SAAQ;AAChD,uBAAiB,OAAO,eAAe,eAAeA,SAAQ;AAC9D,YAAM,UAAUG,OAAM,WAAWH,SAAQ;AACzC,UAAI;AAAS,cAAM,UAAU,IAAI,KAAK,OAAO;AAE7C,aAAO;IACX,CAAC;;AAIT,mBAAiB,MAAM,SAAS,SAAS,MAAM;AAC/C,mBAAiB,MAAM,QAAQ,QAAQ,MAAM;AAC7C,mBAAiB,MAAM,eAAe,eAAe,MAAM;AAE3D,QAAM,UAAUG,OAAM,iBAAiB,MAAM;AAC7C,MAAI,SAAS;AACT,SAAK,UAAU,IAAI,KAAK,OAAO;;AAGnC,mBAAiB,MAAM,UAAU,kBAAkB,QAAQ,IAAI;AAE/D,SAAO;AACX;AAoBA,SAAS,iBAAiB,OAAgB;AACtC,SAAO,qBAAqB,iBAAiB,KAAK,EAAE,IAAI,CAAC,SAAQ;AAC7D,UAAM,EAAE,QAAO,IAAK;AAEpB,UAAM,QAAuB;MACzB,QAAQ,QAAQ;MAGhB,WAAW,CAAC,CAAC,QAAQ;;AAGzB,eAAW,UAAU,mBAAmB;AACpC,UAAI,QAAQ,SAAS;AACjB,cAAM,UAAU,QAAQ;;;AAIhC,eAAW,UAAU,gBAAgB;AACjC,UAAI,QAAQ,SAAS;AACjB,cAAM,UAAU,SAAS,QAAQ,SAAS,EAAE;;;AAIpD,QAAI,QAAQ,eAAe;AACvB,YAAM,aAAa,QACf;;AAIR,WAAO;EACX,CAAC;AACL;AASA,SAAS,cACL,SACA,MAAe;AAEf,SAAO,qBAAqB,SAAS,MAAM,MAAM,CAAC,EAAE;AACxD;AAUA,SAASA,OACL,SACA,OACA,UAAU,OAAK;AAEf,SAAO,YAAY,qBAAqB,SAAS,OAAO,SAAS,CAAC,CAAC,EAAE,KAAI;AAC7E;AAWA,SAAS,iBACL,KACAC,OACA,SACA,OACA,UAAU,OAAK;AAEf,QAAMC,OAAMF,OAAM,SAAS,OAAO,OAAO;AACzC,MAAIE;AAAK,QAAID,SAAQC;AACzB;AAQA,SAAS,YAAY,OAAa;AAC9B,SAAO,UAAU,SAAS,UAAU,UAAU,UAAU;AAC5D;AA1SA,IA6LM,mBACA;AA9LN;;IAAAC;AACA;AA4LA,IAAM,oBAAoB,CAAC,OAAO,QAAQ,MAAM;AAChD,IAAM,iBAAiB;MACnB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;;;;;ACvMJ,IAAAC,eAAA;SAAAA,cAAA;;;;;;;;;;;;;;;;;;;iBAAAC;EAAA;;;;;;;;;;eAAAC;EAAA;;;;;;;;;;;;IAAAC,YAAA;;IAAAC;AACA;AACA;AACA;AACA;AACA,IAAAC;AACA;AAEA,IAAAF;;;;;ACLA;;;;eAAAG;EAAA;;;;;AAgBA,SAASC,QACP,MACA,KACA,SAAwB;AAExB,MAAI,CAAC;AAAM,WAAO;AAElB,SAAO,KAAK,QAAG,QAAH,QAAG,SAAH,MAAO,KAAK,MAAM,UAAU,MAAM,QAAW,OAAO,EAAE,SAAQ;AAC5E;AAQA,SAAS,UACP,KACA,SAAwB;AAExB,SACE,CAAC,WACD,OAAO,QAAQ,YACf,OAAO,QACP,EAAE,YAAY,QACd,EAAE,UAAU;AAEhB;AAqBM,SAAU,KAEd,KACA,SAAwB;AAQxB,QAAM,WAAW,UAAU,GAAG,KAAM,UAAU,KAAM,UAAa;AAMjE,QAAM,OAAO;IACX,GAAG;IACH,GAAG,SAAI,QAAJ,SAAI,SAAA,SAAJ,KAAM;IACT,GAAG,QAAe,YAAO,QAAP,YAAO,SAAP,UAAW,CAAA,CAAE;;AAGjC,SAAOA,QAAO,MAAM,UAAU,IAAI;AACpC;AAQM,SAAU,IAEd,KAAiC;AAEjC,QAAM,UAAU,EAAE,GAAG,KAAK,UAAU,SAAS,KAAI;AAEjD,SAAOA,QAAO,MAAM,KAAK,OAAO;AAClC;AAYM,SAAU,KAEd,UAA6B;AAE7B,QAAM,QAAQ,WAAW,WAAW,OAAO,KAAK,KAAI,IAAK,CAAA;AAEzD,MAAI,MAAM;AAEV,WAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,WAAO,YAAY,MAAM,EAAE;;AAG7B,SAAO;AACT;AAqBM,SAAU,UAEdC,OACA,SACA,cAAc,OAAO,YAAY,YAAY,UAAU,OAAK;AAE5D,MAAI,CAACA,SAAQ,OAAOA,UAAS,UAAU;AACrC,WAAO;;AAGT,MAAI,OAAO,YAAY,WAAW;AAChC,kBAAc;;AAGhB,QAAM,SAAS,KAAK,KAAKA,OAAM,iBAAgB,KAAK;AACpD,MAAI,CAAC,aAAa;AAChB,WAAO,QAAQ,EAAE,OAAM;;AAUzB,SAAO,OAAO,KAAI,EAAG,GAAG,SAAS,MAAK;AACxC;AAgBM,SAAU,OAAI;AAClB,SAAO,KAAK,KAAK,KAAK;AACxB;AAYM,SAAU,SAAS,WAAoB,WAAkB;AAE7D,MAAI,cAAc,WAAW;AAC3B,WAAO;;AAOT,MAAIC,QAAuB;AAC3B,SAAOA,SAAQA,UAASA,MAAK,QAAQ;AACnC,IAAAA,QAAOA,MAAK;AACZ,QAAIA,UAAS,WAAW;AACtB,aAAO;;;AAIX,SAAO;AACT;AAgBM,SAAUH,OACd,MACA,MAAkB;AAElB,MAAI,CAAC,YAAY,IAAI,KAAK,CAAC,YAAY,IAAI,GAAG;AAC5C;;AAEF,MAAI,YAAY,KAAK;AACrB,QAAM,MAAM,CAAC,KAAK;AAElB,WAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC5B,SAAK,eAAe,KAAK;;AAE3B,OAAK,SAAS;AACd,SAAO;AACT;AAQA,SAAS,YAAY,MAAS;AAC5B,MAAI,MAAM,QAAQ,IAAI,GAAG;AACvB,WAAO;;AAGT,MACE,OAAO,SAAS,YAChB,CAAC,OAAO,UAAU,eAAe,KAAK,MAAM,QAAQ,KACpD,OAAO,KAAK,WAAW,YACvB,KAAK,SAAS,GACd;AACA,WAAO;;AAGT,WAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,QAAI,EAAE,KAAK,OAAO;AAChB,aAAO;;;AAGX,SAAO;AACT;AA5RA;;IAAAI;AACA;;;;;ACkBM,SAAU,UAAa,cAAiB;AAC5C,SAAO,aAAa,WAAW;AACjC;AAUM,SAAUC,WAAUC,MAAW;AACnC,SAAOA,KAAI,QAAQ,gBAAgB,CAAC,GAAG,MAAM,EAAE,YAAW,CAAE;AAC9D;AAWM,SAAU,QAAQA,MAAW;AACjC,SAAOA,KAAI,QAAQ,UAAU,KAAK,EAAE,YAAW;AACjD;AAaM,SAAU,QAGd,OAAY,IAAoC;AAChD,QAAM,MAAM,MAAM;AAClB,WAAS,IAAI,GAAG,IAAI,KAAK;AAAK,OAAG,MAAM,IAAI,CAAC;AAC5C,SAAO;AACT;AAWM,SAAU,SAA4B,KAAY;AACtD,QAAMC,SACJ,YAAY,MACP,MAAM,UAAU,IAAI,KAAK,KAAK,CAAC,OAAO,UAAU,IAAI,IAAI,CAAC,IAC1D,CAAC,UAAU,KAAK,IAAI,CAAC;AAG3B,QAAMC,QAAO,IAAIC,UAASF,MAAK;AAC/B,EAAAA,OAAM,QAAQ,CAAC,SAAQ;AACrB,SAAK,SAASC;EAChB,CAAC;AAED,SAAOD;AACT;AAqBM,SAAU,OAAOD,MAAW;AAChC,QAAM,WAAWA,KAAI,QAAQ,GAAG;AAEhC,MAAI,WAAW,KAAK,WAAWA,KAAI,SAAS;AAAG,WAAO;AAEtD,QAAM,UAAUA,KAAI,WAAW,WAAW,CAAC;AAE3C,UACI,WAAW,eAAe,UAAU,WAAW,eAAe,UAC7D,WAAW,eAAe,UAAU,WAAW,eAAe,UAC/D,YAAY,eAAe,gBAC7BA,KAAI,SAAS,KAAK,WAAW,CAAC;AAElC;AA/HA,IA+FW;AA/FX;;IAAAI;AAaA,IAAAA;AAkFA,KAAA,SAAWC,iBAAc;AACvB,MAAAA,gBAAAA,gBAAA,YAAA,MAAA;AACA,MAAAA,gBAAAA,gBAAA,YAAA,OAAA;AACA,MAAAA,gBAAAA,gBAAA,YAAA,MAAA;AACA,MAAAA,gBAAAA,gBAAA,YAAA,MAAA;AACA,MAAAA,gBAAAA,gBAAA,iBAAA,MAAA;IACF,GANW,mBAAA,iBAAc,CAAA,EAAA;;;;;AC/FzB;;;;;;;;;;;;AAmDA,SAAS,QACP,MACA,MACA,SAAiB;;AAEjB,MAAI,CAAC,QAAQ,CAACC,OAAM,IAAI;AAAG,WAAO;AAElC,GAAAC,MAAA,KAAK,aAAO,QAAAA,QAAA,SAAAA,MAAZ,KAAK,UAAY,CAAA;AAGjB,MAAI,CAAC,MAAM;AACT,WAAO,KAAK;;AAGd,MAAI,OAAO,KAAK,KAAK,SAAS,IAAI,GAAG;AAEnC,WAAO,CAAC,WAAW,SAAS,KAAK,IAAI,IAAI,OAAO,KAAK,QAAQ;;AAI/D,MAAI,KAAK,SAAS,YAAY,SAAS,SAAS;AAC9C,WAAO,KAAK,KAAK,QAAQ;;AAI3B,MACE,KAAK,SAAS,YACb,KAAK,QAAQ,YAAY,WAAW,KAAK,QAAQ,YAAY,eAC9D,SAAS,SACT;AACA,WAAO;;AAGT,SAAO;AACT;AAUA,SAAS,QAAQ,IAAa,MAAc,OAAoB;AAC9D,MAAI,UAAU,MAAM;AAClB,oBAAgB,IAAI,IAAI;SACnB;AACL,OAAG,QAAQ,QAAQ,GAAG;;AAE1B;AAuFM,SAAU,KAEd,MACA,OAGiE;AAGjE,MAAI,OAAO,SAAS,YAAY,UAAU,QAAW;AACnD,QAAI,OAAO,UAAU,YAAY;AAC/B,UAAI,OAAO,SAAS,UAAU;AAC5B;AACE,gBAAM,IAAI,MAAM,+BAA+B;;;AAGnD,aAAO,QAAQ,MAAM,CAAC,IAAI,MAAK;AAC7B,YAAID,OAAM,EAAE;AAAG,kBAAQ,IAAI,MAAM,MAAM,KAAK,IAAI,GAAG,GAAG,QAAQ,KAAK,CAAC;MACtE,CAAC;;AAEH,WAAO,QAAQ,MAAM,CAAC,OAAM;AAC1B,UAAI,CAACA,OAAM,EAAE;AAAG;AAEhB,UAAI,OAAO,SAAS,UAAU;AAC5B,eAAO,KAAK,IAAI,EAAE,QAAQ,CAAC,YAAW;AACpC,gBAAM,WAAW,KAAK;AACtB,kBAAQ,IAAI,SAAS,QAAQ;QAC/B,CAAC;aACI;AACL,gBAAQ,IAAI,MAAgB,KAAe;;IAE/C,CAAC;;AAGH,SAAO,UAAU,SAAS,IACtB,OACA,QAAQ,KAAK,IAAI,MAAgB,KAAK,QAAQ,OAAO;AAC3D;AAWA,SAAS,QACP,IACA,MACA,SAAiB;AAEjB,SAAO,QAAQ,KAEX,GAAG,QACH,CAAC,WAAW,SAAS,KAAK,IAAI,IAC9B,QAAQ,IAAI,MAAM,KAAK,MAAM,SAC7B,QAAQ,IAAI,MAAM,OAAO;AAC/B;AAUA,SAAS,QAAQ,IAAa,MAAc,OAAgB,SAAiB;AAC3E,MAAI,QAAQ,IAAI;AAEd,OAAG,QAAQ;SACN;AACL,YACE,IACA,MACA,CAAC,WAAW,SAAS,KAAK,IAAI,IAAK,QAAQ,KAAK,OAAQ,GAAG,OAAO;;AAGxE;AAmFM,SAAU,KAEd,MACA,OAMW;;AAEX,MAAI,OAAO,SAAS,YAAY,UAAU,QAAW;AACnD,UAAM,KAAK,KAAK;AAEhB,QAAI,CAAC,MAAM,CAACA,OAAM,EAAE;AAAG,aAAO;AAE9B,YAAQ,MAAM;MACZ,KAAK,SAAS;AACZ,cAAM,WAAW,KAAK,IAAG;AACzB,cAAM,OAAO,OAAO,KAAK,QAAQ;AACjC,aAAK,QAAQ,CAAC,GAAG,MAAK;AACpB,mBAAS,KAAK;QAChB,CAAC;AAED,iBAAS,SAAS,KAAK;AAEvB,eAAO;;MAET,KAAK;MACL,KAAK,YAAY;AACf,eAAO,GAAG,KAAK,YAAW;;MAG5B,KAAK;MACL,KAAK,OAAO;AACV,cAAME,SAAOD,MAAA,GAAG,aAAO,QAAAA,QAAA,SAAA,SAAAA,IAAG;AAG1B,YACE,OAAO,QAAQ,gBACb,SAAS,WAAW,GAAG,YAAY,OAAO,GAAG,SAAS,WACrD,SAAS,UACP,GAAG,YAAY,SACd,GAAG,YAAY,YACf,GAAG,YAAY,WACf,GAAG,YAAY,WACf,GAAG,YAAY,cACrBC,UAAS,UACT,KAAK,QAAQ,SACb;AACA,iBAAO,IAAI,IAAIA,OAAM,KAAK,QAAQ,OAAO,EAAE;;AAI7C,eAAOA;;MAGT,KAAK,aAAa;AAChB,eAAO,UAAU,EAAE;;MAGrB,KAAK,eAAe;AAClB,eAAO,YAAY,EAAE;;MAGvB,KAAK;AACH,eAAO,KAAK,MAAK,EAAG,KAAK,eAAe,EAAE,OAAM,EAAG,KAAI;MAEzD,KAAK;AACH,eAAO,KAAK,KAAI;MAElB;AACE,eAAO,QAAQ,IAAI,MAAM,KAAK,QAAQ,OAAO;;;AAInD,MAAI,OAAO,SAAS,YAAY,UAAU,QAAW;AACnD,QAAI,OAAO,UAAU,YAAY;AAC/B,UAAI,OAAO,SAAS,UAAU;AAC5B,cAAM,IAAI,MAAM,+BAA+B;;AAEjD,aAAO,QAAQ,MAAM,CAAC,IAAI,MAAK;AAC7B,YAAIF,OAAM,EAAE,GAAG;AACb,kBACE,IACA,MACA,MAAM,KAAK,IAAI,GAAG,QAAQ,IAAI,MAAM,KAAK,QAAQ,OAAO,CAAC,GACzD,KAAK,QAAQ,OAAO;;MAG1B,CAAC;;AAGH,WAAO,QAAQ,MAAM,CAAC,OAAM;AAC1B,UAAI,CAACA,OAAM,EAAE;AAAG;AAEhB,UAAI,OAAO,SAAS,UAAU;AAC5B,eAAO,KAAK,IAAI,EAAE,QAAQ,CAAC,QAAO;AAChC,gBAAMG,OAAM,KAAK;AACjB,kBAAQ,IAAI,KAAKA,MAAK,KAAK,QAAQ,OAAO;QAC5C,CAAC;aACI;AACL,gBAAQ,IAAI,MAAM,OAAO,KAAK,QAAQ,OAAO;;IAEjD,CAAC;;AAGH,SAAO;AACT;AAoBA,SAAS,QACP,IACA,MACA,OAAe;;AAEf,QAAM,OAAoB;AAE1B,GAAAF,MAAA,KAAK,UAAI,QAAAA,QAAA,SAAAA,MAAT,KAAK,OAAS,CAAA;AAEd,MAAI,OAAO,SAAS;AAAU,WAAO,OAAO,KAAK,MAAM,IAAI;WAClD,OAAO,SAAS,YAAY,UAAU,QAAW;AACxD,SAAK,KAAK,QAAQ;;AAEtB;AAaA,SAAS,SAAS,IAAiB,MAAa;AAC9C,MAAI;AACJ,MAAI;AACJ,MAAI;AAEJ,MAAI,QAAQ,MAAM;AAChB,eAAW,OAAO,KAAK,GAAG,OAAO,EAAE,OAAO,CAAC,aACzC,SAAS,WAAW,cAAc,CAAC;AAErC,cAAU,SAAS,IAAI,CAAC,YACtBG,WAAU,QAAQ,MAAM,eAAe,MAAM,CAAC,CAAC;SAE5C;AACL,eAAW,CAAC,iBAAiB,QAAQ,IAAI,CAAC;AAC1C,cAAU,CAAC,IAAI;;AAGjB,WAAS,MAAM,GAAG,MAAM,SAAS,QAAQ,EAAE,KAAK;AAC9C,UAAM,UAAU,SAAS;AACzB,UAAM,SAAS,QAAQ;AACvB,QACE,OAAO,KAAK,GAAG,SAAS,OAAO,KAC/B,CAAC,OAAO,KAAM,GAAmB,MAAM,MAAM,GAC7C;AACA,cAAQ,GAAG,QAAQ;AAEnB,UAAI,OAAO,KAAK,YAAY,KAAK,GAAG;AAClC,gBAAQ,WAAW;iBACV,UAAU,OAAO,OAAO,KAAK,CAAC,GAAG;AAC1C,gBAAQ,OAAO,KAAK;iBACX,OAAO,KAAK,KAAK,GAAG;AAC7B,YAAI;AACF,kBAAQ,KAAK,MAAM,KAAK;iBACjB,GAAP;;;AAKH,SAAG,KAAiC,UAAU;;;AAInD,SAAO,QAAQ,OAAO,GAAG,OAAO;AAClC;AAoFM,SAAU,KAEd,MACA,OAAe;;AAEf,QAAM,OAAO,KAAK;AAElB,MAAI,CAAC,QAAQ,CAACJ,OAAM,IAAI;AAAG;AAE3B,QAAM,SAAsB;AAC5B,GAAAC,MAAA,OAAO,UAAI,QAAAA,QAAA,SAAAA,MAAX,OAAO,OAAS,CAAA;AAGhB,MAAI,CAAC,MAAM;AACT,WAAO,SAAS,MAAM;;AAIxB,MAAI,OAAO,SAAS,YAAY,UAAU,QAAW;AACnD,YAAQ,MAAM,CAAC,OAAM;AACnB,UAAID,OAAM,EAAE,GAAG;AACb,YAAI,OAAO,SAAS;AAAU,kBAAQ,IAAI,IAAI;;AACzC,kBAAQ,IAAI,MAAM,KAAgB;;IAE3C,CAAC;AACD,WAAO;;AAET,MAAI,OAAO,KAAK,OAAO,MAAM,IAAI,GAAG;AAClC,WAAO,OAAO,KAAK;;AAGrB,SAAO,SAAS,QAAQ,IAAI;AAC9B;AAwCM,SAAU,IAEd,OAAyB;AAEzB,QAAM,WAAW,UAAU,WAAW;AACtC,QAAM,UAAU,KAAK;AAErB,MAAI,CAAC,WAAW,CAACA,OAAM,OAAO;AAAG,WAAO,WAAW,SAAY;AAE/D,UAAQ,QAAQ,MAAM;IACpB,KAAK;AACH,aAAO,KAAK,KAAK,KAAe;IAClC,KAAK,UAAU;AACb,YAAM,SAAS,KAAK,KAAK,iBAAiB;AAC1C,UAAI,CAAC,UAAU;AACb,YAAI,KAAK,KAAK,UAAU,KAAK,QAAQ,OAAO,UAAU,UAAU;AAC9D,iBAAO;;AAGT,aAAK,KAAK,QAAQ,EAAE,WAAW,UAAU;AAEzC,cAAM,SAAS,OAAO,UAAU,WAAW,CAAC,KAAK,IAAI;AACrD,iBAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACtC,eAAK,KAAK,iBAAiB,OAAO,MAAM,EAAE,KAAK,YAAY,EAAE;;AAG/D,eAAO;;AAGT,aAAO,KAAK,KAAK,UAAU,IACvB,OAAO,QAAO,EAAG,IAAI,CAAC,OAAO,KAAK,GAAG,QAAQ,CAAC,IAC9C,OAAO,KAAK,OAAO;;IAEzB,KAAK;IACL,KAAK;AACH,aAAO,WACH,KAAK,KAAK,OAAO,IACjB,KAAK,KAAK,SAAS,KAAe;;AAG1C,SAAO;AACT;AASA,SAAS,gBAAgB,MAAe,MAAY;AAClD,MAAI,CAAC,KAAK,WAAW,CAAC,OAAO,KAAK,KAAK,SAAS,IAAI;AAAG;AAEvD,SAAO,KAAK,QAAQ;AACtB;AASA,SAAS,WAAW,OAAc;AAChC,SAAO,QAAQ,MAAM,KAAI,EAAG,MAAM,MAAM,IAAI,CAAA;AAC9C;AAqBM,SAAU,WAEd,MAAY;AAEZ,QAAM,YAAY,WAAW,IAAI;AAEjC,WAAS,IAAI,GAAG,IAAI,UAAU,QAAQ,KAAK;AACzC,YAAQ,MAAM,CAAC,SAAQ;AACrB,UAAIA,OAAM,IAAI;AAAG,wBAAgB,MAAM,UAAU,EAAE;IACrD,CAAC;;AAGH,SAAO;AACT;AAuBM,SAAU,SAEd,WAAiB;AAEjB,SAAO,KAAK,QAAO,EAAG,KAAK,CAAC,SAAQ;AAClC,UAAM,QAAQA,OAAM,IAAI,KAAK,KAAK,QAAQ;AAC1C,QAAI,MAAM;AAEV,QAAI,SAAS,UAAU,QAAQ;AAC7B,cAAQ,MAAM,MAAM,QAAQ,WAAW,MAAM,CAAC,KAAK,IAAI;AACrD,cAAMK,OAAM,MAAM,UAAU;AAE5B,aACG,QAAQ,KAAK,OAAO,KAAK,MAAM,MAAM,EAAE,OACvCA,SAAQ,MAAM,UAAU,OAAO,KAAK,MAAMA,KAAI,IAC/C;AACA,iBAAO;;;;AAKb,WAAO;EACT,CAAC;AACH;AAoBM,SAAU,SAEd,OAEyE;AAGzE,MAAI,OAAO,UAAU,YAAY;AAC/B,WAAO,QAAQ,MAAM,CAAC,IAAI,MAAK;AAC7B,UAAIL,OAAM,EAAE,GAAG;AACb,cAAM,YAAY,GAAG,QAAQ,YAAY;AACzC,iBAAS,KAAK,CAAC,EAAE,GAAG,MAAM,KAAK,IAAI,GAAG,SAAS,CAAC;;IAEpD,CAAC;;AAIH,MAAI,CAAC,SAAS,OAAO,UAAU;AAAU,WAAO;AAEhD,QAAM,aAAa,MAAM,MAAM,MAAM;AACrC,QAAM,cAAc,KAAK;AAEzB,WAAS,IAAI,GAAG,IAAI,aAAa,KAAK;AACpC,UAAM,KAAK,KAAK;AAEhB,QAAI,CAACA,OAAM,EAAE;AAAG;AAGhB,UAAM,YAAY,QAAQ,IAAI,SAAS,KAAK;AAE5C,QAAI,CAAC,WAAW;AACd,cAAQ,IAAI,SAAS,WAAW,KAAK,GAAG,EAAE,KAAI,CAAE;WAC3C;AACL,UAAI,WAAW,IAAI;AAGnB,eAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AAC1C,cAAM,cAAc,GAAG,WAAW;AAClC,YAAI,CAAC,SAAS,SAAS,IAAI,aAAa;AAAG,sBAAY;;AAGzD,cAAQ,IAAI,SAAS,SAAS,KAAI,CAAE;;;AAIxC,SAAO;AACT;AAqBM,SAAU,YAEd,MAEyE;AAGzE,MAAI,OAAO,SAAS,YAAY;AAC9B,WAAO,QAAQ,MAAM,CAAC,IAAI,MAAK;AAC7B,UAAIA,OAAM,EAAE,GAAG;AACb,oBAAY,KAAK,CAAC,EAAE,GAAG,KAAK,KAAK,IAAI,GAAG,GAAG,QAAQ,YAAY,EAAE,CAAC;;IAEtE,CAAC;;AAGH,QAAM,UAAU,WAAW,IAAI;AAC/B,QAAM,aAAa,QAAQ;AAC3B,QAAM,YAAY,UAAU,WAAW;AAEvC,SAAO,QAAQ,MAAM,CAAC,OAAM;AAC1B,QAAI,CAACA,OAAM,EAAE;AAAG;AAEhB,QAAI,WAAW;AAEb,SAAG,QAAQ,WAAW;WACjB;AACL,YAAM,YAAY,WAAW,GAAG,QAAQ,QAAQ;AAChD,UAAI,UAAU;AAEd,eAAS,IAAI,GAAG,IAAI,YAAY,KAAK;AACnC,cAAMM,SAAQ,UAAU,QAAQ,QAAQ,EAAE;AAE1C,YAAIA,UAAS,GAAG;AACd,oBAAU,OAAOA,QAAO,CAAC;AACzB,oBAAU;AAMV;;;AAGJ,UAAI,SAAS;AACX,WAAG,QAAQ,WAAW,UAAU,KAAK,GAAG;;;EAG9C,CAAC;AACH;AAsBM,SAAU,YAEd,OAQA,UAAkB;AAGlB,MAAI,OAAO,UAAU,YAAY;AAC/B,WAAO,QAAQ,MAAM,CAAC,IAAI,MAAK;AAC7B,UAAIN,OAAM,EAAE,GAAG;AACb,oBAAY,KACV,CAAC,EAAE,GACH,MAAM,KAAK,IAAI,GAAG,GAAG,QAAQ,YAAY,IAAI,QAAQ,GACrD,QAAQ;;IAGd,CAAC;;AAIH,MAAI,CAAC,SAAS,OAAO,UAAU;AAAU,WAAO;AAEhD,QAAM,aAAa,MAAM,MAAM,MAAM;AACrC,QAAM,aAAa,WAAW;AAC9B,QAAM,QAAQ,OAAO,aAAa,YAAa,WAAW,IAAI,KAAM;AACpE,QAAM,cAAc,KAAK;AAEzB,WAAS,IAAI,GAAG,IAAI,aAAa,KAAK;AACpC,UAAM,KAAK,KAAK;AAEhB,QAAI,CAACA,OAAM,EAAE;AAAG;AAEhB,UAAM,iBAAiB,WAAW,GAAG,QAAQ,QAAQ;AAGrD,aAAS,IAAI,GAAG,IAAI,YAAY,KAAK;AAEnC,YAAMM,SAAQ,eAAe,QAAQ,WAAW,EAAE;AAGlD,UAAI,SAAS,KAAKA,SAAQ,GAAG;AAC3B,uBAAe,KAAK,WAAW,EAAE;iBACxB,SAAS,KAAKA,UAAS,GAAG;AAEnC,uBAAe,OAAOA,QAAO,CAAC;;;AAIlC,OAAG,QAAQ,WAAW,eAAe,KAAK,GAAG;;AAG/C,SAAO;AACT;AAxiCA,IAWM,QACA,QACA,gBAKA,YAMA,UAGA;AA3BN;;AAMA;AACA;AAGA,IAAAC;AACA,IAAM,SAAS,OAAO,UAAU;AAChC,IAAM,SAAS;AACf,IAAM,iBAAiB;AAKvB,IAAM,aAAsC;MAC1C,MAAM;MACN,MAAM;MACN,OAAO;;AAGT,IAAM,WACJ;AAEF,IAAM,SAAS;;;;;AC3Bf,IAAW,cA4BA;AA5BX,IAAAC,cAAA;AAAA;AACA,KAAC,SAAUC,eAAc;AACrB,MAAAA,cAAa,eAAe;AAC5B,MAAAA,cAAa,YAAY;AACzB,MAAAA,cAAa,mBAAmB;AAChC,MAAAA,cAAa,SAAS;AACtB,MAAAA,cAAa,eAAe;AAE5B,MAAAA,cAAa,cAAc;AAC3B,MAAAA,cAAa,WAAW;AACxB,MAAAA,cAAa,gBAAgB;AAC7B,MAAAA,cAAa,YAAY;AACzB,MAAAA,cAAa,aAAa;AAC1B,MAAAA,cAAa,sBAAsB;AAAA,IACvC,GAAG,iBAAiB,eAAe,CAAC,EAAE;AAetC,KAAC,SAAUC,kBAAiB;AACxB,MAAAA,iBAAgB,SAAS;AACzB,MAAAA,iBAAgB,aAAa;AAC7B,MAAAA,iBAAgB,SAAS;AACzB,MAAAA,iBAAgB,YAAY;AAC5B,MAAAA,iBAAgB,YAAY;AAC5B,MAAAA,iBAAgB,YAAY;AAC5B,MAAAA,iBAAgB,SAAS;AACzB,MAAAA,iBAAgB,WAAW;AAAA,IAC/B,GAAG,oBAAoB,kBAAkB,CAAC,EAAE;AAAA;AAAA;;;ACVrC,SAAS,YAAY,UAAU;AAClC,UAAQ,SAAS,MAAM;AAAA,IACnB,KAAK,aAAa;AAAA,IAClB,KAAK,aAAa;AAAA,IAClB,KAAK,aAAa;AAAA,IAClB,KAAK,aAAa;AAAA,IAClB,KAAK,aAAa;AAAA,IAClB,KAAK,aAAa;AACd,aAAO;AAAA,IACX;AACI,aAAO;AAAA,EACf;AACJ;AAGA,SAAS,UAAU,GAAG,SAAS,mBAAmB;AAC9C,QAAM,OAAO,SAAS,SAAS,EAAE,IAAI;AAErC,SAAO,SAAS,QAAQ,oBAClB,UACA,OAAO,IAED,OAAO,aAAa,OAAO,KAAO,IAElC,OAAO,aAAc,QAAQ,KAAM,OAAS,OAAO,OAAS,KAAM;AAClF;AACA,SAAS,YAAYC,MAAK;AACtB,SAAOA,KAAI,QAAQ,UAAU,SAAS;AAC1C;AACA,SAAS,QAAQ,GAAG;AAChB,SAAO,MAAM,MAAwB,MAAM;AAC/C;AACA,SAASC,cAAa,GAAG;AACrB,SAAQ,MAAM,MACV,MAAM,KACN,MAAM,MACN,MAAM,MACN,MAAM;AACd;AAUO,SAAS,MAAM,UAAU;AAC5B,QAAMC,cAAa,CAAC;AACpB,QAAM,WAAW,cAAcA,aAAY,GAAG,YAAY,CAAC;AAC3D,MAAI,WAAW,SAAS,QAAQ;AAC5B,UAAM,IAAI,MAAM,uBAAuB,SAAS,MAAM,QAAQ,GAAG;AAAA,EACrE;AACA,SAAOA;AACX;AACA,SAAS,cAAcA,aAAY,UAAU,eAAe;AACxD,MAAI,SAAS,CAAC;AACd,WAASC,SAAQ,QAAQ;AACrB,UAAM,QAAQ,SAAS,MAAM,gBAAgB,MAAM,EAAE,MAAM,MAAM;AACjE,QAAI,CAAC,OAAO;AACR,YAAM,IAAI,MAAM,wBAAwB,SAAS,MAAM,aAAa,GAAG;AAAA,IAC3E;AACA,UAAM,CAAC,IAAI,IAAI;AACf,qBAAiB,SAAS,KAAK;AAC/B,WAAO,YAAY,IAAI;AAAA,EAC3B;AACA,WAAS,gBAAgB,QAAQ;AAC7B,qBAAiB;AACjB,WAAO,gBAAgB,SAAS,UAC5BF,cAAa,SAAS,WAAW,aAAa,CAAC,GAAG;AAClD;AAAA,IACJ;AAAA,EACJ;AACA,WAAS,2BAA2B;AAChC,qBAAiB;AACjB,UAAM,QAAQ;AACd,QAAI,UAAU;AACd,WAAO,UAAU,KAAK,gBAAgB,SAAS,QAAQ,iBAAiB;AACpE,UAAI,SAAS,WAAW,aAAa,MACjC,MACA,CAAC,UAAU,aAAa,GAAG;AAC3B;AAAA,MACJ,WACS,SAAS,WAAW,aAAa,MACtC,MACA,CAAC,UAAU,aAAa,GAAG;AAC3B;AAAA,MACJ;AAAA,IACJ;AACA,QAAI,SAAS;AACT,YAAM,IAAI,MAAM,yBAAyB;AAAA,IAC7C;AACA,WAAO,YAAY,SAAS,MAAM,OAAO,gBAAgB,CAAC,CAAC;AAAA,EAC/D;AACA,WAAS,UAAU,KAAK;AACpB,QAAI,aAAa;AACjB,WAAO,SAAS,WAAW,EAAE,GAAG,MAAM;AAClC;AACJ,YAAQ,aAAa,OAAO;AAAA,EAChC;AACA,WAAS,qBAAqB;AAC1B,QAAI,OAAO,SAAS,KAAK,YAAY,OAAO,OAAO,SAAS,EAAE,GAAG;AAC7D,YAAM,IAAI,MAAM,uCAAuC;AAAA,IAC3D;AAAA,EACJ;AACA,WAAS,aAAaG,OAAM;AACxB,QAAI,OAAO,SAAS,KAChB,OAAO,OAAO,SAAS,GAAG,SAAS,aAAa,YAAY;AAC5D,aAAO,OAAO,SAAS,GAAG,OAAOA;AACjC;AAAA,IACJ;AACA,uBAAmB;AACnB,WAAO,KAAK,EAAE,MAAAA,MAAK,CAAC;AAAA,EACxB;AACA,WAAS,oBAAoB,MAAM,QAAQ;AACvC,WAAO,KAAK;AAAA,MACR,MAAM,aAAa;AAAA,MACnB;AAAA,MACA;AAAA,MACA,OAAOD,SAAQ,CAAC;AAAA,MAChB,WAAW;AAAA,MACX,YAAY;AAAA,IAChB,CAAC;AAAA,EACL;AAQA,WAAS,sBAAsB;AAC3B,QAAI,OAAO,UACP,OAAO,OAAO,SAAS,GAAG,SAAS,aAAa,YAAY;AAC5D,aAAO,IAAI;AAAA,IACf;AACA,QAAI,OAAO,WAAW,GAAG;AACrB,YAAM,IAAI,MAAM,oBAAoB;AAAA,IACxC;AACA,IAAAD,YAAW,KAAK,MAAM;AAAA,EAC1B;AACA,kBAAgB,CAAC;AACjB,MAAI,SAAS,WAAW,eAAe;AACnC,WAAO;AAAA,EACX;AACA;AAAM,WAAO,gBAAgB,SAAS,QAAQ;AAC1C,YAAM,YAAY,SAAS,WAAW,aAAa;AACnD,cAAQ,WAAW;AAAA,QAEf,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK,IAAyB;AAC1B,cAAI,OAAO,WAAW,KAClB,OAAO,GAAG,SAAS,aAAa,YAAY;AAC5C,+BAAmB;AACnB,mBAAO,KAAK,EAAE,MAAM,aAAa,WAAW,CAAC;AAAA,UACjD;AACA,0BAAgB,CAAC;AACjB;AAAA,QACJ;AAAA,QAEA,KAAK,IAAsB;AACvB,uBAAa,aAAa,KAAK;AAC/B,0BAAgB,CAAC;AACjB;AAAA,QACJ;AAAA,QACA,KAAK,IAAmB;AACpB,uBAAa,aAAa,MAAM;AAChC,0BAAgB,CAAC;AACjB;AAAA,QACJ;AAAA,QACA,KAAK,KAAiB;AAClB,uBAAa,aAAa,OAAO;AACjC,0BAAgB,CAAC;AACjB;AAAA,QACJ;AAAA,QACA,KAAK,IAAe;AAChB,uBAAa,aAAa,QAAQ;AAClC,0BAAgB,CAAC;AACjB;AAAA,QACJ;AAAA,QAEA,KAAK,IAAiB;AAClB,8BAAoB,SAAS,gBAAgB,OAAO;AACpD;AAAA,QACJ;AAAA,QACA,KAAK,IAAe;AAChB,8BAAoB,MAAM,gBAAgB,MAAM;AAChD;AAAA,QACJ;AAAA,QACA,KAAK,IAA4B;AAC7B,0BAAgB,CAAC;AAEjB,cAAI;AACJ,cAAI,YAAY;AAChB,cAAI,SAAS,WAAW,aAAa,MAAM,KAAgB;AAEvD,mBAAOC,SAAQ,CAAC;AAAA,UACpB,WACS,SAAS,WAAW,MAAM,aAAa,GAAG;AAC/C,wBAAY;AACZ,mBAAOA,SAAQ,CAAC;AAAA,UACpB,OACK;AACD,mBAAOA,SAAQ,CAAC;AAChB,gBAAI,SAAS,WAAW,aAAa,MAAM,OACvC,SAAS,WAAW,gBAAgB,CAAC,MACjC,IAAgB;AACpB,0BAAY;AACZ,qBAAOA,SAAQ,CAAC;AAAA,YACpB;AAAA,UACJ;AACA,0BAAgB,CAAC;AAEjB,cAAI,SAAS,gBAAgB;AAC7B,gBAAM,iBAAiB,YAAY,IAAI,SAAS,WAAW,aAAa,CAAC;AACzE,cAAI,gBAAgB;AAChB,qBAAS;AACT,gBAAI,SAAS,WAAW,gBAAgB,CAAC,MACrC,IAAgB;AAChB,oBAAM,IAAI,MAAM,cAAc;AAAA,YAClC;AACA,4BAAgB,CAAC;AAAA,UACrB,WACS,SAAS,WAAW,aAAa,MAAM,IAAgB;AAC5D,qBAAS,gBAAgB;AACzB,4BAAgB,CAAC;AAAA,UACrB;AAEA,cAAI,QAAQ;AACZ,cAAI,aAAa;AACjB,cAAI,WAAW,UAAU;AACrB,gBAAI,QAAQ,SAAS,WAAW,aAAa,CAAC,GAAG;AAC7C,oBAAM,QAAQ,SAAS,WAAW,aAAa;AAC/C,kBAAI,aAAa,gBAAgB;AACjC,qBAAO,aAAa,SAAS,WACxB,SAAS,WAAW,UAAU,MAAM,SACjC,UAAU,UAAU,IAAI;AAC5B,8BAAc;AAAA,cAClB;AACA,kBAAI,SAAS,WAAW,UAAU,MAAM,OAAO;AAC3C,sBAAM,IAAI,MAAM,4BAA4B;AAAA,cAChD;AACA,sBAAQ,YAAY,SAAS,MAAM,gBAAgB,GAAG,UAAU,CAAC;AACjE,8BAAgB,aAAa;AAAA,YACjC,OACK;AACD,oBAAM,aAAa;AACnB,qBAAO,gBAAgB,SAAS,WAC1B,CAACF,cAAa,SAAS,WAAW,aAAa,CAAC,KAC9C,SAAS,WAAW,aAAa,MAC7B,MACJ,UAAU,aAAa,IAAI;AAC/B,iCAAiB;AAAA,cACrB;AACA,sBAAQ,YAAY,SAAS,MAAM,YAAY,aAAa,CAAC;AAAA,YACjE;AACA,4BAAgB,CAAC;AAEjB,kBAAM,cAAc,SAAS,WAAW,aAAa,IAAI;AAEzD,gBAAI,gBAAgB,KAAkB;AAClC,2BAAa;AACb,8BAAgB,CAAC;AAAA,YACrB,WACS,gBAAgB,KAAkB;AACvC,2BAAa;AACb,8BAAgB,CAAC;AAAA,YACrB;AAAA,UACJ;AACA,cAAI,SAAS,WAAW,aAAa,MACjC,IAA6B;AAC7B,kBAAM,IAAI,MAAM,qCAAqC;AAAA,UACzD;AACA,2BAAiB;AACjB,gBAAM,oBAAoB;AAAA,YACtB,MAAM,aAAa;AAAA,YACnB;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,YACA;AAAA,UACJ;AACA,iBAAO,KAAK,iBAAiB;AAC7B;AAAA,QACJ;AAAA,QACA,KAAK,IAAgB;AACjB,cAAI,SAAS,WAAW,gBAAgB,CAAC,MAAM,IAAgB;AAC3D,mBAAO,KAAK;AAAA,cACR,MAAM,aAAa;AAAA,cACnB,MAAME,SAAQ,CAAC,EAAE,YAAY;AAAA,cAC7B,MAAM,SAAS,WAAW,aAAa,MACnC,KACE,yBAAyB,IACzB;AAAA,YACV,CAAC;AACD;AAAA,UACJ;AACA,gBAAM,OAAOA,SAAQ,CAAC,EAAE,YAAY;AACpC,cAAIE,QAAO;AACX,cAAI,SAAS,WAAW,aAAa,MACjC,IAA0B;AAC1B,gBAAI,cAAc,IAAI,IAAI,GAAG;AACzB,kBAAI,QAAQ,SAAS,WAAW,gBAAgB,CAAC,CAAC,GAAG;AACjD,sBAAM,IAAI,MAAM,mBAAmB,uBAAuB;AAAA,cAC9D;AACA,cAAAA,QAAO,CAAC;AACR,8BAAgB,cAAcA,OAAM,UAAU,gBAAgB,CAAC;AAC/D,kBAAI,SAAS,WAAW,aAAa,MACjC,IAA2B;AAC3B,sBAAM,IAAI,MAAM,mCAAmC,SAAS,WAAW;AAAA,cAC3E;AACA,+BAAiB;AAAA,YACrB,OACK;AACD,cAAAA,QAAO,yBAAyB;AAChC,kBAAI,uBAAuB,IAAI,IAAI,GAAG;AAClC,sBAAM,OAAOA,MAAK,WAAW,CAAC;AAC9B,oBAAI,SAASA,MAAK,WAAWA,MAAK,SAAS,CAAC,KACxC,QAAQ,IAAI,GAAG;AACf,kBAAAA,QAAOA,MAAK,MAAM,GAAG,EAAE;AAAA,gBAC3B;AAAA,cACJ;AACA,cAAAA,QAAO,YAAYA,KAAI;AAAA,YAC3B;AAAA,UACJ;AACA,iBAAO,KAAK,EAAE,MAAM,aAAa,QAAQ,MAAM,MAAAA,MAAK,CAAC;AACrD;AAAA,QACJ;AAAA,QACA,KAAK,IAAgB;AACjB,8BAAoB;AACpB,mBAAS,CAAC;AACV,0BAAgB,CAAC;AACjB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,cAAI,SAAS,WAAW,MAAM,aAAa,GAAG;AAC1C,kBAAM,WAAW,SAAS,QAAQ,MAAM,gBAAgB,CAAC;AACzD,gBAAI,WAAW,GAAG;AACd,oBAAM,IAAI,MAAM,4BAA4B;AAAA,YAChD;AACA,4BAAgB,WAAW;AAE3B,gBAAI,OAAO,WAAW,GAAG;AACrB,8BAAgB,CAAC;AAAA,YACrB;AACA;AAAA,UACJ;AACA,cAAI,YAAY;AAChB,cAAI;AACJ,cAAI,cAAc,IAAmB;AACjC,6BAAiB;AACjB,mBAAO;AAAA,UACX,WACS,cAAc,KAAgB;AACnC,mBAAO;AACP,gBAAI,SAAS,WAAW,gBAAgB,CAAC,MAAM,KAAgB;AAC3D,2BAAa,aAAa,gBAAgB;AAC1C,8BAAgB,CAAC;AACjB;AAAA,YACJ;AAAA,UACJ,WACS,OAAO,KAAK,SAAS,MAAM,aAAa,CAAC,GAAG;AACjD,mBAAOF,SAAQ,CAAC;AAAA,UACpB,OACK;AACD,kBAAM;AAAA,UACV;AACA,cAAI,SAAS,WAAW,aAAa,MAAM,OACvC,SAAS,WAAW,gBAAgB,CAAC,MAAM,KAAgB;AAC3D,wBAAY;AACZ,gBAAI,SAAS,WAAW,gBAAgB,CAAC,MACrC,IAAmB;AACnB,qBAAO;AACP,+BAAiB;AAAA,YACrB,OACK;AACD,qBAAOA,SAAQ,CAAC;AAAA,YACpB;AAAA,UACJ;AACA,iBAAO,KAAK,SAAS,MACf,EAAE,MAAM,aAAa,WAAW,UAAU,IAC1C,EAAE,MAAM,aAAa,KAAK,MAAM,UAAU,CAAC;AAAA,QACrD;AAAA,MACJ;AAAA,IACJ;AACA,sBAAoB;AACpB,SAAO;AACX;AAnaA,IACM,QACA,UACA,aASA,eA6BA;AAzCN;AAAA;AAAA,IAAAG;AACA,IAAM,SAAS;AACf,IAAM,WAAW;AACjB,IAAM,cAAc,oBAAI,IAAI;AAAA,MACxB,CAAC,KAAiB,gBAAgB,OAAO;AAAA,MACzC,CAAC,IAAqB,gBAAgB,KAAK;AAAA,MAC3C,CAAC,IAAiB,gBAAgB,GAAG;AAAA,MACrC,CAAC,IAAmB,gBAAgB,GAAG;AAAA,MACvC,CAAC,IAA0B,gBAAgB,GAAG;AAAA,MAC9C,CAAC,KAAgB,gBAAgB,MAAM;AAAA,IAC3C,CAAC;AAED,IAAM,gBAAgB,oBAAI,IAAI;AAAA,MAC1B;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ,CAAC;AAqBD,IAAM,yBAAyB,oBAAI,IAAI,CAAC,YAAY,WAAW,CAAC;AAAA;AAAA;;;ACzChE;AAAA;AAAA,IAAAC;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA,WAAO,UAAU;AAAA,MAChB,UAAU,SAASC,YAAU;AAC5B,eAAO;AAAA,MACR;AAAA,MACA,WAAW,SAAS,YAAW;AAC9B,eAAO;AAAA,MACR;AAAA,IACD;AAAA;AAAA;;;ACGM,SAAUC,aAAY,OAAuB;AAC/C,SAAO,CAAC,UAAU,IAAI,MAAM,IAAI;AACpC;AAkBc,SAAP,gBAAiC,KAAuB;AAC3D,QAAM,QAAQ,IAAI,IAAI,YAAY;AAClC,WAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACjC,UAAM,UAAU,MAAM;AAEtB,QAAI,UAAU;AAAG;AAEjB,aAAS,IAAI,IAAI,GAAG,KAAK,KAAK,UAAU,MAAM,IAAI,KAAK;AACnD,YAAM,QAAQ,IAAI,IAAI;AACtB,UAAI,IAAI,KAAK,IAAI;AACjB,UAAI,KAAK;AACT,YAAM,IAAI,KAAK,MAAM;AACrB,YAAM,KAAK;;;AAGvB;AAEA,SAAS,aAAa,OAAuB;;AACzC,MAAI,QAAOC,MAAA,UAAU,IAAI,MAAM,IAAI,OAAC,QAAAA,QAAA,SAAAA,MAAI;AAExC,MAAI,MAAM,SAAS,aAAa,WAAW;AACvC,YAAO,KAAA,WAAW,IAAI,MAAM,MAAM,OAAC,QAAA,OAAA,SAAA,KAAI;AAEvC,QAAI,MAAM,WAAW,gBAAgB,UAAU,MAAM,SAAS,MAAM;AAEhE,aAAO;;AAGX,QAAI,MAAM,YAAY;AAKlB,eAAS;;aAEN,MAAM,SAAS,aAAa,QAAQ;AAC3C,QAAI,CAAC,MAAM,MAAM;AACb,aAAO;eACA,MAAM,SAAS,SAAS,MAAM,SAAS,YAAY;AAC1D,aAAO;eACA,MAAM,QAAQ,MAAM,IAAI,GAAG;AAElC,aAAO,KAAK,IACR,GAAG,MAAM,KAAK,IAAI,CAAC,MAAM,KAAK,IAAI,GAAG,EAAE,IAAI,YAAY,CAAC,CAAC,CAAC;AAI9D,UAAI,OAAO,GAAG;AACV,eAAO;;WAER;AACH,aAAO;;;AAGf,SAAO;AACX;AApFA,IAEM,WAWA;AAbN;;;AAEA,IAAM,YAAY,oBAAI,IAAsC;MACxD,CAAC,aAAa,WAAW,EAAE;MAC3B,CAAC,aAAa,KAAK,EAAE;MACrB,CAAC,aAAa,WAAW,CAAC;MAC1B,CAAC,aAAa,QAAQ,CAAC;KAC1B;AAMD,IAAM,aAAa,oBAAI,IAA6B;MAChD,CAAC,gBAAgB,QAAQ,EAAE;MAC3B,CAAC,gBAAgB,QAAQ,CAAC;MAC1B,CAAC,gBAAgB,KAAK,CAAC;MACvB,CAAC,gBAAgB,OAAO,CAAC;MACzB,CAAC,gBAAgB,KAAK,CAAC;MACvB,CAAC,gBAAgB,KAAK,CAAC;KAC1B;;;;;ACVD,SAASC,aAAY,OAAa;AAC9B,SAAO,MAAM,QAAQ,SAAS,MAAM;AACxC;AAyDA,SAAS,iBACL,UACA,SAA2C;AAE3C,SAAO,OAAO,SAAS,eAAe,YAChC,SAAS,aACT,SAAS,eAAe,WACxB,CAAC,CAAC,QAAQ,aACV,CAAC,QAAQ,WAAW,0BAA0B,IAAI,SAAS,IAAI;AACzE;AA/EA,qBAUM,SAWA,2BA+DO;AApFb,IAAAC,mBAAA;;sBAAqB;AAUrB,IAAM,UAAU;AAWhB,IAAM,4BAA4B,oBAAI,IAAI;MACtC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;KACH;AAgBM,IAAM,iBAOT;MACA,OAAOC,OAAMC,OAAM,SAAO;AACtB,cAAM,EAAE,SAAAC,SAAO,IAAK;AACpB,cAAM,EAAE,KAAI,IAAKD;AACjB,YAAI,EAAE,MAAK,IAAKA;AAEhB,YAAI,iBAAiBA,OAAM,OAAO,GAAG;AACjC,kBAAQ,MAAM,YAAW;AAEzB,iBAAO,CAAC,SAAQ;AACZ,kBAAME,QAAOD,SAAQ,kBAAkB,MAAM,IAAI;AACjD,mBACIC,SAAQ,QACRA,MAAK,WAAW,MAAM,UACtBA,MAAK,YAAW,MAAO,SACvBH,MAAK,IAAI;UAEjB;;AAGJ,eAAO,CAAC,SACJE,SAAQ,kBAAkB,MAAM,IAAI,MAAM,SAASF,MAAK,IAAI;MACpE;MACA,OAAOA,OAAMC,OAAM,SAAO;AACtB,cAAM,EAAE,SAAAC,SAAO,IAAK;AACpB,cAAM,EAAE,KAAI,IAAKD;AACjB,YAAI,EAAE,MAAK,IAAKA;AAChB,cAAM,MAAM,MAAM;AAElB,YAAI,iBAAiBA,OAAM,OAAO,GAAG;AACjC,kBAAQ,MAAM,YAAW;AAEzB,iBAAO,SAAS,SAAS,MAAI;AACzB,kBAAME,QAAOD,SAAQ,kBAAkB,MAAM,IAAI;AACjD,mBACIC,SAAQ,SACPA,MAAK,WAAW,OAAOA,MAAK,OAAO,GAAG,MAAM,QAC7CA,MAAK,OAAO,GAAG,GAAG,EAAE,YAAW,MAAO,SACtCH,MAAK,IAAI;UAEjB;;AAGJ,eAAO,SAAS,OAAO,MAAI;AACvB,gBAAMG,QAAOD,SAAQ,kBAAkB,MAAM,IAAI;AACjD,iBACIC,SAAQ,SACPA,MAAK,WAAW,OAAOA,MAAK,OAAO,GAAG,MAAM,QAC7CA,MAAK,OAAO,GAAG,GAAG,MAAM,SACxBH,MAAK,IAAI;QAEjB;MACJ;MACA,QAAQA,OAAMC,OAAM,SAAO;AACvB,cAAM,EAAE,SAAAC,SAAO,IAAK;AACpB,cAAM,EAAE,MAAM,MAAK,IAAKD;AACxB,YAAI,KAAK,KAAK,KAAK,GAAG;AAClB,iBAAO,gBAAAG,QAAS;;AAGpB,cAAMC,SAAQ,IAAI,OACd,YAAYP,aAAY,KAAK,cAC7B,iBAAiBG,OAAM,OAAO,IAAI,MAAM,EAAE;AAG9C,eAAO,SAAS,QAAQ,MAAI;AACxB,gBAAME,QAAOD,SAAQ,kBAAkB,MAAM,IAAI;AACjD,iBACIC,SAAQ,QACRA,MAAK,UAAU,MAAM,UACrBE,OAAM,KAAKF,KAAI,KACfH,MAAK,IAAI;QAEjB;MACJ;MACA,OAAOA,OAAM,EAAE,KAAI,GAAI,EAAE,SAAAE,SAAO,GAAE;AAC9B,eAAO,CAAC,SAASA,SAAQ,UAAU,MAAM,IAAI,KAAKF,MAAK,IAAI;MAC/D;MACA,MAAMA,OAAMC,OAAM,SAAO;AACrB,cAAM,EAAE,SAAAC,SAAO,IAAK;AACpB,cAAM,EAAE,KAAI,IAAKD;AACjB,YAAI,EAAE,MAAK,IAAKA;AAChB,cAAM,MAAM,MAAM;AAElB,YAAI,QAAQ,GAAG;AACX,iBAAO,gBAAAG,QAAS;;AAGpB,YAAI,iBAAiBH,OAAM,OAAO,GAAG;AACjC,kBAAQ,MAAM,YAAW;AAEzB,iBAAO,CAAC,SAAQ;AACZ,kBAAME,QAAOD,SAAQ,kBAAkB,MAAM,IAAI;AACjD,mBACIC,SAAQ,QACRA,MAAK,UAAU,OACfA,MAAK,OAAO,GAAG,GAAG,EAAE,YAAW,MAAO,SACtCH,MAAK,IAAI;UAEjB;;AAGJ,eAAO,CAAC,SAAQ;;AACZ,iBAAA,CAAC,GAACM,MAAAJ,SAAQ,kBAAkB,MAAM,IAAI,OAAC,QAAAI,QAAA,SAAA,SAAAA,IAAE,WAAW,KAAK,MACzDN,MAAK,IAAI;;MACjB;MACA,IAAIA,OAAMC,OAAM,SAAO;AACnB,cAAM,EAAE,SAAAC,SAAO,IAAK;AACpB,cAAM,EAAE,KAAI,IAAKD;AACjB,YAAI,EAAE,MAAK,IAAKA;AAChB,cAAM,MAAM,CAAC,MAAM;AAEnB,YAAI,QAAQ,GAAG;AACX,iBAAO,gBAAAG,QAAS;;AAGpB,YAAI,iBAAiBH,OAAM,OAAO,GAAG;AACjC,kBAAQ,MAAM,YAAW;AAEzB,iBAAO,CAAC,SAAQ;;AACZ,qBAAAK,MAAAJ,SACK,kBAAkB,MAAM,IAAI,OAAC,QAAAI,QAAA,SAAA,SAAAA,IAC5B,OAAO,GAAG,EACX,YAAW,OAAO,SAASN,MAAK,IAAI;;;AAGjD,eAAO,CAAC,SAAQ;;AACZ,iBAAA,CAAC,GAACM,MAAAJ,SAAQ,kBAAkB,MAAM,IAAI,OAAC,QAAAI,QAAA,SAAA,SAAAA,IAAE,SAAS,KAAK,MACvDN,MAAK,IAAI;;MACjB;MACA,IAAIA,OAAMC,OAAM,SAAO;AACnB,cAAM,EAAE,SAAAC,SAAO,IAAK;AACpB,cAAM,EAAE,MAAM,MAAK,IAAKD;AAExB,YAAI,UAAU,IAAI;AACd,iBAAO,gBAAAG,QAAS;;AAGpB,YAAI,iBAAiBH,OAAM,OAAO,GAAG;AACjC,gBAAMI,SAAQ,IAAI,OAAOP,aAAY,KAAK,GAAG,GAAG;AAEhD,iBAAO,SAAS,MAAM,MAAI;AACtB,kBAAMK,QAAOD,SAAQ,kBAAkB,MAAM,IAAI;AACjD,mBACIC,SAAQ,QACRA,MAAK,UAAU,MAAM,UACrBE,OAAM,KAAKF,KAAI,KACfH,MAAK,IAAI;UAEjB;;AAGJ,eAAO,CAAC,SAAQ;;AACZ,iBAAA,CAAC,GAACM,MAAAJ,SAAQ,kBAAkB,MAAM,IAAI,OAAC,QAAAI,QAAA,SAAA,SAAAA,IAAE,SAAS,KAAK,MACvDN,MAAK,IAAI;;MACjB;MACA,IAAIA,OAAMC,OAAM,SAAO;AACnB,cAAM,EAAE,SAAAC,SAAO,IAAK;AACpB,cAAM,EAAE,KAAI,IAAKD;AACjB,YAAI,EAAE,MAAK,IAAKA;AAEhB,YAAI,UAAU,IAAI;AACd,iBAAO,CAAC,SACJ,CAAC,CAACC,SAAQ,kBAAkB,MAAM,IAAI,KAAKF,MAAK,IAAI;mBACjD,iBAAiBC,OAAM,OAAO,GAAG;AACxC,kBAAQ,MAAM,YAAW;AAEzB,iBAAO,CAAC,SAAQ;AACZ,kBAAME,QAAOD,SAAQ,kBAAkB,MAAM,IAAI;AACjD,oBACKC,SAAQ,QACLA,MAAK,WAAW,MAAM,UACtBA,MAAK,YAAW,MAAO,UAC3BH,MAAK,IAAI;UAEjB;;AAGJ,eAAO,CAAC,SACJE,SAAQ,kBAAkB,MAAM,IAAI,MAAM,SAASF,MAAK,IAAI;MACpE;;;;;;ACjQE,SAAUO,OAAM,SAAe;AACjC,YAAU,QAAQ,KAAI,EAAG,YAAW;AAEpC,MAAI,YAAY,QAAQ;AACpB,WAAO,CAAC,GAAG,CAAC;aACL,YAAY,OAAO;AAC1B,WAAO,CAAC,GAAG,CAAC;;AAKhB,MAAI,MAAM;AAEV,MAAI,IAAI;AACR,MAAI,OAAO,SAAQ;AACnB,MAAI,SAAS,WAAU;AAEvB,MAAI,MAAM,QAAQ,UAAU,QAAQ,OAAO,GAAG,MAAM,KAAK;AACrD;AACA,QAAI,QAAQ,WAAM,QAAN,WAAM,SAAN,SAAU;AAEtB,mBAAc;AAEd,QAAI,MAAM,QAAQ,QAAQ;AACtB,aAAO,SAAQ;AACf,qBAAc;AACd,eAAS,WAAU;WAChB;AACH,aAAO,SAAS;;;AAKxB,MAAI,WAAW,QAAQ,MAAM,QAAQ,QAAQ;AACzC,UAAM,IAAI,MAAM,kCAAkC,WAAW;;AAGjE,SAAO,CAAC,GAAG,OAAO,MAAM;AAExB,WAAS,WAAQ;AACb,QAAI,QAAQ,OAAO,GAAG,MAAM,KAAK;AAC7B;AACA,aAAO;;AAGX,QAAI,QAAQ,OAAO,GAAG,MAAM,KAAK;AAC7B;;AAGJ,WAAO;EACX;AAEA,WAAS,aAAU;AACf,UAAM,QAAQ;AACd,QAAI,QAAQ;AAEZ,WACI,MAAM,QAAQ,UACd,QAAQ,WAAW,GAAG,KAAK,QAC3B,QAAQ,WAAW,GAAG,KAAK,MAC7B;AACE,cAAQ,QAAQ,MAAM,QAAQ,WAAW,GAAG,IAAI;AAChD;;AAIJ,WAAO,QAAQ,QAAQ,OAAO;EAClC;AAEA,WAAS,iBAAc;AACnB,WACI,MAAM,QAAQ,UACd,WAAW,IAAI,QAAQ,WAAW,GAAG,CAAC,GACxC;AACE;;EAER;AACJ;AA3FA,IAGM,YACA,MACA;AALN,IAAAC,cAAA;;AAGA,IAAM,aAAa,oBAAI,IAAI,CAAC,GAAG,IAAI,IAAI,IAAI,EAAE,CAAC;AAC9C,IAAM,OAAO,IAAI,WAAW,CAAC;AAC7B,IAAM,OAAO,IAAI,WAAW,CAAC;;;;;ACiBvB,SAAU,QACZ,QAA8B;AAE9B,QAAM,IAAI,OAAO;AAEjB,QAAM,IAAI,OAAO,KAAK;AAStB,MAAI,IAAI,KAAK,KAAK;AAAG,WAAO,iBAAAC,QAAS;AAGrC,MAAI,MAAM;AAAI,WAAO,CAACC,WAAUA,UAAS;AACzC,MAAI,MAAM;AAAG,WAAO,CAACA,WAAUA,WAAU;AAEzC,MAAI,MAAM;AAAG,WAAO,IAAI,IAAI,iBAAAD,QAAS,WAAW,CAACC,WAAUA,UAAS;AAOpE,QAAM,OAAO,KAAK,IAAI,CAAC;AAEvB,QAAM,QAAS,IAAI,OAAQ,QAAQ;AAEnC,SAAO,IAAI,IACL,CAACA,WAAUA,UAAS,KAAKA,SAAQ,SAAS,OAC1C,CAACA,WAAUA,UAAS,KAAKA,SAAQ,SAAS;AACpD;AAxDA,IAAAC;AAAA;;IAAAA,mBAAqB;;;;;AC4BP,SAAP,SAA0B,SAAe;AAC5C,SAAO,QAAQC,OAAM,OAAO,CAAC;AACjC;AA9BA,IAAAC,YAAA;;IAAAC;AACA;;;;;ACUA,SAAS,aACLC,OACAC,UAAmC;AAEnC,SAAO,CAAC,SAAQ;AACZ,UAAMC,UAASD,SAAQ,UAAU,IAAI;AACrC,WAAOC,WAAU,QAAQD,SAAQ,MAAMC,OAAM,KAAKF,MAAK,IAAI;EAC/D;AACJ;AAqJA,SAAS,mBACL,MAA4C;AAE5C,SAAO,SAAS,cAAcA,OAAM,OAAO,EAAE,SAAAC,SAAO,GAAE;AAClD,UAAM,OAAOA,SAAQ;AAErB,QAAI,OAAO,SAAS,YAAY;AAC5B,aAAO,iBAAAE,QAAS;;AAGpB,WAAO,SAAS,OAAO,MAAI;AACvB,aAAO,KAAK,IAAI,KAAKH,MAAK,IAAI;IAClC;EACJ;AACJ;AAtLA,IACAI,kBAoBa;AArBb;;IAAAC;AACA,IAAAD,mBAAqB;AAoBd,IAAM,UAAkC;MAC3C,SAASJ,OAAMM,OAAM,EAAE,SAAAL,SAAO,GAAE;AAC5B,eAAO,SAASM,UAAS,MAAI;AACzB,iBAAOP,MAAK,IAAI,KAAKC,SAAQ,QAAQ,IAAI,EAAE,SAASK,KAAI;QAC5D;MACJ;MACA,UAAUN,OAAMM,OAAM,EAAE,SAAAL,SAAO,GAAE;AAC7B,cAAM,QAAQK,MAAK,YAAW;AAE9B,eAAO,SAAS,UAAU,MAAI;AAC1B,iBACIN,MAAK,IAAI,KACTC,SAAQ,QAAQ,IAAI,EAAE,YAAW,EAAG,SAAS,KAAK;QAE1D;MACJ;MAGA,YAAYD,OAAM,MAAM,EAAE,SAAAC,UAAS,OAAM,GAAE;AACvC,cAAM,OAAO,SAAU,IAAI;AAE3B,YAAI,SAAS,iBAAAE,QAAS;AAAW,iBAAO,iBAAAA,QAAS;AACjD,YAAI,SAAS,iBAAAA,QAAS;AAAU,iBAAO,aAAaH,OAAMC,QAAO;AAEjE,eAAO,SAAS,SAAS,MAAI;AACzB,gBAAMO,YAAWP,SAAQ,YAAY,IAAI;AACzC,cAAI,MAAM;AAEV,mBAAS,IAAI,GAAG,IAAIO,UAAS,QAAQ,KAAK;AACtC,gBAAI,OAAO,MAAMA,UAAS,EAAE;AAAG;AAC/B,gBAAIP,SAAQ,MAAMO,UAAS,EAAE,GAAG;AAC5B;;;AAIR,iBAAO,KAAK,GAAG,KAAKR,MAAK,IAAI;QACjC;MACJ;MACA,iBAAiBA,OAAM,MAAM,EAAE,SAAAC,UAAS,OAAM,GAAE;AAC5C,cAAM,OAAO,SAAU,IAAI;AAE3B,YAAI,SAAS,iBAAAE,QAAS;AAAW,iBAAO,iBAAAA,QAAS;AACjD,YAAI,SAAS,iBAAAA,QAAS;AAAU,iBAAO,aAAaH,OAAMC,QAAO;AAEjE,eAAO,SAAS,aAAa,MAAI;AAC7B,gBAAMO,YAAWP,SAAQ,YAAY,IAAI;AACzC,cAAI,MAAM;AAEV,mBAAS,IAAIO,UAAS,SAAS,GAAG,KAAK,GAAG,KAAK;AAC3C,gBAAI,OAAO,MAAMA,UAAS,EAAE;AAAG;AAC/B,gBAAIP,SAAQ,MAAMO,UAAS,EAAE,GAAG;AAC5B;;;AAIR,iBAAO,KAAK,GAAG,KAAKR,MAAK,IAAI;QACjC;MACJ;MACA,cAAcA,OAAM,MAAM,EAAE,SAAAC,UAAS,OAAM,GAAE;AACzC,cAAM,OAAO,SAAU,IAAI;AAE3B,YAAI,SAAS,iBAAAE,QAAS;AAAW,iBAAO,iBAAAA,QAAS;AACjD,YAAI,SAAS,iBAAAA,QAAS;AAAU,iBAAO,aAAaH,OAAMC,QAAO;AAEjE,eAAO,SAAS,UAAU,MAAI;AAC1B,gBAAMO,YAAWP,SAAQ,YAAY,IAAI;AACzC,cAAI,MAAM;AAEV,mBAAS,IAAI,GAAG,IAAIO,UAAS,QAAQ,KAAK;AACtC,kBAAM,iBAAiBA,UAAS;AAChC,gBAAI,OAAO,MAAM,cAAc;AAAG;AAClC,gBACIP,SAAQ,MAAM,cAAc,KAC5BA,SAAQ,QAAQ,cAAc,MAAMA,SAAQ,QAAQ,IAAI,GAC1D;AACE;;;AAIR,iBAAO,KAAK,GAAG,KAAKD,MAAK,IAAI;QACjC;MACJ;MACA,mBAAmBA,OAAM,MAAM,EAAE,SAAAC,UAAS,OAAM,GAAE;AAC9C,cAAM,OAAO,SAAU,IAAI;AAE3B,YAAI,SAAS,iBAAAE,QAAS;AAAW,iBAAO,iBAAAA,QAAS;AACjD,YAAI,SAAS,iBAAAA,QAAS;AAAU,iBAAO,aAAaH,OAAMC,QAAO;AAEjE,eAAO,SAAS,cAAc,MAAI;AAC9B,gBAAMO,YAAWP,SAAQ,YAAY,IAAI;AACzC,cAAI,MAAM;AAEV,mBAAS,IAAIO,UAAS,SAAS,GAAG,KAAK,GAAG,KAAK;AAC3C,kBAAM,iBAAiBA,UAAS;AAChC,gBAAI,OAAO,MAAM,cAAc;AAAG;AAClC,gBACIP,SAAQ,MAAM,cAAc,KAC5BA,SAAQ,QAAQ,cAAc,MAAMA,SAAQ,QAAQ,IAAI,GAC1D;AACE;;;AAIR,iBAAO,KAAK,GAAG,KAAKD,MAAK,IAAI;QACjC;MACJ;MAGA,KAAKA,OAAM,OAAO,EAAE,SAAAC,SAAO,GAAE;AACzB,eAAO,CAAC,SAAQ;AACZ,gBAAMC,UAASD,SAAQ,UAAU,IAAI;AACrC,kBAAQC,WAAU,QAAQ,CAACD,SAAQ,MAAMC,OAAM,MAAMF,MAAK,IAAI;QAClE;MACJ;MAEA,MACIA,OACA,MACA,SACA,SAAgB;AAEhB,cAAM,EAAE,OAAM,IAAK;AAEnB,YAAI,CAAC,WAAW,QAAQ,WAAW,GAAG;AAElC,iBAAO,QAAQ,QAAQA,OAAM,MAAM,OAAO;;AAG9C,YAAI,QAAQ,WAAW,GAAG;AAEtB,iBAAO,CAAC,SAAS,OAAO,QAAQ,IAAI,IAAI,KAAKA,MAAK,IAAI;;AAG1D,eAAO,CAAC,SAAS,QAAQ,SAAS,IAAI,KAAKA,MAAK,IAAI;MACxD;MAEA,OAAO,mBAAmB,WAAW;MACrC,SAAS,mBAAmB,WAAW;MACvC,QAAQ,mBAAmB,UAAU;;;;;;ACjEnC,SAAU,iBACZ,MACA,MACA,WACA,UAAgB;AAEhB,MAAI,cAAc,MAAM;AACpB,QAAI,KAAK,SAAS,UAAU;AACxB,YAAM,IAAI,MAAM,iBAAiB,2BAA2B;;aAEzD,KAAK,WAAW,UAAU;AACjC,UAAM,IAAI,MAAM,iBAAiB,iCAAiC;;AAE1E;AAlGA,IACa;AADb;;AACO,IAAM,UAAkC;MAC3C,MAAM,MAAM,EAAE,SAAAS,SAAO,GAAE;AACnB,eAAO,CAACA,SAAQ,YAAY,IAAI,EAAE,KAC9B,CAACC,UAEGD,SAAQ,MAAMC,KAAI,KAAKD,SAAQ,QAAQC,KAAI,MAAM,EAAE;MAE/D;MAEA,cAAc,MAAM,EAAE,SAAAD,UAAS,OAAM,GAAE;AACnC,YAAIA,SAAQ,oBAAoB;AAC5B,iBAAOA,SAAQ,mBAAmB,IAAI,KAAK;;AAG/C,cAAM,aAAaA,SACd,YAAY,IAAI,EAChB,KAAK,CAACC,UAASD,SAAQ,MAAMC,KAAI,CAAC;AACvC,eAAO,cAAc,QAAQ,OAAO,MAAM,UAAU;MACxD;MACA,aAAa,MAAM,EAAE,SAAAD,UAAS,OAAM,GAAE;AAClC,cAAME,YAAWF,SAAQ,YAAY,IAAI;AAEzC,iBAAS,IAAIE,UAAS,SAAS,GAAG,KAAK,GAAG,KAAK;AAC3C,cAAI,OAAO,MAAMA,UAAS,EAAE;AAAG,mBAAO;AACtC,cAAIF,SAAQ,MAAME,UAAS,EAAE;AAAG;;AAGpC,eAAO;MACX;MACA,gBAAgB,MAAM,EAAE,SAAAF,UAAS,OAAM,GAAE;AACrC,cAAME,YAAWF,SAAQ,YAAY,IAAI;AACzC,cAAM,WAAWA,SAAQ,QAAQ,IAAI;AAErC,iBAAS,IAAI,GAAG,IAAIE,UAAS,QAAQ,KAAK;AACtC,gBAAM,iBAAiBA,UAAS;AAChC,cAAI,OAAO,MAAM,cAAc;AAAG,mBAAO;AACzC,cACIF,SAAQ,MAAM,cAAc,KAC5BA,SAAQ,QAAQ,cAAc,MAAM,UACtC;AACE;;;AAIR,eAAO;MACX;MACA,eAAe,MAAM,EAAE,SAAAA,UAAS,OAAM,GAAE;AACpC,cAAME,YAAWF,SAAQ,YAAY,IAAI;AACzC,cAAM,WAAWA,SAAQ,QAAQ,IAAI;AAErC,iBAAS,IAAIE,UAAS,SAAS,GAAG,KAAK,GAAG,KAAK;AAC3C,gBAAM,iBAAiBA,UAAS;AAChC,cAAI,OAAO,MAAM,cAAc;AAAG,mBAAO;AACzC,cACIF,SAAQ,MAAM,cAAc,KAC5BA,SAAQ,QAAQ,cAAc,MAAM,UACtC;AACE;;;AAIR,eAAO;MACX;MACA,eAAe,MAAM,EAAE,SAAAA,UAAS,OAAM,GAAE;AACpC,cAAM,WAAWA,SAAQ,QAAQ,IAAI;AAErC,eAAOA,SACF,YAAY,IAAI,EAChB,MACG,CAAC,YACG,OAAO,MAAM,OAAO,KACpB,CAACA,SAAQ,MAAM,OAAO,KACtBA,SAAQ,QAAQ,OAAO,MAAM,QAAQ;MAErD;MACA,aAAa,MAAM,EAAE,SAAAA,UAAS,OAAM,GAAE;AAClC,eAAOA,SACF,YAAY,IAAI,EAChB,MACG,CAAC,YAAY,OAAO,MAAM,OAAO,KAAK,CAACA,SAAQ,MAAM,OAAO,CAAC;MAEzE;;;;;;AC3FJ,IAGa;AAHb;;AAGO,IAAM,UAAkC;MAG3C,YAAY;MACZ,MAAM;MAKN,UAAU;;;;;MAKV,SAAS;MACT,SACI;MACJ,UAAU;MACV,UAAU;MAKV,UACI;MAEJ,UAAU;MACV,MAAM;MACN,UAAU;MACV,OAAO;MACP,OAAO;MACP,OAAO;MACP,QAAQ;MAER,QAAQ;MACR,QAAQ;MAER,QAAQ;MACR,OAAO;MACP,MAAM;;;;;;AC7BJ,SAAU,YACZG,OACAC,UAAmC;AAEnC,MAAID,UAAS,iBAAAE,QAAS;AAAW,WAAO,iBAAAA,QAAS;AACjD,SAAO,CAAC,SAAeD,SAAQ,MAAM,IAAI,KAAKD,MAAK,IAAI;AAC3D;AAUM,SAAU,gBACZ,MACAC,UAAmC;AAEnC,QAAME,YAAWF,SAAQ,YAAY,IAAI;AACzC,MAAIE,UAAS,UAAU;AAAG,WAAO,CAAA;AACjC,QAAM,YAAYA,UAAS,QAAQ,IAAI;AACvC,MAAI,YAAY,KAAK,cAAcA,UAAS,SAAS;AAAG,WAAO,CAAA;AAC/D,SAAOA,UAAS,MAAM,YAAY,CAAC,EAAE,OAAOF,SAAQ,KAAK;AAC7D;AAEA,SAAS,YACL,SAA2C;AAG3C,SAAO;IACH,SAAS,CAAC,CAAC,QAAQ;IACnB,yBAAyB,CAAC,CAAC,QAAQ;IACnC,eAAe,CAAC,CAAC,QAAQ;IACzB,YAAY,CAAC,CAAC,QAAQ;IACtB,cAAc,CAAC,CAAC,QAAQ;IACxB,SAAS,QAAQ;IACjB,SAAS,QAAQ;IACjB,QAAQ,QAAQ;;AAExB;AArDA,IAAAG,kBAUa,qBA6CP,IAeO;AAtEb;;IAAAA,mBAAqB;AAOrB;AAGO,IAAM,sBAAsB,CAAA;AA6CnC,IAAM,KAAgB,CAACJ,OAAM,OAAO,SAAS,SAASK,kBAAgB;AAClE,YAAM,OAAOA,cAAa,OAAO,YAAY,OAAO,GAAG,OAAO;AAE9D,aAAO,SAAS,iBAAAH,QAAS,WACnBF,QACA,SAAS,iBAAAE,QAAS,YAClB,iBAAAA,QAAS,YACT,CAAC,SAAS,KAAK,IAAI,KAAKF,MAAK,IAAI;IAC3C;AAOO,IAAM,aAAwC;MACjD;MAIA,SAAS;MACT,OAAO;MACP,IAAIA,OAAM,OAAO,SAAS,SAASK,eAAY;AAC3C,cAAM,OAAOA,cAAa,OAAO,YAAY,OAAO,GAAG,OAAO;AAE9D,eAAO,SAAS,iBAAAH,QAAS,YACnBF,QACA,SAAS,iBAAAE,QAAS,WAClB,iBAAAA,QAAS,YACT,CAAC,SAAS,CAAC,KAAK,IAAI,KAAKF,MAAK,IAAI;MAC5C;MACA,IACIA,OACA,WACA,SACA,UACAK,eAA6C;AAE7C,cAAM,EAAE,SAAAJ,SAAO,IAAK;AAEpB,cAAM,OAAO,YAAY,OAAO;AAChC,aAAK,mBAAmB;AAExB,cAAM,UAAU,UAAU,KAAK,CAAC,MAAM,EAAE,KAAKK,YAAW,CAAC,IAElD,CAAC,mBAAmB,IACrB;AAEN,cAAM,WAAWD,cAAa,WAAW,MAAM,OAAO;AAEtD,YAAI,aAAa,iBAAAH,QAAS;AAAW,iBAAO,iBAAAA,QAAS;AAErD,cAAM,aAAa,YAAY,UAAUD,QAAO;AAGhD,YAAI,WAAW,aAAa,iBAAAC,QAAS,UAAU;AAK3C,gBAAM,EAAE,yBAAyB,MAAK,IAAK;AAE3C,iBAAO,CAAC,SAAQ;AACZ,gBAAI,CAACF,MAAK,IAAI;AAAG,qBAAO;AAExB,oBAAQ,KAAK;AACb,kBAAM,SAASC,SAAQ,YAAY,IAAI;AACvC,kBAAM,eAAe,yBACf,CAAC,GAAG,QAAQ,GAAG,gBAAgB,MAAMA,QAAO,CAAC,IAC7C;AAEN,mBAAOA,SAAQ,UAAU,YAAY,YAAY;UACrD;;AAGJ,eAAO,CAAC,SACJD,MAAK,IAAI,KACTC,SAAQ,UAAU,YAAYA,SAAQ,YAAY,IAAI,CAAC;MAC/D;;;;;;AC/GE,SAAU,sBACZM,OACA,UACA,SACA,SACAC,eAA6C;;AAE7C,QAAM,EAAE,MAAM,MAAAC,MAAI,IAAK;AAEvB,MAAI,MAAM,QAAQA,KAAI,GAAG;AACrB,QAAI,EAAE,QAAQ,aAAa;AACvB,YAAM,IAAI,MAAM,yBAAyB,QAAQA,QAAO;;AAG5D,WAAO,WAAW,MAAMF,OAAME,OAAM,SAAS,SAASD,aAAY;;AAGtE,QAAM,cAAaE,MAAA,QAAQ,aAAO,QAAAA,QAAA,SAAA,SAAAA,IAAG;AAErC,QAAM,eACF,OAAO,eAAe,WAAW,aAAa,QAAQ;AAE1D,MAAI,OAAO,iBAAiB,UAAU;AAClC,QAAID,SAAQ,MAAM;AACd,YAAM,IAAI,MAAM,UAAU,iCAAiC;;AAI/D,UAAM,QAAQ,MAAM,YAAY;AAChC,WAAO,WAAW,MAAMF,OAAM,OAAO,SAAS,SAASC,aAAY;;AAGvE,MAAI,OAAO,eAAe,YAAY;AAClC,qBAAiB,YAAY,MAAMC,OAAM,CAAC;AAE1C,WAAO,CAAC,SAAS,WAAW,MAAMA,KAAI,KAAKF,MAAK,IAAI;;AAGxD,MAAI,QAAQ,SAAS;AACjB,WAAO,QAAQ,MAAMA,OAAME,OAAgB,SAAS,OAAO;;AAG/D,MAAI,QAAQ,SAAS;AACjB,UAAM,SAAS,QAAQ;AACvB,qBAAiB,QAAQ,MAAMA,OAAM,CAAC;AAEtC,WAAO,CAAC,SAAS,OAAO,MAAM,SAASA,KAAI,KAAKF,MAAK,IAAI;;AAG7D,QAAM,IAAI,MAAM,yBAAyB,MAAM;AACnD;AA1DA;;;AACA;AACA;AACA;AACA;;;;;ACRA,SAAS,iBACL,MACAI,UAAmC;AAEnC,QAAMC,UAASD,SAAQ,UAAU,IAAI;AACrC,MAAIC,WAAUD,SAAQ,MAAMC,OAAM,GAAG;AACjC,WAAOA;;AAEX,SAAO;AACX;AAMM,SAAU,uBACZC,OACA,UACA,SACA,SACAC,eAA6C;AAE7C,QAAM,EAAE,SAAAH,UAAS,OAAM,IAAK;AAE5B,UAAQ,SAAS,MAAM;IACnB,KAAK,aAAa,eAAe;AAC7B,YAAM,IAAI,MAAM,iDAAiD;;IAErE,KAAK,aAAa,kBAAkB;AAChC,YAAM,IAAI,MACN,wDAAwD;;IAGhE,KAAK,aAAa,WAAW;AACzB,UAAI,SAAS,aAAa,MAAM;AAC5B,cAAM,IAAI,MACN,2DAA2D;;AAInE,UAAI,CAAC,QAAQ,WAAW,QAAQ,yBAAyB;AACrD,iBAAS,OAAO,SAAS,KAAK,YAAW;;AAE7C,aAAO,eAAe,SAAS,QAAQE,OAAM,UAAU,OAAO;;IAElE,KAAK,aAAa,QAAQ;AACtB,aAAO,sBACHA,OACA,UACA,SACA,SACAC,aAAY;;IAIpB,KAAK,aAAa,KAAK;AACnB,UAAI,SAAS,aAAa,MAAM;AAC5B,cAAM,IAAI,MACN,0DAA0D;;AAIlE,UAAI,EAAE,KAAI,IAAK;AAEf,UAAI,CAAC,QAAQ,WAAW,QAAQ,eAAe;AAC3C,eAAO,KAAK,YAAW;;AAG3B,aAAO,SAAS,IAAI,MAAiB;AACjC,eAAOH,SAAQ,QAAQ,IAAI,MAAM,QAAQE,MAAK,IAAI;MACtD;;IAIJ,KAAK,aAAa,YAAY;AAC1B,UACI,QAAQ,iBAAiB,SACzB,OAAO,YAAY,aACrB;AACE,eAAO,SAAS,WAAW,MAAiB;AACxC,cAAI,UAA8B;AAElC,iBAAQ,UAAU,iBAAiB,SAASF,QAAO,GAAI;AACnD,gBAAIE,MAAK,OAAO,GAAG;AACf,qBAAO;;;AAIf,iBAAO;QACX;;AAIJ,YAAM,eAAe,oBAAI,QAAO;AAChC,aAAO,SAAS,iBAAiB,MAAiB;AAC9C,YAAI,UAA8B;AAElC,eAAQ,UAAU,iBAAiB,SAASF,QAAO,GAAI;AACnD,cAAI,CAAC,aAAa,IAAI,OAAO,GAAG;AAC5B,gBAAIA,SAAQ,MAAM,OAAO,KAAKE,MAAK,OAAO,GAAG;AACzC,qBAAO;;AAEX,yBAAa,IAAI,OAAO;;;AAIhC,eAAO;MACX;;IAEJ,KAAK,uBAAuB;AAExB,aAAO,SAAS,mBAAmB,MAAiB;AAChD,YAAI,UAA8B;AAElC,WAAG;AACC,cAAIA,MAAK,OAAO;AAAG,mBAAO;iBACpB,UAAU,iBAAiB,SAASF,QAAO;AAErD,eAAO;MACX;;IAEJ,KAAK,aAAa,QAAQ;AACtB,aAAO,SAASC,QAAO,MAAiB;AACpC,eAAOD,SACF,YAAY,IAAI,EAChB,KAAK,CAACI,UAASJ,SAAQ,MAAMI,KAAI,KAAKF,MAAKE,KAAI,CAAC;MACzD;;IAEJ,KAAK,aAAa,OAAO;AACrB,aAAO,SAAS,MAAM,MAAiB;AACnC,cAAMH,UAASD,SAAQ,UAAU,IAAI;AACrC,eAAOC,WAAU,QAAQD,SAAQ,MAAMC,OAAM,KAAKC,MAAKD,OAAM;MACjE;;IAEJ,KAAK,aAAa,SAAS;AACvB,aAAO,SAAS,QAAQ,MAAiB;AACrC,cAAMI,YAAWL,SAAQ,YAAY,IAAI;AAEzC,iBAAS,IAAI,GAAG,IAAIK,UAAS,QAAQ,KAAK;AACtC,gBAAM,iBAAiBA,UAAS;AAChC,cAAI,OAAO,MAAM,cAAc;AAAG;AAClC,cAAIL,SAAQ,MAAM,cAAc,KAAKE,MAAK,cAAc,GAAG;AACvD,mBAAO;;;AAIf,eAAO;MACX;;IAEJ,KAAK,aAAa,UAAU;AACxB,UAAIF,SAAQ,oBAAoB;AAC5B,eAAO,SAAS,SAAS,MAAiB;AACtC,gBAAM,WAAWA,SAAQ,mBAAoB,IAAI;AACjD,iBAAO,YAAY,QAAQE,MAAK,QAAQ;QAC5C;;AAGJ,aAAO,SAAS,SAAS,MAAiB;AACtC,cAAMG,YAAWL,SAAQ,YAAY,IAAI;AACzC,YAAI;AAEJ,iBAAS,IAAI,GAAG,IAAIK,UAAS,QAAQ,KAAK;AACtC,gBAAM,iBAAiBA,UAAS;AAChC,cAAI,OAAO,MAAM,cAAc;AAAG;AAClC,cAAIL,SAAQ,MAAM,cAAc,GAAG;AAC/B,0BAAc;;;AAItB,eAAO,CAAC,CAAC,eAAeE,MAAK,WAAW;MAC5C;;IAEJ,KAAK,aAAa,WAAW;AACzB,UAAI,SAAS,aAAa,QAAQ,SAAS,cAAc,KAAK;AAC1D,cAAM,IAAI,MACN,oEAAoE;;AAI5E,aAAOA;;;AAGnB;AAjMA;;IAAAI;AACA;AAQA;;;;;ACYM,SAAUC,SACZ,UACA,SACA,SAAuB;AAEvB,QAAMC,QAAO,cAAc,UAAU,SAAS,OAAO;AACrD,SAAO,YAAYA,OAAM,QAAQ,OAAO;AAC5C;AAEM,SAAU,cACZ,UACA,SACA,SAAuB;AAEvB,QAAM,QAAQ,OAAO,aAAa,WAAW,MAAM,QAAQ,IAAI;AAC/D,SAAO,aAAgC,OAAO,SAAS,OAAO;AAClE;AAEA,SAAS,oBAAoB,GAAmB;AAC5C,SACI,EAAE,SAAS,aAAa,WACvB,EAAE,SAAS,WACP,MAAM,QAAQ,EAAE,IAAI,KACjB,EAAE,KAAK,KAAK,CAACC,UAASA,MAAK,KAAK,mBAAmB,CAAC;AAEpE;AAgBA,SAAS,WACL,OACA,EAAE,SAAAC,SAAO,GACT,SAAgB;AAGhB,QAAM,aAAa,CAAC,EAAC,YAAO,QAAP,YAAO,SAAA,SAAP,QAAS,MAAM,CAAC,MAAK;AACtC,UAAMC,UAASD,SAAQ,MAAM,CAAC,KAAKA,SAAQ,UAAU,CAAC;AACtD,WAAO,MAAM,uBAAwBC,WAAUD,SAAQ,MAAMC,OAAM;EACvE,CAAC;AAED,aAAW,KAAK,OAAO;AACnB,QACI,EAAE,SAAS,KACXC,aAAY,EAAE,EAAE,KAChB,EAAE,GAAG,SAAS,aAAa,YAC7B;eAES,cAAc,CAAC,EAAE,KAAK,mBAAmB,GAAG;AACnD,QAAE,QAAQ,gBAAgB;WACvB;AACH;;AAGJ,MAAE,QAAQ,WAAW;;AAE7B;AAEM,SAAU,aACZ,OACA,SACA,SAAuB;;AAEvB,QAAM,QAAQ,eAAS;AAEvB,aAAUC,MAAA,QAAQ,aAAO,QAAAA,QAAA,SAAAA,MAAI;AAC7B,QAAM,iBAAiB,MAAM,QAAQ,OAAO;AAE5C,QAAM,eACF,YAAY,MAAM,QAAQ,OAAO,IAAI,UAAU,CAAC,OAAO;AAG3D,MAAI,QAAQ,qBAAqB,OAAO;AACpC,eAAW,OAAO,SAAS,YAAY;aAChC,MAAM,KAAK,CAAC,MAAM,EAAE,SAAS,KAAKD,aAAY,EAAE,EAAE,CAAC,GAAG;AAC7D,UAAM,IAAI,MACN,mFAAmF;;AAI3F,MAAI,yBAAyB;AAE7B,QAAM,QAAQ,MACT,IAAI,CAAC,UAAS;AACX,QAAI,MAAM,UAAU,GAAG;AACnB,YAAM,CAACE,QAAO,MAAM,IAAI;AAExB,UACIA,OAAM,SAAS,aAAa,UAC5BA,OAAM,SAAS,SACjB;iBAGE,kBACA,OAAO,SAAS,aAAa,YAC/B;AACE,cAAM,KAAK;iBAEX,OAAO,SAAS,aAAa,YAC7B,OAAO,SAAS,aAAa,SAC/B;AACE,iCAAyB;;;AAIjC,WAAO,aACH,OACA,SACA,YAAY;EAEpB,CAAC,EACA,OAAO,aAAa,iBAAAC,QAAS,SAAS;AAE3C,QAAM,yBAAyB;AAE/B,SAAO;AACX;AAEA,SAAS,aACL,OACA,SACA,SAAgB;;AAEhB,SAAO,MAAM,OACT,CAAC,UAAU,SACP,aAAa,iBAAAA,QAAS,YAChB,iBAAAA,QAAS,YACT,uBACI,UACA,MACA,SACA,SACA,YAAY,IAE1BF,MAAA,QAAQ,cAAQ,QAAAA,QAAA,SAAAA,MAAI,iBAAAE,QAAS,QAAQ;AAE7C;AAEA,SAAS,YACL,GACA,GAA6B;AAE7B,MAAI,MAAM,iBAAAA,QAAS,aAAa,MAAM,iBAAAA,QAAS,UAAU;AACrD,WAAO;;AAEX,MAAI,MAAM,iBAAAA,QAAS,aAAa,MAAM,iBAAAA,QAAS,UAAU;AACrD,WAAO;;AAGX,SAAO,SAAS,QAAQ,MAAI;AACxB,WAAO,EAAE,IAAI,KAAK,EAAE,IAAI;EAC5B;AACJ;AAxLA,IACAC,kBA+CM,kBACA,2BAGA;AApDN,IAAAC,gBAAA;;;AACA,IAAAD,mBAAqB;AACrB;AACA;AACA;AA4CA,IAAM,mBAA6B,EAAE,MAAM,aAAa,WAAU;AAClE,IAAM,4BAA8C;MAChD,MAAM;;AAEV,IAAM,cAAwB;MAC1B,MAAM,aAAa;MACnB,MAAM;MACN,MAAM;;;;;;AC1BV,SAAS,qBACL,SAAoC;;AAMpC,QAAM,OAAmC,YAAO,QAAP,YAAO,SAAP,UAAW;AAEpD,GAAAE,MAAA,KAAK,aAAO,QAAAA,QAAA,SAAAA,MAAZ,KAAK,UAAYC;AAEjB,GAAA,KAAA,KAAK,YAAM,QAAA,OAAA,SAAA,KAAX,KAAK,UAAW,MAAA,KAAA,KAAK,aAAO,QAAA,OAAA,SAAA,SAAA,GAAE,YAAM,QAAA,OAAA,SAAA,KAAI;AAExC,SAAO;AACX;AAEA,SAAS,YACL,MAIqB;AAErB,SAAO,SAAS,WACZ,UACA,SACA,SAAuB;AAEvB,UAAM,OAAO,qBAAqB,OAAO;AAEzC,WAAO,KAAK,UAAU,MAAM,OAAO;EACvC;AACJ;AASA,SAAS,gBACL,YAIM;AAEN,SAAO,SAASC,QACZ,OACA,UACA,SAAoC;AAEpC,UAAM,OAAO,qBAAqB,OAAO;AAEzC,QAAI,OAAO,UAAU,YAAY;AAC7B,cAAQ,cAAiC,OAAO,MAAM,QAAQ;;AAGlE,UAAM,mBAAmB,eACrB,UACA,KAAK,SACL,MAAM,sBAAsB;AAEhC,WAAO,WAAW,OAAO,kBAAkB,IAAI;EACnD;AACJ;AAEM,SAAU,eACZ,OACAC,UACA,yBAAyB,OAAK;AAM9B,MAAI,wBAAwB;AACxB,YAAQ,mBAAmB,OAAOA,QAAO;;AAG7C,SAAO,MAAM,QAAQ,KAAK,IACpBA,SAAQ,cAAc,KAAK,IAC3BA,SAAQ,YAAY,KAAK;AACnC;AAEA,SAAS,mBACL,MACAA,UAAmC;AAGnC,QAAM,QAAQ,MAAM,QAAQ,IAAI,IAAI,KAAK,MAAM,CAAC,IAAI,CAAC,IAAI;AACzD,QAAM,cAAc,MAAM;AAE1B,WAAS,IAAI,GAAG,IAAI,aAAa,KAAK;AAClC,UAAM,eAAe,gBAAgB,MAAM,IAAIA,QAAO;AACtD,UAAM,KAAK,GAAG,YAAY;;AAE9B,SAAO;AACX;AAhIA,IACAC,kBAsBM,eACA,gBA0COC,UACA,gBACA,eAwEA,WAoBA;AAhKb,IAAAC,YAAA;;IAAAA;AACA,IAAAF,mBAAqB;AAKrB,IAAAG;AAaA;AAsLA;AAlLA,IAAM,gBAAgB,CAAO,GAAS,MAAY,MAAM;AACxD,IAAM,iBAAqE;MACvE,SAASN;MACT,QAAQ;;AAwCL,IAAMI,WAAU,YAAYA,QAAU;AACtC,IAAM,iBAAiB,YAAY,aAAa;AAChD,IAAM,gBAAgB,YAAY,YAAY;AAwE9C,IAAM,YAAY,gBACrB,CACI,OACA,OACA,YAEA,UAAU,iBAAAG,QAAS,aAAa,CAAC,SAAS,MAAM,WAAW,IACrD,CAAA,IACA,QAAQ,QAAQ,QAAQ,OAAO,KAAK,CAAC;AAY5C,IAAM,YAAY,gBACrB,CACI,OACA,OACA,YAEA,UAAU,iBAAAA,QAAS,aAAa,CAAC,SAAS,MAAM,WAAW,IACrD,OACA,QAAQ,QAAQ,QAAQ,OAAO,KAAK,CAAC;;;;;AC5I7C,SAAU,SAAS,GAAW;AAChC,MAAI,EAAE,SAAS;AAAU,WAAO;AAChC,MAAI,YAAY,IAAI,EAAE,IAAI;AAAG,WAAO;AACpC,MAAI,EAAE,SAAS,SAAS,MAAM,QAAQ,EAAE,IAAI,GAAG;AAE3C,WAAO,EAAE,KAAK,KAAK,CAACC,OAAMA,GAAE,KAAK,QAAQ,CAAC;;AAG9C,SAAO;AACX;AAEM,SAAU,SACZC,SACAC,OACA,WAAiB;AAEjB,QAAM,MAAMA,SAAQ,OAAO,SAASA,OAAM,EAAE,IAAI;AAEhD,UAAQD,SAAQ;IACZ,KAAK;AACD,aAAO;IACX,KAAK;IACL,KAAK;AACD,aAAO,SAAS,GAAG,IAAK,OAAO,IAAI,MAAM,IAAI,WAAY;IAC7D,KAAK;AACD,aAAO,SAAS,GAAG,IACb,OAAO,IACH,KAAK,IAAI,KAAK,SAAS,IACvB,WACJ;IACV,KAAK;AACD,aAAO,SAAS,GAAG,IAAI,WAAW;IACtC,KAAK;AACD,aAAO,IAAI;IACf,KAAK;AACD,aAAO,IAAI,YAAY;IAC3B,KAAK;IACL,KAAK;AACD,aAAO;;AAEnB;AAxDA,IAAa;AAAb;;AAAO,IAAM,cAA2B,oBAAI,IAAY;MACpD;MACA;MACA;MACA;MACA;MACA;MACA;MACA;KACH;;;;;ACjBK,SAAU,gBAAgB,MAAa;AACzC,SAAO,KAAK;AAAQ,WAAO,KAAK;AAChC,SAAO;AACX;AAEM,SAAU,eACZ,WAAuB;AAEvB,QAAM,oBAAkC,CAAA;AACxC,QAAM,iBAA+B,CAAA;AAErC,aAAW,YAAY,WAAW;AAC9B,QAAI,SAAS,KAAK,QAAQ,GAAG;AACzB,wBAAkB,KAAK,QAAQ;WAC5B;AACH,qBAAe,KAAK,QAAQ;;;AAIpC,SAAO,CAAC,gBAAgB,iBAAiB;AAC7C;AAtBA,IAAAE,gBAAA;;;;;;;ACiCM,SAAUC,IACZ,SACA,UACA,UAAmB,CAAA,GAAE;AAErB,SAAO,KAAK,CAAC,OAAO,GAAG,UAAU,OAAO;AAC5C;AAEM,SAAU,KACZ,UACA,UACA,UAAmB,CAAA,GAAE;AAErB,MAAI,OAAO,aAAa;AAAY,WAAO,SAAS,KAAK,QAAQ;AAEjE,QAAM,CAAC,OAAO,QAAQ,IAAI,eAAe,MAAM,QAAQ,CAAC;AAExD,SACK,MAAM,SAAS,KAAK,SAAS,KAAK,cAAa,OAAO,OAAO,CAAC,KAC/D,SAAS,KACL,CAAC,QAAQ,iBAAiB,KAAK,UAAU,OAAO,EAAE,SAAS,CAAC;AAGxE;AAEA,SAAS,iBACLC,SACA,OACAC,OACA,SAAgB;AAEhB,QAAM,MAAM,OAAOA,UAAS,WAAW,SAASA,OAAM,EAAE,IAAI;AAE5D,UAAQD,SAAQ;IACZ,KAAK;IACL,KAAK;AAED,aAAO;IACX,KAAK;AACD,aAAO,MAAM,SAAS,IAAI,CAAC,MAAM,MAAM,SAAS,EAAE,IAAI;IAC1D,KAAK;IACL,KAAK;AACD,aAAO,SAAS,GAAG,KAAK,KAAK,IAAI,GAAG,IAAI,MAAM,SACxC,CAAC,MAAM,IAAI,MAAM,MAAM,SAAS,OAAO,MAAM,IAAI,IACjD,CAAA;IACV,KAAK;AACD,aAAO,SAAS,GAAG,IAAI,MAAM,MAAM,MAAM,CAAC,IAAI,CAAA;IAClD,KAAK;AACD,aAAO,MAAM,OAAO,CAAC,GAAG,MAAM,IAAI,MAAM,CAAC;IAC7C,KAAK;AACD,aAAO,MAAM,OAAO,CAAC,GAAG,MAAM,IAAI,MAAM,CAAC;IAC7C,KAAK,OAAO;AACR,YAAM,WAAW,IAAI,IACjB,aAAaC,OAAsB,OAAO,OAAO,CAAC;AAGtD,aAAO,MAAM,OAAO,CAAC,MAAM,CAAC,SAAS,IAAI,CAAC,CAAC;;;AAGvD;AAEM,SAAUD,QACZ,UACA,UACA,UAAmB,CAAA,GAAE;AAErB,SAAO,aAAa,MAAM,QAAQ,GAAG,UAAU,OAAO;AAC1D;AAWA,SAAS,aACL,UACA,UACA,SAAgB;AAEhB,MAAI,SAAS,WAAW;AAAG,WAAO,CAAA;AAElC,QAAM,CAAC,gBAAgB,iBAAiB,IAAI,eAAe,QAAQ;AACnE,MAAI;AAEJ,MAAI,eAAe,QAAQ;AACvB,UAAM,WAAW,eAAe,UAAU,gBAAgB,OAAO;AAGjE,QAAI,kBAAkB,WAAW,GAAG;AAChC,aAAO;;AAIX,QAAI,SAAS,QAAQ;AACjB,cAAQ,IAAI,IAAI,QAAQ;;;AAIhC,WACQ,IAAI,GACR,IAAI,kBAAkB,WAAU,UAAK,QAAL,UAAK,SAAA,SAAL,MAAO,UAAS,SAAS,QACzD,KACF;AACE,UAAM,mBAAmB,kBAAkB;AAC3C,UAAM,UAAU,QACV,SAAS,OAAO,CAAC,MAAeE,OAAM,CAAC,KAAK,CAAC,MAAO,IAAI,CAAC,CAAC,IAC1D;AAEN,QAAI,QAAQ,WAAW;AAAG;AAC1B,UAAM,WAAW,iBAAiB,kBAAkB,UAAU,OAAO;AAErE,QAAI,SAAS,QAAQ;AACjB,UAAI,CAAC,OAAO;AAKR,YAAI,MAAM,kBAAkB,SAAS,GAAG;AACpC,iBAAO;;AAGX,gBAAQ,IAAI,IAAI,QAAQ;aACrB;AACH,iBAAS,QAAQ,CAAC,OAAO,MAAO,IAAI,EAAE,CAAC;;;;AAKnD,SAAO,OAAO,UAAU,cAChB,MAAM,SAAS,SAAS,SACpB,WAEA,SAAS,OAAO,CAAC,OACZ,MAAuB,IAAI,EAAE,CAAC,IAEzC,CAAA;AACV;AAEA,SAAS,iBACL,UACA,UACA,SAAgB;;AAEhB,MAAI,SAAS,KAAK,WAAW,GAAG;AAK5B,UAAMC,SAAOC,MAAA,QAAQ,UAAI,QAAAA,QAAA,SAAAA,MAAI,gBAAgB,SAAS,EAAE;AACxD,UAAM,OAAO,EAAE,GAAG,SAAS,SAAS,UAAU,kBAAkB,MAAK;AACrE,aAAS,KAAK,YAAY;AAC1B,WAAO,mBAAmBD,OAAM,UAAU,MAAM,MAAM,SAAS,MAAM;;AAGzE,SAAO,mBACH,UACA,UACA,SACA,OACA,SAAS,MAAM;AAEvB;AAEM,SAAU,OACZ,UACAA,OACA,UAAmB,CAAA,GACnB,QAAQ,UAAQ;AAEhB,MAAI,OAAO,aAAa,YAAY;AAChC,WAAOE,MAAKF,OAAM,QAAQ;;AAG9B,QAAM,CAAC,OAAO,QAAQ,IAAI,eAAe,MAAM,QAAQ,CAAC;AAExD,QAAM,UAAuB,SAAS,IAAI,CAAC,QACvC,mBAAmBA,OAAM,KAAK,SAAS,MAAM,KAAK,CAAC;AAIvD,MAAI,MAAM,QAAQ;AACd,YAAQ,KAAK,aAAaA,OAAM,OAAO,SAAS,KAAK,CAAC;;AAG1D,MAAI,QAAQ,WAAW,GAAG;AACtB,WAAO,CAAA;;AAIX,MAAI,QAAQ,WAAW,GAAG;AACtB,WAAO,QAAQ;;AAInB,SAAgB,WAAW,QAAQ,OAAO,CAAC,GAAG,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;AACrE;AASA,SAAS,mBACLA,OACA,UACA,SACA,kBACA,YAAkB;AAElB,QAAM,cAAc,SAAS,UAAU,QAAQ;AAC/C,QAAM,MAAM,SAAS,MAAM,GAAG,WAAW;AACzC,QAAMH,UAAS,SAAS;AAExB,QAAM,YACF,SAAS,SAAS,MAAM,cAAc,aAAa;AAMvD,QAAM,QAAQ,SAASA,QAAO,MAAMA,QAAO,MAAM,SAAS;AAE1D,MAAI,UAAU;AAAG,WAAO,CAAA;AAMxB,QAAM,eACF,IAAI,WAAW,KAAK,CAAC,MAAM,QAAQG,KAAI,IACxB,YAAYA,KAAI,EAAE,OAAgBD,MAAK,IAChD,IAAI,WAAW,KACd,MAAM,QAAQC,KAAI,IAAIA,QAAO,CAACA,KAAI,GAAG,OAAgBD,MAAK,IAC3D,oBAAoB,IAAI,KAAK,WAAW,IACxC,aAAaC,OAAM,CAAC,GAAG,GAAG,SAAS,KAAK,IACxC,eAAeA,OAAM,CAAC,GAAG,GAAG,OAAO;AAE7C,QAAM,QAAQ,aAAa,MAAM,GAAG,KAAK;AAEzC,MAAI,SAAS,iBAAiBH,QAAO,MAAM,OAAOA,QAAO,MAAM,OAAO;AAEtE,MAAI,OAAO,WAAW,KAAK,SAAS,WAAW,cAAc,GAAG;AAC5D,WAAO;;AAGX,QAAM,oBAAoB,SAAS,MAAM,cAAc,CAAC;AACxD,QAAM,wBAAwB,kBAAkB,KAAK,WAAW;AAEhE,MAAI,uBAAuB;AACvB,QAAI,YAAY,kBAAkB,EAAE,GAAG;AACnC,YAAM,EAAE,MAAAM,MAAI,IAAK,kBAAkB;AAEnC,UACIA,UAAS,aAAa,WACtBA,UAAS,aAAa,UACxB;AAEE,iBAAS,eAAe,QAAQC,cAAU,IAAI;;AAIlD,wBAAkB,QAAQ,kBAAkB;;AAGhD,cAAU;MACN,GAAG;MAEH,kBAAkB;MAKlB,UAAU,CAAC,OAAgB,OAAO,SAAS,EAAE;;aAE1C,QAAQ,YAAY,QAAQ,aAAsB,oBAAU;AACnE,cAAU,EAAE,GAAG,SAAS,UAAmB,mBAAQ;;AAUvD,SAAO,kBAAkB,KAAK,QAAQ,IAChC,mBACI,QACA,mBACA,SACA,OACA,UAAU,IAEd,wBAEA,aAAa,QAAQ,CAAC,iBAAiB,GAAG,SAAS,UAAU,IAE7D,eAAe,QAAQ,CAAC,iBAAiB,GAAG,OAAO;AAC7D;AAOA,SAAS,aACLJ,OACA,KACA,SACA,OAAa;AAEb,QAAM,QAAuB,cACzB,KACA,SACAA,KAAI;AAGR,SAAOE,MAAKF,OAAM,OAAO,KAAK;AAClC;AAEA,SAASE,MACLF,OACA,OACA,QAAQ,UAAQ;AAEhB,QAAM,QAAQ,eACVA,OACAI,cACA,MAAM,sBAAsB;AAGhC,SAAgB,KACZ,CAAC,SAA2BL,OAAM,IAAI,KAAK,MAAM,IAAI,GACrD,OACA,MACA,KAAK;AAEb;AAEA,SAAS,eACL,UACA,KACA,SAAgB;AAEhB,QAAM,OAAO,MAAM,QAAQ,QAAQ,IAAI,WAAW,CAAC,QAAQ,GAAG,OACjDA,MAAK;AAGlB,MAAI,IAAI,WAAW;AAAG,WAAO;AAE7B,QAAM,QAAQ,cAA+B,KAAK,OAAO;AACzD,SAAO,UAAmB,qBAAW,MAAM,IAAI,OAAO,KAAK;AAC/D;AAzYA,IAOAM,WAaM,oBAIA;AAxBN,IAAAC,YAAA;;;AACA,IAAAA;AAKA,IAAAA;AACA,IAAAD,YAA0B;AAE1B,IAAAE;AACA;AAQA,IAAAD;AAEA,IAAM,qBAA+B;MACjC,MAAM,aAAa;MACnB,WAAW;;AAEf,IAAM,eAAyB;MAC3B,MAAM,aAAa;MACnB,MAAM;MACN,MAAM;;;;;;AC3BV;;;;;;;;;;gBAAAE;EAAA;cAAAC;EAAA;;;;YAAAC;EAAA;aAAAC;EAAA;;;;;;;;;;;;iBAAAC;;AA6CM,SAAUH,MAEd,oBAAwD;;AAExD,MAAI,CAAC,oBAAoB;AACvB,WAAO,KAAK,MAAM,CAAA,CAAE;;AAGtB,QAAM,UAAqB,KAAK,QAAO;AAEvC,MAAI,OAAO,uBAAuB,UAAU;AAC1C,UAAM,WAAW,UAAU,kBAAkB,IACzC,mBAAmB,QAAO,IAC1B,CAAC,kBAAkB;AAEvB,WAAO,KAAK,MACV,SAAS,OAAO,CAAC,SAAS,QAAQ,KAAK,CAAC,SAAS,SAAS,MAAM,IAAI,CAAC,CAAC,CAAC;;AAI3E,QAAM,QAAQ,kBAAkB,KAAK,kBAAkB,IACnD,UACA,KAAK,SAAQ,EAAG,QAAO;AAE3B,QAAM,UAAU;IACd;IACA,OAAMI,MAAA,KAAK,WAAK,QAAAA,QAAA,SAAA,SAAAA,IAAG;IAGnB,SAAS,KAAK,QAAQ;IACtB,eAAe,KAAK,QAAQ;IAC5B,yBAAyB,KAAK,QAAQ;IACtC,SAAS,KAAK,QAAQ;IACtB,YAAY,KAAK,QAAQ;;AAG3B,SAAO,KAAK,MAAa,OAAO,oBAAoB,OAAO,OAAO,CAAC;AACrE;AAUA,SAAS,YACP,UAA0E;AAE1E,SAAO,SACL,OACG,SAA4C;AAE/C,WAAO,SAEL,UAAmC;;AAEnC,UAAI,UAAqB,SAAS,IAAI,IAAI;AAE1C,UAAI,UAAU;AACZ,kBAAU,YACR,SACA,UACA,KAAK,QAAQ,UACbA,MAAA,KAAK,WAAK,QAAAA,QAAA,SAAA,SAAAA,IAAG,EAAE;;AAInB,aAAO,KAAK;QAEV,KAAK,SAAS,KAAK,QAAQ,SAAS,IAChC,QAAQ,OAAO,CAAC,OAAOC,QAAOA,IAAG,KAAK,GAAG,OAAO,IAChD;MAAO;IAEf;EACF;AACF;AAkCA,SAAS,YACP,aACG,SAA4C;AAG/C,MAAI,UAAwD;AAE5D,QAAM,eAAe,YACnB,CAACC,WAA6C,UAAS;AACrD,UAAM,UAAqB,CAAA;AAE3B,YAAQ,OAAO,CAAC,SAAQ;AACtB,eAASC,OAAOA,QAAOD,UAAS,IAAI,GAAI,OAAOC,OAAM;AAEnD,YAAI,YAAO,QAAP,YAAO,SAAA,SAAP,QAAUA,OAAM,QAAQ,MAAM;AAAG;AACrC,gBAAQ,KAAKA,KAAI;;IAErB,CAAC;AAED,WAAO;EACT,CAAC,EACD,UAAU,GAAG,OAAO;AAEtB,SAAO,SAEL,UACA,gBAAyC;AAGzC,cACE,OAAO,aAAa,WAChB,CAAC,SAAyBN,IAAG,MAAM,UAAU,KAAK,OAAO,IACzD,WACA,YAAY,QAAQ,IACpB;AAEN,UAAM,MAAM,aAAa,KAAK,MAAM,cAAc;AAGlD,cAAU;AAEV,WAAO;EACT;AACF;AAEA,SAAS,kBAAqC,OAAU;AACtD,SAAO,MAAM,KAAK,IAAI,IAAO,KAAK,CAAC;AACrC;AAsGM,SAAU,QAEd,UAAmC;;AAEnC,QAAMO,OAAiB,CAAA;AAEvB,MAAI,CAAC,UAAU;AACb,WAAO,KAAK,MAAMA,IAAG;;AAGvB,QAAM,aAAa;IACjB,SAAS,KAAK,QAAQ;IACtB,OAAMJ,MAAA,KAAK,WAAK,QAAAA,QAAA,SAAA,SAAAA,IAAG;;AAGrB,QAAM,WACJ,OAAO,aAAa,WAChB,CAAC,SAAyBH,IAAG,MAAM,UAAU,UAAU,IACvD,YAAY,QAAQ;AAE1B,UAAQ,MAAM,CAAC,SAAwB;AACrC,WAAO,QAAQQ,OAAM,IAAI,GAAG;AAC1B,UAAI,SAAS,MAAM,CAAC,GAAG;AAErB,YAAI,CAACD,KAAI,SAAS,IAAI,GAAG;AACvB,UAAAA,KAAI,KAAK,IAAI;;AAEf;;AAEF,aAAO,KAAK;;EAEhB,CAAC;AAED,SAAO,KAAK,MAAMA,IAAG;AACvB;AAuMM,SAAU,WAAQ;AAGtB,QAAM,QAAQ,KAAK,QAAO,EAAG,OAC3B,CAAC,UAAU,SACT,YAAY,IAAI,IAAI,SAAS,OAAO,KAAK,QAAQ,IAAI,UACvD,CAAA,CAAE;AAEJ,SAAO,KAAK,MAAM,KAAK;AACzB;AA2BM,SAAU,KAEd,IAAiD;AAEjD,MAAI,IAAI;AACR,QAAM,MAAM,KAAK;AACjB,SAAO,IAAI,OAAO,GAAG,KAAK,KAAK,IAAI,GAAG,KAAK,EAAE,MAAM;AAAO,MAAE;AAC5D,SAAO;AACT;AA4BM,SAAUN,KAEd,IAA6D;AAE7D,MAAI,QAAa,CAAA;AACjB,WAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,UAAM,KAAK,KAAK;AAChB,UAAMQ,OAAM,GAAG,KAAK,IAAI,GAAG,EAAE;AAC7B,QAAIA,QAAO,MAAM;AACf,cAAQ,MAAM,OAAOA,IAAG;;;AAG5B,SAAO,KAAK,MAAM,KAAK;AACzB;AAQA,SAAS,YACP,OAAyC;AAEzC,MAAI,OAAO,UAAU,YAAY;AAC/B,WAAO,CAAC,IAAI,MAAO,MAA4B,KAAK,IAAI,GAAG,EAAE;;AAE/D,MAAI,UAAa,KAAK,GAAG;AACvB,WAAO,CAAC,OAAO,MAAM,UAAU,SAAS,KAAK,OAAO,EAAE;;AAExD,SAAO,SAAU,IAAE;AACjB,WAAO,UAAU;EACnB;AACF;AAqEM,SAAUX,QAEd,OAAyB;;AAEzB,SAAO,KAAK,MACV,YAAY,KAAK,QAAO,GAAI,OAAO,KAAK,QAAQ,UAASK,MAAA,KAAK,WAAK,QAAAA,QAAA,SAAA,SAAAA,IAAG,EAAE,CAAC;AAE7E;AAEM,SAAU,YACd,OACA,OACA,SACAO,OAAe;AAEf,SAAO,OAAO,UAAU,WACbZ,QAAO,OAAO,OAA+B,EAAE,SAAS,MAAAY,MAAI,CAAE,IACrE,MAAM,OAAO,YAAe,KAAK,CAAC;AACxC;AAcM,SAAUV,IAEd,UAA6B;AAE7B,QAAM,QAAQ,KAAK,QAAO;AAC1B,SAAO,OAAO,aAAa,WAChB,KACJ,MAA+B,OAAOQ,MAAK,GAC5C,UACA,KAAK,OAAO,IAEd,WACA,MAAM,KAAK,YAAe,QAAQ,CAAC,IACnC;AACN;AAmCM,SAAU,IAEd,OAAyB;AAEzB,MAAI,QAAQ,KAAK,QAAO;AAExB,MAAI,OAAO,UAAU,UAAU;AAC7B,UAAM,UAAU,IAAI,IAAoBV,QAAO,OAAO,OAAO,KAAK,OAAO,CAAC;AAC1E,YAAQ,MAAM,OAAO,CAAC,OAAO,CAAC,QAAQ,IAAI,EAAE,CAAC;SACxC;AACL,UAAM,WAAW,YAAY,KAAK;AAClC,YAAQ,MAAM,OAAO,CAAC,IAAI,MAAM,CAAC,SAAS,IAAI,CAAC,CAAC;;AAGlD,SAAO,KAAK,MAAM,KAAK;AACzB;AA0BM,SAAU,IAEd,oBAAuD;AAEvD,SAAO,KAAK,OACV,OAAO,uBAAuB,WAE1B,QAAQ,wBACR,CAAC,GAAG,OAAO,KAAK,MAAM,EAAE,EAAE,KAAK,kBAAkB,EAAE,SAAS,CAAC;AAErE;AAgBM,SAAU,QAAK;AACnB,SAAO,KAAK,SAAS,IAAI,KAAK,MAAM,KAAK,EAAE,IAAI;AACjD;AAgBM,SAAU,OAAI;AAClB,SAAO,KAAK,SAAS,IAAI,KAAK,MAAM,KAAK,KAAK,SAAS,EAAE,IAAI;AAC/D;AAqBM,SAAU,GAAwB,GAAS;;AAC/C,MAAI,CAAC;AAGL,MAAI,MAAM,KAAK,KAAK,UAAU;AAAG,WAAO;AAExC,MAAI,IAAI;AAAG,QAAI,KAAK,SAAS;AAC7B,SAAO,KAAK,OAAMK,MAAA,KAAK,QAAE,QAAAA,QAAA,SAAAA,MAAI,CAAA,CAAE;AACjC;AAiCM,SAAU,IAAyB,GAAU;AACjD,MAAI,KAAK,MAAM;AACb,WAAO,KAAK,QAAO;;AAErB,SAAO,KAAK,IAAI,IAAI,KAAK,SAAS,IAAI;AACxC;AAcM,SAAUD,WAAO;AACrB,SAAO,MAAM,UAAU,MAAM,KAAK,IAAI;AACxC;AAoBM,SAAU,MAEd,kBAAsD;AAEtD,MAAI;AACJ,MAAI;AAEJ,MAAI,oBAAoB,MAAM;AAC5B,gBAAY,KAAK,OAAM,EAAG,SAAQ;AAClC,aAAS,KAAK;aACL,OAAO,qBAAqB,UAAU;AAC/C,gBAAY,KAAK,MAAe,gBAAgB;AAChD,aAAS,KAAK;SACT;AAEL,gBAAY;AACZ,aAAS,UAAU,gBAAgB,IAC/B,iBAAiB,KACjB;;AAGN,SAAO,MAAM,UAAU,QAAQ,KAAK,WAAW,MAAM;AACvD;AAwBM,SAAU,MAEd,OACAS,MAAY;AAEZ,SAAO,KAAK,MAAM,MAAM,UAAU,MAAM,KAAK,MAAM,OAAOA,IAAG,CAAC;AAChE;AAiBM,SAAU,MAAG;;AACjB,UAAOR,MAAA,KAAK,gBAAU,QAAAA,QAAA,SAAAA,MAAI,KAAK,MAAM,CAAA,CAAE;AACzC;AAkBM,SAAU,IAEd,OACA,SAA6B;AAE7B,QAAM,YAAY,KAAK,MAAM,OAAO,OAAO;AAC3C,QAAMS,YAAW,WAAW,CAAC,GAAG,KAAK,IAAG,GAAI,GAAG,UAAU,IAAG,CAAE,CAAC;AAC/D,SAAO,KAAK,MAAMA,SAAQ;AAC5B;AAkBM,SAAU,QAEd,UAAiB;AAEjB,SAAO,KAAK,aACR,KAAK,IAAI,WAAW,KAAK,WAAW,OAAO,QAAQ,IAAI,KAAK,UAAU,IACtE;AACN;AAjlCA,IAyBM,mBAoGA,UAYA,gBAoFO,QAuBA,SA8BA,cAkFA,MAoBA,SA0BA,WAqBA,MAqBA,SA0BA,WAwBA,UAwBA;AAtgBb;;AAMA,IAAAC;AAQA,IAAAA;AACA;AACA;AACA,IAAAA;AAQA,IAAM,oBAAoB;AAoG1B,IAAM,WAAW,YAAY,CAAC,IAAkC,UAAS;AACvE,YAAM,MAAmB,CAAA;AAEzB,eAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,cAAM,QAAQ,GAAG,MAAM,EAAE;AACzB,YAAI,KAAK,KAAK;;AAGhB,aAAO,IAAI,MAAK,EAAY,OAAO,GAAG,GAAG;IAC3C,CAAC;AAGD,IAAM,iBAAiB,YACrB,CAAC,IAAuC,UAAS;AAC/C,YAAM,MAAiB,CAAA;AAEvB,eAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACrC,cAAM,QAAQ,GAAG,MAAM,EAAE;AACzB,YAAI,UAAU,MAAM;AAClB,cAAI,KAAK,KAAK;;;AAGlB,aAAO;IACT,CAAC;AAyEI,IAAM,SAAS,eACpB,CAAC,EAAE,QAAAC,QAAM,MAAQA,WAAU,CAAC,WAAWA,OAAM,IAAKA,UAAqB,MACvE,iBAAiB;AAqBZ,IAAM,UAAU,SACrB,CAAC,SAAQ;AACP,YAAM,UAAU,CAAA;AAChB,aAAO,KAAK,UAAU,CAAC,WAAW,KAAK,MAAM,GAAG;AAC9C,gBAAQ,KAAK,KAAK,MAAiB;AACnC,eAAO,KAAK;;AAEd,aAAO;IACT,GACA,YACA,CAAC,UAAU,MAAM,QAAO,CAAE;AAoBrB,IAAM,eAAe,YAC1B,CAAC,EAAE,QAAAA,QAAM,MAAQA,WAAU,CAAC,WAAWA,OAAM,IAAKA,UAAqB,MACvE,YACA,CAAC,UAAU,MAAM,QAAO,CAAE;AA+ErB,IAAM,OAAO,eAAe,CAAC,SAAS,mBAAmB,IAAI,CAAC;AAoB9D,IAAM,UAAU,SAAS,CAAC,SAAQ;AACvC,YAAM,UAAU,CAAA;AAChB,aAAO,KAAK,MAAM;AAChB,eAAO,KAAK;AACZ,YAAIN,OAAM,IAAI;AAAG,kBAAQ,KAAK,IAAI;;AAEpC,aAAO;IACT,GAAG,iBAAiB;AAmBb,IAAM,YAAY,YACvB,CAAC,OAAO,mBAAmB,EAAE,GAC7B,iBAAiB;AAmBZ,IAAM,OAAO,eAAe,CAAC,SAAS,mBAAmB,IAAI,CAAC;AAqB9D,IAAM,UAAU,SAAS,CAAC,SAAQ;AACvC,YAAM,UAAU,CAAA;AAChB,aAAO,KAAK,MAAM;AAChB,eAAO,KAAK;AACZ,YAAIA,OAAM,IAAI;AAAG,kBAAQ,KAAK,IAAI;;AAEpC,aAAO;IACT,GAAG,iBAAiB;AAmBb,IAAM,YAAY,YACvB,CAAC,OAAO,mBAAmB,EAAE,GAC7B,iBAAiB;AAsBZ,IAAM,WAAW,SACtB,CAAC,SACC,YAAY,IAAI,EAAE,OAAO,CAAC,OAAsBA,OAAM,EAAE,KAAK,OAAO,IAAI,GAC1E,UAAU;AAqBL,IAAM,WAAW,SACtB,CAAC,SAAS,YAAY,IAAI,EAAE,OAAOA,MAAK,GACxC,iBAAiB;;;;;ACzfb,SAAU,SACd,QAKa;AAWb,SAAO,SAASO,OACd,SACA,SACAC,aACA,SAA0B;AAE1B,QAAI,OAAO,WAAW,eAAe,OAAO,SAAS,OAAO,GAAG;AAC7D,gBAAU,QAAQ,SAAQ;;AAG5B,QAAI,OAAO,YAAY,UAAU;AAC/B,aAAO,OAAO,SAAS,SAASA,aAAY,OAAO;;AAGrD,UAAM,MAAM;AAEZ,QAAI,CAAC,MAAM,QAAQ,GAAG,KAAK,WAAgB,GAAG,GAAG;AAE/C,aAAO;;AAIT,UAAMC,QAAO,IAAIC,UAAS,CAAA,CAAE;AAG5B,WAAO,KAAKD,KAAI;AAEhB,WAAOA;EACT;AACF;AASM,SAAU,OACd,WACAE,SAAyB;AAGzB,QAAM,MAAM,MAAM,QAAQ,SAAS,IAAI,YAAY,CAAC,SAAS;AAG7D,MAAIA,SAAQ;AACV,IAAAA,QAAO,WAAW;SACb;AACL,IAAAA,UAAS;;AAIX,WAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACnC,UAAM,OAAO,IAAI;AAGjB,QAAI,KAAK,UAAU,KAAK,OAAO,aAAa,KAAK;AAC/C,oBAAc,IAAI;;AAGpB,QAAIA,SAAQ;AACV,WAAK,OAAO,IAAI,IAAI,MAAM;AAC1B,WAAK,OAAO,IAAI,IAAI,MAAM;WACrB;AACL,WAAK,OAAO,KAAK,OAAO;;AAG1B,SAAK,SAASA;;AAGhB,SAAOA;AACT;AAxGA,IAAAC,cAAA;;IAAAC;AACA,IAAAA;;;;;ACDA;;;;gBAAAC;EAAA;;;;cAAAC;EAAA;;iBAAAC;EAAA;;;cAAAC;EAAA,gBAAAC;EAAA;cAAAC;EAAA;;;AAuBM,SAAU,cAEd,MACAC,QAAe;AAEf,MAAI,QAAQ,MAAM;AAChB,WAAO,CAAA;;AAET,MAAI,UAAU,IAAI,GAAG;AACnB,WAAOA,SAAQ,SAAS,KAAK,IAAG,CAAE,IAAI,KAAK,IAAG;;AAEhD,MAAI,MAAM,QAAQ,IAAI,GAAG;AACvB,WAAO,KAAK,OACV,CAAC,UAAU,OAAO,SAAS,OAAO,KAAK,cAAc,IAAIA,MAAK,CAAC,GAC/D,CAAA,CAAE;;AAGN,MAAI,OAAO,SAAS,UAAU;AAC5B,WAAO,KAAK,OAAO,MAAM,KAAK,SAAS,OAAO,IAAI,EAAE;;AAEtD,SAAOA,SAAQ,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI;AACzC;AAEA,SAAS,QACP,cAIS;AAET,SAAO,YAEF,OAQ8B;AAEjC,UAAM,UAAU,KAAK,SAAS;AAE9B,WAAO,QAAQ,MAAM,CAAC,IAAI,MAAK;AAC7B,UAAI,CAAC,YAAY,EAAE;AAAG;AACtB,YAAM,SACJ,OAAO,MAAM,OAAO,aAChB,MAAM,GAAG,KAAK,IAAI,GAAG,KAAK,QAAQ,GAAG,QAAQ,CAAC,IAC7C;AAEP,YAAM,MAAM,KAAK,cAAc,QAAQ,IAAI,OAAO;AAClD,mBAAa,KAAK,GAAG,UAAU,EAAE;IACnC,CAAC;EACH;AACF;AAeA,SAAS,aACP,OACA,WACA,aACA,UACAC,SAAkB;;AAElB,QAAM,aAAwD;IAC5D;IACA;IACA,GAAG;;AAEL,QAAMC,QAAO,cAAc,IAAI,OAAO,MAAM,YAAY;AACxD,QAAMC,QACJ,YAAY,eAAe,MAAM,SAC7B,OACA,MAAM,YAAY;AAMxB,WAAS,MAAM,GAAG,MAAM,SAAS,QAAQ,EAAE,KAAK;AAC9C,UAAM,OAAO,SAAS;AACtB,UAAM,YAAY,KAAK;AAEvB,QAAI,WAAW;AACb,YAAM,cAAyB,UAAU;AACzC,YAAM,UAAU,YAAY,QAAQ,IAAI;AAExC,UAAI,UAAU,IAAI;AAChB,kBAAU,SAAS,OAAO,SAAS,CAAC;AACpC,YAAIF,YAAW,aAAa,YAAY,SAAS;AAC/C,qBAAW;;;;AAKjB,SAAK,SAASA;AAEd,QAAI,KAAK,MAAM;AACb,WAAK,KAAK,QAAOG,MAAA,KAAK,UAAI,QAAAA,QAAA,SAAAA,MAAI;;AAGhC,QAAI,KAAK,MAAM;AACb,WAAK,KAAK,QAAO,KAAA,KAAK,UAAI,QAAA,OAAA,SAAA,KAAI;;AAGhC,SAAK,OAAO,QAAQ,IAAIF,QAAO,SAAS,MAAM;AAC9C,SAAK,OAAO,QAAQ,SAAS,SAAS,IAAIC,QAAO,SAAS,MAAM;;AAGlE,MAAID,OAAM;AACR,IAAAA,MAAK,OAAO,SAAS;;AAEvB,MAAIC,OAAM;AACR,IAAAA,MAAK,OAAO,SAAS,SAAS,SAAS;;AAEzC,SAAO,MAAM,OAAO,GAAG,UAAU;AACnC;AAuBM,SAAU,SAEd,QAAmC;AAEnC,QAAM,eAAe,UAAU,MAAM,IAAI,SAAS,KAAK,MAAM,MAAM;AAEnE,eAAa,OAAO,IAAI;AAExB,SAAO;AACT;AAuBM,SAAU,UAEd,QAAmC;AAEnC,QAAM,gBAAgB,UAAU,MAAM,IAAI,SAAS,KAAK,MAAM,MAAM;AAEpE,gBAAc,QAAQ,IAAI;AAE1B,SAAO;AACT;AAgDA,SAAS,MACP,QAIS;AAET,SAAO,SAEL,SAA+B;AAE/B,UAAM,UAAU,KAAK,SAAS;AAC9B,UAAM,aAAa,KAAK,QAAO,EAAG,KAAI;AAEtC,aAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK;AACpC,YAAM,KAAK,KAAK;AAEhB,YAAMJ,QACJ,OAAO,YAAY,aACf,QAAQ,KAAK,IAAI,GAAG,EAAE,IACtB,OAAO,YAAY,YAAY,CAAC,OAAO,OAAO,IAC9C,WAAW,KAAK,OAAO,EAAE,MAAK,IAC9B;AAEN,YAAM,CAAC,UAAU,IAAI,KAAK,cAAcA,OAAM,IAAI,OAAO;AAEzD,UAAI,CAAC,cAAc,CAAC,YAAY,UAAU;AAAG;AAE7C,UAAI,mBAAmB;AAMvB,UAAI,IAAI;AAER,aAAO,IAAI,iBAAiB,SAAS,QAAQ;AAC3C,cAAM,QAAQ,iBAAiB,SAAS;AACxC,YAAIM,OAAM,KAAK,GAAG;AAChB,6BAAmB;AACnB,cAAI;eACC;AACL;;;AAIJ,aAAO,IAAI,kBAAkB,CAAC,UAAU,CAAC;;AAG3C,WAAO;EACT;AACF;AAoJM,SAAU,OAEd,UAAiB;AAEjB,OAAK,OAAO,QAAQ,EACjB,IAAI,MAAM,EACV,KAAK,CAAC,GAAG,OAAM;AACd,SAAK,MAAM,EAAE,EAAE,YAAY,GAAG,QAAQ;EACxC,CAAC;AACH,SAAO;AACT;AAqDM,SAAU,QAEd,SAAyB;AAEzB,QAAM,KAAK,KAAK;AAChB,MAAI,IAAI;AACN,UAAMN,QAAyB,KAAK,MAClC,OAAO,YAAY,aAAa,QAAQ,KAAK,IAAI,GAAG,EAAE,IAAI,OAAO,EACjE,aAAa,EAAE;AAGjB,QAAI;AAEJ,aAAS,IAAI,GAAG,IAAIA,MAAK,QAAQ,KAAK;AACpC,UAAIA,MAAK,GAAG,SAAS;AAAO,2BAAmBA,MAAK;;AAGtD,QAAI,IAAI;AAMR,WAAO,oBAAoB,IAAI,iBAAiB,SAAS,QAAQ;AAC/D,YAAM,QAAQ,iBAAiB,SAAS;AACxC,UAAI,MAAM,SAAS,OAAO;AACxB,2BAAmB;AACnB,YAAI;aACC;AACL;;;AAIJ,QAAI;AAAkB,WAAK,MAAM,gBAAgB,EAAE,OAAO,IAAI;;AAEhE,SAAO;AACT;AA0BM,SAAU,SAEX,OAE8B;AAEjC,QAAM,UAAU,KAAK,SAAS;AAE9B,SAAO,QAAQ,MAAM,CAAC,IAAI,MAAK;AAC7B,UAAM,EAAE,QAAAE,QAAM,IAAK;AACnB,QAAI,CAAC,YAAY,EAAE,KAAK,CAACA,SAAQ;AAC/B;;AAGF,UAAMK,YAAsBL,QAAO;AACnC,UAAMM,SAAQD,UAAS,QAAQ,EAAE;AAIjC,QAAIC,SAAQ;AAAG;AAEf,UAAM,SACJ,OAAO,MAAM,OAAO,aAChB,MAAM,GAAG,KAAK,IAAI,GAAG,KAAK,QAAQ,GAAG,QAAQ,CAAC,IAC7C;AAEP,UAAM,MAAM,KAAK,cAAc,QAAQ,IAAI,OAAO;AAGlD,iBAAaD,WAAUC,SAAQ,GAAG,GAAG,KAAKN,OAAM;EAClD,CAAC;AACH;AAyBM,SAAU,YAEd,QAAmC;AAEnC,MAAI,OAAO,WAAW,UAAU;AAC9B,aAAS,KAAK,MAAe,MAAM;;AAGrC,OAAK,OAAM;AAEX,QAAM,SAAc,CAAA;AAEpB,OAAK,cAAc,MAAM,EAAE,QAAQ,CAAC,OAAM;AACxC,UAAM,aAAa,KAAK,MAAK,EAAG,QAAO;AACvC,UAAM,EAAE,QAAAA,QAAM,IAAK;AACnB,QAAI,CAACA,SAAQ;AACX;;AAGF,UAAMK,YAAsBL,QAAO;AACnC,UAAMM,SAAQD,UAAS,QAAQ,EAAE;AAIjC,QAAIC,SAAQ;AAAG;AAGf,iBAAaD,WAAUC,SAAQ,GAAG,GAAG,YAAYN,OAAM;AACvD,WAAO,KAAK,GAAG,UAAU;EAC3B,CAAC;AAED,SAAO,KAAK,MAAM,MAAM;AAC1B;AA0BM,SAAU,UAEX,OAE8B;AAEjC,QAAM,UAAU,KAAK,SAAS;AAE9B,SAAO,QAAQ,MAAM,CAAC,IAAI,MAAK;AAC7B,UAAM,EAAE,QAAAA,QAAM,IAAK;AACnB,QAAI,CAAC,YAAY,EAAE,KAAK,CAACA,SAAQ;AAC/B;;AAGF,UAAMK,YAAsBL,QAAO;AACnC,UAAMM,SAAQD,UAAS,QAAQ,EAAE;AAIjC,QAAIC,SAAQ;AAAG;AAEf,UAAM,SACJ,OAAO,MAAM,OAAO,aAChB,MAAM,GAAG,KAAK,IAAI,GAAG,KAAK,QAAQ,GAAG,QAAQ,CAAC,IAC7C;AAEP,UAAM,MAAM,KAAK,cAAc,QAAQ,IAAI,OAAO;AAGlD,iBAAaD,WAAUC,QAAO,GAAG,KAAKN,OAAM;EAC9C,CAAC;AACH;AAyBM,SAAU,aAEd,QAAmC;AAEnC,QAAM,YAAY,KAAK,MAAe,MAAM;AAE5C,OAAK,OAAM;AAEX,QAAM,SAAc,CAAA;AAEpB,UAAQ,WAAW,CAAC,OAAM;AACxB,UAAM,aAAa,KAAK,MAAK,EAAG,QAAO;AACvC,UAAM,EAAE,QAAAA,QAAM,IAAK;AACnB,QAAI,CAACA,SAAQ;AACX;;AAGF,UAAMK,YAAsBL,QAAO;AACnC,UAAMM,SAAQD,UAAS,QAAQ,EAAE;AAIjC,QAAIC,SAAQ;AAAG;AAGf,iBAAaD,WAAUC,QAAO,GAAG,YAAYN,OAAM;AACnD,WAAO,KAAK,GAAG,UAAU;EAC3B,CAAC;AAED,SAAO,KAAK,MAAM,MAAM;AAC1B;AAsBM,SAAU,OAEd,UAAiB;AAGjB,QAAM,QAAQ,WAAW,KAAK,OAAO,QAAQ,IAAI;AAEjD,UAAQ,OAAO,CAAC,OAAM;AACpB,kBAAc,EAAE;AAChB,OAAG,OAAO,GAAG,OAAO,GAAG,SAAS;EAClC,CAAC;AAED,SAAO;AACT;AAuBM,SAAU,YAEd,SAA+B;AAE/B,SAAO,QAAQ,MAAM,CAAC,IAAI,MAAK;AAC7B,UAAM,EAAE,QAAAA,QAAM,IAAK;AACnB,QAAI,CAACA,SAAQ;AACX;;AAGF,UAAMK,YAAsBL,QAAO;AACnC,UAAM,OACJ,OAAO,YAAY,aAAa,QAAQ,KAAK,IAAI,GAAG,EAAE,IAAI;AAC5D,UAAM,MAAM,KAAK,cAAc,IAAI;AAMnC,WAAU,KAAK,IAAI;AAEnB,UAAMM,SAAQD,UAAS,QAAQ,EAAE;AAGjC,iBAAaA,WAAUC,QAAO,GAAG,KAAKN,OAAM;AAE5C,QAAI,CAAC,IAAI,SAAS,EAAE,GAAG;AACrB,SAAG,SAAS,GAAG,OAAO,GAAG,OAAO;;EAEpC,CAAC;AACH;AAiBM,SAAU,QAAK;AACnB,SAAO,QAAQ,MAAM,CAAC,OAAM;AAC1B,QAAI,CAAC,YAAY,EAAE;AAAG;AACtB,OAAG,SAAS,QAAQ,CAAC,UAAS;AAC5B,YAAM,OAAO,MAAM,OAAO,MAAM,SAAS;IAC3C,CAAC;AAED,OAAG,SAAS,SAAS;EACvB,CAAC;AACH;AAuCM,SAAUN,MAEda,MAA+B;AAE/B,MAAIA,SAAQ,QAAW;AACrB,UAAM,KAAK,KAAK;AAChB,QAAI,CAAC,MAAM,CAAC,YAAY,EAAE;AAAG,aAAO;AACpC,WAAO,KAAK,QAAQ,GAAG,QAAQ;;AAGjC,SAAO,QAAQ,MAAM,CAAC,OAAM;AAC1B,QAAI,CAAC,YAAY,EAAE;AAAG;AACtB,OAAG,SAAS,QAAQ,CAAC,UAAS;AAC5B,YAAM,OAAO,MAAM,OAAO,MAAM,SAAS;IAC3C,CAAC;AAED,UAAM,UAAU,UAAUA,IAAG,IACzBA,KAAI,QAAO,IACX,KAAK,OAAO,GAAGA,QAAO,KAAK,SAAS,OAAO,EAAE,EAAE;AAEnD,WAAU,SAAS,EAAE;EACvB,CAAC;AACH;AAQM,SAAUV,YAAQ;AACtB,SAAO,KAAK,QAAQ,IAAI;AAC1B;AA0CM,SAAUD,MAEdW,MAAmE;AAGnE,MAAIA,SAAQ,QAAW;AACrB,WAAO,KAAW,IAAI;;AAExB,MAAI,OAAOA,SAAQ,YAAY;AAE7B,WAAO,QAAQ,MAAM,CAAC,IAAI,MACxB,KAAK,MAAM,EAAE,EAAE,KAAKA,KAAI,KAAK,IAAI,GAAG,KAAW,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;AAK1D,SAAO,QAAQ,MAAM,CAAC,OAAM;AAC1B,QAAI,CAAC,YAAY,EAAE;AAAG;AACtB,OAAG,SAAS,QAAQ,CAAC,UAAS;AAC5B,YAAM,OAAO,MAAM,OAAO,MAAM,SAAS;IAC3C,CAAC;AAED,UAAM,WAAW,IAAIC,MAAK,GAAGD,MAAK;AAElC,WAAU,UAAU,EAAE;EACxB,CAAC;AACH;AAeM,SAAU,QAAK;AACnB,SAAO,KAAK,MAAM,SAAS,KAAK,IAAG,CAAE,CAAC;AACxC;AAliCA,IA6Oad,SAuBAE,UAmGAG,OA4DA;AAnab,IAAAW,qBAAA;;AAMA,IAAAC;AACA,IAAAC;AACA;AACA;AACA,IAAAD;AAmOO,IAAMjB,UAAS,QAAQ,CAAC,KAAKmB,WAAUZ,YAAU;AACtD,mBAAaY,WAAUA,UAAS,QAAQ,GAAG,KAAKZ,OAAM;IACxD,CAAC;AAqBM,IAAML,WAAU,QAAQ,CAAC,KAAKiB,WAAUZ,YAAU;AACvD,mBAAaY,WAAU,GAAG,GAAG,KAAKZ,OAAM;IAC1C,CAAC;AAiGM,IAAMF,QAAO,MAAM,CAAC,IAAI,kBAAkB,eAAc;AAC7D,YAAM,EAAE,QAAAE,QAAM,IAAK;AAEnB,UAAI,CAACA;AAAQ;AAEb,YAAMK,YAAsBL,QAAO;AACnC,YAAMM,SAAQD,UAAS,QAAQ,EAAE;AAEjC,aAAU,CAAC,EAAE,GAAG,gBAAgB;AAMhC,mBAAaA,WAAUC,QAAO,GAAG,YAAYN,OAAM;IACrD,CAAC;AA6CM,IAAM,YAAY,MAAM,CAAC,IAAI,kBAAkB,eAAc;AAClE,UAAI,CAAC,YAAY,EAAE;AAAG;AACtB,aAAU,GAAG,UAAU,gBAAgB;AACvC,aAAU,YAAY,EAAE;IAC1B,CAAC;;;;;ACvaD;;;;AAiEM,SAAU,IAEda,OACAC,MAEqE;AAErE,MACGD,SAAQ,QAAQC,QAAO,QAEvB,OAAOD,UAAS,YAAY,CAAC,MAAM,QAAQA,KAAI,GAChD;AACA,WAAO,QAAQ,MAAM,CAAC,IAAI,MAAK;AAC7B,UAAIE,OAAM,EAAE,GAAG;AAEb,eAAO,IAAIF,OAAgBC,MAAK,CAAC;;IAErC,CAAC;;AAGH,MAAI,KAAK,WAAW,GAAG;AACrB,WAAO;;AAGT,SAAO,OAAO,KAAK,IAAID,KAAc;AACvC;AAWA,SAAS,OACP,IACAA,OACA,OAIA,KAAW;AAEX,MAAI,OAAOA,UAAS,UAAU;AAC5B,UAAMG,UAAS,OAAO,EAAE;AAExB,UAAMF,OACJ,OAAO,UAAU,aAAa,MAAM,KAAK,IAAI,KAAKE,QAAOH,MAAK,IAAI;AAEpE,QAAIC,SAAQ,IAAI;AACd,aAAOE,QAAOH;eACLC,QAAO,MAAM;AACtB,MAAAE,QAAOH,SAAQC;;AAGjB,OAAG,QAAQ,WAAWG,WAAUD,OAAM;aAC7B,OAAOH,UAAS,UAAU;AACnC,WAAO,KAAKA,KAAI,EAAE,QAAQ,CAAC,GAAG,MAAK;AACjC,aAAO,IAAI,GAAGA,MAAK,IAAI,CAAC;IAC1B,CAAC;;AAEL;AAsBA,SAAS,OACP,IACAA,OAAwB;AAExB,MAAI,CAAC,MAAM,CAACE,OAAM,EAAE;AAAG;AAEvB,QAAMC,UAASE,OAAM,GAAG,QAAQ,QAAQ;AACxC,MAAI,OAAOL,UAAS,UAAU;AAC5B,WAAOG,QAAOH;;AAEhB,MAAI,MAAM,QAAQA,KAAI,GAAG;AACvB,UAAM,YAAoC,CAAA;AAC1C,IAAAA,MAAK,QAAQ,CAAC,SAAQ;AACpB,UAAIG,QAAO,SAAS,MAAM;AACxB,kBAAU,QAAQA,QAAO;;IAE7B,CAAC;AACD,WAAO;;AAET,SAAOA;AACT;AAUA,SAASC,WAAU,KAA2B;AAC5C,SAAO,OAAO,KAAK,GAAG,EAAE,OACtB,CAACE,MAAKN,UAAS,GAAGM,OAAMA,OAAM,MAAM,KAAKN,UAAS,IAAIA,WACtD,EAAE;AAEN;AAUA,SAASK,OAAMF,SAAc;AAC3B,EAAAA,WAAUA,WAAU,IAAI,KAAI;AAE5B,MAAI,CAACA;AAAQ,WAAO,CAAA;AAEpB,QAAM,MAA8B,CAAA;AAEpC,MAAI;AAEJ,aAAWG,QAAOH,QAAO,MAAM,GAAG,GAAG;AACnC,UAAM,IAAIG,KAAI,QAAQ,GAAG;AAEzB,QAAI,IAAI,KAAK,MAAMA,KAAI,SAAS,GAAG;AACjC,YAAM,UAAUA,KAAI,QAAO;AAC3B,UAAI,QAAQ,SAAS,KAAK,QAAQ,QAAW;AAC3C,YAAI,QAAQ,IAAI;;WAEb;AACL,YAAMA,KAAI,MAAM,GAAG,CAAC,EAAE,KAAI;AAC1B,UAAI,OAAOA,KAAI,MAAM,IAAI,CAAC,EAAE,KAAI;;;AAIpC,SAAO;AACT;AA3NA;;;;;;;ACEA;;;;;AAwBM,SAAU,YAAS;AAEvB,QAAM,MAAM,KAAK,eAAc;AAG/B,QAAM,SAAS,IAAI,IACjB,CAACC,UACC,GAAG,mBAAmBA,MAAK,IAAI,KAAK,mBAAmBA,MAAK,KAAK,GAAG;AAIxE,SAAO,OAAO,KAAK,GAAG,EAAE,QAAQ,KAAK,GAAG;AAC1C;AAqBM,SAAU,iBAAc;AAI5B,SAAO,KAAK,IAAI,CAAC,GAAG,SAAQ;AAC1B,UAAM,QAAQ,KAAK,MAAM,IAAI;AAC7B,QAAIC,OAAM,IAAI,KAAK,KAAK,SAAS,QAAQ;AACvC,aAAO,MAAM,KAAK,mBAAmB,EAAE,QAAO;;AAEhD,WAAO,MAAM,OAAO,mBAAmB,EAAE,QAAO;EAClD,CAAC,EACE;IAEC;IAOD,IAA8B,CAAC,GAAG,SAAQ;;AACzC,UAAM,QAAQ,KAAK,MAAM,IAAI;AAC7B,UAAM,OAAO,MAAM,KAAK,MAAM;AAE9B,UAAM,SAAQC,MAAA,MAAM,IAAG,OAAE,QAAAA,QAAA,SAAAA,MAAI;AAG7B,QAAI,MAAM,QAAQ,KAAK,GAAG;AACxB,aAAO,MAAM,IAAI,CAACC,UAKf,EAAE,MAAM,OAAOA,KAAI,QAAQ,OAAO,MAAM,EAAC,EAAG;;AAIjD,WAAO,EAAE,MAAM,OAAO,MAAM,QAAQ,OAAO,MAAM,EAAC;EACpD,CAAC,EACA,QAAO;AACZ;AAjGA,IAMM,qBACA,KACA;AARN;;;AAMA,IAAM,sBAAsB;AAC5B,IAAM,MAAM;AACZ,IAAM,QAAQ;;;;;ACNd,IAYsB;AAZtB;;;AACA;AACA,IAAAC;AACA;AACA;AAQM,IAAgB,UAAhB,MAAuB;MAqB3B,YACE,UACAC,OACA,SAAwB;AAvB1B,aAAA,SAAS;AAyBP,aAAK,UAAU;AACf,aAAK,QAAQA;AAEb,YAAI,UAAU;AACZ,mBAAS,MAAM,GAAG,MAAM,SAAS,QAAQ,OAAO;AAC9C,iBAAK,OAAO,SAAS;;AAEvB,eAAK,SAAS,SAAS;;MAE3B;;AAuDF,YAAQ,UAAU,UAAU;AAK5B,YAAQ,UAAU,SAAS,MAAM,UAAU;AAG3C,YAAQ,UAAU,OAAO,YAAY,MAAM,UAAU,OAAO;AAG5D,WAAO,OACL,QAAQ,WACR,oBACA,oBACA,sBACA,aACA,aAAK;;;;;ACjDD,SAAU,QACdC,QACAC,SAGW;AAeX,SAAO,SAASC,MACd,SACA,SACAC,cAAa,MAAI;AAEjB,QAAK,WAA6B,MAAM;AACtC,YAAM,IAAI,MAAM,iCAAiC;;AAGnD,UAAM,eAAe,EAAE,GAAG,iBAAgB,GAAG,QAAe,OAAO,EAAC;AACpE,UAAM,cAAcH,OAAM,SAAS,cAAcG,aAAY,IAAI;AAGjE,UAAM,sBAAyB,QAAU;MACvC,MACE,UACA,SAA4C;AAE5C,cAAM,UAAU,WAAW,UAAU,OAAO;AAC5C,gBAAQ,aAAa;AAErB,eAAO;MACT;MAEA,OACEC,UACAC,UACAF,aACA,SAA0B;AAE1B,eAAOH,OAAMI,UAASC,UAASF,aAAY,OAAO;MACpD;MAEA,QAAQ,KAAiC;AACvC,eAAOF,QAAO,KAAK,KAAK,OAAO;MACjC;;AAGF,aAAS,WACP,UACA,SACAK,QAAqC,aACrC,MAAqB;AAKrB,UAAI,YAAY,UAAkB,QAAQ;AAAG,eAAO;AAEpD,YAAMD,WAAU;QACd,GAAG;QACH,GAAG,QAAe,IAAI;;AAExB,YAAM,IACJ,OAAOC,UAAS,WACZ,CAACN,OAAMM,OAAMD,UAAS,OAAO,IAAI,CAAC,IAClC,YAAYC,QACZA,QACA,CAACA,KAAI;AACX,YAAM,eAAe,UAAoB,CAAC,IACtC,IACA,IAAI,cAAwB,GAAG,MAAMD,QAAO;AAEhD,mBAAa,QAAQ;AAGrB,UAAI,CAAC,UAAU;AACb,eAAO,IAAI,cAAsB,QAAW,cAAcA,QAAO;;AAGnE,YAAM,WACJ,OAAO,aAAa,YAAY,OAAO,QAAQ,IAE3CL,OAAM,UAAUK,UAAS,OAAO,IAAI,EAAE,WACtCE,QAAO,QAAQ,IAEf,CAAC,QAAQ,IACT,MAAM,QAAQ,QAAQ,IAEtB,WACA;AAEN,YAAM,WAAW,IAAI,cAAc,UAAU,cAAcF,QAAO;AAElE,UAAI,UAAU;AACZ,eAAO;;AAGT,UAAI,OAAO,aAAa,UAAU;AAChC,cAAM,IAAI,MAAM,6BAA6B;;AAI/C,UAAI,SAAS;AAEb,YAAM,gBAA8C,CAAC,UAEjD,eACA,OAAO,YAAY,WACnB,OAAO,OAAO,IAEZ,IAAI,cACF,CAACL,OAAM,SAASK,UAAS,OAAO,IAAI,CAAC,GACrC,cACAA,QAAO,KAGP,SAAS,GAAG,WAAW,UAAgB,gBAC3C,UAAmB,OAAO,IAE1B,UAEA,IAAI,cACF,MAAM,QAAQ,OAAO,IAAI,UAAU,CAAC,OAAO,GAC3C,cACAA,QAAO;AAIb,UAAI,CAAC;AAAe,eAAO;AAK3B,aAAO,cAAc,KAAK,MAAM;IAClC;AAGA,WAAO,OAAO,YAAY,gBAAe;MACvC,MAAAH;MAEA,OAAO;MACP,UAAU;MAEV,IAAI,cAAc;MAElB,WAAW,cAAc;KAC1B;AAED,WAAO;EACT;AACF;AAEA,SAASK,QAAO,KAAQ;AACtB,SACE,CAAC,CAAC,IAAI,QACN,IAAI,SAAS,UACb,IAAI,SAAS,UACb,IAAI,SAAS;AAEjB;AApPA,IAAAC,aAAA;;;AAMA;AACA;AACA;;;;;AC2CO,SAAS,YAAY,IAAI;AAC5B,SAAO,MAAM,SAAS,MAAM;AAChC;AACO,SAAS,gBAAgB,IAAI;AAChC,SAAO,MAAM,SAAS,MAAM;AAChC;AACO,SAAS,0BAA0B,KAAK,KAAK;AAChD,UAAQ,MAAM,SAAS,OAAO,OAAO;AACzC;AAEO,SAAS,mBAAmB,IAAI;AACnC,SAAS,OAAO,MAAQ,OAAO,MAAQ,OAAO,MAAQ,OAAO,KAAQ,OAAO,MAAQ,MAAM,KAAQ,MAAM,MACnG,MAAM,OAAQ,MAAM;AAC7B;AACO,SAAS,qBAAqB,IAAI;AACrC,SAAQ,MAAM,SAAS,MAAM,SAAU,sBAAsB,IAAI,EAAE;AACvE;AAnEA,IAAM,uBAMO,uBACF,aAmCE;AA1Cb;AAAA;AAAA,IAAM,wBAAwB,oBAAI,IAAI;AAAA,MAClC;AAAA,MAAO;AAAA,MAAO;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAC9E;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MACxE;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MAAQ;AAAA,MACxE;AAAA,MAAS;AAAA,MAAS;AAAA,IACtB,CAAC;AACM,IAAM,wBAAwB;AAErC,KAAC,SAAUC,cAAa;AACpB,MAAAA,aAAYA,aAAY,SAAS,MAAM;AACvC,MAAAA,aAAYA,aAAY,UAAU,KAAK;AACvC,MAAAA,aAAYA,aAAY,gBAAgB,KAAK;AAC7C,MAAAA,aAAYA,aAAY,qBAAqB,MAAM;AACnD,MAAAA,aAAYA,aAAY,eAAe,MAAM;AAC7C,MAAAA,aAAYA,aAAY,eAAe,MAAM;AAC7C,MAAAA,aAAYA,aAAY,WAAW,MAAM;AACzC,MAAAA,aAAYA,aAAY,sBAAsB,MAAM;AACpD,MAAAA,aAAYA,aAAY,oBAAoB,MAAM;AAClD,MAAAA,aAAYA,aAAY,iBAAiB,MAAM;AAC/C,MAAAA,aAAYA,aAAY,eAAe,MAAM;AAC7C,MAAAA,aAAYA,aAAY,gBAAgB,MAAM;AAC9C,MAAAA,aAAYA,aAAY,kBAAkB,MAAM;AAChD,MAAAA,aAAYA,aAAY,aAAa,MAAM;AAC3C,MAAAA,aAAYA,aAAY,aAAa,MAAM;AAC3C,MAAAA,aAAYA,aAAY,aAAa,MAAM;AAC3C,MAAAA,aAAYA,aAAY,eAAe,MAAM;AAC7C,MAAAA,aAAYA,aAAY,oBAAoB,MAAM;AAClD,MAAAA,aAAYA,aAAY,iBAAiB,MAAM;AAC/C,MAAAA,aAAYA,aAAY,uBAAuB,MAAM;AACrD,MAAAA,aAAYA,aAAY,mBAAmB,MAAM;AACjD,MAAAA,aAAYA,aAAY,qBAAqB,MAAM;AACnD,MAAAA,aAAYA,aAAY,qBAAqB,MAAM;AACnD,MAAAA,aAAYA,aAAY,qBAAqB,MAAM;AACnD,MAAAA,aAAYA,aAAY,qBAAqB,MAAM;AACnD,MAAAA,aAAYA,aAAY,0BAA0B,MAAM;AACxD,MAAAA,aAAYA,aAAY,kBAAkB,MAAM;AAChD,MAAAA,aAAYA,aAAY,mBAAmB,MAAM;AACjD,MAAAA,aAAYA,aAAY,mBAAmB,OAAO;AAClD,MAAAA,aAAYA,aAAY,mBAAmB,OAAO;AAClD,MAAAA,aAAYA,aAAY,mBAAmB,OAAO;AAClD,MAAAA,aAAYA,aAAY,2BAA2B,SAAS;AAAA,IAChE,GAAG,cAAc,gBAAgB,cAAc,CAAC,EAAE;AAC3C,IAAM,YAAY;AAAA,MACrB,WAAW;AAAA,MACX,aAAa;AAAA,MACb,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,QAAQ;AAAA,IACZ;AAAA;AAAA;;;ACjDA,IAAW;AAAX;AAAA;AACA,KAAC,SAAUC,MAAK;AACZ,MAAAA,KAAI,mCAAmC;AACvC,MAAAA,KAAI,+BAA+B;AACnC,MAAAA,KAAI,4BAA4B;AAChC,MAAAA,KAAI,mDAAmD;AACvD,MAAAA,KAAI,0BAA0B;AAC9B,MAAAA,KAAI,+BAA+B;AACnC,MAAAA,KAAI,4BAA4B;AAChC,MAAAA,KAAI,6BAA6B;AACjC,MAAAA,KAAI,4CAA4C;AAChD,MAAAA,KAAI,oCAAoC;AACxC,MAAAA,KAAI,6CAA6C;AACjD,MAAAA,KAAI,uBAAuB;AAC3B,MAAAA,KAAI,wCAAwC;AAC5C,MAAAA,KAAI,oCAAoC;AACxC,MAAAA,KAAI,6CAA6C;AACjD,MAAAA,KAAI,qDAAqD;AACzD,MAAAA,KAAI,iDAAiD;AACrD,MAAAA,KAAI,sBAAsB;AAC1B,MAAAA,KAAI,cAAc;AAClB,MAAAA,KAAI,2BAA2B;AAC/B,MAAAA,KAAI,wCAAwC;AAC5C,MAAAA,KAAI,gDAAgD;AACpD,MAAAA,KAAI,+DAA+D;AACnE,MAAAA,KAAI,gDAAgD;AACpD,MAAAA,KAAI,+CAA+C;AACnD,MAAAA,KAAI,+CAA+C;AACnD,MAAAA,KAAI,oCAAoC;AACxC,MAAAA,KAAI,oCAAoC;AACxC,MAAAA,KAAI,mCAAmC;AACvC,MAAAA,KAAI,mCAAmC;AACvC,MAAAA,KAAI,wBAAwB;AAC5B,MAAAA,KAAI,8BAA8B;AAClC,MAAAA,KAAI,oCAAoC;AACxC,MAAAA,KAAI,kBAAkB;AACtB,MAAAA,KAAI,mBAAmB;AACvB,MAAAA,KAAI,iCAAiC;AACrC,MAAAA,KAAI,kBAAkB;AACtB,MAAAA,KAAI,8BAA8B;AAClC,MAAAA,KAAI,gBAAgB;AACpB,MAAAA,KAAI,gDAAgD;AACpD,MAAAA,KAAI,4BAA4B;AAChC,MAAAA,KAAI,iCAAiC;AACrC,MAAAA,KAAI,2CAA2C;AAC/C,MAAAA,KAAI,+BAA+B;AACnC,MAAAA,KAAI,oCAAoC;AACxC,MAAAA,KAAI,wCAAwC;AAC5C,MAAAA,KAAI,wBAAwB;AAC5B,MAAAA,KAAI,8CAA8C;AAClD,MAAAA,KAAI,wBAAwB;AAC5B,MAAAA,KAAI,0BAA0B;AAC9B,MAAAA,KAAI,oBAAoB;AACxB,MAAAA,KAAI,sBAAsB;AAC1B,MAAAA,KAAI,sCAAsC;AAC1C,MAAAA,KAAI,2CAA2C;AAC/C,MAAAA,KAAI,uCAAuC;AAC3C,MAAAA,KAAI,8BAA8B;AAClC,MAAAA,KAAI,+BAA+B;AACnC,MAAAA,KAAI,qCAAqC;AACzC,MAAAA,KAAI,0BAA0B;AAC9B,MAAAA,KAAI,wCAAwC;AAAA,IAChD,GAAG,MAAM,QAAQ,MAAM,CAAC,EAAE;AAAA;AAAA;;;AC9D1B,IAGM,0BAIO;AAPb;AAAA;AAAA;AACA;AAEA,IAAM,2BAA2B,KAAK;AAI/B,IAAM,eAAN,MAAmB;AAAA,MACtB,YAAY,SAAS;AACjB,aAAK,UAAU;AACf,aAAK,OAAO;AACZ,aAAK,MAAM;AAEX,aAAK,aAAa;AAClB,aAAK,WAAW,CAAC;AACjB,aAAK,kBAAkB;AACvB,aAAK,mBAAmB;AACxB,aAAK,gBAAgB;AACrB,aAAK,kBAAkB;AACvB,aAAK,QAAQ;AACb,aAAK,eAAe;AACpB,aAAK,oBAAoB;AACzB,aAAK,OAAO;AAEZ,aAAK,gBAAgB;AAAA,MACzB;AAAA,MAEA,IAAI,MAAM;AACN,eAAO,KAAK,MAAM,KAAK,eAAe,OAAO,KAAK,eAAe,KAAK,GAAG;AAAA,MAC7E;AAAA,MACA,IAAI,SAAS;AACT,eAAO,KAAK,oBAAoB,KAAK;AAAA,MACzC;AAAA,MACA,SAAS,MAAM;AACX,cAAM,EAAE,MAAM,KAAK,OAAO,IAAI;AAC9B,eAAO;AAAA,UACH;AAAA,UACA,WAAW;AAAA,UACX,SAAS;AAAA,UACT,UAAU;AAAA,UACV,QAAQ;AAAA,UACR,aAAa;AAAA,UACb,WAAW;AAAA,QACf;AAAA,MACJ;AAAA,MACA,KAAK,MAAM;AACP,YAAI,KAAK,QAAQ,gBAAgB,KAAK,kBAAkB,KAAK,QAAQ;AACjE,eAAK,gBAAgB,KAAK;AAC1B,eAAK,QAAQ,aAAa,KAAK,SAAS,IAAI,CAAC;AAAA,QACjD;AAAA,MACJ;AAAA,MACA,UAAU;AACN,aAAK,SAAS,KAAK,KAAK,UAAU;AAClC,aAAK,aAAa,KAAK;AAAA,MAC3B;AAAA,MACA,kBAAkB,IAAI;AAElB,YAAI,KAAK,QAAQ,KAAK,KAAK,SAAS,GAAG;AACnC,gBAAM,SAAS,KAAK,KAAK,WAAW,KAAK,MAAM,CAAC;AAChD,cAAI,gBAAgB,MAAM,GAAG;AAEzB,iBAAK;AAEL,iBAAK,QAAQ;AACb,mBAAO,0BAA0B,IAAI,MAAM;AAAA,UAC/C;AAAA,QACJ,WAES,CAAC,KAAK,kBAAkB;AAC7B,eAAK,gBAAgB;AACrB,iBAAO,YAAE;AAAA,QACb;AAEA,aAAK,KAAK,IAAI,sBAAsB;AACpC,eAAO;AAAA,MACX;AAAA,MACA,sBAAsB;AAClB,eAAO,KAAK,MAAM,KAAK;AAAA,MAC3B;AAAA,MACA,kBAAkB;AACd,YAAI,KAAK,oBAAoB,GAAG;AAC5B,eAAK,OAAO,KAAK,KAAK,UAAU,KAAK,GAAG;AACxC,eAAK,gBAAgB,KAAK;AAC1B,eAAK,qBAAqB,KAAK;AAC/B,eAAK,MAAM;AACX,eAAK,aAAa;AAClB,eAAK,SAAS,SAAS;AAAA,QAC3B;AAAA,MACJ;AAAA,MACA,MAAM,OAAO,aAAa;AACtB,YAAI,KAAK,KAAK,SAAS,GAAG;AACtB,eAAK,QAAQ;AAAA,QACjB,OACK;AACD,eAAK,OAAO;AAAA,QAChB;AACA,aAAK,gBAAgB;AACrB,aAAK,mBAAmB;AAAA,MAC5B;AAAA,MACA,uBAAuB,OAAO;AAC1B,aAAK,OAAO,KAAK,KAAK,UAAU,GAAG,KAAK,MAAM,CAAC,IAAI,QAAQ,KAAK,KAAK,UAAU,KAAK,MAAM,CAAC;AAC3F,aAAK,gBAAgB;AAAA,MACzB;AAAA,MACA,WAAW,SAAS,eAAe;AAE/B,YAAI,KAAK,MAAM,QAAQ,SAAS,KAAK,KAAK,QAAQ;AAC9C,eAAK,gBAAgB,CAAC,KAAK;AAC3B,iBAAO;AAAA,QACX;AACA,YAAI,eAAe;AACf,iBAAO,KAAK,KAAK,WAAW,SAAS,KAAK,GAAG;AAAA,QACjD;AACA,iBAAS,IAAI,GAAG,IAAI,QAAQ,QAAQ,KAAK;AACrC,gBAAM,KAAK,KAAK,KAAK,WAAW,KAAK,MAAM,CAAC,IAAI;AAChD,cAAI,OAAO,QAAQ,WAAW,CAAC,GAAG;AAC9B,mBAAO;AAAA,UACX;AAAA,QACJ;AACA,eAAO;AAAA,MACX;AAAA,MACA,KAAK,QAAQ;AACT,cAAM,MAAM,KAAK,MAAM;AACvB,YAAI,OAAO,KAAK,KAAK,QAAQ;AACzB,eAAK,gBAAgB,CAAC,KAAK;AAC3B,iBAAO,YAAE;AAAA,QACb;AACA,cAAM,OAAO,KAAK,KAAK,WAAW,GAAG;AACrC,eAAO,SAAS,YAAE,kBAAkB,YAAE,YAAY;AAAA,MACtD;AAAA,MACA,UAAU;AACN,aAAK;AAEL,YAAI,KAAK,OAAO;AACZ,eAAK,QAAQ;AACb,eAAK;AACL,eAAK,eAAe,KAAK;AAAA,QAC7B;AACA,YAAI,KAAK,OAAO,KAAK,KAAK,QAAQ;AAC9B,eAAK,gBAAgB,CAAC,KAAK;AAC3B,iBAAO,YAAE;AAAA,QACb;AACA,YAAI,KAAK,KAAK,KAAK,WAAW,KAAK,GAAG;AAEtC,YAAI,OAAO,YAAE,iBAAiB;AAC1B,eAAK,QAAQ;AACb,eAAK,kBAAkB;AACvB,iBAAO,YAAE;AAAA,QACb;AAGA,YAAI,OAAO,YAAE,WAAW;AACpB,eAAK,QAAQ;AACb,cAAI,KAAK,iBAAiB;AAEtB,iBAAK;AACL,iBAAK,kBAAkB;AACvB,iBAAK,QAAQ;AACb,mBAAO,KAAK,QAAQ;AAAA,UACxB;AAAA,QACJ;AACA,aAAK,kBAAkB;AACvB,YAAI,YAAY,EAAE,GAAG;AACjB,eAAK,KAAK,kBAAkB,EAAE;AAAA,QAClC;AAIA,cAAM,qBAAqB,KAAK,QAAQ,iBAAiB,QACpD,KAAK,MAAQ,KAAK,OACnB,OAAO,YAAE,aACT,OAAO,YAAE,mBACR,KAAK,OAAQ,KAAK;AACvB,YAAI,CAAC,oBAAoB;AACrB,eAAK,+BAA+B,EAAE;AAAA,QAC1C;AACA,eAAO;AAAA,MACX;AAAA,MACA,+BAA+B,IAAI;AAC/B,YAAI,mBAAmB,EAAE,GAAG;AACxB,eAAK,KAAK,IAAI,6BAA6B;AAAA,QAC/C,WACS,qBAAqB,EAAE,GAAG;AAC/B,eAAK,KAAK,IAAI,yBAAyB;AAAA,QAC3C;AAAA,MACJ;AAAA,MACA,QAAQ,OAAO;AACX,aAAK,OAAO;AACZ,eAAO,KAAK,MAAM,KAAK,YAAY;AAC/B,eAAK,aAAa,KAAK,SAAS,IAAI;AACpC,eAAK;AAAA,QACT;AACA,aAAK,QAAQ;AAAA,MACjB;AAAA,IACJ;AAAA;AAAA;;;ACrLO,SAAS,aAAa,OAAO,UAAU;AAC1C,WAAS,IAAI,MAAM,MAAM,SAAS,GAAG,KAAK,GAAG,KAAK;AAC9C,QAAI,MAAM,MAAM,GAAG,SAAS,UAAU;AAClC,aAAO,MAAM,MAAM,GAAG;AAAA,IAC1B;AAAA,EACJ;AACA,SAAO;AACX;AAnBA,IAAW;AAAX;AAAA;AACA,KAAC,SAAUC,YAAW;AAClB,MAAAA,WAAUA,WAAU,eAAe,KAAK;AACxC,MAAAA,WAAUA,WAAU,oBAAoB,KAAK;AAC7C,MAAAA,WAAUA,WAAU,0BAA0B,KAAK;AACnD,MAAAA,WAAUA,WAAU,eAAe,KAAK;AACxC,MAAAA,WAAUA,WAAU,aAAa,KAAK;AACtC,MAAAA,WAAUA,WAAU,aAAa,KAAK;AACtC,MAAAA,WAAUA,WAAU,aAAa,KAAK;AACtC,MAAAA,WAAUA,WAAU,SAAS,KAAK;AAClC,MAAAA,WAAUA,WAAU,iBAAiB,KAAK;AAAA,IAC9C,GAAG,YAAY,cAAc,YAAY,CAAC,EAAE;AAAA;AAAA;;;ACX5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4ZO,SAAS,SAAS,SAAS;AAC9B,MAAIC;AACJ,UAAQA,MAAK,eAAe,IAAI,OAAO,OAAO,QAAQA,QAAO,SAASA,MAAK,OAAO;AACtF;AA4FO,SAAS,iBAAiB,IAAI;AACjC,SAAO,OAAO,EAAE,MAAM,OAAO,EAAE,MAAM,OAAO,EAAE,MAAM,OAAO,EAAE,MAAM,OAAO,EAAE,MAAM,OAAO,EAAE;AAC/F;AAUO,SAAS,iBAAiB,IAAI,kBAAkB;AACnD,SAAO,eAAe,IAAI,EAAE,KAAM,oBAAoB,OAAO,UAAU;AAC3E;AAzgBA,IACW,IASA,OAgBA,eAMA,WAkIA,QA8HL,gBAgIA,GACO,kBA6FP;AA9fN;AAAA;AAEA,KAAC,SAAUC,KAAI;AACX,MAAAA,IAAG,UAAU;AACb,MAAAA,IAAG,YAAY;AACf,MAAAA,IAAG,SAAS;AACZ,MAAAA,IAAG,WAAW;AACd,MAAAA,IAAG,SAAS;AACZ,MAAAA,IAAG,WAAW;AAAA,IAClB,GAAG,KAAK,OAAO,KAAK,CAAC,EAAE;AAEvB,KAAC,SAAUC,QAAO;AACd,MAAAA,OAAM,UAAU;AAChB,MAAAA,OAAM,YAAY;AAClB,MAAAA,OAAM,cAAc;AACpB,MAAAA,OAAM,YAAY;AAClB,MAAAA,OAAM,UAAU;AAChB,MAAAA,OAAM,WAAW;AACjB,MAAAA,OAAM,UAAU;AAChB,MAAAA,OAAM,UAAU;AAAA,IACpB,GAAG,QAAQ,UAAU,QAAQ,CAAC,EAAE;AAOhC,KAAC,SAAUC,gBAAe;AACtB,MAAAA,eAAc,eAAe;AAC7B,MAAAA,eAAc,YAAY;AAC1B,MAAAA,eAAc,oBAAoB;AAAA,IACtC,GAAG,gBAAgB,kBAAkB,gBAAgB,CAAC,EAAE;AAExD,KAAC,SAAUC,YAAW;AAClB,MAAAA,WAAU,OAAO;AACjB,MAAAA,WAAU,aAAa;AACvB,MAAAA,WAAU,oBAAoB;AAC9B,MAAAA,WAAU,YAAY;AACtB,MAAAA,WAAU,UAAU;AACpB,MAAAA,WAAU,aAAa;AACvB,MAAAA,WAAU,WAAW;AACrB,MAAAA,WAAU,OAAO;AACjB,MAAAA,WAAU,UAAU;AACpB,MAAAA,WAAU,cAAc;AACxB,MAAAA,WAAU,aAAa;AACvB,MAAAA,WAAU,SAAS;AACnB,MAAAA,WAAU,gBAAgB;AAC1B,MAAAA,WAAU,UAAU;AACpB,MAAAA,WAAU,QAAQ;AAClB,MAAAA,WAAU,YAAY;AACtB,MAAAA,WAAU,aAAa;AACvB,MAAAA,WAAU,YAAY;AACtB,MAAAA,WAAU,UAAU;AACpB,MAAAA,WAAU,SAAS;AACnB,MAAAA,WAAU,cAAc;AACxB,MAAAA,WAAU,QAAQ;AAClB,MAAAA,WAAU,UAAU;AACpB,MAAAA,WAAU,aAAa;AACvB,MAAAA,WAAU,YAAY;AACtB,MAAAA,WAAU,SAAS;AACnB,MAAAA,WAAU,SAAS;AACnB,MAAAA,WAAU,QAAQ;AAClB,MAAAA,WAAU,QAAQ;AAClB,MAAAA,WAAU,QAAQ;AAClB,MAAAA,WAAU,WAAW;AACrB,MAAAA,WAAU,cAAc;AACxB,MAAAA,WAAU,gBAAgB;AAC1B,MAAAA,WAAU,YAAY;AACtB,MAAAA,WAAU,UAAU;AACpB,MAAAA,WAAU,YAAY;AACtB,MAAAA,WAAU,oBAAoB;AAC9B,MAAAA,WAAU,UAAU;AACpB,MAAAA,WAAU,WAAW;AACrB,MAAAA,WAAU,cAAc;AACxB,MAAAA,WAAU,QAAQ;AAClB,MAAAA,WAAU,QAAQ;AAClB,MAAAA,WAAU,QAAQ;AAClB,MAAAA,WAAU,QAAQ;AAClB,MAAAA,WAAU,QAAQ;AAClB,MAAAA,WAAU,QAAQ;AAClB,MAAAA,WAAU,UAAU;AACpB,MAAAA,WAAU,YAAY;AACtB,MAAAA,WAAU,YAAY;AACtB,MAAAA,WAAU,QAAQ;AAClB,MAAAA,WAAU,UAAU;AACpB,MAAAA,WAAU,OAAO;AACjB,MAAAA,WAAU,SAAS;AACnB,MAAAA,WAAU,WAAW;AACrB,MAAAA,WAAU,WAAW;AACrB,MAAAA,WAAU,YAAY;AACtB,MAAAA,WAAU,YAAY;AACtB,MAAAA,WAAU,WAAW;AACrB,MAAAA,WAAU,QAAQ;AAClB,MAAAA,WAAU,UAAU;AACpB,MAAAA,WAAU,aAAa;AACvB,MAAAA,WAAU,UAAU;AACpB,MAAAA,WAAU,gBAAgB;AAC1B,MAAAA,WAAU,aAAa;AACvB,MAAAA,WAAU,UAAU;AACpB,MAAAA,WAAU,UAAU;AACpB,MAAAA,WAAU,UAAU;AACpB,MAAAA,WAAU,YAAY;AACtB,MAAAA,WAAU,QAAQ;AAClB,MAAAA,WAAU,QAAQ;AAClB,MAAAA,WAAU,QAAQ;AAClB,MAAAA,WAAU,QAAQ;AAClB,MAAAA,WAAU,WAAW;AACrB,MAAAA,WAAU,SAAS;AACnB,MAAAA,WAAU,UAAU;AACpB,MAAAA,WAAU,cAAc;AACxB,MAAAA,WAAU,aAAa;AACvB,MAAAA,WAAU,cAAc;AACxB,MAAAA,WAAU,YAAY;AACtB,MAAAA,WAAU,QAAQ;AAClB,MAAAA,WAAU,cAAc;AACxB,MAAAA,WAAU,YAAY;AACtB,MAAAA,WAAU,OAAO;AACjB,MAAAA,WAAU,WAAW;AACrB,MAAAA,WAAU,eAAe;AACzB,MAAAA,WAAU,SAAS;AACnB,MAAAA,WAAU,QAAQ;AAClB,MAAAA,WAAU,QAAQ;AAClB,MAAAA,WAAU,QAAQ;AAClB,MAAAA,WAAU,SAAS;AACnB,MAAAA,WAAU,UAAU;AACpB,MAAAA,WAAU,OAAO;AACjB,MAAAA,WAAU,YAAY;AACtB,MAAAA,WAAU,aAAa;AACvB,MAAAA,WAAU,YAAY;AACtB,MAAAA,WAAU,YAAY;AACtB,MAAAA,WAAU,WAAW;AACrB,MAAAA,WAAU,UAAU;AACpB,MAAAA,WAAU,YAAY;AACtB,MAAAA,WAAU,YAAY;AACtB,MAAAA,WAAU,WAAW;AACrB,MAAAA,WAAU,SAAS;AACnB,MAAAA,WAAU,aAAa;AACvB,MAAAA,WAAU,SAAS;AACnB,MAAAA,WAAU,WAAW;AACrB,MAAAA,WAAU,WAAW;AACrB,MAAAA,WAAU,cAAc;AACxB,MAAAA,WAAU,cAAc;AACxB,MAAAA,WAAU,WAAW;AACrB,MAAAA,WAAU,QAAQ;AAClB,MAAAA,WAAU,QAAQ;AAClB,MAAAA,WAAU,WAAW;AACrB,MAAAA,WAAU,WAAW;AACrB,MAAAA,WAAU,QAAQ;AAClB,MAAAA,WAAU,WAAW;AACrB,MAAAA,WAAU,QAAQ;AAClB,MAAAA,WAAU,OAAO;AACjB,MAAAA,WAAU,QAAQ;AAClB,MAAAA,WAAU,SAAS;AACnB,MAAAA,WAAU,SAAS;AACnB,MAAAA,WAAU,SAAS;AACnB,MAAAA,WAAU,SAAS;AAAA,IACvB,GAAG,YAAY,cAAc,YAAY,CAAC,EAAE;AAO5C,KAAC,SAAUC,SAAQ;AACf,MAAAA,QAAOA,QAAO,aAAa,KAAK;AAChC,MAAAA,QAAOA,QAAO,OAAO,KAAK;AAC1B,MAAAA,QAAOA,QAAO,aAAa,KAAK;AAChC,MAAAA,QAAOA,QAAO,oBAAoB,KAAK;AACvC,MAAAA,QAAOA,QAAO,YAAY,KAAK;AAC/B,MAAAA,QAAOA,QAAO,UAAU,KAAK;AAC7B,MAAAA,QAAOA,QAAO,aAAa,KAAK;AAChC,MAAAA,QAAOA,QAAO,WAAW,KAAK;AAC9B,MAAAA,QAAOA,QAAO,OAAO,KAAK;AAC1B,MAAAA,QAAOA,QAAO,UAAU,KAAK;AAC7B,MAAAA,QAAOA,QAAO,cAAc,MAAM;AAClC,MAAAA,QAAOA,QAAO,aAAa,MAAM;AACjC,MAAAA,QAAOA,QAAO,SAAS,MAAM;AAC7B,MAAAA,QAAOA,QAAO,gBAAgB,MAAM;AACpC,MAAAA,QAAOA,QAAO,UAAU,MAAM;AAC9B,MAAAA,QAAOA,QAAO,QAAQ,MAAM;AAC5B,MAAAA,QAAOA,QAAO,YAAY,MAAM;AAChC,MAAAA,QAAOA,QAAO,aAAa,MAAM;AACjC,MAAAA,QAAOA,QAAO,YAAY,MAAM;AAChC,MAAAA,QAAOA,QAAO,UAAU,MAAM;AAC9B,MAAAA,QAAOA,QAAO,SAAS,MAAM;AAC7B,MAAAA,QAAOA,QAAO,cAAc,MAAM;AAClC,MAAAA,QAAOA,QAAO,QAAQ,MAAM;AAC5B,MAAAA,QAAOA,QAAO,UAAU,MAAM;AAC9B,MAAAA,QAAOA,QAAO,aAAa,MAAM;AACjC,MAAAA,QAAOA,QAAO,YAAY,MAAM;AAChC,MAAAA,QAAOA,QAAO,SAAS,MAAM;AAC7B,MAAAA,QAAOA,QAAO,SAAS,MAAM;AAC7B,MAAAA,QAAOA,QAAO,QAAQ,MAAM;AAC5B,MAAAA,QAAOA,QAAO,QAAQ,MAAM;AAC5B,MAAAA,QAAOA,QAAO,QAAQ,MAAM;AAC5B,MAAAA,QAAOA,QAAO,WAAW,MAAM;AAC/B,MAAAA,QAAOA,QAAO,cAAc,MAAM;AAClC,MAAAA,QAAOA,QAAO,gBAAgB,MAAM;AACpC,MAAAA,QAAOA,QAAO,YAAY,MAAM;AAChC,MAAAA,QAAOA,QAAO,UAAU,MAAM;AAC9B,MAAAA,QAAOA,QAAO,YAAY,MAAM;AAChC,MAAAA,QAAOA,QAAO,oBAAoB,MAAM;AACxC,MAAAA,QAAOA,QAAO,UAAU,MAAM;AAC9B,MAAAA,QAAOA,QAAO,WAAW,MAAM;AAC/B,MAAAA,QAAOA,QAAO,cAAc,MAAM;AAClC,MAAAA,QAAOA,QAAO,QAAQ,MAAM;AAC5B,MAAAA,QAAOA,QAAO,QAAQ,MAAM;AAC5B,MAAAA,QAAOA,QAAO,QAAQ,MAAM;AAC5B,MAAAA,QAAOA,QAAO,QAAQ,MAAM;AAC5B,MAAAA,QAAOA,QAAO,QAAQ,MAAM;AAC5B,MAAAA,QAAOA,QAAO,QAAQ,MAAM;AAC5B,MAAAA,QAAOA,QAAO,UAAU,MAAM;AAC9B,MAAAA,QAAOA,QAAO,YAAY,MAAM;AAChC,MAAAA,QAAOA,QAAO,YAAY,MAAM;AAChC,MAAAA,QAAOA,QAAO,QAAQ,MAAM;AAC5B,MAAAA,QAAOA,QAAO,UAAU,MAAM;AAC9B,MAAAA,QAAOA,QAAO,OAAO,MAAM;AAC3B,MAAAA,QAAOA,QAAO,SAAS,MAAM;AAC7B,MAAAA,QAAOA,QAAO,WAAW,MAAM;AAC/B,MAAAA,QAAOA,QAAO,WAAW,MAAM;AAC/B,MAAAA,QAAOA,QAAO,YAAY,MAAM;AAChC,MAAAA,QAAOA,QAAO,YAAY,MAAM;AAChC,MAAAA,QAAOA,QAAO,WAAW,MAAM;AAC/B,MAAAA,QAAOA,QAAO,QAAQ,MAAM;AAC5B,MAAAA,QAAOA,QAAO,UAAU,MAAM;AAC9B,MAAAA,QAAOA,QAAO,aAAa,MAAM;AACjC,MAAAA,QAAOA,QAAO,UAAU,MAAM;AAC9B,MAAAA,QAAOA,QAAO,gBAAgB,MAAM;AACpC,MAAAA,QAAOA,QAAO,aAAa,MAAM;AACjC,MAAAA,QAAOA,QAAO,UAAU,MAAM;AAC9B,MAAAA,QAAOA,QAAO,UAAU,MAAM;AAC9B,MAAAA,QAAOA,QAAO,UAAU,MAAM;AAC9B,MAAAA,QAAOA,QAAO,YAAY,MAAM;AAChC,MAAAA,QAAOA,QAAO,QAAQ,MAAM;AAC5B,MAAAA,QAAOA,QAAO,QAAQ,MAAM;AAC5B,MAAAA,QAAOA,QAAO,QAAQ,MAAM;AAC5B,MAAAA,QAAOA,QAAO,QAAQ,MAAM;AAC5B,MAAAA,QAAOA,QAAO,WAAW,MAAM;AAC/B,MAAAA,QAAOA,QAAO,SAAS,MAAM;AAC7B,MAAAA,QAAOA,QAAO,UAAU,MAAM;AAC9B,MAAAA,QAAOA,QAAO,cAAc,MAAM;AAClC,MAAAA,QAAOA,QAAO,aAAa,MAAM;AACjC,MAAAA,QAAOA,QAAO,cAAc,MAAM;AAClC,MAAAA,QAAOA,QAAO,YAAY,MAAM;AAChC,MAAAA,QAAOA,QAAO,QAAQ,MAAM;AAC5B,MAAAA,QAAOA,QAAO,cAAc,MAAM;AAClC,MAAAA,QAAOA,QAAO,YAAY,MAAM;AAChC,MAAAA,QAAOA,QAAO,OAAO,MAAM;AAC3B,MAAAA,QAAOA,QAAO,WAAW,MAAM;AAC/B,MAAAA,QAAOA,QAAO,eAAe,MAAM;AACnC,MAAAA,QAAOA,QAAO,SAAS,MAAM;AAC7B,MAAAA,QAAOA,QAAO,QAAQ,MAAM;AAC5B,MAAAA,QAAOA,QAAO,QAAQ,MAAM;AAC5B,MAAAA,QAAOA,QAAO,QAAQ,MAAM;AAC5B,MAAAA,QAAOA,QAAO,SAAS,MAAM;AAC7B,MAAAA,QAAOA,QAAO,UAAU,MAAM;AAC9B,MAAAA,QAAOA,QAAO,OAAO,MAAM;AAC3B,MAAAA,QAAOA,QAAO,YAAY,MAAM;AAChC,MAAAA,QAAOA,QAAO,aAAa,MAAM;AACjC,MAAAA,QAAOA,QAAO,YAAY,MAAM;AAChC,MAAAA,QAAOA,QAAO,YAAY,MAAM;AAChC,MAAAA,QAAOA,QAAO,WAAW,MAAM;AAC/B,MAAAA,QAAOA,QAAO,UAAU,MAAM;AAC9B,MAAAA,QAAOA,QAAO,YAAY,MAAM;AAChC,MAAAA,QAAOA,QAAO,YAAY,OAAO;AACjC,MAAAA,QAAOA,QAAO,WAAW,OAAO;AAChC,MAAAA,QAAOA,QAAO,SAAS,OAAO;AAC9B,MAAAA,QAAOA,QAAO,aAAa,OAAO;AAClC,MAAAA,QAAOA,QAAO,SAAS,OAAO;AAC9B,MAAAA,QAAOA,QAAO,WAAW,OAAO;AAChC,MAAAA,QAAOA,QAAO,WAAW,OAAO;AAChC,MAAAA,QAAOA,QAAO,cAAc,OAAO;AACnC,MAAAA,QAAOA,QAAO,cAAc,OAAO;AACnC,MAAAA,QAAOA,QAAO,WAAW,OAAO;AAChC,MAAAA,QAAOA,QAAO,QAAQ,OAAO;AAC7B,MAAAA,QAAOA,QAAO,QAAQ,OAAO;AAC7B,MAAAA,QAAOA,QAAO,WAAW,OAAO;AAChC,MAAAA,QAAOA,QAAO,WAAW,OAAO;AAChC,MAAAA,QAAOA,QAAO,QAAQ,OAAO;AAC7B,MAAAA,QAAOA,QAAO,WAAW,OAAO;AAChC,MAAAA,QAAOA,QAAO,QAAQ,OAAO;AAC7B,MAAAA,QAAOA,QAAO,OAAO,OAAO;AAC5B,MAAAA,QAAOA,QAAO,QAAQ,OAAO;AAC7B,MAAAA,QAAOA,QAAO,SAAS,OAAO;AAC9B,MAAAA,QAAOA,QAAO,SAAS,OAAO;AAC9B,MAAAA,QAAOA,QAAO,SAAS,OAAO;AAC9B,MAAAA,QAAOA,QAAO,SAAS,OAAO;AAAA,IAClC,GAAG,SAAS,WAAW,SAAS,CAAC,EAAE;AACnC,IAAM,iBAAiB,oBAAI,IAAI;AAAA,MAC3B,CAAC,UAAU,GAAG,OAAO,CAAC;AAAA,MACtB,CAAC,UAAU,SAAS,OAAO,OAAO;AAAA,MAClC,CAAC,UAAU,gBAAgB,OAAO,cAAc;AAAA,MAChD,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,MAChC,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,MAC5B,CAAC,UAAU,SAAS,OAAO,OAAO;AAAA,MAClC,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,MAC9B,CAAC,UAAU,GAAG,OAAO,CAAC;AAAA,MACtB,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,MAC5B,CAAC,UAAU,UAAU,OAAO,QAAQ;AAAA,MACpC,CAAC,UAAU,SAAS,OAAO,OAAO;AAAA,MAClC,CAAC,UAAU,KAAK,OAAO,GAAG;AAAA,MAC1B,CAAC,UAAU,YAAY,OAAO,UAAU;AAAA,MACxC,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,MAC5B,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,MACxB,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,MAChC,CAAC,UAAU,SAAS,OAAO,OAAO;AAAA,MAClC,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,MAChC,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,MAC5B,CAAC,UAAU,KAAK,OAAO,GAAG;AAAA,MAC1B,CAAC,UAAU,UAAU,OAAO,QAAQ;AAAA,MACpC,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,MACxB,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,MAC5B,CAAC,UAAU,SAAS,OAAO,OAAO;AAAA,MAClC,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,MAChC,CAAC,UAAU,KAAK,OAAO,GAAG;AAAA,MAC1B,CAAC,UAAU,KAAK,OAAO,GAAG;AAAA,MAC1B,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,MACxB,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,MACxB,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,MACxB,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,MAC9B,CAAC,UAAU,UAAU,OAAO,QAAQ;AAAA,MACpC,CAAC,UAAU,YAAY,OAAO,UAAU;AAAA,MACxC,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,MAChC,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,MAC5B,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,MAChC,CAAC,UAAU,gBAAgB,OAAO,cAAc;AAAA,MAChD,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,MAC5B,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,MAC9B,CAAC,UAAU,UAAU,OAAO,QAAQ;AAAA,MACpC,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,MACxB,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,MACxB,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,MACxB,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,MACxB,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,MACxB,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,MACxB,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,MAC5B,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,MAChC,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,MAChC,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,MACxB,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,MAC5B,CAAC,UAAU,GAAG,OAAO,CAAC;AAAA,MACtB,CAAC,UAAU,KAAK,OAAO,GAAG;AAAA,MAC1B,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,MAC9B,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,MAC9B,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,MAChC,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,MAChC,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,MAC9B,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,MACxB,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,MAC5B,CAAC,UAAU,SAAS,OAAO,OAAO;AAAA,MAClC,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,MAC5B,CAAC,UAAU,YAAY,OAAO,UAAU;AAAA,MACxC,CAAC,UAAU,SAAS,OAAO,OAAO;AAAA,MAClC,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,MAC5B,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,MAC5B,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,MAC5B,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,MAChC,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,MACxB,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,MACxB,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,MACxB,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,MACxB,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,MAC9B,CAAC,UAAU,KAAK,OAAO,GAAG;AAAA,MAC1B,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,MAC5B,CAAC,UAAU,UAAU,OAAO,QAAQ;AAAA,MACpC,CAAC,UAAU,SAAS,OAAO,OAAO;AAAA,MAClC,CAAC,UAAU,UAAU,OAAO,QAAQ;AAAA,MACpC,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,MAChC,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,MACxB,CAAC,UAAU,UAAU,OAAO,QAAQ;AAAA,MACpC,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,MAChC,CAAC,UAAU,GAAG,OAAO,CAAC;AAAA,MACtB,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,MAC9B,CAAC,UAAU,WAAW,OAAO,SAAS;AAAA,MACtC,CAAC,UAAU,KAAK,OAAO,GAAG;AAAA,MAC1B,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,MACxB,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,MACxB,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,MACxB,CAAC,UAAU,KAAK,OAAO,GAAG;AAAA,MAC1B,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,MAC5B,CAAC,UAAU,GAAG,OAAO,CAAC;AAAA,MACtB,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,MAChC,CAAC,UAAU,SAAS,OAAO,OAAO;AAAA,MAClC,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,MAChC,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,MAChC,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,MAC9B,CAAC,UAAU,MAAM,OAAO,IAAI;AAAA,MAC5B,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,MAChC,CAAC,UAAU,QAAQ,OAAO,MAAM;AAAA,MAChC,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,MAC9B,CAAC,UAAU,KAAK,OAAO,GAAG;AAAA,MAC1B,CAAC,UAAU,SAAS,OAAO,OAAO;AAAA,MAClC,CAAC,UAAU,KAAK,OAAO,GAAG;AAAA,MAC1B,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,MAC9B,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,MAC9B,CAAC,UAAU,UAAU,OAAO,QAAQ;AAAA,MACpC,CAAC,UAAU,UAAU,OAAO,QAAQ;AAAA,MACpC,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,MAC9B,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,MACxB,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,MACxB,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,MAC9B,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,MAC9B,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,MACxB,CAAC,UAAU,OAAO,OAAO,KAAK;AAAA,MAC9B,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,MACxB,CAAC,UAAU,GAAG,OAAO,CAAC;AAAA,MACtB,CAAC,UAAU,IAAI,OAAO,EAAE;AAAA,MACxB,CAAC,UAAU,KAAK,OAAO,GAAG;AAAA,MAC1B,CAAC,UAAU,KAAK,OAAO,GAAG;AAAA,MAC1B,CAAC,UAAU,KAAK,OAAO,GAAG;AAAA,MAC1B,CAAC,UAAU,KAAK,OAAO,GAAG;AAAA,IAC9B,CAAC;AAKD,IAAM,IAAI;AACH,IAAM,mBAAmB;AAAA,MAC5B,CAAC,GAAG,OAAO,oBAAI,IAAI;AAAA,QACfoBAAI,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,cAAc,CAAC;AAAA,MACxE,CAAC,GAAG,MAAM,oBAAI,IAAI,CAAC,EAAE,OAAO,EAAE,gBAAgB,EAAE,IAAI,CAAC;AAAA,MACrD,CAAC,GAAG,QAAQ,oBAAI,IAAI;AAAA,MACpB,CAAC,GAAG,MAAM,oBAAI,IAAI;AAAA,MAClB,CAAC,GAAG,QAAQ,oBAAI,IAAI;AAAA,IACxB;AAIA,IAAM,iBAAiB,oBAAI,IAAI;AAAA,MAC3B,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,MACV,UAAU;AAAA,IACd,CAAC;AAAA;AAAA;;;AClYD,SAAS,aAAa,IAAI;AACtB,SAAO,MAAM,YAAE,WAAW,MAAM,YAAE;AACtC;AACA,SAAS,aAAa,IAAI;AACtB,SAAO,MAAM,YAAE,mBAAmB,MAAM,YAAE;AAC9C;AACA,SAAS,aAAa,IAAI;AACtB,SAAO,MAAM,YAAE,iBAAiB,MAAM,YAAE;AAC5C;AACA,SAAS,cAAc,IAAI;AACvB,SAAO,aAAa,EAAE,KAAK,aAAa,EAAE;AAC9C;AACA,SAAS,oBAAoB,IAAI;AAC7B,SAAO,cAAc,EAAE,KAAK,aAAa,EAAE;AAC/C;AACA,SAAS,qBAAqB,IAAI;AAC9B,SAAO,MAAM,YAAE,mBAAmB,MAAM,YAAE;AAC9C;AACA,SAAS,qBAAqB,IAAI;AAC9B,SAAO,MAAM,YAAE,iBAAiB,MAAM,YAAE;AAC5C;AACA,SAAS,gBAAgB,IAAI;AACzB,SAAO,aAAa,EAAE,KAAK,qBAAqB,EAAE,KAAK,qBAAqB,EAAE;AAClF;AACA,SAAS,aAAa,IAAI;AACtB,SAAO,KAAK;AAChB;AACA,SAASC,cAAa,IAAI;AACtB,SAAO,OAAO,YAAE,SAAS,OAAO,YAAE,aAAa,OAAO,YAAE,cAAc,OAAO,YAAE;AACnF;AACA,SAAS,8BAA8B,QAAQ;AAC3C,SAAO,WAAW,YAAE,eAAe,oBAAoB,MAAM;AACjE;AACA,SAAS,oCAAoC,IAAI;AAC7C,SAAOA,cAAa,EAAE,KAAK,OAAO,YAAE,WAAW,OAAO,YAAE;AAC5D;AAvKA,IAOM,oCA8BFC,QAmFS,eAiDA;AAzKb;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAM,qCAAqC,oBAAI,IAAI;AAAA,MAC/C,CAAC,KAAM,IAAI;AAAA,MACX,CAAC,KAAM,IAAI;AAAA,MACX,CAAC,KAAM,GAAG;AAAA,MACV,CAAC,KAAM,IAAI;AAAA,MACX,CAAC,KAAM,IAAI;AAAA,MACX,CAAC,KAAM,IAAI;AAAA,MACX,CAAC,KAAM,IAAI;AAAA,MACX,CAAC,KAAM,GAAG;AAAA,MACV,CAAC,KAAM,IAAI;AAAA,MACX,CAAC,KAAM,GAAG;AAAA,MACV,CAAC,KAAM,IAAI;AAAA,MACX,CAAC,KAAM,GAAG;AAAA,MACV,CAAC,KAAM,GAAG;AAAA,MACV,CAAC,KAAM,IAAI;AAAA,MACX,CAAC,KAAM,IAAI;AAAA,MACX,CAAC,KAAM,IAAI;AAAA,MACX,CAAC,KAAM,IAAI;AAAA,MACX,CAAC,KAAM,IAAI;AAAA,MACX,CAAC,KAAM,IAAI;AAAA,MACX,CAAC,KAAM,IAAI;AAAA,MACX,CAAC,KAAM,GAAG;AAAA,MACV,CAAC,KAAM,IAAI;AAAA,MACX,CAAC,KAAM,GAAG;AAAA,MACV,CAAC,KAAM,IAAI;AAAA,MACX,CAAC,KAAM,GAAG;AAAA,MACV,CAAC,KAAM,GAAG;AAAA,MACV,CAAC,KAAM,GAAG;AAAA,IACd,CAAC;AAGD,KAAC,SAAUA,QAAO;AACd,MAAAA,OAAMA,OAAM,UAAU,KAAK;AAC3B,MAAAA,OAAMA,OAAM,YAAY,KAAK;AAC7B,MAAAA,OAAMA,OAAM,aAAa,KAAK;AAC9B,MAAAA,OAAMA,OAAM,iBAAiB,KAAK;AAClC,MAAAA,OAAMA,OAAM,eAAe,KAAK;AAChC,MAAAA,OAAMA,OAAM,cAAc,KAAK;AAC/B,MAAAA,OAAMA,OAAM,kBAAkB,KAAK;AACnC,MAAAA,OAAMA,OAAM,cAAc,KAAK;AAC/B,MAAAA,OAAMA,OAAM,2BAA2B,KAAK;AAC5C,MAAAA,OAAMA,OAAM,yBAAyB,KAAK;AAC1C,MAAAA,OAAMA,OAAM,yBAAyB,MAAM;AAC3C,MAAAA,OAAMA,OAAM,4BAA4B,MAAM;AAC9C,MAAAA,OAAMA,OAAM,0BAA0B,MAAM;AAC5C,MAAAA,OAAMA,OAAM,0BAA0B,MAAM;AAC5C,MAAAA,OAAMA,OAAM,gCAAgC,MAAM;AAClD,MAAAA,OAAMA,OAAM,8BAA8B,MAAM;AAChD,MAAAA,OAAMA,OAAM,8BAA8B,MAAM;AAChD,MAAAA,OAAMA,OAAM,8BAA8B,MAAM;AAChD,MAAAA,OAAMA,OAAM,mCAAmC,MAAM;AACrD,MAAAA,OAAMA,OAAM,yBAAyB,MAAM;AAC3C,MAAAA,OAAMA,OAAM,8BAA8B,MAAM;AAChD,MAAAA,OAAMA,OAAM,mCAAmC,MAAM;AACrD,MAAAA,OAAMA,OAAM,wCAAwC,MAAM;AAC1D,MAAAA,OAAMA,OAAM,sCAAsC,MAAM;AACxD,MAAAA,OAAMA,OAAM,sCAAsC,MAAM;AACxD,MAAAA,OAAMA,OAAM,qCAAqC,MAAM;AACvD,MAAAA,OAAMA,OAAM,gCAAgC,MAAM;AAClD,MAAAA,OAAMA,OAAM,qCAAqC,MAAM;AACvD,MAAAA,OAAMA,OAAM,0CAA0C,MAAM;AAC5D,MAAAA,OAAMA,OAAM,+CAA+C,MAAM;AACjE,MAAAA,OAAMA,OAAM,mCAAmC,MAAM;AACrD,MAAAA,OAAMA,OAAM,2BAA2B,MAAM;AAC7C,MAAAA,OAAMA,OAAM,oBAAoB,MAAM;AACtC,MAAAA,OAAMA,OAAM,0BAA0B,MAAM;AAC5C,MAAAA,OAAMA,OAAM,4BAA4B,MAAM;AAC9C,MAAAA,OAAMA,OAAM,mCAAmC,MAAM;AACrD,MAAAA,OAAMA,OAAM,mCAAmC,MAAM;AACrD,MAAAA,OAAMA,OAAM,8BAA8B,MAAM;AAChD,MAAAA,OAAMA,OAAM,kCAAkC,MAAM;AACpD,MAAAA,OAAMA,OAAM,4BAA4B,MAAM;AAC9C,MAAAA,OAAMA,OAAM,mBAAmB,MAAM;AACrC,MAAAA,OAAMA,OAAM,6BAA6B,MAAM;AAC/C,MAAAA,OAAMA,OAAM,mBAAmB,MAAM;AACrC,MAAAA,OAAMA,OAAM,wBAAwB,MAAM;AAC1C,MAAAA,OAAMA,OAAM,aAAa,MAAM;AAC/B,MAAAA,OAAMA,OAAM,4BAA4B,MAAM;AAC9C,MAAAA,OAAMA,OAAM,iCAAiC,MAAM;AACnD,MAAAA,OAAMA,OAAM,sCAAsC,MAAM;AACxD,MAAAA,OAAMA,OAAM,2CAA2C,MAAM;AAC7D,MAAAA,OAAMA,OAAM,sBAAsB,MAAM;AACxC,MAAAA,OAAMA,OAAM,iBAAiB,MAAM;AACnC,MAAAA,OAAMA,OAAM,sBAAsB,MAAM;AACxC,MAAAA,OAAMA,OAAM,aAAa,MAAM;AAC/B,MAAAA,OAAMA,OAAM,yBAAyB,MAAM;AAC3C,MAAAA,OAAMA,OAAM,kBAAkB,MAAM;AACpC,MAAAA,OAAMA,OAAM,wBAAwB,MAAM;AAC1C,MAAAA,OAAMA,OAAM,kCAAkC,MAAM;AACpD,MAAAA,OAAMA,OAAM,sCAAsC,MAAM;AACxD,MAAAA,OAAMA,OAAM,6CAA6C,MAAM;AAC/D,MAAAA,OAAMA,OAAM,6CAA6C,MAAM;AAC/D,MAAAA,OAAMA,OAAM,qCAAqC,MAAM;AACvD,MAAAA,OAAMA,OAAM,mDAAmD,MAAM;AACrE,MAAAA,OAAMA,OAAM,kCAAkC,MAAM;AACpD,MAAAA,OAAMA,OAAM,sCAAsC,MAAM;AACxD,MAAAA,OAAMA,OAAM,6CAA6C,MAAM;AAC/D,MAAAA,OAAMA,OAAM,6CAA6C,MAAM;AAC/D,MAAAA,OAAMA,OAAM,qCAAqC,MAAM;AACvD,MAAAA,OAAMA,OAAM,mBAAmB,MAAM;AACrC,MAAAA,OAAMA,OAAM,mBAAmB,MAAM;AACrC,MAAAA,OAAMA,OAAM,2BAA2B,MAAM;AAC7C,MAAAA,OAAMA,OAAM,uBAAuB,MAAM;AACzC,MAAAA,OAAMA,OAAM,yBAAyB,MAAM;AAC3C,MAAAA,OAAMA,OAAM,+BAA+B,MAAM;AACjD,MAAAA,OAAMA,OAAM,yBAAyB,MAAM;AAC3C,MAAAA,OAAMA,OAAM,iCAAiC,MAAM;AACnD,MAAAA,OAAMA,OAAM,2CAA2C,MAAM;AAC7D,MAAAA,OAAMA,OAAM,qCAAqC,MAAM;AACvD,MAAAA,OAAMA,OAAM,iCAAiC,MAAM;AACnD,MAAAA,OAAMA,OAAM,qCAAqC,MAAM;AAAA,IAC3D,GAAGA,WAAUA,SAAQ,CAAC,EAAE;AAEjB,IAAM,gBAAgB;AAAA,MACzB,MAAMA,OAAM;AAAA,MACZ,QAAQA,OAAM;AAAA,MACd,SAASA,OAAM;AAAA,MACf,aAAaA,OAAM;AAAA,MACnB,WAAWA,OAAM;AAAA,MACjB,eAAeA,OAAM;AAAA,IACzB;AA0CO,IAAM,YAAN,MAAgB;AAAA,MACnB,YAAY,SAAS,SAAS;AAC1B,aAAK,UAAU;AACf,aAAK,UAAU;AACf,aAAK,SAAS;AAEd,aAAK,SAAS;AAOd,aAAK,gBAAgB;AACrB,aAAK,mBAAmB;AACxB,aAAK,SAAS;AACd,aAAK,QAAQA,OAAM;AACnB,aAAK,cAAcA,OAAM;AACzB,aAAK,cAAc;AACnB,aAAK,wBAAwB;AAC7B,aAAK,wBAAwB;AAC7B,aAAK,eAAe;AACpB,aAAK,cAAc,EAAE,MAAM,IAAI,OAAO,GAAG;AACzC,aAAK,eAAe,IAAI,aAAa,OAAO;AAC5C,aAAK,kBAAkB,KAAK,mBAAmB,EAAE;AAAA,MACrD;AAAA,MAEA,KAAK,MAAM;AACP,YAAIC,KAAI;AACR,SAAC,MAAMA,MAAK,KAAK,SAAS,kBAAkB,QAAQ,OAAO,SAAS,SAAS,GAAG,KAAKA,KAAI,KAAK,aAAa,SAAS,IAAI,CAAC;AAAA,MAC7H;AAAA,MAEA,mBAAmB,QAAQ;AACvB,YAAI,CAAC,KAAK,QAAQ,wBAAwB;AACtC,iBAAO;AAAA,QACX;AACA,eAAO;AAAA,UACH,WAAW,KAAK,aAAa;AAAA,UAC7B,UAAU,KAAK,aAAa,MAAM;AAAA,UAClC,aAAa,KAAK,aAAa,SAAS;AAAA,UACxC,SAAS;AAAA,UACT,QAAQ;AAAA,UACR,WAAW;AAAA,QACf;AAAA,MACJ;AAAA,MACA,kBAAkB;AACd,YAAI,KAAK;AACL;AACJ,aAAK,SAAS;AACd,eAAO,KAAK,UAAU,CAAC,KAAK,QAAQ;AAChC,eAAK,wBAAwB;AAC7B,gBAAM,KAAK,KAAK,SAAS;AACzB,cAAI,CAAC,KAAK,mBAAmB,GAAG;AAC5B,iBAAK,WAAW,EAAE;AAAA,UACtB;AAAA,QACJ;AACA,aAAK,SAAS;AAAA,MAClB;AAAA,MAEA,QAAQ;AACJ,aAAK,SAAS;AAAA,MAClB;AAAA,MACA,OAAO,eAAe;AAClB,YAAI,CAAC,KAAK,QAAQ;AACd,gBAAM,IAAI,MAAM,4BAA4B;AAAA,QAChD;AACA,aAAK,SAAS;AAEd,YAAI,KAAK;AACL;AACJ,aAAK,gBAAgB;AACrB,YAAI,CAAC,KAAK,QAAQ;AACd,4BAAkB,QAAQ,kBAAkB,SAAS,SAAS,cAAc;AAAA,QAChF;AAAA,MACJ;AAAA,MACA,MAAM,OAAO,aAAa,eAAe;AACrC,aAAK,SAAS;AACd,aAAK,aAAa,MAAM,OAAO,WAAW;AAC1C,aAAK,gBAAgB;AACrB,YAAI,CAAC,KAAK,QAAQ;AACd,4BAAkB,QAAQ,kBAAkB,SAAS,SAAS,cAAc;AAAA,QAChF;AAAA,MACJ;AAAA,MACA,uBAAuB,OAAO;AAC1B,aAAK,SAAS;AACd,aAAK,aAAa,uBAAuB,KAAK;AAC9C,aAAK,gBAAgB;AAAA,MACzB;AAAA,MAEA,qBAAqB;AACjB,YAAI,KAAK,aAAa,eAAe;AACjC,eAAK,WAAW,KAAK,qBAAqB;AAC1C,eAAK,SAAS;AACd,iBAAO;AAAA,QACX;AACA,eAAO;AAAA,MACX;AAAA,MAEA,WAAW;AACP,aAAK;AACL,eAAO,KAAK,aAAa,QAAQ;AAAA,MACrC;AAAA,MACA,WAAW,OAAO;AACd,aAAK,yBAAyB;AAC9B,aAAK,aAAa,QAAQ,KAAK;AAAA,MACnC;AAAA,MACA,kBAAkB,OAAO,IAAI;AACzB,aAAK,QAAQ;AACb,aAAK,WAAW,EAAE;AAAA,MACtB;AAAA,MACA,WAAW,OAAO;AACd,aAAK,yBAAyB;AAC9B,iBAAS,IAAI,GAAG,IAAI,OAAO,KAAK;AAC5B,eAAK,aAAa,QAAQ;AAAA,QAC9B;AAAA,MACJ;AAAA,MACA,wBAAwB,SAAS,eAAe;AAC5C,YAAI,KAAK,aAAa,WAAW,SAAS,aAAa,GAAG;AAEtD,eAAK,WAAW,QAAQ,SAAS,CAAC;AAClC,iBAAO;AAAA,QACX;AACA,eAAO;AAAA,MACX;AAAA,MAEA,uBAAuB;AACnB,aAAK,eAAe;AAAA,UAChB,MAAM,UAAU;AAAA,UAChB,SAAS;AAAA,UACT,OAAO,OAAO;AAAA,UACd,aAAa;AAAA,UACb,gBAAgB;AAAA,UAChB,OAAO,CAAC;AAAA,UACR,UAAU,KAAK,mBAAmB,CAAC;AAAA,QACvC;AAAA,MACJ;AAAA,MACA,qBAAqB;AACjB,aAAK,eAAe;AAAA,UAChB,MAAM,UAAU;AAAA,UAChB,SAAS;AAAA,UACT,OAAO,OAAO;AAAA,UACd,aAAa;AAAA,UACb,gBAAgB;AAAA,UAChB,OAAO,CAAC;AAAA,UACR,UAAU,KAAK,mBAAmB,CAAC;AAAA,QACvC;AAAA,MACJ;AAAA,MACA,oBAAoB,QAAQ;AACxB,aAAK,eAAe;AAAA,UAChB,MAAM,UAAU;AAAA,UAChB,MAAM;AAAA,UACN,UAAU,KAAK,mBAAmB,MAAM;AAAA,QAC5C;AAAA,MACJ;AAAA,MACA,oBAAoB,aAAa;AAC7B,aAAK,eAAe;AAAA,UAChB,MAAM,UAAU;AAAA,UAChB,MAAM;AAAA,UACN,aAAa;AAAA,UACb,UAAU;AAAA,UACV,UAAU;AAAA,UACV,UAAU,KAAK;AAAA,QACnB;AAAA,MACJ;AAAA,MACA,sBAAsBC,OAAM,OAAO;AAC/B,aAAK,wBAAwB;AAAA,UACzB,MAAAA;AAAA,UACA;AAAA,UACA,UAAU,KAAK;AAAA,QACnB;AAAA,MACJ;AAAA,MAEA,YAAY,iBAAiB;AACzB,aAAK,cAAc;AAAA,UACf,MAAM;AAAA,UACN,OAAO;AAAA,QACX;AACA,aAAK,kBAAkB,KAAK,mBAAmB,CAAC;AAAA,MACpD;AAAA,MACA,iBAAiB;AACb,YAAID;AACJ,YAAI;AACJ,cAAM,QAAQ,KAAK;AACnB,YAAI,aAAa,OAAO,KAAK,YAAY,IAAI,MAAM,MAAM;AACrD,gBAAM,MAAM,KAAK,KAAK,WAAW;AACjC,cAAI,MAAM,YAAY,KAAK,iBAAiB;AACxC,kBAAM,iBAAkBA,OAAM,KAAK,MAAM,UAAU,WAAW,QAAQA,QAAO,SAASA,MAAM,GAAG,QAAQ,uBAAO,OAAO,IAAI;AACzH,0BAAc,KAAK,YAAY,QAAQ,KAAK;AAE5C,iBAAK,gBAAgB;AAAA,UACzB;AAAA,QACJ,OACK;AACD,eAAK,KAAK,IAAI,kBAAkB;AAAA,QACpC;AAAA,MACJ;AAAA,MACA,kBAAkB;AACd,YAAI,KAAK,iBAAiB;AACtB,eAAK,gBAAgB,UAAU,KAAK,aAAa;AACjD,eAAK,gBAAgB,SAAS,KAAK,aAAa;AAChD,eAAK,gBAAgB,YAAY,KAAK,aAAa;AAAA,QACvD;AAAA,MACJ;AAAA,MAEA,aAAa,IAAI;AACb,aAAK,2BAA2B,GAAG,QAAQ;AAC3C,aAAK,eAAe;AACpB,YAAI,GAAG,UAAU;AACb,aAAG,SAAS,UAAU,KAAK,aAAa;AACxC,aAAG,SAAS,SAAS,KAAK,aAAa,MAAM;AAC7C,aAAG,SAAS,YAAY,KAAK,aAAa,SAAS;AAAA,QACvD;AACA,aAAK,kBAAkB,KAAK,mBAAmB,EAAE;AAAA,MACrD;AAAA,MACA,sBAAsB;AAClB,cAAM,KAAK,KAAK;AAChB,aAAK,aAAa,EAAE;AACpB,WAAG,QAAQ,SAAS,GAAG,OAAO;AAC9B,YAAI,GAAG,SAAS,UAAU,WAAW;AACjC,eAAK,mBAAmB,GAAG;AAC3B,eAAK,QAAQ,WAAW,EAAE;AAAA,QAC9B,OACK;AACD,cAAI,GAAG,MAAM,SAAS,GAAG;AACrB,iBAAK,KAAK,IAAI,oBAAoB;AAAA,UACtC;AACA,cAAI,GAAG,aAAa;AAChB,iBAAK,KAAK,IAAI,yBAAyB;AAAA,UAC3C;AACA,eAAK,QAAQ,SAAS,EAAE;AAAA,QAC5B;AACA,aAAK,aAAa,gBAAgB;AAAA,MACtC;AAAA,MACA,mBAAmB,IAAI;AACnB,aAAK,aAAa,EAAE;AACpB,aAAK,QAAQ,UAAU,EAAE;AACzB,aAAK,aAAa,gBAAgB;AAAA,MACtC;AAAA,MACA,mBAAmB,IAAI;AACnB,aAAK,aAAa,EAAE;AACpB,aAAK,QAAQ,UAAU,EAAE;AACzB,aAAK,aAAa,gBAAgB;AAAA,MACtC;AAAA,MACA,2BAA2B,cAAc;AACrC,YAAI,KAAK,uBAAuB;AAG5B,cAAI,gBAAgB,KAAK,sBAAsB,UAAU;AACrD,iBAAK,sBAAsB,SAAS,UAAU,aAAa;AAC3D,iBAAK,sBAAsB,SAAS,SAAS,aAAa;AAC1D,iBAAK,sBAAsB,SAAS,YAAY,aAAa;AAAA,UACjE;AACA,kBAAQ,KAAK,sBAAsB,MAAM;AAAA,YACrC,KAAK,UAAU,WAAW;AACtB,mBAAK,QAAQ,YAAY,KAAK,qBAAqB;AACnD;AAAA,YACJ;AAAA,YACA,KAAK,UAAU,gBAAgB;AAC3B,mBAAK,QAAQ,gBAAgB,KAAK,qBAAqB;AACvD;AAAA,YACJ;AAAA,YACA,KAAK,UAAU,sBAAsB;AACjC,mBAAK,QAAQ,sBAAsB,KAAK,qBAAqB;AAC7D;AAAA,YACJ;AAAA,UACJ;AACA,eAAK,wBAAwB;AAAA,QACjC;AAAA,MACJ;AAAA,MACA,gBAAgB;AACZ,cAAME,YAAW,KAAK,mBAAmB,CAAC;AAC1C,YAAIA,WAAU;AACV,UAAAA,UAAS,UAAUA,UAAS;AAC5B,UAAAA,UAAS,SAASA,UAAS;AAC3B,UAAAA,UAAS,YAAYA,UAAS;AAAA,QAClC;AACA,aAAK,2BAA2BA,SAAQ;AACxC,aAAK,QAAQ,MAAM,EAAE,MAAM,UAAU,KAAK,UAAAA,UAAS,CAAC;AACpD,aAAK,SAAS;AAAA,MAClB;AAAA,MAUA,mCAAmCD,OAAM,IAAI;AACzC,YAAI,KAAK,uBAAuB;AAC5B,cAAI,KAAK,sBAAsB,SAASA,OAAM;AAC1C,iBAAK,kBAAkB,KAAK,mBAAmB,CAAC;AAChD,iBAAK,2BAA2B,KAAK,eAAe;AACpD,iBAAK,aAAa,gBAAgB;AAAA,UACtC,OACK;AACD,iBAAK,sBAAsB,SAAS;AACpC;AAAA,UACJ;AAAA,QACJ;AACA,aAAK,sBAAsBA,OAAM,EAAE;AAAA,MACvC;AAAA,MACA,eAAe,IAAI;AACf,cAAMA,QAAOH,cAAa,EAAE,IACtB,UAAU,uBACV,OAAO,YAAE,OACL,UAAU,iBACV,UAAU;AACpB,aAAK,mCAAmCG,OAAM,OAAO,cAAc,EAAE,CAAC;AAAA,MAC1E;AAAA,MAGA,WAAW,IAAI;AACX,aAAK,mCAAmC,UAAU,WAAW,EAAE;AAAA,MACnE;AAAA,MAEA,8BAA8B,IAAI;AAC9B,YAAI,SAAS;AACb,YAAI,SAAS;AACb,YAAI,mBAAmB;AACvB,iBAAS,IAAI,GAAG,UAAU,yBAAe,IAAI,KAAK,GAAG,KAAK,KAAK,SAAS,GAAG;AACvE,cAAI,gBAAgB,0BAAgB,SAAS,IAAI,GAAG,EAAE;AACtD,cAAI,IAAI;AACJ;AACJ,oBAAU;AACV,oBAAU,yBAAe;AACzB,gBAAM,SAAS,UAAU,aAAa;AAEtC,cAAI,QAAQ;AAER,kBAAM,eAAe,UAAU,MAAM;AAGrC,gBAAI,OAAO,YAAE,aACT,KAAK,iCAAiC,KACtC,8BAA8B,KAAK,aAAa,KAAK,CAAC,CAAC,GAAG;AAG1D,uBAAS,CAAC,YAAE,SAAS;AAErB,mBAAK;AAAA,YACT,OACK;AAED,uBACI,gBAAgB,IACV,CAAC,yBAAe,KAAK,CAAC,aAAa,YAAY,IAC/C,gBAAgB,IACZ,CAAC,yBAAe,EAAE,EAAE,IACpB,CAAC,yBAAe,EAAE,IAAI,yBAAe,EAAE,EAAE;AACvD,uBAAS;AACT,iCAAmB,OAAO,YAAE;AAAA,YAChC;AACA,gBAAI,gBAAgB,GAAG;AAEnB,mBAAK,SAAS;AACd;AAAA,YACJ;AAAA,UACJ;AAAA,QACJ;AACA,aAAK,WAAW,MAAM;AACtB,YAAI,oBAAoB,CAAC,KAAK,aAAa,eAAe;AACtD,eAAK,KAAK,IAAI,uCAAuC;AAAA,QACzD;AAIA,aAAK,WAAW,CAAC;AACjB,eAAO;AAAA,MACX;AAAA,MACA,mCAAmC;AAC/B,eAAQ,KAAK,gBAAgBF,OAAM,iCAC/B,KAAK,gBAAgBA,OAAM,iCAC3B,KAAK,gBAAgBA,OAAM;AAAA,MACnC;AAAA,MACA,4CAA4C,IAAI;AAC5C,YAAI,KAAK,iCAAiC,GAAG;AACzC,eAAK,YAAY,SAAS,OAAO,cAAc,EAAE;AAAA,QACrD,OACK;AACD,eAAK,eAAe,EAAE;AAAA,QAC1B;AAAA,MACJ;AAAA,MAEA,WAAW,IAAI;AACX,gBAAQ,KAAK,OAAO;AAAA,UAChB,KAAKA,OAAM,MAAM;AACb,iBAAK,WAAW,EAAE;AAClB;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,QAAQ;AACf,iBAAK,aAAa,EAAE;AACpB;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,SAAS;AAChB,iBAAK,cAAc,EAAE;AACrB;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,aAAa;AACpB,iBAAK,iBAAiB,EAAE;AACxB;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,WAAW;AAClB,iBAAK,gBAAgB,EAAE;AACvB;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,UAAU;AACjB,iBAAK,cAAc,EAAE;AACrB;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,cAAc;AACrB,iBAAK,iBAAiB,EAAE;AACxB;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,UAAU;AACjB,iBAAK,cAAc,EAAE;AACrB;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,uBAAuB;AAC9B,iBAAK,yBAAyB,EAAE;AAChC;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,qBAAqB;AAC5B,iBAAK,uBAAuB,EAAE;AAC9B;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,qBAAqB;AAC5B,iBAAK,uBAAuB,EAAE;AAC9B;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,wBAAwB;AAC/B,iBAAK,0BAA0B,EAAE;AACjC;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,sBAAsB;AAC7B,iBAAK,wBAAwB,EAAE;AAC/B;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,sBAAsB;AAC7B,iBAAK,wBAAwB,EAAE;AAC/B;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,4BAA4B;AACnC,iBAAK,6BAA6B,EAAE;AACpC;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,0BAA0B;AACjC,iBAAK,2BAA2B,EAAE;AAClC;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,0BAA0B;AACjC,iBAAK,2BAA2B,EAAE;AAClC;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,0BAA0B;AACjC,iBAAK,4BAA4B,EAAE;AACnC;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,+BAA+B;AACtC,iBAAK,gCAAgC,EAAE;AACvC;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,qBAAqB;AAC5B,iBAAK,wBAAwB,EAAE;AAC/B;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,0BAA0B;AACjC,iBAAK,4BAA4B,EAAE;AACnC;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,+BAA+B;AACtC,iBAAK,gCAAgC,EAAE;AACvC;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,oCAAoC;AAC3C,iBAAK,oCAAoC,EAAE;AAC3C;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,kCAAkC;AACzC,iBAAK,kCAAkC,EAAE;AACzC;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,kCAAkC;AACzC,iBAAK,kCAAkC,EAAE;AACzC;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,iCAAiC;AACxC,iBAAK,kCAAkC,EAAE;AACzC;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,4BAA4B;AACnC,iBAAK,8BAA8B,EAAE;AACrC;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,iCAAiC;AACxC,iBAAK,kCAAkC,EAAE;AACzC;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,sCAAsC;AAC7C,iBAAK,sCAAsC,EAAE;AAC7C;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,2CAA2C;AAClD,iBAAK,0CAA0C,EAAE;AACjD;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,+BAA+B;AACtC,iBAAK,gCAAgC,EAAE;AACvC;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,uBAAuB;AAC9B,iBAAK,0BAA0B,EAAE;AACjC;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,gBAAgB;AACvB,iBAAK,oBAAoB,EAAE;AAC3B;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,sBAAsB;AAC7B,iBAAK,yBAAyB,EAAE;AAChC;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,wBAAwB;AAC/B,iBAAK,2BAA2B,EAAE;AAClC;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,+BAA+B;AACtC,iBAAK,iCAAiC,EAAE;AACxC;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,+BAA+B;AACtC,iBAAK,iCAAiC,EAAE;AACxC;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,0BAA0B;AACjC,iBAAK,6BAA6B,EAAE;AACpC;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,8BAA8B;AACrC,iBAAK,gCAAgC,EAAE;AACvC;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,wBAAwB;AAC/B,iBAAK,0BAA0B,EAAE;AACjC;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,eAAe;AACtB,iBAAK,mBAAmB,EAAE;AAC1B;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,yBAAyB;AAChC,iBAAK,4BAA4B,EAAE;AACnC;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,eAAe;AACtB,iBAAK,mBAAmB,EAAE;AAC1B;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,oBAAoB;AAC3B,iBAAK,uBAAuB,EAAE;AAC9B;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,SAAS;AAChB,iBAAK,cAAc,EAAE;AACrB;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,wBAAwB;AAC/B,iBAAK,0BAA0B,EAAE;AACjC;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,6BAA6B;AACpC,iBAAK,8BAA8B,EAAE;AACrC;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,kCAAkC;AACzC,iBAAK,kCAAkC,EAAE;AACzC;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,uCAAuC;AAC9C,iBAAK,sCAAsC,EAAE;AAC7C;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,kBAAkB;AACzB,iBAAK,qBAAqB,EAAE;AAC5B;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,aAAa;AACpB,iBAAK,iBAAiB,EAAE;AACxB;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,kBAAkB;AACzB,iBAAK,qBAAqB,EAAE;AAC5B;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,SAAS;AAChB,iBAAK,cAAc,EAAE;AACrB;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,qBAAqB;AAC5B,iBAAK,wBAAwB,EAAE;AAC/B;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,cAAc;AACrB,iBAAK,kBAAkB,EAAE;AACzB;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,oBAAoB;AAC3B,iBAAK,uBAAuB,EAAE;AAC9B;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,8BAA8B;AACrC,iBAAK,gCAAgC,EAAE;AACvC;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,kCAAkC;AACzC,iBAAK,oCAAoC,EAAE;AAC3C;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,yCAAyC;AAChD,iBAAK,0CAA0C,EAAE;AACjD;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,yCAAyC;AAChD,iBAAK,0CAA0C,EAAE;AACjD;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,iCAAiC;AACxC,iBAAK,mCAAmC,EAAE;AAC1C;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,+CAA+C;AACtD,iBAAK,+CAA+C,EAAE;AACtD;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,8BAA8B;AACrC,iBAAK,gCAAgC,EAAE;AACvC;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,kCAAkC;AACzC,iBAAK,oCAAoC,EAAE;AAC3C;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,yCAAyC;AAChD,iBAAK,0CAA0C,EAAE;AACjD;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,yCAAyC;AAChD,iBAAK,0CAA0C,EAAE;AACjD;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,iCAAiC;AACxC,iBAAK,mCAAmC,EAAE;AAC1C;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,eAAe;AACtB,iBAAK,mBAAmB,EAAE;AAC1B;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,eAAe;AACtB,iBAAK,mBAAmB,EAAE;AAC1B;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,uBAAuB;AAC9B,iBAAK,0BAA0B,EAAE;AACjC;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,mBAAmB;AAC1B,iBAAK,sBAAsB,EAAE;AAC7B;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,qBAAqB;AAC5B,iBAAK,yBAAyB,EAAE;AAChC;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,2BAA2B;AAClC,iBAAK,8BAA8B,EAAE;AACrC;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,qBAAqB;AAC5B,iBAAK,yBAAyB,EAAE;AAChC;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,6BAA6B;AACpC,iBAAK,gCAAgC,EAAE;AACvC;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,uCAAuC;AAC9C,iBAAK,yCAAyC,EAAE;AAChD;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,iCAAiC;AACxC,iBAAK,oCAAoC,EAAE;AAC3C;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,6BAA6B;AACpC,iBAAK,gCAAgC,EAAE;AACvC;AAAA,UACJ;AAAA,UACA,KAAKA,OAAM,iCAAiC;AACxC,iBAAK,mCAAmC,EAAE;AAC1C;AAAA,UACJ;AAAA,UACA,SAAS;AACL,kBAAM,IAAI,MAAM,eAAe;AAAA,UACnC;AAAA,QACJ;AAAA,MACJ;AAAA,MAIA,WAAW,IAAI;AACX,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE,gBAAgB;AACnB,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,WAAW;AACd,iBAAK,cAAcA,OAAM;AACzB,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,MAAM;AACT,iBAAK,KAAK,IAAI,uBAAuB;AACrC,iBAAK,eAAe,EAAE;AACtB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,KAAK;AACR,iBAAK,cAAc;AACnB;AAAA,UACJ;AAAA,UACA,SAAS;AACL,iBAAK,eAAe,EAAE;AAAA,UAC1B;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,aAAa,IAAI;AACb,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE,WAAW;AACd,iBAAK,cAAcA,OAAM;AACzB,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,gBAAgB;AACnB,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,MAAM;AACT,iBAAK,KAAK,IAAI,uBAAuB;AACrC,iBAAK,WAAW,qBAAqB;AACrC;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,KAAK;AACR,iBAAK,cAAc;AACnB;AAAA,UACJ;AAAA,UACA,SAAS;AACL,iBAAK,eAAe,EAAE;AAAA,UAC1B;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,cAAc,IAAI;AACd,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE,gBAAgB;AACnB,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,MAAM;AACT,iBAAK,KAAK,IAAI,uBAAuB;AACrC,iBAAK,WAAW,qBAAqB;AACrC;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,KAAK;AACR,iBAAK,cAAc;AACnB;AAAA,UACJ;AAAA,UACA,SAAS;AACL,iBAAK,eAAe,EAAE;AAAA,UAC1B;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,iBAAiB,IAAI;AACjB,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE,gBAAgB;AACnB,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,MAAM;AACT,iBAAK,KAAK,IAAI,uBAAuB;AACrC,iBAAK,WAAW,qBAAqB;AACrC;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,KAAK;AACR,iBAAK,cAAc;AACnB;AAAA,UACJ;AAAA,UACA,SAAS;AACL,iBAAK,eAAe,EAAE;AAAA,UAC1B;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,gBAAgB,IAAI;AAChB,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE,MAAM;AACT,iBAAK,KAAK,IAAI,uBAAuB;AACrC,iBAAK,WAAW,qBAAqB;AACrC;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,KAAK;AACR,iBAAK,cAAc;AACnB;AAAA,UACJ;AAAA,UACA,SAAS;AACL,iBAAK,eAAe,EAAE;AAAA,UAC1B;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,cAAc,IAAI;AACd,YAAI,cAAc,EAAE,GAAG;AACnB,eAAK,qBAAqB;AAC1B,eAAK,QAAQA,OAAM;AACnB,eAAK,cAAc,EAAE;AAAA,QACzB;AAEI,kBAAQ,IAAI;AAAA,YACR,KAAK,YAAE,kBAAkB;AACrB,mBAAK,QAAQA,OAAM;AACnB;AAAA,YACJ;AAAA,YACA,KAAK,YAAE,SAAS;AACZ,mBAAK,QAAQA,OAAM;AACnB;AAAA,YACJ;AAAA,YACA,KAAK,YAAE,eAAe;AAClB,mBAAK,KAAK,IAAI,sCAAsC;AACpD,mBAAK,oBAAoB,CAAC;AAC1B,mBAAK,QAAQA,OAAM;AACnB,mBAAK,mBAAmB,EAAE;AAC1B;AAAA,YACJ;AAAA,YACA,KAAK,YAAE,KAAK;AACR,mBAAK,KAAK,IAAI,gBAAgB;AAC9B,mBAAK,WAAW,GAAG;AACnB,mBAAK,cAAc;AACnB;AAAA,YACJ;AAAA,YACA,SAAS;AACL,mBAAK,KAAK,IAAI,8BAA8B;AAC5C,mBAAK,WAAW,GAAG;AACnB,mBAAK,QAAQA,OAAM;AACnB,mBAAK,WAAW,EAAE;AAAA,YACtB;AAAA,UACJ;AAAA,MACR;AAAA,MAGA,iBAAiB,IAAI;AACjB,YAAI,cAAc,EAAE,GAAG;AACnB,eAAK,mBAAmB;AACxB,eAAK,QAAQA,OAAM;AACnB,eAAK,cAAc,EAAE;AAAA,QACzB;AAEI,kBAAQ,IAAI;AAAA,YACR,KAAK,YAAE,mBAAmB;AACtB,mBAAK,KAAK,IAAI,iBAAiB;AAC/B,mBAAK,QAAQA,OAAM;AACnB;AAAA,YACJ;AAAA,YACA,KAAK,YAAE,KAAK;AACR,mBAAK,KAAK,IAAI,gBAAgB;AAC9B,mBAAK,WAAW,IAAI;AACpB,mBAAK,cAAc;AACnB;AAAA,YACJ;AAAA,YACA,SAAS;AACL,mBAAK,KAAK,IAAI,8BAA8B;AAC5C,mBAAK,oBAAoB,CAAC;AAC1B,mBAAK,QAAQA,OAAM;AACnB,mBAAK,mBAAmB,EAAE;AAAA,YAC9B;AAAA,UACJ;AAAA,MACR;AAAA,MAGA,cAAc,IAAI;AACd,cAAM,QAAQ,KAAK;AACnB,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE;AAAA,UACP,KAAK,YAAE;AAAA,UACP,KAAK,YAAE;AAAA,UACP,KAAK,YAAE,WAAW;AACd,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,SAAS;AACZ,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,mBAAmB;AACtB,iBAAK,QAAQA,OAAM;AACnB,iBAAK,oBAAoB;AACzB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,MAAM;AACT,iBAAK,KAAK,IAAI,uBAAuB;AACrC,kBAAM,WAAW;AACjB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,KAAK;AACR,iBAAK,KAAK,IAAI,QAAQ;AACtB,iBAAK,cAAc;AACnB;AAAA,UACJ;AAAA,UACA,SAAS;AACL,kBAAM,WAAW,OAAO,cAAc,aAAa,EAAE,IAAI,aAAa,EAAE,IAAI,EAAE;AAAA,UAClF;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,yBAAyB,IAAI;AACzB,YAAI,OAAO,YAAE,SAAS;AAClB,eAAK,QAAQA,OAAM;AAAA,QACvB,OACK;AACD,eAAK,WAAW,GAAG;AACnB,eAAK,QAAQA,OAAM;AACnB,eAAK,aAAa,EAAE;AAAA,QACxB;AAAA,MACJ;AAAA,MAGA,uBAAuB,IAAI;AACvB,YAAI,cAAc,EAAE,GAAG;AACnB,eAAK,QAAQA,OAAM;AACnB,eAAK,uBAAuB,EAAE;AAAA,QAClC,OACK;AACD,eAAK,WAAW,IAAI;AACpB,eAAK,QAAQA,OAAM;AACnB,eAAK,aAAa,EAAE;AAAA,QACxB;AAAA,MACJ;AAAA,MACA,oBAAoB,KAAK;AACrB,YAAI,CAAC,KAAK,aAAa,WAAW,KAAK,kBAAkB,KAAK,GAAG;AAC7D,iBAAO,CAAC,KAAK,mBAAmB;AAAA,QACpC;AACA,aAAK,mBAAmB;AACxB,cAAM,QAAQ,KAAK;AACnB,cAAM,UAAU,KAAK;AACrB,cAAM,KAAK,KAAK,aAAa,KAAK,KAAK,iBAAiB,MAAM;AAC9D,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE;AAAA,UACP,KAAK,YAAE;AAAA,UACP,KAAK,YAAE;AAAA,UACP,KAAK,YAAE,WAAW;AACd,iBAAK,WAAW,KAAK,iBAAiB,MAAM;AAC5C,iBAAK,QAAQA,OAAM;AACnB,mBAAO;AAAA,UACX;AAAA,UACA,KAAK,YAAE,SAAS;AACZ,iBAAK,WAAW,KAAK,iBAAiB,MAAM;AAC5C,iBAAK,QAAQA,OAAM;AACnB,mBAAO;AAAA,UACX;AAAA,UACA,KAAK,YAAE,mBAAmB;AACtB,iBAAK,WAAW,KAAK,iBAAiB,MAAM;AAC5C,iBAAK,oBAAoB;AACzB,iBAAK,QAAQA,OAAM;AACnB,mBAAO;AAAA,UACX;AAAA,UACA,SAAS;AACL,mBAAO,CAAC,KAAK,mBAAmB;AAAA,UACpC;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,uBAAuB,IAAI;AACvB,YAAI,KAAK,oBAAoB,EAAE,GAAG;AAC9B,eAAK,WAAW,IAAI;AACpB,eAAK,QAAQA,OAAM;AACnB,eAAK,aAAa,EAAE;AAAA,QACxB;AAAA,MACJ;AAAA,MAGA,0BAA0B,IAAI;AAC1B,YAAI,OAAO,YAAE,SAAS;AAClB,eAAK,QAAQA,OAAM;AAAA,QACvB,OACK;AACD,eAAK,WAAW,GAAG;AACnB,eAAK,QAAQA,OAAM;AACnB,eAAK,cAAc,EAAE;AAAA,QACzB;AAAA,MACJ;AAAA,MAGA,wBAAwB,IAAI;AACxB,YAAI,cAAc,EAAE,GAAG;AACnB,eAAK,QAAQA,OAAM;AACnB,eAAK,wBAAwB,EAAE;AAAA,QACnC,OACK;AACD,eAAK,WAAW,IAAI;AACpB,eAAK,QAAQA,OAAM;AACnB,eAAK,cAAc,EAAE;AAAA,QACzB;AAAA,MACJ;AAAA,MAGA,wBAAwB,IAAI;AACxB,YAAI,KAAK,oBAAoB,EAAE,GAAG;AAC9B,eAAK,WAAW,IAAI;AACpB,eAAK,QAAQA,OAAM;AACnB,eAAK,cAAc,EAAE;AAAA,QACzB;AAAA,MACJ;AAAA,MAGA,6BAA6B,IAAI;AAC7B,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE,SAAS;AACZ,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,kBAAkB;AACrB,iBAAK,QAAQA,OAAM;AACnB,iBAAK,WAAW,IAAI;AACpB;AAAA,UACJ;AAAA,UACA,SAAS;AACL,iBAAK,WAAW,GAAG;AACnB,iBAAK,QAAQA,OAAM;AACnB,iBAAK,iBAAiB,EAAE;AAAA,UAC5B;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,2BAA2B,IAAI;AAC3B,YAAI,cAAc,EAAE,GAAG;AACnB,eAAK,QAAQA,OAAM;AACnB,eAAK,2BAA2B,EAAE;AAAA,QACtC,OACK;AACD,eAAK,WAAW,IAAI;AACpB,eAAK,QAAQA,OAAM;AACnB,eAAK,iBAAiB,EAAE;AAAA,QAC5B;AAAA,MACJ;AAAA,MAGA,2BAA2B,IAAI;AAC3B,YAAI,KAAK,oBAAoB,EAAE,GAAG;AAC9B,eAAK,WAAW,IAAI;AACpB,eAAK,QAAQA,OAAM;AACnB,eAAK,iBAAiB,EAAE;AAAA,QAC5B;AAAA,MACJ;AAAA,MAGA,4BAA4B,IAAI;AAC5B,YAAI,OAAO,YAAE,cAAc;AACvB,eAAK,QAAQA,OAAM;AACnB,eAAK,WAAW,GAAG;AAAA,QACvB,OACK;AACD,eAAK,QAAQA,OAAM;AACnB,eAAK,iBAAiB,EAAE;AAAA,QAC5B;AAAA,MACJ;AAAA,MAGA,gCAAgC,IAAI;AAChC,YAAI,OAAO,YAAE,cAAc;AACvB,eAAK,QAAQA,OAAM;AACnB,eAAK,WAAW,GAAG;AAAA,QACvB,OACK;AACD,eAAK,QAAQA,OAAM;AACnB,eAAK,iBAAiB,EAAE;AAAA,QAC5B;AAAA,MACJ;AAAA,MAGA,wBAAwB,IAAI;AACxB,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE,cAAc;AACjB,iBAAK,QAAQA,OAAM;AACnB,iBAAK,WAAW,GAAG;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,gBAAgB;AACnB,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,MAAM;AACT,iBAAK,KAAK,IAAI,uBAAuB;AACrC,iBAAK,WAAW,qBAAqB;AACrC;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,KAAK;AACR,iBAAK,KAAK,IAAI,8BAA8B;AAC5C,iBAAK,cAAc;AACnB;AAAA,UACJ;AAAA,UACA,SAAS;AACL,iBAAK,eAAe,EAAE;AAAA,UAC1B;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,4BAA4B,IAAI;AAC5B,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE,cAAc;AACjB,iBAAK,QAAQA,OAAM;AACnB,iBAAK,WAAW,GAAG;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,gBAAgB;AACnB,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,MAAM;AACT,iBAAK,KAAK,IAAI,uBAAuB;AACrC,iBAAK,QAAQA,OAAM;AACnB,iBAAK,WAAW,qBAAqB;AACrC;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,KAAK;AACR,iBAAK,KAAK,IAAI,8BAA8B;AAC5C,iBAAK,cAAc;AACnB;AAAA,UACJ;AAAA,UACA,SAAS;AACL,iBAAK,QAAQA,OAAM;AACnB,iBAAK,eAAe,EAAE;AAAA,UAC1B;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,gCAAgC,IAAI;AAChC,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE,cAAc;AACjB,iBAAK,WAAW,GAAG;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,gBAAgB;AACnB,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,mBAAmB;AACtB,iBAAK,QAAQA,OAAM;AACnB,iBAAK,WAAW,GAAG;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,MAAM;AACT,iBAAK,KAAK,IAAI,uBAAuB;AACrC,iBAAK,QAAQA,OAAM;AACnB,iBAAK,WAAW,qBAAqB;AACrC;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,KAAK;AACR,iBAAK,KAAK,IAAI,8BAA8B;AAC5C,iBAAK,cAAc;AACnB;AAAA,UACJ;AAAA,UACA,SAAS;AACL,iBAAK,QAAQA,OAAM;AACnB,iBAAK,eAAe,EAAE;AAAA,UAC1B;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,oCAAoC,IAAI;AACpC,YAAI,OAAO,YAAE,SAAS;AAClB,eAAK,QAAQA,OAAM;AAAA,QACvB,WACS,cAAc,EAAE,GAAG;AACxB,eAAK,WAAW,GAAG;AACnB,eAAK,QAAQA,OAAM;AACnB,eAAK,kCAAkC,EAAE;AAAA,QAC7C,OACK;AACD,eAAK,WAAW,GAAG;AACnB,eAAK,QAAQA,OAAM;AACnB,eAAK,wBAAwB,EAAE;AAAA,QACnC;AAAA,MACJ;AAAA,MAGA,kCAAkC,IAAI;AAClC,YAAI,cAAc,EAAE,GAAG;AACnB,eAAK,QAAQA,OAAM;AACnB,eAAK,kCAAkC,EAAE;AAAA,QAC7C,OACK;AACD,eAAK,WAAW,IAAI;AACpB,eAAK,QAAQA,OAAM;AACnB,eAAK,wBAAwB,EAAE;AAAA,QACnC;AAAA,MACJ;AAAA,MAGA,kCAAkC,IAAI;AAClC,YAAI,KAAK,oBAAoB,EAAE,GAAG;AAC9B,eAAK,WAAW,IAAI;AACpB,eAAK,QAAQA,OAAM;AACnB,eAAK,wBAAwB,EAAE;AAAA,QACnC;AAAA,MACJ;AAAA,MAGA,kCAAkC,IAAI;AAClC,YAAI,KAAK,aAAa,WAAW,UAAG,QAAQ,KAAK,KAC7C,oCAAoC,KAAK,aAAa,KAAK,UAAG,OAAO,MAAM,CAAC,GAAG;AAC/E,eAAK,eAAe,EAAE;AACtB,mBAAS,IAAI,GAAG,IAAI,UAAG,OAAO,QAAQ,KAAK;AACvC,iBAAK,eAAe,KAAK,SAAS,CAAC;AAAA,UACvC;AACA,eAAK,QAAQA,OAAM;AAAA,QACvB,WACS,CAAC,KAAK,mBAAmB,GAAG;AACjC,eAAK,QAAQA,OAAM;AACnB,eAAK,wBAAwB,EAAE;AAAA,QACnC;AAAA,MACJ;AAAA,MAGA,8BAA8B,IAAI;AAC9B,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE,cAAc;AACjB,iBAAK,QAAQA,OAAM;AACnB,iBAAK,WAAW,GAAG;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,gBAAgB;AACnB,iBAAK,QAAQA,OAAM;AACnB,iBAAK,WAAW,GAAG;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,MAAM;AACT,iBAAK,KAAK,IAAI,uBAAuB;AACrC,iBAAK,WAAW,qBAAqB;AACrC;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,KAAK;AACR,iBAAK,KAAK,IAAI,8BAA8B;AAC5C,iBAAK,cAAc;AACnB;AAAA,UACJ;AAAA,UACA,SAAS;AACL,iBAAK,eAAe,EAAE;AAAA,UAC1B;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,kCAAkC,IAAI;AAClC,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE,cAAc;AACjB,iBAAK,QAAQA,OAAM;AACnB,iBAAK,WAAW,GAAG;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,gBAAgB;AACnB,iBAAK,QAAQA,OAAM;AACnB,iBAAK,WAAW,GAAG;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,MAAM;AACT,iBAAK,KAAK,IAAI,uBAAuB;AACrC,iBAAK,QAAQA,OAAM;AACnB,iBAAK,WAAW,qBAAqB;AACrC;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,KAAK;AACR,iBAAK,KAAK,IAAI,8BAA8B;AAC5C,iBAAK,cAAc;AACnB;AAAA,UACJ;AAAA,UACA,SAAS;AACL,iBAAK,QAAQA,OAAM;AACnB,iBAAK,eAAe,EAAE;AAAA,UAC1B;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,sCAAsC,IAAI;AACtC,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE,cAAc;AACjB,iBAAK,WAAW,GAAG;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,gBAAgB;AACnB,iBAAK,QAAQA,OAAM;AACnB,iBAAK,WAAW,GAAG;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,mBAAmB;AACtB,iBAAK,QAAQA,OAAM;AACnB,iBAAK,WAAW,GAAG;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,MAAM;AACT,iBAAK,KAAK,IAAI,uBAAuB;AACrC,iBAAK,QAAQA,OAAM;AACnB,iBAAK,WAAW,qBAAqB;AACrC;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,KAAK;AACR,iBAAK,KAAK,IAAI,8BAA8B;AAC5C,iBAAK,cAAc;AACnB;AAAA,UACJ;AAAA,UACA,SAAS;AACL,iBAAK,QAAQA,OAAM;AACnB,iBAAK,eAAe,EAAE;AAAA,UAC1B;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,0CAA0C,IAAI;AAC1C,YAAI,OAAO,YAAE,SAAS;AAClB,eAAK,QAAQA,OAAM;AACnB,eAAK,WAAW,GAAG;AAAA,QACvB,OACK;AACD,eAAK,QAAQA,OAAM;AACnB,eAAK,8BAA8B,EAAE;AAAA,QACzC;AAAA,MACJ;AAAA,MAGA,gCAAgC,IAAI;AAChC,YAAI,KAAK,aAAa,WAAW,UAAG,QAAQ,KAAK,KAC7C,oCAAoC,KAAK,aAAa,KAAK,UAAG,OAAO,MAAM,CAAC,GAAG;AAC/E,eAAK,eAAe,EAAE;AACtB,mBAAS,IAAI,GAAG,IAAI,UAAG,OAAO,QAAQ,KAAK;AACvC,iBAAK,eAAe,KAAK,SAAS,CAAC;AAAA,UACvC;AACA,eAAK,QAAQA,OAAM;AAAA,QACvB,WACS,CAAC,KAAK,mBAAmB,GAAG;AACjC,eAAK,QAAQA,OAAM;AACnB,eAAK,8BAA8B,EAAE;AAAA,QACzC;AAAA,MACJ;AAAA,MAGA,0BAA0B,IAAI;AAC1B,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE;AAAA,UACP,KAAK,YAAE;AAAA,UACP,KAAK,YAAE;AAAA,UACP,KAAK,YAAE,WAAW;AAEd;AAAA,UACJ;AAAA,UACA,KAAK,YAAE;AAAA,UACP,KAAK,YAAE;AAAA,UACP,KAAK,YAAE,KAAK;AACR,iBAAK,QAAQA,OAAM;AACnB,iBAAK,yBAAyB,EAAE;AAChC;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,aAAa;AAChB,iBAAK,KAAK,IAAI,uCAAuC;AACrD,iBAAK,YAAY,GAAG;AACpB,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,SAAS;AACL,iBAAK,YAAY,EAAE;AACnB,iBAAK,QAAQA,OAAM;AACnB,iBAAK,oBAAoB,EAAE;AAAA,UAC/B;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,oBAAoB,IAAI;AACpB,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE;AAAA,UACP,KAAK,YAAE;AAAA,UACP,KAAK,YAAE;AAAA,UACP,KAAK,YAAE;AAAA,UACP,KAAK,YAAE;AAAA,UACP,KAAK,YAAE;AAAA,UACP,KAAK,YAAE,KAAK;AACR,iBAAK,eAAe;AACpB,iBAAK,QAAQA,OAAM;AACnB,iBAAK,yBAAyB,EAAE;AAChC;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,aAAa;AAChB,iBAAK,eAAe;AACpB,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE;AAAA,UACP,KAAK,YAAE;AAAA,UACP,KAAK,YAAE,gBAAgB;AACnB,iBAAK,KAAK,IAAI,kCAAkC;AAChD,iBAAK,YAAY,QAAQ,OAAO,cAAc,EAAE;AAChD;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,MAAM;AACT,iBAAK,KAAK,IAAI,uBAAuB;AACrC,iBAAK,YAAY,QAAQ;AACzB;AAAA,UACJ;AAAA,UACA,SAAS;AACL,iBAAK,YAAY,QAAQ,OAAO,cAAc,aAAa,EAAE,IAAI,aAAa,EAAE,IAAI,EAAE;AAAA,UAC1F;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,yBAAyB,IAAI;AACzB,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE;AAAA,UACP,KAAK,YAAE;AAAA,UACP,KAAK,YAAE;AAAA,UACP,KAAK,YAAE,WAAW;AAEd;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,SAAS;AACZ,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,aAAa;AAChB,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,mBAAmB;AACtB,iBAAK,QAAQA,OAAM;AACnB,iBAAK,oBAAoB;AACzB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,KAAK;AACR,iBAAK,KAAK,IAAI,QAAQ;AACtB,iBAAK,cAAc;AACnB;AAAA,UACJ;AAAA,UACA,SAAS;AACL,iBAAK,YAAY,EAAE;AACnB,iBAAK,QAAQA,OAAM;AACnB,iBAAK,oBAAoB,EAAE;AAAA,UAC/B;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,2BAA2B,IAAI;AAC3B,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE;AAAA,UACP,KAAK,YAAE;AAAA,UACP,KAAK,YAAE;AAAA,UACP,KAAK,YAAE,WAAW;AAEd;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,gBAAgB;AACnB,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,YAAY;AACf,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,mBAAmB;AACtB,iBAAK,KAAK,IAAI,qBAAqB;AACnC,iBAAK,QAAQA,OAAM;AACnB,iBAAK,oBAAoB;AACzB;AAAA,UACJ;AAAA,UACA,SAAS;AACL,iBAAK,QAAQA,OAAM;AACnB,iBAAK,6BAA6B,EAAE;AAAA,UACxC;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,iCAAiC,IAAI;AACjC,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE,gBAAgB;AACnB,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,WAAW;AACd,iBAAK,cAAcA,OAAM;AACzB,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,MAAM;AACT,iBAAK,KAAK,IAAI,uBAAuB;AACrC,iBAAK,YAAY,SAAS;AAC1B;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,KAAK;AACR,iBAAK,KAAK,IAAI,QAAQ;AACtB,iBAAK,cAAc;AACnB;AAAA,UACJ;AAAA,UACA,SAAS;AACL,iBAAK,YAAY,SAAS,OAAO,cAAc,EAAE;AAAA,UACrD;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,iCAAiC,IAAI;AACjC,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE,YAAY;AACf,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,WAAW;AACd,iBAAK,cAAcA,OAAM;AACzB,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,MAAM;AACT,iBAAK,KAAK,IAAI,uBAAuB;AACrC,iBAAK,YAAY,SAAS;AAC1B;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,KAAK;AACR,iBAAK,KAAK,IAAI,QAAQ;AACtB,iBAAK,cAAc;AACnB;AAAA,UACJ;AAAA,UACA,SAAS;AACL,iBAAK,YAAY,SAAS,OAAO,cAAc,EAAE;AAAA,UACrD;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,6BAA6B,IAAI;AAC7B,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE;AAAA,UACP,KAAK,YAAE;AAAA,UACP,KAAK,YAAE;AAAA,UACP,KAAK,YAAE,WAAW;AACd,iBAAK,gBAAgB;AACrB,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,WAAW;AACd,iBAAK,cAAcA,OAAM;AACzB,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,mBAAmB;AACtB,iBAAK,gBAAgB;AACrB,iBAAK,QAAQA,OAAM;AACnB,iBAAK,oBAAoB;AACzB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,MAAM;AACT,iBAAK,KAAK,IAAI,uBAAuB;AACrC,iBAAK,YAAY,SAAS;AAC1B;AAAA,UACJ;AAAA,UACA,KAAK,YAAE;AAAA,UACP,KAAK,YAAE;AAAA,UACP,KAAK,YAAE;AAAA,UACP,KAAK,YAAE;AAAA,UACP,KAAK,YAAE,cAAc;AACjB,iBAAK,KAAK,IAAI,2CAA2C;AACzD,iBAAK,YAAY,SAAS,OAAO,cAAc,EAAE;AACjD;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,KAAK;AACR,iBAAK,KAAK,IAAI,QAAQ;AACtB,iBAAK,cAAc;AACnB;AAAA,UACJ;AAAA,UACA,SAAS;AACL,iBAAK,YAAY,SAAS,OAAO,cAAc,EAAE;AAAA,UACrD;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,gCAAgC,IAAI;AAChC,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE;AAAA,UACP,KAAK,YAAE;AAAA,UACP,KAAK,YAAE;AAAA,UACP,KAAK,YAAE,WAAW;AACd,iBAAK,gBAAgB;AACrB,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,SAAS;AACZ,iBAAK,gBAAgB;AACrB,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,mBAAmB;AACtB,iBAAK,gBAAgB;AACrB,iBAAK,QAAQA,OAAM;AACnB,iBAAK,oBAAoB;AACzB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,KAAK;AACR,iBAAK,KAAK,IAAI,QAAQ;AACtB,iBAAK,cAAc;AACnB;AAAA,UACJ;AAAA,UACA,SAAS;AACL,iBAAK,KAAK,IAAI,kCAAkC;AAChD,iBAAK,QAAQA,OAAM;AACnB,iBAAK,0BAA0B,EAAE;AAAA,UACrC;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,0BAA0B,IAAI;AAC1B,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE,mBAAmB;AACtB,kBAAM,QAAQ,KAAK;AACnB,kBAAM,cAAc;AACpB,iBAAK,QAAQA,OAAM;AACnB,iBAAK,oBAAoB;AACzB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,KAAK;AACR,iBAAK,KAAK,IAAI,QAAQ;AACtB,iBAAK,cAAc;AACnB;AAAA,UACJ;AAAA,UACA,SAAS;AACL,iBAAK,KAAK,IAAI,sBAAsB;AACpC,iBAAK,QAAQA,OAAM;AACnB,iBAAK,0BAA0B,EAAE;AAAA,UACrC;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,mBAAmB,IAAI;AACnB,cAAM,QAAQ,KAAK;AACnB,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE,mBAAmB;AACtB,iBAAK,QAAQA,OAAM;AACnB,iBAAK,mBAAmB,KAAK;AAC7B;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,KAAK;AACR,iBAAK,mBAAmB,KAAK;AAC7B,iBAAK,cAAc;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,MAAM;AACT,iBAAK,KAAK,IAAI,uBAAuB;AACrC,kBAAM,QAAQ;AACd;AAAA,UACJ;AAAA,UACA,SAAS;AACL,kBAAM,QAAQ,OAAO,cAAc,EAAE;AAAA,UACzC;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,4BAA4B,IAAI;AAC5B,YAAI,KAAK,wBAAwB,UAAG,WAAW,IAAI,GAAG;AAClD,eAAK,oBAAoB,UAAG,UAAU,SAAS,CAAC;AAChD,eAAK,QAAQA,OAAM;AAAA,QACvB,WACS,KAAK,wBAAwB,UAAG,SAAS,KAAK,GAAG;AAEtD,eAAK,kBAAkB,KAAK,mBAAmB,UAAG,QAAQ,SAAS,CAAC;AACpE,eAAK,QAAQA,OAAM;AAAA,QACvB,WACS,KAAK,wBAAwB,UAAG,aAAa,IAAI,GAAG;AACzD,cAAI,KAAK,eAAe;AACpB,iBAAK,QAAQA,OAAM;AAAA,UACvB,OACK;AACD,iBAAK,KAAK,IAAI,kBAAkB;AAChC,iBAAK,oBAAoB,UAAG,YAAY,SAAS,CAAC;AAClD,iBAAK,aAAa,OAAO;AACzB,iBAAK,QAAQA,OAAM;AAAA,UACvB;AAAA,QACJ,WAGS,CAAC,KAAK,mBAAmB,GAAG;AACjC,eAAK,KAAK,IAAI,wBAAwB;AACtC,eAAK,oBAAoB,CAAC;AAC1B,eAAK,QAAQA,OAAM;AACnB,eAAK,mBAAmB,EAAE;AAAA,QAC9B;AAAA,MACJ;AAAA,MAGA,mBAAmB,IAAI;AACnB,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE,cAAc;AACjB,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,mBAAmB;AACtB,iBAAK,KAAK,IAAI,2BAA2B;AACzC,iBAAK,QAAQA,OAAM;AACnB,kBAAM,QAAQ,KAAK;AACnB,iBAAK,mBAAmB,KAAK;AAC7B;AAAA,UACJ;AAAA,UACA,SAAS;AACL,iBAAK,QAAQA,OAAM;AACnB,iBAAK,cAAc,EAAE;AAAA,UACzB;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,uBAAuB,IAAI;AACvB,cAAM,QAAQ,KAAK;AACnB,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE,cAAc;AACjB,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,mBAAmB;AACtB,iBAAK,KAAK,IAAI,2BAA2B;AACzC,iBAAK,QAAQA,OAAM;AACnB,iBAAK,mBAAmB,KAAK;AAC7B;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,KAAK;AACR,iBAAK,KAAK,IAAI,YAAY;AAC1B,iBAAK,mBAAmB,KAAK;AAC7B,iBAAK,cAAc;AACnB;AAAA,UACJ;AAAA,UACA,SAAS;AACL,kBAAM,QAAQ;AACd,iBAAK,QAAQA,OAAM;AACnB,iBAAK,cAAc,EAAE;AAAA,UACzB;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,cAAc,IAAI;AACd,cAAM,QAAQ,KAAK;AACnB,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE,cAAc;AACjB,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,gBAAgB;AACnB,kBAAM,QAAQ;AACd,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,MAAM;AACT,iBAAK,KAAK,IAAI,uBAAuB;AACrC,kBAAM,QAAQ;AACd;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,KAAK;AACR,iBAAK,KAAK,IAAI,YAAY;AAC1B,iBAAK,mBAAmB,KAAK;AAC7B,iBAAK,cAAc;AACnB;AAAA,UACJ;AAAA,UACA,SAAS;AACL,kBAAM,QAAQ,OAAO,cAAc,EAAE;AAAA,UACzC;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,0BAA0B,IAAI;AAC1B,cAAM,QAAQ,KAAK;AACnB,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE,kBAAkB;AACrB,kBAAM,QAAQ;AACd,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,gBAAgB;AACnB,kBAAM,QAAQ;AACd;AAAA,UACJ;AAAA,UACA,SAAS;AACL,iBAAK,QAAQA,OAAM;AACnB,iBAAK,cAAc,EAAE;AAAA,UACzB;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,8BAA8B,IAAI;AAC9B,YAAI,OAAO,YAAE,cAAc;AACvB,eAAK,QAAQA,OAAM;AAAA,QACvB,OACK;AACD,eAAK,QAAQA,OAAM;AACnB,eAAK,cAAc,EAAE;AAAA,QACzB;AAAA,MACJ;AAAA,MAGA,kCAAkC,IAAI;AAClC,YAAI,OAAO,YAAE,cAAc;AACvB,eAAK,QAAQA,OAAM;AAAA,QACvB,OACK;AACD,eAAK,QAAQA,OAAM;AACnB,eAAK,qBAAqB,EAAE;AAAA,QAChC;AAAA,MACJ;AAAA,MAGA,sCAAsC,IAAI;AACtC,YAAI,OAAO,YAAE,qBAAqB,OAAO,YAAE,KAAK;AAC5C,eAAK,KAAK,IAAI,aAAa;AAAA,QAC/B;AACA,aAAK,QAAQA,OAAM;AACnB,aAAK,iBAAiB,EAAE;AAAA,MAC5B;AAAA,MAGA,qBAAqB,IAAI;AACrB,cAAM,QAAQ,KAAK;AACnB,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE,cAAc;AACjB,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,KAAK;AACR,iBAAK,KAAK,IAAI,YAAY;AAC1B,iBAAK,mBAAmB,KAAK;AAC7B,iBAAK,cAAc;AACnB;AAAA,UACJ;AAAA,UACA,SAAS;AACL,kBAAM,QAAQ;AACd,iBAAK,QAAQA,OAAM;AACnB,iBAAK,cAAc,EAAE;AAAA,UACzB;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,iBAAiB,IAAI;AACjB,cAAM,QAAQ,KAAK;AACnB,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE,mBAAmB;AACtB,iBAAK,QAAQA,OAAM;AACnB,iBAAK,mBAAmB,KAAK;AAC7B;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,kBAAkB;AACrB,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,cAAc;AACjB,kBAAM,QAAQ;AACd;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,KAAK;AACR,iBAAK,KAAK,IAAI,YAAY;AAC1B,iBAAK,mBAAmB,KAAK;AAC7B,iBAAK,cAAc;AACnB;AAAA,UACJ;AAAA,UACA,SAAS;AACL,kBAAM,QAAQ;AACd,iBAAK,QAAQA,OAAM;AACnB,iBAAK,cAAc,EAAE;AAAA,UACzB;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,qBAAqB,IAAI;AACrB,cAAM,QAAQ,KAAK;AACnB,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE,cAAc;AACjB,kBAAM,QAAQ;AACd,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,mBAAmB;AACtB,iBAAK,KAAK,IAAI,wBAAwB;AACtC,iBAAK,QAAQA,OAAM;AACnB,iBAAK,mBAAmB,KAAK;AAC7B;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,KAAK;AACR,iBAAK,KAAK,IAAI,YAAY;AAC1B,iBAAK,mBAAmB,KAAK;AAC7B,iBAAK,cAAc;AACnB;AAAA,UACJ;AAAA,UACA,SAAS;AACL,kBAAM,QAAQ;AACd,iBAAK,QAAQA,OAAM;AACnB,iBAAK,cAAc,EAAE;AAAA,UACzB;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,cAAc,IAAI;AACd,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE;AAAA,UACP,KAAK,YAAE;AAAA,UACP,KAAK,YAAE;AAAA,UACP,KAAK,YAAE,WAAW;AACd,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,mBAAmB;AACtB,iBAAK,QAAQA,OAAM;AACnB,iBAAK,wBAAwB,EAAE;AAC/B;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,KAAK;AACR,iBAAK,KAAK,IAAI,YAAY;AAC1B,iBAAK,oBAAoB,IAAI;AAC7B,kBAAM,QAAQ,KAAK;AACnB,kBAAM,cAAc;AACpB,iBAAK,mBAAmB,KAAK;AAC7B,iBAAK,cAAc;AACnB;AAAA,UACJ;AAAA,UACA,SAAS;AACL,iBAAK,KAAK,IAAI,kCAAkC;AAChD,iBAAK,QAAQA,OAAM;AACnB,iBAAK,wBAAwB,EAAE;AAAA,UACnC;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,wBAAwB,IAAI;AACxB,YAAI,aAAa,EAAE,GAAG;AAClB,eAAK,oBAAoB,OAAO,aAAa,aAAa,EAAE,CAAC,CAAC;AAC9D,eAAK,QAAQA,OAAM;AAAA,QACvB;AAEI,kBAAQ,IAAI;AAAA,YACR,KAAK,YAAE;AAAA,YACP,KAAK,YAAE;AAAA,YACP,KAAK,YAAE;AAAA,YACP,KAAK,YAAE,WAAW;AAEd;AAAA,YACJ;AAAA,YACA,KAAK,YAAE,MAAM;AACT,mBAAK,KAAK,IAAI,uBAAuB;AACrC,mBAAK,oBAAoB,qBAAqB;AAC9C,mBAAK,QAAQA,OAAM;AACnB;AAAA,YACJ;AAAA,YACA,KAAK,YAAE,mBAAmB;AACtB,mBAAK,KAAK,IAAI,kBAAkB;AAChC,mBAAK,oBAAoB,IAAI;AAC7B,oBAAM,QAAQ,KAAK;AACnB,oBAAM,cAAc;AACpB,mBAAK,mBAAmB,KAAK;AAC7B,mBAAK,QAAQA,OAAM;AACnB;AAAA,YACJ;AAAA,YACA,KAAK,YAAE,KAAK;AACR,mBAAK,KAAK,IAAI,YAAY;AAC1B,mBAAK,oBAAoB,IAAI;AAC7B,oBAAM,QAAQ,KAAK;AACnB,oBAAM,cAAc;AACpB,mBAAK,mBAAmB,KAAK;AAC7B,mBAAK,cAAc;AACnB;AAAA,YACJ;AAAA,YACA,SAAS;AACL,mBAAK,oBAAoB,OAAO,cAAc,EAAE,CAAC;AACjD,mBAAK,QAAQA,OAAM;AAAA,YACvB;AAAA,UACJ;AAAA,MACR;AAAA,MAGA,kBAAkB,IAAI;AAClB,cAAM,QAAQ,KAAK;AACnB,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE;AAAA,UACP,KAAK,YAAE;AAAA,UACP,KAAK,YAAE;AAAA,UACP,KAAK,YAAE,WAAW;AACd,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,mBAAmB;AACtB,iBAAK,QAAQA,OAAM;AACnB,iBAAK,mBAAmB,KAAK;AAC7B;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,MAAM;AACT,iBAAK,KAAK,IAAI,uBAAuB;AACrC,kBAAM,QAAQ;AACd;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,KAAK;AACR,iBAAK,KAAK,IAAI,YAAY;AAC1B,kBAAM,cAAc;AACpB,iBAAK,mBAAmB,KAAK;AAC7B,iBAAK,cAAc;AACnB;AAAA,UACJ;AAAA,UACA,SAAS;AACL,kBAAM,QAAQ,OAAO,cAAc,aAAa,EAAE,IAAI,aAAa,EAAE,IAAI,EAAE;AAAA,UAC/E;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,uBAAuB,IAAI;AACvB,cAAM,QAAQ,KAAK;AACnB,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE;AAAA,UACP,KAAK,YAAE;AAAA,UACP,KAAK,YAAE;AAAA,UACP,KAAK,YAAE,WAAW;AAEd;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,mBAAmB;AACtB,iBAAK,QAAQA,OAAM;AACnB,iBAAK,mBAAmB,KAAK;AAC7B;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,KAAK;AACR,iBAAK,KAAK,IAAI,YAAY;AAC1B,kBAAM,cAAc;AACpB,iBAAK,mBAAmB,KAAK;AAC7B,iBAAK,cAAc;AACnB;AAAA,UACJ;AAAA,UACA,SAAS;AACL,gBAAI,KAAK,wBAAwB,UAAG,QAAQ,KAAK,GAAG;AAChD,mBAAK,QAAQA,OAAM;AAAA,YACvB,WACS,KAAK,wBAAwB,UAAG,QAAQ,KAAK,GAAG;AACrD,mBAAK,QAAQA,OAAM;AAAA,YACvB,WAGS,CAAC,KAAK,mBAAmB,GAAG;AACjC,mBAAK,KAAK,IAAI,wCAAwC;AACtD,oBAAM,cAAc;AACpB,mBAAK,QAAQA,OAAM;AACnB,mBAAK,mBAAmB,EAAE;AAAA,YAC9B;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,gCAAgC,IAAI;AAChC,cAAM,QAAQ,KAAK;AACnB,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE;AAAA,UACP,KAAK,YAAE;AAAA,UACP,KAAK,YAAE;AAAA,UACP,KAAK,YAAE,WAAW;AACd,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,gBAAgB;AACnB,iBAAK,KAAK,IAAI,0CAA0C;AACxD,kBAAM,WAAW;AACjB,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,YAAY;AACf,iBAAK,KAAK,IAAI,0CAA0C;AACxD,kBAAM,WAAW;AACjB,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,mBAAmB;AACtB,iBAAK,KAAK,IAAI,8BAA8B;AAC5C,kBAAM,cAAc;AACpB,iBAAK,QAAQA,OAAM;AACnB,iBAAK,mBAAmB,KAAK;AAC7B;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,KAAK;AACR,iBAAK,KAAK,IAAI,YAAY;AAC1B,kBAAM,cAAc;AACpB,iBAAK,mBAAmB,KAAK;AAC7B,iBAAK,cAAc;AACnB;AAAA,UACJ;AAAA,UACA,SAAS;AACL,iBAAK,KAAK,IAAI,yCAAyC;AACvD,kBAAM,cAAc;AACpB,iBAAK,QAAQA,OAAM;AACnB,iBAAK,mBAAmB,EAAE;AAAA,UAC9B;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,oCAAoC,IAAI;AACpC,cAAM,QAAQ,KAAK;AACnB,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE;AAAA,UACP,KAAK,YAAE;AAAA,UACP,KAAK,YAAE;AAAA,UACP,KAAK,YAAE,WAAW;AAEd;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,gBAAgB;AACnB,kBAAM,WAAW;AACjB,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,YAAY;AACf,kBAAM,WAAW;AACjB,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,mBAAmB;AACtB,iBAAK,KAAK,IAAI,8BAA8B;AAC5C,kBAAM,cAAc;AACpB,iBAAK,QAAQA,OAAM;AACnB,iBAAK,mBAAmB,KAAK;AAC7B;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,KAAK;AACR,iBAAK,KAAK,IAAI,YAAY;AAC1B,kBAAM,cAAc;AACpB,iBAAK,mBAAmB,KAAK;AAC7B,iBAAK,cAAc;AACnB;AAAA,UACJ;AAAA,UACA,SAAS;AACL,iBAAK,KAAK,IAAI,yCAAyC;AACvD,kBAAM,cAAc;AACpB,iBAAK,QAAQA,OAAM;AACnB,iBAAK,mBAAmB,EAAE;AAAA,UAC9B;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,0CAA0C,IAAI;AAC1C,cAAM,QAAQ,KAAK;AACnB,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE,gBAAgB;AACnB,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,MAAM;AACT,iBAAK,KAAK,IAAI,uBAAuB;AACrC,kBAAM,YAAY;AAClB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,mBAAmB;AACtB,iBAAK,KAAK,IAAI,6BAA6B;AAC3C,kBAAM,cAAc;AACpB,iBAAK,mBAAmB,KAAK;AAC7B,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,KAAK;AACR,iBAAK,KAAK,IAAI,YAAY;AAC1B,kBAAM,cAAc;AACpB,iBAAK,mBAAmB,KAAK;AAC7B,iBAAK,cAAc;AACnB;AAAA,UACJ;AAAA,UACA,SAAS;AACL,kBAAM,YAAY,OAAO,cAAc,EAAE;AAAA,UAC7C;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,0CAA0C,IAAI;AAC1C,cAAM,QAAQ,KAAK;AACnB,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE,YAAY;AACf,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,MAAM;AACT,iBAAK,KAAK,IAAI,uBAAuB;AACrC,kBAAM,YAAY;AAClB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,mBAAmB;AACtB,iBAAK,KAAK,IAAI,6BAA6B;AAC3C,kBAAM,cAAc;AACpB,iBAAK,mBAAmB,KAAK;AAC7B,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,KAAK;AACR,iBAAK,KAAK,IAAI,YAAY;AAC1B,kBAAM,cAAc;AACpB,iBAAK,mBAAmB,KAAK;AAC7B,iBAAK,cAAc;AACnB;AAAA,UACJ;AAAA,UACA,SAAS;AACL,kBAAM,YAAY,OAAO,cAAc,EAAE;AAAA,UAC7C;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,mCAAmC,IAAI;AACnC,cAAM,QAAQ,KAAK;AACnB,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE;AAAA,UACP,KAAK,YAAE;AAAA,UACP,KAAK,YAAE;AAAA,UACP,KAAK,YAAE,WAAW;AACd,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,mBAAmB;AACtB,iBAAK,QAAQA,OAAM;AACnB,iBAAK,mBAAmB,KAAK;AAC7B;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,gBAAgB;AACnB,iBAAK,KAAK,IAAI,yDAAyD;AACvE,kBAAM,WAAW;AACjB,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,YAAY;AACf,iBAAK,KAAK,IAAI,yDAAyD;AACvE,kBAAM,WAAW;AACjB,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,KAAK;AACR,iBAAK,KAAK,IAAI,YAAY;AAC1B,kBAAM,cAAc;AACpB,iBAAK,mBAAmB,KAAK;AAC7B,iBAAK,cAAc;AACnB;AAAA,UACJ;AAAA,UACA,SAAS;AACL,iBAAK,KAAK,IAAI,yCAAyC;AACvD,kBAAM,cAAc;AACpB,iBAAK,QAAQA,OAAM;AACnB,iBAAK,mBAAmB,EAAE;AAAA,UAC9B;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,+CAA+C,IAAI;AAC/C,cAAM,QAAQ,KAAK;AACnB,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE;AAAA,UACP,KAAK,YAAE;AAAA,UACP,KAAK,YAAE;AAAA,UACP,KAAK,YAAE,WAAW;AAEd;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,mBAAmB;AACtB,iBAAK,mBAAmB,KAAK;AAC7B,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,gBAAgB;AACnB,kBAAM,WAAW;AACjB,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,YAAY;AACf,kBAAM,WAAW;AACjB,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,KAAK;AACR,iBAAK,KAAK,IAAI,YAAY;AAC1B,kBAAM,cAAc;AACpB,iBAAK,mBAAmB,KAAK;AAC7B,iBAAK,cAAc;AACnB;AAAA,UACJ;AAAA,UACA,SAAS;AACL,iBAAK,KAAK,IAAI,yCAAyC;AACvD,kBAAM,cAAc;AACpB,iBAAK,QAAQA,OAAM;AACnB,iBAAK,mBAAmB,EAAE;AAAA,UAC9B;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,gCAAgC,IAAI;AAChC,cAAM,QAAQ,KAAK;AACnB,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE;AAAA,UACP,KAAK,YAAE;AAAA,UACP,KAAK,YAAE;AAAA,UACP,KAAK,YAAE,WAAW;AACd,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,gBAAgB;AACnB,iBAAK,KAAK,IAAI,0CAA0C;AACxD,kBAAM,WAAW;AACjB,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,YAAY;AACf,iBAAK,KAAK,IAAI,0CAA0C;AACxD,kBAAM,WAAW;AACjB,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,mBAAmB;AACtB,iBAAK,KAAK,IAAI,8BAA8B;AAC5C,kBAAM,cAAc;AACpB,iBAAK,QAAQA,OAAM;AACnB,iBAAK,mBAAmB,KAAK;AAC7B;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,KAAK;AACR,iBAAK,KAAK,IAAI,YAAY;AAC1B,kBAAM,cAAc;AACpB,iBAAK,mBAAmB,KAAK;AAC7B,iBAAK,cAAc;AACnB;AAAA,UACJ;AAAA,UACA,SAAS;AACL,iBAAK,KAAK,IAAI,yCAAyC;AACvD,kBAAM,cAAc;AACpB,iBAAK,QAAQA,OAAM;AACnB,iBAAK,mBAAmB,EAAE;AAAA,UAC9B;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,oCAAoC,IAAI;AACpC,cAAM,QAAQ,KAAK;AACnB,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE;AAAA,UACP,KAAK,YAAE;AAAA,UACP,KAAK,YAAE;AAAA,UACP,KAAK,YAAE,WAAW;AAEd;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,gBAAgB;AACnB,kBAAM,WAAW;AACjB,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,YAAY;AACf,kBAAM,WAAW;AACjB,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,mBAAmB;AACtB,iBAAK,KAAK,IAAI,8BAA8B;AAC5C,kBAAM,cAAc;AACpB,iBAAK,QAAQA,OAAM;AACnB,iBAAK,mBAAmB,KAAK;AAC7B;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,KAAK;AACR,iBAAK,KAAK,IAAI,YAAY;AAC1B,kBAAM,cAAc;AACpB,iBAAK,mBAAmB,KAAK;AAC7B,iBAAK,cAAc;AACnB;AAAA,UACJ;AAAA,UACA,SAAS;AACL,iBAAK,KAAK,IAAI,yCAAyC;AACvD,kBAAM,cAAc;AACpB,iBAAK,QAAQA,OAAM;AACnB,iBAAK,mBAAmB,EAAE;AAAA,UAC9B;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,0CAA0C,IAAI;AAC1C,cAAM,QAAQ,KAAK;AACnB,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE,gBAAgB;AACnB,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,MAAM;AACT,iBAAK,KAAK,IAAI,uBAAuB;AACrC,kBAAM,YAAY;AAClB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,mBAAmB;AACtB,iBAAK,KAAK,IAAI,6BAA6B;AAC3C,kBAAM,cAAc;AACpB,iBAAK,mBAAmB,KAAK;AAC7B,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,KAAK;AACR,iBAAK,KAAK,IAAI,YAAY;AAC1B,kBAAM,cAAc;AACpB,iBAAK,mBAAmB,KAAK;AAC7B,iBAAK,cAAc;AACnB;AAAA,UACJ;AAAA,UACA,SAAS;AACL,kBAAM,YAAY,OAAO,cAAc,EAAE;AAAA,UAC7C;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,0CAA0C,IAAI;AAC1C,cAAM,QAAQ,KAAK;AACnB,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE,YAAY;AACf,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,MAAM;AACT,iBAAK,KAAK,IAAI,uBAAuB;AACrC,kBAAM,YAAY;AAClB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,mBAAmB;AACtB,iBAAK,KAAK,IAAI,6BAA6B;AAC3C,kBAAM,cAAc;AACpB,iBAAK,mBAAmB,KAAK;AAC7B,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,KAAK;AACR,iBAAK,KAAK,IAAI,YAAY;AAC1B,kBAAM,cAAc;AACpB,iBAAK,mBAAmB,KAAK;AAC7B,iBAAK,cAAc;AACnB;AAAA,UACJ;AAAA,UACA,SAAS;AACL,kBAAM,YAAY,OAAO,cAAc,EAAE;AAAA,UAC7C;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,mCAAmC,IAAI;AACnC,cAAM,QAAQ,KAAK;AACnB,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE;AAAA,UACP,KAAK,YAAE;AAAA,UACP,KAAK,YAAE;AAAA,UACP,KAAK,YAAE,WAAW;AAEd;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,mBAAmB;AACtB,iBAAK,mBAAmB,KAAK;AAC7B,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,KAAK;AACR,iBAAK,KAAK,IAAI,YAAY;AAC1B,kBAAM,cAAc;AACpB,iBAAK,mBAAmB,KAAK;AAC7B,iBAAK,cAAc;AACnB;AAAA,UACJ;AAAA,UACA,SAAS;AACL,iBAAK,KAAK,IAAI,+CAA+C;AAC7D,iBAAK,QAAQA,OAAM;AACnB,iBAAK,mBAAmB,EAAE;AAAA,UAC9B;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,mBAAmB,IAAI;AACnB,cAAM,QAAQ,KAAK;AACnB,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE,mBAAmB;AACtB,iBAAK,mBAAmB,KAAK;AAC7B,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,MAAM;AACT,iBAAK,KAAK,IAAI,uBAAuB;AACrC;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,KAAK;AACR,iBAAK,mBAAmB,KAAK;AAC7B,iBAAK,cAAc;AACnB;AAAA,UACJ;AAAA,UACA;AAAA,QAEJ;AAAA,MACJ;AAAA,MAGA,mBAAmB,IAAI;AACnB,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE,sBAAsB;AACzB,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,KAAK;AACR,iBAAK,KAAK,IAAI,UAAU;AACxB,iBAAK,cAAc;AACnB;AAAA,UACJ;AAAA,UACA,SAAS;AACL,iBAAK,eAAe,EAAE;AAAA,UAC1B;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,0BAA0B,IAAI;AAC1B,YAAI,OAAO,YAAE,sBAAsB;AAC/B,eAAK,QAAQA,OAAM;AAAA,QACvB,OACK;AACD,eAAK,WAAW,GAAG;AACnB,eAAK,QAAQA,OAAM;AACnB,eAAK,mBAAmB,EAAE;AAAA,QAC9B;AAAA,MACJ;AAAA,MAGA,sBAAsB,IAAI;AACtB,gBAAQ,IAAI;AAAA,UACR,KAAK,YAAE,mBAAmB;AACtB,iBAAK,QAAQA,OAAM;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,YAAE,sBAAsB;AACzB,iBAAK,WAAW,GAAG;AACnB;AAAA,UACJ;AAAA,UACA,SAAS;AACL,iBAAK,WAAW,IAAI;AACpB,iBAAK,QAAQA,OAAM;AACnB,iBAAK,mBAAmB,EAAE;AAAA,UAC9B;AAAA,QACJ;AAAA,MACJ;AAAA,MAGA,yBAAyB,IAAI;AACzB,YAAI,OAAO,YAAE,aAAa;AACtB,eAAK,QAAQA,OAAM;AAAA,QACvB,WACS,oBAAoB,EAAE,GAAG;AAC9B,eAAK,QAAQA,OAAM;AACnB,eAAK,8BAA8B,EAAE;AAAA,QACzC,OACK;AACD,eAAK,4CAA4C,YAAE,SAAS;AAC5D,eAAK,kBAAkB,KAAK,aAAa,EAAE;AAAA,QAC/C;AAAA,MACJ;AAAA,MAGA,8BAA8B,IAAI;AAC9B,cAAM,cAAc,KAAK,8BAA8B,EAAE;AAGzD,YAAI,KAAK,mBAAmB,GAAG;AAAA,QAE/B,WACS,aAAa;AAClB,mBAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,KAAK;AACzC,iBAAK,4CAA4C,YAAY,EAAE;AAAA,UACnE;AACA,eAAK,QAAQ,KAAK;AAAA,QACtB,OACK;AACD,eAAK,4CAA4C,YAAE,SAAS;AAC5D,eAAK,QAAQA,OAAM;AAAA,QACvB;AAAA,MACJ;AAAA,MAGA,yBAAyB,IAAI;AACzB,YAAI,oBAAoB,EAAE,GAAG;AACzB,eAAK,4CAA4C,EAAE;AAAA,QACvD,OACK;AACD,cAAI,OAAO,YAAE,WAAW;AACpB,iBAAK,KAAK,IAAI,8BAA8B;AAAA,UAChD;AACA,eAAK,kBAAkB,KAAK,aAAa,EAAE;AAAA,QAC/C;AAAA,MACJ;AAAA,MAGA,gCAAgC,IAAI;AAChC,aAAK,cAAc;AACnB,YAAI,OAAO,YAAE,iBAAiB,OAAO,YAAE,iBAAiB;AACpD,eAAK,QAAQA,OAAM;AAAA,QACvB,WAES,aAAa,EAAE,GAAG;AACvB,eAAK,QAAQA,OAAM;AACnB,eAAK,gCAAgC,EAAE;AAAA,QAC3C,OACK;AACD,eAAK,KAAK,IAAI,0CAA0C;AACxD,eAAK,4CAA4C,YAAE,SAAS;AAC5D,eAAK,4CAA4C,YAAE,WAAW;AAC9D,eAAK,kBAAkB,KAAK,aAAa,EAAE;AAAA,QAC/C;AAAA,MACJ;AAAA,MAGA,yCAAyC,IAAI;AACzC,YAAI,gBAAgB,EAAE,GAAG;AACrB,eAAK,QAAQA,OAAM;AACnB,eAAK,oCAAoC,EAAE;AAAA,QAC/C,OACK;AACD,eAAK,KAAK,IAAI,0CAA0C;AACxD,eAAK,4CAA4C,YAAE,SAAS;AAC5D,eAAK,4CAA4C,YAAE,WAAW;AAC9D,eAAK,WAAW,CAAC;AACjB,eAAK,QAAQ,KAAK;AAAA,QACtB;AAAA,MACJ;AAAA,MAGA,oCAAoC,IAAI;AACpC,YAAI,qBAAqB,EAAE,GAAG;AAC1B,eAAK,cAAc,KAAK,cAAc,KAAK,KAAK;AAAA,QACpD,WACS,qBAAqB,EAAE,GAAG;AAC/B,eAAK,cAAc,KAAK,cAAc,KAAK,KAAK;AAAA,QACpD,WACS,aAAa,EAAE,GAAG;AACvB,eAAK,cAAc,KAAK,cAAc,KAAK,KAAK;AAAA,QACpD,WACS,OAAO,YAAE,WAAW;AACzB,eAAK,QAAQA,OAAM;AAAA,QACvB,OACK;AACD,eAAK,KAAK,IAAI,uCAAuC;AACrD,eAAK,QAAQA,OAAM;AACnB,eAAK,mCAAmC,EAAE;AAAA,QAC9C;AAAA,MACJ;AAAA,MAGA,gCAAgC,IAAI;AAChC,YAAI,aAAa,EAAE,GAAG;AAClB,eAAK,cAAc,KAAK,cAAc,KAAK,KAAK;AAAA,QACpD,WACS,OAAO,YAAE,WAAW;AACzB,eAAK,QAAQA,OAAM;AAAA,QACvB,OACK;AACD,eAAK,KAAK,IAAI,uCAAuC;AACrD,eAAK,QAAQA,OAAM;AACnB,eAAK,mCAAmC,EAAE;AAAA,QAC9C;AAAA,MACJ;AAAA,MAGA,mCAAmC,IAAI;AACnC,YAAI,KAAK,gBAAgB,YAAE,MAAM;AAC7B,eAAK,KAAK,IAAI,sBAAsB;AACpC,eAAK,cAAc,YAAE;AAAA,QACzB,WACS,KAAK,cAAc,SAAS;AACjC,eAAK,KAAK,IAAI,qCAAqC;AACnD,eAAK,cAAc,YAAE;AAAA,QACzB,WACS,YAAY,KAAK,WAAW,GAAG;AACpC,eAAK,KAAK,IAAI,2BAA2B;AACzC,eAAK,cAAc,YAAE;AAAA,QACzB,WACS,qBAAqB,KAAK,WAAW,GAAG;AAC7C,eAAK,KAAK,IAAI,8BAA8B;AAAA,QAChD,WACS,mBAAmB,KAAK,WAAW,KAAK,KAAK,gBAAgB,YAAE,iBAAiB;AACrF,eAAK,KAAK,IAAI,yBAAyB;AACvC,gBAAM,cAAc,mCAAmC,IAAI,KAAK,WAAW;AAC3E,cAAI,gBAAgB,QAAW;AAC3B,iBAAK,cAAc;AAAA,UACvB;AAAA,QACJ;AACA,aAAK,4CAA4C,KAAK,WAAW;AACjE,aAAK,kBAAkB,KAAK,aAAa,EAAE;AAAA,MAC/C;AAAA,IACJ;AAAA;AAAA;;;ACt1FA,IAEM,2BACA,sCAWA,oBAoBA,eACA,mBACA,oBACA,eACA,aAEO;AAxCb;AAAA;AAAA;AAEA,IAAM,4BAA4B,oBAAI,IAAI,CAAC,OAAE,IAAI,OAAE,IAAI,OAAE,IAAI,OAAE,UAAU,OAAE,QAAQ,OAAE,GAAG,OAAE,IAAI,OAAE,IAAI,OAAE,IAAI,OAAE,GAAG,CAAC;AAChH,IAAM,uCAAuC,oBAAI,IAAI;AAAA,MACjD,GAAG;AAAA,MACH,OAAE;AAAA,MACF,OAAE;AAAA,MACF,OAAE;AAAA,MACF,OAAE;AAAA,MACF,OAAE;AAAA,MACF,OAAE;AAAA,MACF,OAAE;AAAA,MACF,OAAE;AAAA,IACN,CAAC;AACD,IAAM,qBAAqB,oBAAI,IAAI;AAAA,MAC/B,CAAC,OAAE,QAAQ,GAAG,IAAI;AAAA,MAClB,CAAC,OAAE,SAAS,GAAG,IAAI;AAAA,MACnB,CAAC,OAAE,MAAM,GAAG,IAAI;AAAA,MAChB,CAAC,OAAE,SAAS,GAAG,IAAI;AAAA,MACnB,CAAC,OAAE,QAAQ,GAAG,IAAI;AAAA,MAClB,CAAC,OAAE,OAAO,GAAG,IAAI;AAAA,MACjB,CAAC,OAAE,IAAI,GAAG,IAAI;AAAA,MACd,CAAC,OAAE,UAAU,GAAG,IAAI;AAAA,MACpB,CAAC,OAAE,IAAI,GAAG,IAAI;AAAA,MACd,CAAC,OAAE,gBAAgB,GAAG,MAAM;AAAA,MAC5B,CAAC,OAAE,IAAI,GAAG,MAAM;AAAA,MAChB,CAAC,OAAE,IAAI,GAAG,MAAM;AAAA,MAChB,CAAC,OAAE,IAAI,GAAG,MAAM;AAAA,MAChB,CAAC,OAAE,IAAI,GAAG,MAAM;AAAA,MAChB,CAAC,OAAE,OAAO,GAAG,MAAM;AAAA,MACnB,CAAC,OAAE,MAAM,GAAG,GAAG;AAAA,MACf,CAAC,OAAE,gBAAgB,GAAG,GAAG;AAAA,MACzB,CAAC,OAAE,OAAO,GAAG,GAAG;AAAA,IACpB,CAAC;AACD,IAAM,gBAAgB,CAAC,OAAE,IAAI,OAAE,IAAI,OAAE,IAAI,OAAE,IAAI,OAAE,IAAI,OAAE,EAAE;AACzD,IAAM,oBAAoB,CAAC,OAAE,IAAI,OAAE,UAAU,OAAE,IAAI;AACnD,IAAM,qBAAqB,CAAC,OAAE,OAAO,OAAE,OAAO,OAAE,OAAO,OAAE,UAAU,OAAE,IAAI;AACzE,IAAM,gBAAgB,CAAC,OAAE,OAAO,OAAE,UAAU,OAAE,IAAI;AAClD,IAAM,cAAc,CAAC,OAAE,IAAI,OAAE,EAAE;AAExB,IAAM,mBAAN,MAAuB;AAAA,MAC1B,IAAI,2BAA2B;AAC3B,eAAO,KAAK,cAAc,IAAI,KAAK,YAAY,mBAAmB,KAAK,OAAO,IAAI,KAAK;AAAA,MAC3F;AAAA,MACA,YAAYI,WAAU,aAAa,SAAS;AACxC,aAAK,cAAc;AACnB,aAAK,UAAU;AACf,aAAK,QAAQ,CAAC;AACd,aAAK,SAAS,CAAC;AACf,aAAK,WAAW;AAChB,aAAK,YAAY;AACjB,aAAK,eAAe,OAAE;AACtB,aAAK,UAAUA;AAAA,MACnB;AAAA,MAEA,SAAS,SAAS;AACd,eAAO,KAAK,MAAM,YAAY,SAAS,KAAK,QAAQ;AAAA,MACxD;AAAA,MAEA,gBAAgB;AACZ,eAAO,KAAK,iBAAiB,OAAE,YAAY,KAAK,YAAY,gBAAgB,KAAK,OAAO,MAAM,GAAG;AAAA,MACrG;AAAA,MACA,wBAAwB;AACpB,aAAK,UAAU,KAAK,MAAM,KAAK;AAC/B,aAAK,eAAe,KAAK,OAAO,KAAK;AAAA,MACzC;AAAA,MAEA,KAAK,SAAS,OAAO;AACjB,aAAK;AACL,aAAK,MAAM,KAAK,YAAY;AAC5B,aAAK,UAAU;AACf,aAAK,OAAO,KAAK,YAAY;AAC7B,aAAK,eAAe;AACpB,YAAI,KAAK,cAAc,GAAG;AACtB,eAAK;AAAA,QACT;AACA,aAAK,QAAQ,WAAW,SAAS,OAAO,IAAI;AAAA,MAChD;AAAA,MACA,MAAM;AACF,cAAM,SAAS,KAAK;AACpB,YAAI,KAAK,YAAY,KAAK,KAAK,cAAc,GAAG;AAC5C,eAAK;AAAA,QACT;AACA,aAAK;AACL,aAAK,sBAAsB;AAC3B,aAAK,QAAQ,UAAU,QAAQ,IAAI;AAAA,MACvC;AAAA,MACA,QAAQ,YAAY,YAAY;AAC5B,cAAM,MAAM,KAAK,SAAS,UAAU;AACpC,aAAK,MAAM,OAAO;AAClB,YAAI,QAAQ,KAAK,UAAU;AACvB,eAAK,UAAU;AAAA,QACnB;AAAA,MACJ;AAAA,MACA,YAAY,kBAAkB,YAAY,cAAc;AACpD,cAAM,eAAe,KAAK,SAAS,gBAAgB,IAAI;AACvD,aAAK,MAAM,OAAO,cAAc,GAAG,UAAU;AAC7C,aAAK,OAAO,OAAO,cAAc,GAAG,YAAY;AAChD,aAAK;AACL,YAAI,iBAAiB,KAAK,UAAU;AAChC,eAAK,sBAAsB;AAAA,QAC/B;AACA,aAAK,QAAQ,WAAW,KAAK,SAAS,KAAK,cAAc,iBAAiB,KAAK,QAAQ;AAAA,MAC3F;AAAA,MACA,sBAAsB,SAAS;AAC3B,YAAI,YAAY,KAAK,WAAW;AAChC,WAAG;AACC,sBAAY,KAAK,OAAO,YAAY,SAAS,YAAY,CAAC;AAAA,QAC9D,SAAS,YAAY,KAAK,KAAK,YAAY,gBAAgB,KAAK,MAAM,UAAU,MAAM,GAAG;AACzF,aAAK,gBAAgB,YAAY,IAAI,IAAI,SAAS;AAAA,MACtD;AAAA,MACA,gBAAgB,KAAK;AACjB,eAAO,KAAK,YAAY,KAAK;AACzB,gBAAM,SAAS,KAAK;AACpB,cAAI,KAAK,YAAY,KAAK,KAAK,cAAc,GAAG;AAC5C,iBAAK,aAAa;AAAA,UACtB;AACA,eAAK;AACL,eAAK,sBAAsB;AAC3B,eAAK,QAAQ,UAAU,QAAQ,KAAK,WAAW,GAAG;AAAA,QACtD;AAAA,MACJ;AAAA,MACA,sBAAsB,SAAS;AAC3B,cAAM,MAAM,KAAK,SAAS,OAAO;AACjC,aAAK,gBAAgB,MAAM,IAAI,IAAI,GAAG;AAAA,MAC1C;AAAA,MACA,eAAe,UAAU,UAAU;AAC/B,cAAM,MAAM,KAAK,iBAAiB,UAAU,QAAQ;AACpD,aAAK,gBAAgB,MAAM,IAAI,IAAI,GAAG;AAAA,MAC1C;AAAA,MACA,+BAA+B;AAC3B,aAAK,eAAe,eAAe,GAAG,IAAI;AAAA,MAC9C;AAAA,MACA,0BAA0B;AACtB,aAAK,eAAe,aAAa,GAAG,IAAI;AAAA,MAC5C;AAAA,MACA,wBAAwB;AAGpB,aAAK,YAAY;AACjB,aAAK,gBAAgB,CAAC;AAAA,MAC1B;AAAA,MACA,iBAAiB,UAAU,WAAW;AAClC,iBAAS,IAAI,KAAK,UAAU,KAAK,GAAG,KAAK;AACrC,cAAI,SAAS,SAAS,KAAK,OAAO,EAAE,KAAK,KAAK,YAAY,gBAAgB,KAAK,MAAM,EAAE,MAAM,WAAW;AACpG,mBAAO;AAAA,UACX;AAAA,QACJ;AACA,eAAO;AAAA,MACX;AAAA,MACA,YAAY,UAAU,UAAU;AAC5B,cAAM,MAAM,KAAK,iBAAiB,UAAU,QAAQ;AACpD,aAAK,gBAAgB,MAAM,CAAC;AAAA,MAChC;AAAA,MACA,0BAA0B;AACtB,aAAK,YAAY,eAAe,GAAG,IAAI;AAAA,MAC3C;AAAA,MACA,8BAA8B;AAC1B,aAAK,YAAY,oBAAoB,GAAG,IAAI;AAAA,MAChD;AAAA,MACA,6BAA6B;AACzB,aAAK,YAAY,mBAAmB,GAAG,IAAI;AAAA,MAC/C;AAAA,MACA,OAAO,SAAS;AACZ,cAAM,MAAM,KAAK,SAAS,OAAO;AACjC,YAAI,OAAO,GAAG;AACV,cAAI,QAAQ,KAAK,UAAU;AACvB,iBAAK,IAAI;AAAA,UACb,OACK;AACD,iBAAK,MAAM,OAAO,KAAK,CAAC;AACxB,iBAAK,OAAO,OAAO,KAAK,CAAC;AACzB,iBAAK;AACL,iBAAK,sBAAsB;AAC3B,iBAAK,QAAQ,UAAU,SAAS,KAAK;AAAA,UACzC;AAAA,QACJ;AAAA,MACJ;AAAA,MAEA,mCAAmC;AAE/B,eAAO,KAAK,YAAY,KAAK,KAAK,OAAO,OAAO,OAAE,OAAO,KAAK,MAAM,KAAK;AAAA,MAC7E;AAAA,MACA,SAAS,SAAS;AACd,eAAO,KAAK,SAAS,OAAO,IAAI;AAAA,MACpC;AAAA,MACA,kBAAkB,SAAS;AACvB,cAAM,aAAa,KAAK,SAAS,OAAO,IAAI;AAC5C,eAAO,cAAc,IAAI,KAAK,MAAM,cAAc;AAAA,MACtD;AAAA,MACA,2BAA2B;AACvB,eAAO,KAAK,aAAa,KAAK,KAAK,OAAO,OAAO,OAAE;AAAA,MACvD;AAAA,MAEA,WAAW,SAAS;AAChB,iBAAS,IAAI,KAAK,UAAU,KAAK,GAAG,KAAK;AACrC,gBAAM,KAAK,KAAK,OAAO;AACvB,gBAAM,KAAK,KAAK,YAAY,gBAAgB,KAAK,MAAM,EAAE;AACzD,cAAI,OAAO,WAAW,OAAO,GAAG,MAAM;AAClC,mBAAO;AAAA,UACX;AACA,cAAI,mBAAmB,IAAI,EAAE,MAAM,IAAI;AACnC,mBAAO;AAAA,UACX;AAAA,QACJ;AACA,eAAO;AAAA,MACX;AAAA,MACA,2BAA2B;AACvB,iBAAS,IAAI,KAAK,UAAU,KAAK,GAAG,KAAK;AACrC,gBAAM,KAAK,KAAK,OAAO;AACvB,gBAAM,KAAK,KAAK,YAAY,gBAAgB,KAAK,MAAM,EAAE;AACzD,cAAI,iBAAiB,EAAE,KAAK,OAAO,GAAG,MAAM;AACxC,mBAAO;AAAA,UACX;AACA,cAAI,mBAAmB,IAAI,EAAE,MAAM,IAAI;AACnC,mBAAO;AAAA,UACX;AAAA,QACJ;AACA,eAAO;AAAA,MACX;AAAA,MACA,mBAAmB,SAAS;AACxB,iBAAS,IAAI,KAAK,UAAU,KAAK,GAAG,KAAK;AACrC,gBAAM,KAAK,KAAK,OAAO;AACvB,gBAAM,KAAK,KAAK,YAAY,gBAAgB,KAAK,MAAM,EAAE;AACzD,cAAI,OAAO,WAAW,OAAO,GAAG,MAAM;AAClC,mBAAO;AAAA,UACX;AACA,eAAM,OAAO,OAAE,MAAM,OAAO,OAAE,OAAO,OAAO,GAAG,QAAS,mBAAmB,IAAI,EAAE,MAAM,IAAI;AACvF,mBAAO;AAAA,UACX;AAAA,QACJ;AACA,eAAO;AAAA,MACX;AAAA,MACA,iBAAiB,SAAS;AACtB,iBAAS,IAAI,KAAK,UAAU,KAAK,GAAG,KAAK;AACrC,gBAAM,KAAK,KAAK,OAAO;AACvB,gBAAM,KAAK,KAAK,YAAY,gBAAgB,KAAK,MAAM,EAAE;AACzD,cAAI,OAAO,WAAW,OAAO,GAAG,MAAM;AAClC,mBAAO;AAAA,UACX;AACA,cAAK,OAAO,OAAE,UAAU,OAAO,GAAG,QAAS,mBAAmB,IAAI,EAAE,MAAM,IAAI;AAC1E,mBAAO;AAAA,UACX;AAAA,QACJ;AACA,eAAO;AAAA,MACX;AAAA,MACA,gBAAgB,SAAS;AACrB,iBAAS,IAAI,KAAK,UAAU,KAAK,GAAG,KAAK;AACrC,gBAAM,KAAK,KAAK,OAAO;AACvB,gBAAM,KAAK,KAAK,YAAY,gBAAgB,KAAK,MAAM,EAAE;AACzD,cAAI,OAAO,GAAG,MAAM;AAChB;AAAA,UACJ;AACA,cAAI,OAAO,SAAS;AAChB,mBAAO;AAAA,UACX;AACA,cAAI,OAAO,OAAE,SAAS,OAAO,OAAE,YAAY,OAAO,OAAE,MAAM;AACtD,mBAAO;AAAA,UACX;AAAA,QACJ;AACA,eAAO;AAAA,MACX;AAAA,MACA,kCAAkC;AAC9B,iBAAS,IAAI,KAAK,UAAU,KAAK,GAAG,KAAK;AACrC,gBAAM,KAAK,KAAK,OAAO;AACvB,gBAAM,KAAK,KAAK,YAAY,gBAAgB,KAAK,MAAM,EAAE;AACzD,cAAI,OAAO,GAAG,MAAM;AAChB;AAAA,UACJ;AACA,cAAI,OAAO,OAAE,SAAS,OAAO,OAAE,SAAS,OAAO,OAAE,OAAO;AACpD,mBAAO;AAAA,UACX;AACA,cAAI,OAAO,OAAE,SAAS,OAAO,OAAE,MAAM;AACjC,mBAAO;AAAA,UACX;AAAA,QACJ;AACA,eAAO;AAAA,MACX;AAAA,MACA,iBAAiB,SAAS;AACtB,iBAAS,IAAI,KAAK,UAAU,KAAK,GAAG,KAAK;AACrC,gBAAM,KAAK,KAAK,OAAO;AACvB,gBAAM,KAAK,KAAK,YAAY,gBAAgB,KAAK,MAAM,EAAE;AACzD,cAAI,OAAO,GAAG,MAAM;AAChB;AAAA,UACJ;AACA,cAAI,OAAO,SAAS;AAChB,mBAAO;AAAA,UACX;AACA,cAAI,OAAO,OAAE,UAAU,OAAO,OAAE,UAAU;AACtC,mBAAO;AAAA,UACX;AAAA,QACJ;AACA,eAAO;AAAA,MACX;AAAA,MAEA,yBAAyB;AACrB,eAAO,0BAA0B,IAAI,KAAK,YAAY,GAAG;AACrD,eAAK,IAAI;AAAA,QACb;AAAA,MACJ;AAAA,MACA,mCAAmC;AAC/B,eAAO,qCAAqC,IAAI,KAAK,YAAY,GAAG;AAChE,eAAK,IAAI;AAAA,QACb;AAAA,MACJ;AAAA,MACA,oCAAoC,aAAa;AAC7C,eAAO,KAAK,iBAAiB,eAAe,qCAAqC,IAAI,KAAK,YAAY,GAAG;AACrG,eAAK,IAAI;AAAA,QACb;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;;;ACtTA,IACM,mBACK,WAKL,QAEO;AATb;AAAA;AACA,IAAM,oBAAoB;AAE1B,KAAC,SAAUC,YAAW;AAClB,MAAAA,WAAUA,WAAU,YAAY,KAAK;AACrC,MAAAA,WAAUA,WAAU,aAAa,KAAK;AAAA,IAC1C,GAAG,YAAY,cAAc,YAAY,CAAC,EAAE;AAC5C,IAAM,SAAS,EAAE,MAAM,UAAU,OAAO;AAEjC,IAAM,wBAAN,MAA4B;AAAA,MAC/B,YAAY,aAAa;AACrB,aAAK,cAAc;AACnB,aAAK,UAAU,CAAC;AAChB,aAAK,WAAW;AAAA,MACpB;AAAA,MAIA,+BAA+B,YAAY,SAAS;AAChD,cAAM,aAAa,CAAC;AACpB,cAAM,gBAAgB,QAAQ;AAC9B,cAAM,YAAY,KAAK,YAAY,WAAW,UAAU;AACxD,cAAM,iBAAiB,KAAK,YAAY,gBAAgB,UAAU;AAClE,iBAAS,IAAI,GAAG,IAAI,KAAK,QAAQ,QAAQ,KAAK;AAC1C,gBAAM,QAAQ,KAAK,QAAQ;AAC3B,cAAI,MAAM,SAAS,UAAU,QAAQ;AACjC;AAAA,UACJ;AACA,gBAAM,EAAE,QAAQ,IAAI;AACpB,cAAI,KAAK,YAAY,WAAW,OAAO,MAAM,aACzC,KAAK,YAAY,gBAAgB,OAAO,MAAM,gBAAgB;AAC9D,kBAAM,eAAe,KAAK,YAAY,YAAY,OAAO;AACzD,gBAAI,aAAa,WAAW,eAAe;AACvC,yBAAW,KAAK,EAAE,KAAK,GAAG,OAAO,aAAa,CAAC;AAAA,YACnD;AAAA,UACJ;AAAA,QACJ;AACA,eAAO;AAAA,MACX;AAAA,MACA,wBAAwB,YAAY;AAChC,YAAI,KAAK,QAAQ,SAAS;AACtB;AACJ,cAAM,UAAU,KAAK,YAAY,YAAY,UAAU;AACvD,cAAM,aAAa,KAAK,+BAA+B,YAAY,OAAO;AAC1E,YAAI,WAAW,SAAS;AACpB;AAEJ,cAAM,aAAa,IAAI,IAAI,QAAQ,IAAI,CAAC,WAAW,CAAC,OAAO,MAAM,OAAO,KAAK,CAAC,CAAC;AAC/E,YAAI,kBAAkB;AAEtB,iBAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK;AACxC,gBAAM,YAAY,WAAW;AAE7B,cAAI,UAAU,MAAM,MAAM,CAAC,UAAU,WAAW,IAAI,MAAM,IAAI,MAAM,MAAM,KAAK,GAAG;AAC9E,+BAAmB;AACnB,gBAAI,mBAAmB,mBAAmB;AACtC,mBAAK,QAAQ,OAAO,UAAU,KAAK,CAAC;AAAA,YACxC;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAAA,MAEA,eAAe;AACX,aAAK,QAAQ,QAAQ,MAAM;AAAA,MAC/B;AAAA,MACA,YAAY,SAAS,OAAO;AACxB,aAAK,wBAAwB,OAAO;AACpC,aAAK,QAAQ,QAAQ;AAAA,UACjB,MAAM,UAAU;AAAA,UAChB;AAAA,UACA;AAAA,QACJ,CAAC;AAAA,MACL;AAAA,MACA,2BAA2B,SAAS,OAAO;AACvC,cAAM,cAAc,KAAK,QAAQ,QAAQ,KAAK,QAAQ;AACtD,aAAK,QAAQ,OAAO,aAAa,GAAG;AAAA,UAChC,MAAM,UAAU;AAAA,UAChB;AAAA,UACA;AAAA,QACJ,CAAC;AAAA,MACL;AAAA,MACA,YAAY,OAAO;AACf,cAAM,aAAa,KAAK,QAAQ,QAAQ,KAAK;AAC7C,YAAI,cAAc,GAAG;AACjB,eAAK,QAAQ,OAAO,YAAY,CAAC;AAAA,QACrC;AAAA,MACJ;AAAA,MAMA,oBAAoB;AAChB,cAAM,YAAY,KAAK,QAAQ,QAAQ,MAAM;AAC7C,YAAI,aAAa,GAAG;AAChB,eAAK,QAAQ,OAAO,GAAG,YAAY,CAAC;AAAA,QACxC,OACK;AACD,eAAK,QAAQ,SAAS;AAAA,QAC1B;AAAA,MACJ;AAAA,MAEA,kCAAkC,SAAS;AACvC,cAAM,QAAQ,KAAK,QAAQ,KAAK,CAACC,WAAUA,OAAM,SAAS,UAAU,UAAU,KAAK,YAAY,WAAWA,OAAM,OAAO,MAAM,OAAO;AACpI,eAAO,SAAS,MAAM,SAAS,UAAU,UAAU,QAAQ;AAAA,MAC/D;AAAA,MACA,gBAAgB,SAAS;AACrB,eAAO,KAAK,QAAQ,KAAK,CAAC,UAAU,MAAM,SAAS,UAAU,WAAW,MAAM,YAAY,OAAO;AAAA,MACrG;AAAA,IACJ;AAAA;AAAA;;;AC5GA,SAAS,eAAe,OAAO;AAC3B,SAAO;AAAA,IACH,UAAU;AAAA,IACV;AAAA,IACA,YAAY;AAAA,EAChB;AACJ;AAPA,IAQa;AARb;AAAA;AAAA;AAQO,IAAM,qBAAqB;AAAA,MAE9B,iBAAiB;AACb,eAAO;AAAA,UACH,UAAU;AAAA,UACV,MAAM,cAAc;AAAA,UACpB,YAAY,CAAC;AAAA,QACjB;AAAA,MACJ;AAAA,MACA,yBAAyB;AACrB,eAAO;AAAA,UACH,UAAU;AAAA,UACV,YAAY,CAAC;AAAA,QACjB;AAAA,MACJ;AAAA,MACA,cAAc,SAAS,cAAc,OAAO;AACxC,eAAO;AAAA,UACH,UAAU;AAAA,UACV;AAAA,UACA;AAAA,UACA;AAAA,UACA,YAAY,CAAC;AAAA,UACb,YAAY;AAAA,QAChB;AAAA,MACJ;AAAA,MACA,kBAAkBC,OAAM;AACpB,eAAO;AAAA,UACH,UAAU;AAAA,UACV,MAAAA;AAAA,UACA,YAAY;AAAA,QAChB;AAAA,MACJ;AAAA,MAEA,YAAY,YAAY,SAAS;AAC7B,mBAAW,WAAW,KAAK,OAAO;AAClC,gBAAQ,aAAa;AAAA,MACzB;AAAA,MACA,aAAa,YAAY,SAAS,eAAe;AAC7C,cAAM,eAAe,WAAW,WAAW,QAAQ,aAAa;AAChE,mBAAW,WAAW,OAAO,cAAc,GAAG,OAAO;AACrD,gBAAQ,aAAa;AAAA,MACzB;AAAA,MACA,mBAAmB,iBAAiB,gBAAgB;AAChD,wBAAgB,UAAU;AAAA,MAC9B;AAAA,MACA,mBAAmB,iBAAiB;AAChC,eAAO,gBAAgB;AAAA,MAC3B;AAAA,MACA,gBAAgBC,WAAU,MAAM,UAAU,UAAU;AAChD,cAAM,cAAcA,UAAS,WAAW,KAAK,CAAC,SAAS,KAAK,aAAa,eAAe;AACxF,YAAI,aAAa;AACb,sBAAY,OAAO;AACnB,sBAAY,WAAW;AACvB,sBAAY,WAAW;AAAA,QAC3B,OACK;AACD,gBAAM,OAAO;AAAA,YACT,UAAU;AAAA,YACV;AAAA,YACA;AAAA,YACA;AAAA,YACA,YAAY;AAAA,UAChB;AACA,6BAAmB,YAAYA,WAAU,IAAI;AAAA,QACjD;AAAA,MACJ;AAAA,MACA,gBAAgBA,WAAU,MAAM;AAC5B,QAAAA,UAAS,OAAO;AAAA,MACpB;AAAA,MACA,gBAAgBA,WAAU;AACtB,eAAOA,UAAS;AAAA,MACpB;AAAA,MACA,WAAW,MAAM;AACb,YAAI,KAAK,YAAY;AACjB,gBAAM,MAAM,KAAK,WAAW,WAAW,QAAQ,IAAI;AACnD,eAAK,WAAW,WAAW,OAAO,KAAK,CAAC;AACxC,eAAK,aAAa;AAAA,QACtB;AAAA,MACJ;AAAA,MACA,WAAW,YAAYC,OAAM;AACzB,YAAI,WAAW,WAAW,SAAS,GAAG;AAClC,gBAAM,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS;AACtE,cAAI,mBAAmB,WAAW,QAAQ,GAAG;AACzC,qBAAS,SAASA;AAClB;AAAA,UACJ;AAAA,QACJ;AACA,2BAAmB,YAAY,YAAY,eAAeA,KAAI,CAAC;AAAA,MACnE;AAAA,MACA,iBAAiB,YAAYA,OAAM,eAAe;AAC9C,cAAM,WAAW,WAAW,WAAW,WAAW,WAAW,QAAQ,aAAa,IAAI;AACtF,YAAI,YAAY,mBAAmB,WAAW,QAAQ,GAAG;AACrD,mBAAS,SAASA;AAAA,QACtB,OACK;AACD,6BAAmB,aAAa,YAAY,eAAeA,KAAI,GAAG,aAAa;AAAA,QACnF;AAAA,MACJ;AAAA,MACA,gBAAgB,WAAW,OAAO;AAC9B,cAAM,oBAAoB,IAAI,IAAI,UAAU,MAAM,IAAI,CAACC,UAASA,MAAK,IAAI,CAAC;AAC1E,iBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACnC,cAAI,CAAC,kBAAkB,IAAI,MAAM,GAAG,IAAI,GAAG;AACvC,sBAAU,MAAM,KAAK,MAAM,EAAE;AAAA,UACjC;AAAA,QACJ;AAAA,MACJ;AAAA,MAEA,cAAc,MAAM;AAChB,eAAO,KAAK,WAAW;AAAA,MAC3B;AAAA,MACA,cAAc,MAAM;AAChB,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,cAAc,MAAM;AAChB,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,YAAY,SAAS;AACjB,eAAO,QAAQ;AAAA,MACnB;AAAA,MAEA,WAAW,SAAS;AAChB,eAAO,QAAQ;AAAA,MACnB;AAAA,MACA,gBAAgB,SAAS;AACrB,eAAO,QAAQ;AAAA,MACnB;AAAA,MACA,mBAAmB,UAAU;AACzB,eAAO,SAAS;AAAA,MACpB;AAAA,MACA,sBAAsB,aAAa;AAC/B,eAAO,YAAY;AAAA,MACvB;AAAA,MACA,wBAAwB,aAAa;AACjC,eAAO,YAAY;AAAA,MACvB;AAAA,MACA,4BAA4B,aAAa;AACrC,eAAO,YAAY;AAAA,MACvB;AAAA,MACA,4BAA4B,aAAa;AACrC,eAAO,YAAY;AAAA,MACvB;AAAA,MAEA,WAAW,MAAM;AACb,eAAO,KAAK,aAAa;AAAA,MAC7B;AAAA,MACA,cAAc,MAAM;AAChB,eAAO,KAAK,aAAa;AAAA,MAC7B;AAAA,MACA,mBAAmB,MAAM;AACrB,eAAO,KAAK,aAAa;AAAA,MAC7B;AAAA,MACA,cAAc,MAAM;AAChB,eAAO,OAAO,UAAU,eAAe,KAAK,MAAM,SAAS;AAAA,MAC/D;AAAA,MAEA,0BAA0B,MAAMC,WAAU;AACtC,aAAK,qBAAqBA;AAAA,MAC9B;AAAA,MACA,0BAA0B,MAAM;AAC5B,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,6BAA6B,MAAM,aAAa;AAC5C,aAAK,qBAAqB,EAAE,GAAG,KAAK,oBAAoB,GAAG,YAAY;AAAA,MAC3E;AAAA,IACJ;AAAA;AAAA;;;AC7FA,SAAS,UAAU,UAAU,UAAU;AACnC,SAAO,SAAS,KAAK,CAAC,WAAW,SAAS,WAAW,MAAM,CAAC;AAChE;AAEO,SAAS,aAAa,OAAO;AAChC,SAAQ,MAAM,SAAS,sBACnB,MAAM,aAAa,SAClB,MAAM,aAAa,QAAQ,MAAM,aAAa;AACvD;AACO,SAAS,gBAAgB,OAAO;AACnC,MAAI,MAAM,SAAS,oBAAoB;AACnC,WAAO,cAAc;AAAA,EACzB;AACA,QAAM,EAAE,SAAS,IAAI;AACrB,MAAI,YAAY,SAAS,YAAY,MAAM,uBAAuB;AAC9D,WAAO,cAAc;AAAA,EACzB;AACA,MAAI,EAAE,SAAS,IAAI;AACnB,MAAI,aAAa,MAAM;AACnB,eAAW,SAAS,YAAY;AAChC,QAAI,uBAAuB,IAAI,QAAQ,GAAG;AACtC,aAAO,cAAc;AAAA,IACzB;AACA,QAAI,WAAW,aAAa,OAAO,8CAA8C;AACjF,QAAI,UAAU,UAAU,QAAQ,GAAG;AAC/B,aAAO,cAAc;AAAA,IACzB;AACA,eACI,aAAa,OAAO,oCAAoC;AAC5D,QAAI,UAAU,UAAU,QAAQ,GAAG;AAC/B,aAAO,cAAc;AAAA,IACzB;AAAA,EACJ;AACA,SAAO,cAAc;AACzB;AAjHA,IAEM,oBACA,iBACA,uBACA,gCAyDA,6CAKA,wBAKA,mCACA;AAzEN;AAAA;AAAA;AAEA,IAAM,qBAAqB;AAC3B,IAAM,kBAAkB;AACxB,IAAM,wBAAwB;AAC9B,IAAM,iCAAiC;AAAA,MACnhD,GAAG;AAAA,MACH;AAAA,MACA;AAAA,IACJ;AACA,IAAM,yBAAyB,oBAAI,IAAI;AAAA,MACnC;AAAA,MACA;AAAA,MACA;AAAA,IACJ,CAAC;AACD,IAAM,oCAAoC,CAAC,oCAAoC,sCAAsC;AACrH,IAAM,mDAAmD;AAAA,MACrD,GAAG;AAAA,MACH;AAAA,MACA;AAAA,IACJ;AAAA;AAAA;;;AC6FO,SAAS,WAAW,eAAe;AACtC,QAAM,KAAK,cAAc;AACzB,QAAM,kBAAkB,OAAO,OAAE,QAC7B,cAAc,MAAM,KAAK,CAAC,EAAE,KAAK,MAAM,SAAS,MAAM,SAAS,SAAS,MAAM,QAAQ,SAAS,MAAM,IAAI;AAC7G,SAAO,mBAAmB,sBAAsB,IAAI,EAAE;AAC1D;AAEO,SAAS,uBAAuB,OAAO;AAC1C,WAAS,IAAI,GAAG,IAAI,MAAM,MAAM,QAAQ,KAAK;AACzC,QAAI,MAAM,MAAM,GAAG,SAAS,qBAAqB;AAC7C,YAAM,MAAM,GAAG,OAAO;AACtB;AAAA,IACJ;AAAA,EACJ;AACJ;AACO,SAAS,oBAAoB,OAAO;AACvC,WAAS,IAAI,GAAG,IAAI,MAAM,MAAM,QAAQ,KAAK;AACzC,UAAM,mBAAmB,yBAAyB,IAAI,MAAM,MAAM,GAAG,IAAI;AACzE,QAAI,oBAAoB,MAAM;AAC1B,YAAM,MAAM,GAAG,OAAO;AAAA,IAC1B;AAAA,EACJ;AACJ;AACO,SAAS,oBAAoB,OAAO;AACvC,WAAS,IAAI,GAAG,IAAI,MAAM,MAAM,QAAQ,KAAK;AACzC,UAAM,oBAAoB,yBAAyB,IAAI,MAAM,MAAM,GAAG,IAAI;AAC1E,QAAI,mBAAmB;AACnB,YAAM,MAAM,GAAG,SAAS,kBAAkB;AAC1C,YAAM,MAAM,GAAG,OAAO,kBAAkB;AACxC,YAAM,MAAM,GAAG,YAAY,kBAAkB;AAAA,IACjD;AAAA,EACJ;AACJ;AACO,SAAS,sBAAsB,OAAO;AACzC,QAAM,kBAAkB,6BAA6B,IAAI,MAAM,OAAO;AACtE,MAAI,mBAAmB,MAAM;AACzB,UAAM,UAAU;AAChB,UAAM,QAAQ,SAAS,MAAM,OAAO;AAAA,EACxC;AACJ;AAEA,SAAS,6BAA6B,IAAI,IAAI;AAC1C,SAAO,OAAO,GAAG,WAAW,OAAO,OAAE,MAAM,OAAO,OAAE,MAAM,OAAO,OAAE,MAAM,OAAO,OAAE,MAAM,OAAO,OAAE;AACrG;AACA,SAAS,uBAAuB,IAAI,IAAI,OAAO;AAC3C,MAAI,OAAO,GAAG,UAAU,OAAO,OAAE,gBAAgB;AAC7C,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACnC,UAAI,MAAM,GAAG,SAAS,MAAM,UAAU;AAClC,cAAM,QAAQ,MAAM,GAAG,MAAM,YAAY;AACzC,eAAO,UAAU,WAAW,aAAa,UAAU,WAAW;AAAA,MAClE;AAAA,IACJ;AAAA,EACJ;AACA,SAAO,OAAO,GAAG,QAAQ,OAAO,OAAE,kBAAkB,OAAO,OAAE,QAAQ,OAAO,OAAE;AAClF;AACO,SAAS,mBAAmB,IAAI,IAAI,OAAO,WAAW;AACzD,UAAU,CAAC,aAAa,cAAc,GAAG,SAAS,uBAAuB,IAAI,IAAI,KAAK,MAChF,CAAC,aAAa,cAAc,GAAG,WAAW,6BAA6B,IAAI,EAAE;AACvF;AApOA,IAEM,YAKA,qBACA,8BACA,0BA4DA,0BAeO,8BAuCP;AA3HN;AAAA;AAAA;AAEA,IAAM,aAAa;AAAA,MACf,WAAW;AAAA,MACX,iBAAiB;AAAA,IACrB;AAEA,IAAM,sBAAsB;AAC5B,IAAM,+BAA+B;AACrC,IAAM,2BAA2B,IAAI,IAAI;AAAA,MACroBAAI,IAAI;AAAA,MACrC,CAAC,iBAAiB,EAAE,QAAQ,SAAS,MAAM,WAAW,WAAW,GAAG,MAAM,CAAC;AAAA,MAC3E,CAAC,iBAAiB,EAAE,QAAQ,SAAS,MAAM,WAAW,WAAW,GAAG,MAAM,CAAC;AAAA,MAC3E,CAAC,cAAc,EAAE,QAAQ,SAAS,MAAM,QAAQ,WAAW,GAAG,MAAM,CAAC;AAAA,MACrE,CAAC,cAAc,EAAE,QAAQ,SAAS,MAAM,QAAQ,WAAW,GAAG,MAAM,CAAC;AAAA,MACrE,CAAC,cAAc,EAAE,QAAQ,SAAS,MAAM,QAAQ,WAAW,GAAG,MAAM,CAAC;AAAA,MACrE,CAAC,eAAe,EAAE,QAAQ,SAAS,MAAM,SAAS,WAAW,GAAG,MAAM,CAAC;AAAA,MACvE,CAAC,cAAc,EAAE,QAAQ,SAAS,MAAM,QAAQ,WAAW,GAAG,MAAM,CAAC;AAAA,MACrE,CAAC,YAAY,EAAE,QAAQ,OAAO,MAAM,QAAQ,WAAW,GAAG,IAAI,CAAC;AAAA,MAC/D,CAAC,YAAY,EAAE,QAAQ,OAAO,MAAM,QAAQ,WAAW,GAAG,IAAI,CAAC;AAAA,MAC/D,CAAC,aAAa,EAAE,QAAQ,OAAO,MAAM,SAAS,WAAW,GAAG,IAAI,CAAC;AAAA,MACjE,CAAC,SAAS,EAAE,QAAQ,IAAI,MAAM,SAAS,WAAW,GAAG,MAAM,CAAC;AAAA,MAC5D,CAAC,eAAe,EAAE,QAAQ,SAAS,MAAM,SAAS,WAAW,GAAG,MAAM,CAAC;AAAA,IAC3E,CAAC;AAEM,IAAM,+BAA+B,IAAI,IAAI;AAAA,MAChD;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACJ,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,YAAY,GAAG,EAAE,CAAC,CAAC;AAErC,IAAM,wBAAwB,oBAAI,IAAI;AAAA,MAClq7BD,SAAS,+BAA+B,GAAG,OAAO;AAC9C,MAAI,yBAAyB,EAAE,yBAAyB,kCAAkC,MAAM,OAAO;AACvG,MAAI,wBAAwB;AACxB,QAAI,CAAC,EAAE,aAAa,SAAS,uBAAuB,OAAO,GAAG;AAC1D,QAAE,yBAAyB,YAAY,sBAAsB;AAC7D,+BAAyB;AAAA,IAC7B,WACS,CAAC,EAAE,aAAa,WAAW,MAAM,KAAK,GAAG;AAC9C,+BAAyB;AAAA,IAC7B;AAAA,EACJ,OACK;AACD,wBAAoB,GAAG,KAAK;AAAA,EAChC;AACA,SAAO;AACX;AAEA,SAAS,sBAAsB,GAAG,wBAAwB;AACtD,MAAI,gBAAgB;AACpB,MAAI,MAAM,EAAE,aAAa;AACzB,SAAO,OAAO,GAAG,OAAO;AACpB,UAAM,UAAU,EAAE,aAAa,MAAM;AACrC,QAAI,YAAY,uBAAuB,SAAS;AAC5C;AAAA,IACJ;AACA,QAAI,EAAE,kBAAkB,SAAS,EAAE,aAAa,OAAO,IAAI,GAAG;AAC1D,sBAAgB;AAAA,IACpB;AAAA,EACJ;AACA,MAAI,CAAC,eAAe;AAChB,MAAE,aAAa,gBAAgB,MAAM,IAAI,IAAI,GAAG;AAChD,MAAE,yBAAyB,YAAY,sBAAsB;AAAA,EACjE;AACA,SAAO;AACX;AAEA,SAAS,YAAY,GAAG,eAAe,mBAAmB;AACtD,MAAI,cAAc;AAClB,MAAI,cAAc,EAAE,aAAa,kBAAkB,aAAa;AAChE,WAAS,IAAI,GAAG,UAAU,aAAa,YAAY,mBAAmB,KAAK,UAAU,aAAa;AAE9F,kBAAc,EAAE,aAAa,kBAAkB,OAAO;AACtD,UAAM,eAAe,EAAE,yBAAyB,gBAAgB,OAAO;AACvE,UAAM,kBAAkB,gBAAgB,KAAK;AAC7C,UAAM,+BAA+B,CAAC,gBAAgB;AACtD,QAAI,8BAA8B;AAC9B,UAAI,iBAAiB;AACjB,UAAE,yBAAyB,YAAY,YAAY;AAAA,MACvD;AACA,QAAE,aAAa,OAAO,OAAO;AAAA,IACjC,OACK;AACD,gBAAU,2BAA2B,GAAG,YAAY;AACpD,UAAI,gBAAgB,eAAe;AAC/B,UAAE,yBAAyB,WAAW;AAAA,MAC1C;AACA,QAAE,YAAY,WAAW,WAAW;AACpC,QAAE,YAAY,YAAY,SAAS,WAAW;AAC9C,oBAAc;AAAA,IAClB;AAAA,EACJ;AACA,SAAO;AACX;AAEA,SAAS,2BAA2B,GAAG,cAAc;AACjD,QAAM,KAAK,EAAE,YAAY,gBAAgB,aAAa,OAAO;AAC7D,QAAM,aAAa,EAAE,YAAY,cAAc,aAAa,MAAM,SAAS,IAAI,aAAa,MAAM,KAAK;AACvG,IAAE,aAAa,QAAQ,aAAa,SAAS,UAAU;AACvD,eAAa,UAAU;AACvB,SAAO;AACX;AAEA,SAAS,iCAAiC,GAAG,gBAAgB,aAAa;AACtE,QAAM,KAAK,EAAE,YAAY,WAAW,cAAc;AAClD,QAAM,MAAM,SAAS,EAAE;AACvB,MAAI,EAAE,gCAAgC,GAAG,GAAG;AACxC,MAAE,qBAAqB,WAAW;AAAA,EACtC,OACK;AACD,UAAM,KAAK,EAAE,YAAY,gBAAgB,cAAc;AACvD,QAAI,QAAQ,OAAE,YAAY,OAAO,GAAG,MAAM;AACtC,uBAAiB,EAAE,YAAY,mBAAmB,cAAc;AAAA,IACpE;AACA,MAAE,YAAY,YAAY,gBAAgB,WAAW;AAAA,EACzD;AACJ;AAEA,SAAS,2BAA2B,GAAG,eAAe,wBAAwB;AAC1E,QAAM,KAAK,EAAE,YAAY,gBAAgB,uBAAuB,OAAO;AACvE,QAAM,EAAE,MAAM,IAAI;AAClB,QAAM,aAAa,EAAE,YAAY,cAAc,MAAM,SAAS,IAAI,MAAM,KAAK;AAC7E,IAAE,YAAY,eAAe,UAAU;AACvC,IAAE,YAAY,YAAY,eAAe,UAAU;AACnD,IAAE,yBAAyB,2BAA2B,YAAY,KAAK;AACvE,IAAE,yBAAyB,YAAY,sBAAsB;AAC7D,IAAE,aAAa,OAAO,uBAAuB,OAAO;AACpD,IAAE,aAAa,YAAY,eAAe,YAAY,MAAM,KAAK;AACrE;AAEA,SAAS,mBAAmB,GAAG,OAAO;AAClC,WAAS,IAAI,GAAG,IAAI,oBAAoB,KAAK;AACzC,UAAM,yBAAyB,+BAA+B,GAAG,KAAK;AACtE,QAAI,CAAC,wBAAwB;AACzB;AAAA,IACJ;AACA,UAAM,gBAAgB,sBAAsB,GAAG,sBAAsB;AACrE,QAAI,CAAC,eAAe;AAChB;AAAA,IACJ;AACA,MAAE,yBAAyB,WAAW;AACtC,UAAM,cAAc,YAAY,GAAG,eAAe,uBAAuB,OAAO;AAChF,UAAM,iBAAiB,EAAE,aAAa,kBAAkB,uBAAuB,OAAO;AACtF,MAAE,YAAY,WAAW,WAAW;AACpC,QAAI;AACA,uCAAiC,GAAG,gBAAgB,WAAW;AACnE,+BAA2B,GAAG,eAAe,sBAAsB;AAAA,EACvE;AACJ;AAGA,SAAS,cAAc,GAAG,OAAO;AAC7B,IAAE,mBAAmB,OAAO,EAAE,aAAa,wBAAwB;AACvE;AACA,SAAS,+BAA+B,GAAG,OAAO;AAC9C,IAAE,mBAAmB,OAAO,EAAE,aAAa,MAAM,EAAE;AACvD;AACA,SAAS,wBAAwB,GAAG,OAAO;AACvC,IAAE,mBAAmB,OAAO,EAAE,QAAQ;AAC1C;AACA,SAAS,YAAY,GAAG,OAAO;AAC3B,IAAE,UAAU;AAEZ,MAAI,MAAM,UAAU;AAGhB,UAAM,SAAS,EAAE,kBAAkB,IAAI;AACvC,aAAS,IAAI,EAAE,aAAa,UAAU,KAAK,QAAQ,KAAK;AACpD,QAAE,gBAAgB,EAAE,aAAa,MAAM,IAAI,KAAK;AAAA,IACpD;AAEA,QAAI,CAAC,EAAE,mBAAmB,EAAE,aAAa,YAAY,GAAG;AACpD,YAAM,cAAc,EAAE,aAAa,MAAM;AACzC,YAAM,eAAe,EAAE,YAAY,0BAA0B,WAAW;AACxE,UAAI,gBAAgB,CAAC,aAAa,QAAQ;AACtC,UAAE,gBAAgB,aAAa,KAAK;AACpC,YAAI,EAAE,aAAa,YAAY,GAAG;AAC9B,gBAAM,cAAc,EAAE,aAAa,MAAM;AACzC,gBAAM,eAAe,EAAE,YAAY,0BAA0B,WAAW;AACxE,cAAI,gBAAgB,CAAC,aAAa,QAAQ;AACtC,cAAE,gBAAgB,aAAa,KAAK;AAAA,UACxC;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AACJ;AAGA,SAAS,qBAAqB,GAAG,OAAO;AACpC,IAAE,iBAAiB,KAAK;AACxB,QAAM,OAAO,MAAM,cAAc,cAAc,SAAiB,gBAAgB,KAAK;AACrF,MAAI,CAAS,aAAa,KAAK,GAAG;AAC9B,MAAE,KAAK,OAAO,IAAI,oBAAoB;AAAA,EAC1C;AACA,IAAE,YAAY,gBAAgB,EAAE,UAAU,IAAI;AAC9C,IAAE,gBAAgB,cAAc;AACpC;AACA,SAAS,mBAAmB,GAAG,OAAO;AAClC,IAAE,KAAK,OAAO,IAAI,gBAAgB,IAAI;AACtC,IAAE,YAAY,gBAAgB,EAAE,UAAU,cAAc,MAAM;AAC9D,IAAE,gBAAgB,cAAc;AAChC,IAAE,cAAc,KAAK;AACzB;AAGA,SAAS,mBAAmB,GAAG,OAAO;AAClC,MAAI,MAAM,UAAU,OAAE,MAAM;AACxB,MAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,MAAE,gBAAgB,cAAc;AAAA,EACpC,OACK;AACD,oBAAgB,GAAG,KAAK;AAAA,EAC5B;AACJ;AACA,SAAS,iBAAiB,GAAG,OAAO;AAChC,QAAM,KAAK,MAAM;AACjB,MAAI,OAAO,OAAE,QAAQ,OAAO,OAAE,QAAQ,OAAO,OAAE,QAAQ,OAAO,OAAE,IAAI;AAChE,oBAAgB,GAAG,KAAK;AAAA,EAC5B;AACJ;AACA,SAAS,gBAAgB,GAAG,OAAO;AAC/B,IAAE,uBAAuB;AACzB,IAAE,gBAAgB,cAAc;AAChC,IAAE,cAAc,KAAK;AACzB;AAGA,SAAS,mBAAmB,GAAG,OAAO;AAClC,UAAQ,MAAM,OAAO;AAAA,IACjB,KAAK,OAAE,MAAM;AACT,qBAAe,GAAG,KAAK;AACvB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,MAAM;AACT,QAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,QAAE,cAAc,EAAE,aAAa;AAC/B,QAAE,gBAAgB,cAAc;AAChC;AAAA,IACJ;AAAA,IACA,SAAS;AACL,sBAAgB,GAAG,KAAK;AAAA,IAC5B;AAAA,EACJ;AACJ;AACA,SAAS,iBAAiB,GAAG,OAAO;AAChC,QAAM,KAAK,MAAM;AACjB,MAAI,OAAO,OAAE,QAAQ,OAAO,OAAE,QAAQ,OAAO,OAAE,QAAQ,OAAO,OAAE,IAAI;AAChE,oBAAgB,GAAG,KAAK;AAAA,EAC5B,OACK;AACD,MAAE,KAAK,OAAO,IAAI,gCAAgC;AAAA,EACtD;AACJ;AACA,SAAS,gBAAgB,GAAG,OAAO;AAC/B,IAAE,mBAAmB,UAAG,MAAM,OAAE,IAAI;AACpC,IAAE,cAAc,EAAE,aAAa;AAC/B,IAAE,gBAAgB,cAAc;AAChC,IAAE,cAAc,KAAK;AACzB;AAGA,SAAS,eAAe,GAAG,OAAO;AAC9B,UAAQ,MAAM,OAAO;AAAA,IACjB,KAAK,OAAE,MAAM;AACT,qBAAe,GAAG,KAAK;AACvB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,MAAM;AACT,QAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,YAAM,iBAAiB;AACvB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,OAAO;AACV,QAAE,qBAAqB,OAAO,cAAc,MAAM;AAClD;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,UAAU;AACb,UAAI,EAAE,QAAQ,kBAAkB;AAC5B,UAAE,qBAAqB,OAAO,cAAc,OAAO;AAAA,MACvD,OACK;AACD,UAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,UAAE,gBAAgB,cAAc;AAAA,MACpC;AACA;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,OAAO;AACV,QAAE,qBAAqB,OAAO,cAAc,OAAO;AACnD;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,QAAQ;AACX,QAAE,qBAAqB,OAAO,cAAc,WAAW;AACvD;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,UAAU;AACb,QAAE,gBAAgB,KAAK;AACvB,QAAE,yBAAyB,aAAa;AACxC,QAAE,aAAa;AACf,QAAE,gBAAgB,cAAc;AAChC,QAAE,uBAAuB,QAAQ,cAAc,WAAW;AAC1D;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,MAAM;AACT,QAAE,KAAK,OAAO,IAAI,+BAA+B;AACjD;AAAA,IACJ;AAAA,IACA,SAAS;AACL,kBAAY,GAAG,KAAK;AAAA,IACxB;AAAA,EACJ;AACJ;AACA,SAAS,aAAa,GAAG,OAAO;AAC5B,UAAQ,MAAM,OAAO;AAAA,IACjB,KAAK,OAAE,MAAM;AACT,QAAE,aAAa,IAAI;AACnB,QAAE,gBAAgB,cAAc;AAChC;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,MAAM;AACT,kBAAY,GAAG,KAAK;AACpB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,UAAU;AACb,2BAAqB,GAAG,KAAK;AAC7B;AAAA,IACJ;AAAA,IACA,SAAS;AACL,QAAE,KAAK,OAAO,IAAI,gCAAgC;AAAA,IACtD;AAAA,EACJ;AACJ;AACA,SAAS,qBAAqB,GAAG,OAAO;AACpC,MAAI,EAAE,aAAa,YAAY,GAAG;AAC9B,MAAE,aAAa,iCAAiC;AAChD,QAAI,EAAE,aAAa,iBAAiB,OAAE,UAAU;AAC5C,QAAE,KAAK,OAAO,IAAI,qCAAqC;AAAA,IAC3D;AACA,MAAE,aAAa,sBAAsB,OAAE,QAAQ;AAC/C,MAAE,yBAAyB,kBAAkB;AAC7C,MAAE,uBAAuB,MAAM;AAC/B,MAAE,oBAAoB;AAAA,EAC1B,OACK;AACD,MAAE,KAAK,OAAO,IAAI,gCAAgC;AAAA,EACtD;AACJ;AACA,SAAS,YAAY,GAAG,OAAO;AAC3B,IAAE,aAAa,IAAI;AACnB,IAAE,gBAAgB,cAAc;AAChC,IAAE,cAAc,KAAK;AACzB;AAGA,SAAS,uBAAuB,GAAG,OAAO;AACtC,UAAQ,MAAM,OAAO;AAAA,IACjB,KAAK,OAAE,MAAM;AACT,qBAAe,GAAG,KAAK;AACvB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,OAAO;AACV,qBAAe,GAAG,KAAK;AACvB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,UAAU;AACb,QAAE,KAAK,OAAO,IAAI,oBAAoB;AACtC;AAAA,IACJ;AAAA,IACA,SAAS;AACL,0BAAoB,GAAG,KAAK;AAAA,IAChC;AAAA,EACJ;AACJ;AACA,SAAS,qBAAqB,GAAG,OAAO;AACpC,UAAQ,MAAM,OAAO;AAAA,IACjB,KAAK,OAAE,UAAU;AACb,QAAE,aAAa,IAAI;AACnB,QAAE,gBAAgB,cAAc;AAChC;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,IAAI;AACP,0BAAoB,GAAG,KAAK;AAC5B;AAAA,IACJ;AAAA,IACA,SAAS;AACL,QAAE,KAAK,OAAO,IAAI,gCAAgC;AAAA,IACtD;AAAA,EACJ;AACJ;AACA,SAAS,oBAAoB,GAAG,OAAO;AACnC,QAAM,UAAU,MAAM,SAAS,UAAU,MAAM,IAAI,2BAA2B,IAAI;AAClF,IAAE,KAAK,OAAO,OAAO;AACrB,IAAE,aAAa,IAAI;AACnB,IAAE,gBAAgB,cAAc;AAChC,IAAE,cAAc,KAAK;AACzB;AAGA,SAAS,kBAAkB,GAAG,OAAO;AACjC,UAAQ,MAAM,OAAO;AAAA,IACjB,KAAK,OAAE,MAAM;AACT,qBAAe,GAAG,KAAK;AACvB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,MAAM;AACT,QAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,QAAE,aAAa;AACf,QAAE,gBAAgB,cAAc;AAChC;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,UAAU;AACb,QAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,QAAE,gBAAgB,cAAc;AAChC;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,OAAO;AACV,QAAE,KAAK,OAAO,IAAI,yBAAyB;AAC3C,QAAE,aAAa,KAAK,EAAE,aAAa,OAAE,IAAI;AACzC,qBAAe,GAAG,KAAK;AACvB,QAAE,aAAa,OAAO,EAAE,WAAW;AACnC;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,MAAM;AACT,QAAE,KAAK,OAAO,IAAI,+BAA+B;AACjD;AAAA,IACJ;AAAA,IACA,SAAS;AACL,qBAAe,GAAG,KAAK;AAAA,IAC3B;AAAA,EACJ;AACJ;AACA,SAAS,gBAAgB,GAAG,OAAO;AAC/B,UAAQ,MAAM,OAAO;AAAA,IACjB,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,IAAI;AACP,qBAAe,GAAG,KAAK;AACvB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,UAAU;AACb,2BAAqB,GAAG,KAAK;AAC7B;AAAA,IACJ;AAAA,IACA,SAAS;AACL,QAAE,KAAK,OAAO,IAAI,gCAAgC;AAAA,IACtD;AAAA,EACJ;AACJ;AACA,SAAS,eAAe,GAAG,OAAO;AAC9B,IAAE,mBAAmB,UAAG,MAAM,OAAE,IAAI;AACpC,IAAE,gBAAgB,cAAc;AAChC,aAAW,GAAG,KAAK;AACvB;AAGA,SAAS,WAAW,GAAG,OAAO;AAC1B,UAAQ,MAAM,MAAM;AAAA,IAChB,KAAK,UAAU,WAAW;AACtB,sBAAgB,GAAG,KAAK;AACxB;AAAA,IACJ;AAAA,IACA,KAAK,UAAU,sBAAsB;AACjC,gCAA0B,GAAG,KAAK;AAClC;AAAA,IACJ;AAAA,IACA,KAAK,UAAU,SAAS;AACpB,oBAAc,GAAG,KAAK;AACtB;AAAA,IACJ;AAAA,IACA,KAAK,UAAU,WAAW;AACtB,qBAAe,GAAG,KAAK;AACvB;AAAA,IACJ;AAAA,IACA,KAAK,UAAU,SAAS;AACpB,mBAAa,GAAG,KAAK;AACrB;AAAA,IACJ;AAAA,IACA,KAAK,UAAU,KAAK;AAChB,gBAAU,GAAG,KAAK;AAClB;AAAA,IACJ;AAAA,IACA;AAAA,EAEJ;AACJ;AACA,SAAS,0BAA0B,GAAG,OAAO;AACzC,IAAE,qCAAqC;AACvC,IAAE,kBAAkB,KAAK;AAC7B;AACA,SAAS,gBAAgB,GAAG,OAAO;AAC/B,IAAE,qCAAqC;AACvC,IAAE,kBAAkB,KAAK;AACzB,IAAE,aAAa;AACnB;AACA,SAAS,mBAAmB,GAAG,OAAO;AAClC,MAAI,EAAE,aAAa,cAAc,GAAG;AAChC,MAAE,YAAY,gBAAgB,EAAE,aAAa,MAAM,IAAI,MAAM,KAAK;AAAA,EACtE;AACJ;AACA,SAAS,mBAAmB,GAAG,OAAO;AAClC,QAAM,cAAc,EAAE,aAAa,iCAAiC;AACpE,MAAI,eAAe,EAAE,aAAa,cAAc,GAAG;AAC/C,MAAE,aAAa;AACf,MAAE,YAAY,gBAAgB,aAAa,MAAM,KAAK;AAAA,EAC1D;AACJ;AACA,SAAS,uBAAuB,GAAG,OAAO;AACtC,QAAM,cAAc,EAAE,aAAa,iCAAiC;AACpE,MAAI,EAAE,cAAc,aAAa;AAC7B,MAAE,YAAY,WAAW,WAAW;AACpC,MAAE,aAAa,sBAAsB;AACrC,MAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,MAAE,gBAAgB,cAAc;AAAA,EACpC;AACJ;AACA,SAAS,sBAAsB,GAAG,OAAO;AACrC,MAAI,EAAE,aAAa,iBAAiB,OAAE,CAAC,GAAG;AACtC,MAAE,eAAe;AAAA,EACrB;AACA,IAAE,eAAe,OAAO,GAAG,IAAI;AACnC;AACA,SAAS,6BAA6B,GAAG,OAAO;AAC5C,MAAI,EAAE,aAAa,iBAAiB,OAAE,CAAC,GAAG;AACtC,MAAE,eAAe;AAAA,EACrB;AACA,MAAI,iBAAiB,EAAE,aAAa,YAAY,GAAG;AAC/C,MAAE,aAAa,IAAI;AAAA,EACvB;AACA,IAAE,eAAe,OAAO,GAAG,IAAI;AACnC;AACA,SAAS,kBAAkB,GAAG,OAAO;AACjC,MAAI,EAAE,aAAa,iBAAiB,OAAE,CAAC,GAAG;AACtC,MAAE,eAAe;AAAA,EACrB;AACA,IAAE,eAAe,OAAO,GAAG,IAAI;AAG/B,IAAE,kBAAkB;AACpB,IAAE,aAAa;AACnB;AACA,SAAS,mBAAmB,GAAG,OAAO;AAClC,QAAM,aAAa,EAAE,aAAa,YAAY;AAC9C,MAAI,CAAC,EAAE,eAAe,YAAY;AAC9B,QAAI,EAAE,aAAa,iBAAiB,OAAE,CAAC,GAAG;AACtC,QAAE,eAAe;AAAA,IACrB;AACA,MAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,QAAI,CAAC,YAAY;AACb,QAAE,cAAc,EAAE,aAAa;AAAA,IACnC;AAAA,EACJ;AACJ;AACA,SAAS,uBAAuB,GAAG,OAAO;AACtC,IAAE,aAAa;AACf,QAAM,KAAK,MAAM;AACjB,WAAS,IAAI,EAAE,aAAa,UAAU,KAAK,GAAG,KAAK;AAC/C,UAAM,YAAY,EAAE,aAAa,OAAO;AACxC,QAAK,OAAO,OAAE,MAAM,cAAc,OAAE,OAC9B,OAAO,OAAE,MAAM,OAAO,OAAE,QAAQ,cAAc,OAAE,MAAM,cAAc,OAAE,KAAM;AAC9E,QAAE,aAAa,oCAAoC,SAAS;AAC5D,QAAE,aAAa,sBAAsB,SAAS;AAC9C;AAAA,IACJ;AACA,QAAI,cAAc,OAAE,WAChB,cAAc,OAAE,OAChB,cAAc,OAAE,KAChB,EAAE,kBAAkB,EAAE,aAAa,MAAM,IAAI,SAAS,GAAG;AACzD;AAAA,IACJ;AAAA,EACJ;AACA,MAAI,EAAE,aAAa,iBAAiB,OAAE,CAAC,GAAG;AACtC,MAAE,eAAe;AAAA,EACrB;AACA,IAAE,eAAe,OAAO,GAAG,IAAI;AACnC;AACA,SAAS,wBAAwB,GAAG,OAAO;AACvC,MAAI,EAAE,aAAa,iBAAiB,OAAE,CAAC,GAAG;AACtC,MAAE,eAAe;AAAA,EACrB;AACA,IAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,IAAE,UAAU,QAAQ,cAAc;AACtC;AACA,SAAS,qBAAqB,GAAG,OAAO;AACpC,MAAI,EAAE,aAAa,WAAW,OAAE,MAAM,GAAG;AACrC,MAAE,aAAa,uBAAuB;AACtC,MAAE,aAAa,sBAAsB,OAAE,MAAM;AAAA,EACjD;AACA,IAAE,qCAAqC;AACvC,IAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,IAAE,aAAa;AACnB;AACA,SAAS,gBAAgB,GAAG,OAAO;AAC/B,QAAM,qBAAqB,EAAE,yBAAyB,kCAAkC,UAAG,CAAC;AAC5F,MAAI,oBAAoB;AACpB,uBAAmB,GAAG,KAAK;AAC3B,MAAE,aAAa,OAAO,mBAAmB,OAAO;AAChD,MAAE,yBAAyB,YAAY,kBAAkB;AAAA,EAC7D;AACA,IAAE,qCAAqC;AACvC,IAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,IAAE,yBAAyB,YAAY,EAAE,aAAa,SAAS,KAAK;AACxE;AACA,SAAS,gBAAgB,GAAG,OAAO;AAC/B,IAAE,qCAAqC;AACvC,IAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,IAAE,yBAAyB,YAAY,EAAE,aAAa,SAAS,KAAK;AACxE;AACA,SAAS,mBAAmB,GAAG,OAAO;AAClC,IAAE,qCAAqC;AACvC,MAAI,EAAE,aAAa,WAAW,OAAE,IAAI,GAAG;AACnC,uBAAmB,GAAG,KAAK;AAC3B,MAAE,qCAAqC;AAAA,EAC3C;AACA,IAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,IAAE,yBAAyB,YAAY,EAAE,aAAa,SAAS,KAAK;AACxE;AACA,SAAS,qBAAqB,GAAG,OAAO;AACpC,IAAE,qCAAqC;AACvC,IAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,IAAE,yBAAyB,aAAa;AACxC,IAAE,aAAa;AACnB;AACA,SAAS,oBAAoB,GAAG,OAAO;AACnC,MAAI,EAAE,YAAY,gBAAgB,EAAE,QAAQ,MAAM,cAAc,UAAU,EAAE,aAAa,iBAAiB,OAAE,CAAC,GAAG;AAC5G,MAAE,eAAe;AAAA,EACrB;AACA,IAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,IAAE,aAAa;AACf,IAAE,gBAAgB,cAAc;AACpC;AACA,SAAS,mBAAmB,GAAG,OAAO;AAClC,IAAE,qCAAqC;AACvC,IAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,IAAE,aAAa;AACf,QAAM,iBAAiB;AAC3B;AACA,SAAS,cAAc,OAAO;AAC1B,QAAM,YAAY,aAAa,OAAO,MAAM,IAAI;AAChD,SAAO,aAAa,QAAQ,UAAU,YAAY,MAAM;AAC5D;AACA,SAAS,oBAAoB,GAAG,OAAO;AACnC,IAAE,qCAAqC;AACvC,IAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,MAAI,CAAC,cAAc,KAAK,GAAG;AACvB,MAAE,aAAa;AAAA,EACnB;AACA,QAAM,iBAAiB;AAC3B;AACA,SAAS,oBAAoB,GAAG,OAAO;AACnC,IAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,QAAM,iBAAiB;AAC3B;AACA,SAAS,iBAAiB,GAAG,OAAO;AAChC,MAAI,EAAE,aAAa,iBAAiB,OAAE,CAAC,GAAG;AACtC,MAAE,eAAe;AAAA,EACrB;AACA,IAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,IAAE,aAAa;AACf,QAAM,iBAAiB;AAC3B;AACA,SAAS,oBAAoB,GAAG,OAAO;AACnC,QAAM,UAAU,UAAG;AACnB,QAAM,QAAQ,OAAE;AAChB,qBAAmB,GAAG,KAAK;AAC/B;AACA,SAAS,uBAAuB,GAAG,OAAO;AACtC,IAAE,eAAe,OAAO,GAAG,IAAI;AAG/B,IAAE,kBAAkB;AACpB,IAAE,UAAU,QAAQ,cAAc;AAClC,IAAE,wBAAwB,EAAE;AAC5B,IAAE,aAAa;AACf,IAAE,gBAAgB,cAAc;AACpC;AACA,SAAS,kBAAkB,GAAG,OAAO;AACjC,MAAI,EAAE,aAAa,iBAAiB,OAAE,CAAC,GAAG;AACtC,MAAE,eAAe;AAAA,EACrB;AACA,IAAE,qCAAqC;AACvC,IAAE,aAAa;AACf,IAAE,qBAAqB,OAAO,cAAc,OAAO;AACvD;AACA,SAAS,qBAAqB,GAAG,OAAO;AACpC,IAAE,aAAa;AACf,IAAE,qBAAqB,OAAO,cAAc,OAAO;AACvD;AAGA,SAAS,sBAAsB,GAAG,OAAO;AACrC,IAAE,qBAAqB,OAAO,cAAc,OAAO;AACvD;AACA,SAAS,qBAAqB,GAAG,OAAO;AACpC,IAAE,qCAAqC;AACvC,IAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,IAAE,aAAa;AACf,IAAE,gBACE,EAAE,kBAAkB,cAAc,YAC9B,EAAE,kBAAkB,cAAc,cAClC,EAAE,kBAAkB,cAAc,iBAClC,EAAE,kBAAkB,cAAc,UAClC,EAAE,kBAAkB,cAAc,UAChC,cAAc,qBACd,cAAc;AAC5B;AACA,SAAS,uBAAuB,GAAG,OAAO;AACtC,MAAI,EAAE,aAAa,iBAAiB,OAAE,QAAQ;AAC1C,MAAE,aAAa,IAAI;AAAA,EACvB;AACA,IAAE,qCAAqC;AACvC,IAAE,eAAe,OAAO,GAAG,IAAI;AACnC;AACA,SAAS,iBAAiB,GAAG,OAAO;AAChC,MAAI,EAAE,aAAa,WAAW,OAAE,IAAI,GAAG;AACnC,MAAE,aAAa,uBAAuB;AAAA,EAC1C;AACA,IAAE,eAAe,OAAO,GAAG,IAAI;AACnC;AACA,SAAS,iBAAiB,GAAG,OAAO;AAChC,MAAI,EAAE,aAAa,WAAW,OAAE,IAAI,GAAG;AACnC,MAAE,aAAa,oCAAoC,OAAE,GAAG;AAAA,EAC5D;AACA,IAAE,eAAe,OAAO,GAAG,IAAI;AACnC;AACA,SAAS,mBAAmB,GAAG,OAAO;AAClC,IAAE,qCAAqC;AACvC,EAAe,uBAAuB,KAAK;AAC3C,EAAe,oBAAoB,KAAK;AACxC,MAAI,MAAM,aAAa;AACnB,MAAE,eAAe,OAAO,GAAG,MAAM;AAAA,EACrC,OACK;AACD,MAAE,eAAe,OAAO,GAAG,MAAM;AAAA,EACrC;AACA,QAAM,iBAAiB;AAC3B;AACA,SAAS,kBAAkB,GAAG,OAAO;AACjC,IAAE,qCAAqC;AACvC,EAAe,oBAAoB,KAAK;AACxC,EAAe,oBAAoB,KAAK;AACxC,MAAI,MAAM,aAAa;AACnB,MAAE,eAAe,OAAO,GAAG,GAAG;AAAA,EAClC,OACK;AACD,MAAE,eAAe,OAAO,GAAG,GAAG;AAAA,EAClC;AACA,QAAM,iBAAiB;AAC3B;AACA,SAAS,sBAAsB,GAAG,OAAO;AACrC,IAAE,qCAAqC;AACvC,IAAE,eAAe,OAAO,GAAG,IAAI;AACnC;AACA,SAAS,eAAe,GAAG,OAAO;AAC9B,UAAQ,MAAM,OAAO;AAAA,IACjB,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,QAAQ;AACX,sBAAgB,GAAG,KAAK;AACxB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,GAAG;AACN,sBAAgB,GAAG,KAAK;AACxB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,IAAI;AACP,mCAA6B,GAAG,KAAK;AACrf,4BAAsB,GAAG,KAAK;AAC9B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,IAAI;AACP,6BAAuB,GAAG,KAAK;AAC/B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,QAAQ;AACX,yBAAmB,GAAG,KAAK;AAC3B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,IAAI;AACP,uBAAiB,GAAG,KAAK;AACzB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,KAAK;AACR,uBAAiB,GAAG,KAAK;AACzB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,IAAI;AACP,uBAAiB,GAAG,KAAK;AACzB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,SAAS;AACZ,wBAAkB,GAAG,KAAK;AAC1B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,KAAK;AACR,wBAAkB,GAAG,KAAK;AAC1B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,KAAK;AACR,wBAAkB,GAAG,KAAK;AAC1B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,MAAM;AACT,yBAAmB,GAAG,KAAK;AAC3B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,UAAU;AACb,qBAAe,GAAG,KAAK;AACvB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,MAAM;AACT,yBAAmB,GAAG,KAAK;AAC3B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,MAAM;AACT,yBAAmB,GAAG,KAAK;AAC3B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,MAAM;AACT,yBAAmB,GAAG,KAAK;AAC3B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,MAAM;AACT,yBAAmB,GAAG,KAAK;AAC3B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,OAAO;AACV,0BAAoB,GAAG,KAAK;AAC5B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,OAAO;AACV,0BAAoB,GAAG,KAAK;AAC5B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,QAAQ;AACX,0BAAoB,GAAG,KAAK;AAC5B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,OAAO;AACV,0BAAoB,GAAG,KAAK;AAC5B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,QAAQ;AACX,2BAAqB,GAAG,KAAK;AAC7B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,SAAS;AACZ,2BAAqB,GAAG,KAAK;AAC7B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,QAAQ;AACX,2BAAqB,GAAG,KAAK;AAC7B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,QAAQ;AACX,2BAAqB,GAAG,KAAK;AAC7B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,UAAU;AACb,6BAAuB,GAAG,KAAK;AAC/B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,SAAS;AACZ,4BAAsB,GAAG,KAAK;AAC9B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,UAAU;AACb,6BAAuB,GAAG,KAAK;AAC/B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,UAAU;AACb,6BAAuB,GAAG,KAAK;AAC/B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,UAAU;AACb,UAAI,EAAE,QAAQ,kBAAkB;AAC5B,8BAAsB,GAAG,KAAK;AAAA,MAClC,OACK;AACD,8BAAsB,GAAG,KAAK;AAAA,MAClC;AACA;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,WAAW;AACd,8BAAwB,GAAG,KAAK;AAChC;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,UAAU;AAEb;AAAA,IACJ;AAAA,IACA,SAAS;AACL,4BAAsB,GAAG,KAAK;AAAA,IAClC;AAAA,EACJ;AACJ;AACA,SAAS,iBAAiB,GAAG,OAAO;AAChC,MAAI,EAAE,aAAa,WAAW,OAAE,IAAI,GAAG;AACnC,MAAE,gBAAgB,cAAc;AAGhC,QAAI,EAAE,QAAQ,wBAAwB;AAClC,YAAM,cAAc,EAAE,aAAa,iCAAiC;AACpE,UAAI,aAAa;AACb,UAAE,gBAAgB,aAAa,KAAK;AAAA,MACxC;AAAA,IACJ;AAAA,EACJ;AACJ;AACA,SAAS,iBAAiB,GAAG,OAAO;AAChC,MAAI,EAAE,aAAa,WAAW,OAAE,IAAI,GAAG;AACnC,MAAE,gBAAgB,cAAc;AAChC,oBAAgB,GAAG,KAAK;AAAA,EAC5B;AACJ;AACA,SAAS,oBAAoB,GAAG,OAAO;AACnC,QAAM,KAAK,MAAM;AACjB,MAAI,EAAE,aAAa,WAAW,EAAE,GAAG;AAC/B,MAAE,aAAa,uBAAuB;AACtC,MAAE,aAAa,sBAAsB,EAAE;AAAA,EAC3C;AACJ;AACA,SAAS,iBAAiB,GAAG;AACzB,QAAM,aAAa,EAAE,aAAa,YAAY;AAC9C,QAAM,EAAE,YAAY,IAAI;AACxB,MAAI,CAAC,YAAY;AACb,MAAE,cAAc;AAAA,EACpB;AACA,OAAK,eAAe,eAAe,EAAE,aAAa,WAAW,OAAE,IAAI,GAAG;AAClE,MAAE,aAAa,uBAAuB;AACtC,QAAI,YAAY;AACZ,QAAE,aAAa,sBAAsB,OAAE,IAAI;AAAA,IAC/C,WACS,aAAa;AAClB,QAAE,aAAa,OAAO,WAAW;AAAA,IACrC;AAAA,EACJ;AACJ;AACA,SAAS,cAAc,GAAG;AACtB,MAAI,CAAC,EAAE,aAAa,iBAAiB,OAAE,CAAC,GAAG;AACvC,MAAE,mBAAmB,UAAG,GAAG,OAAE,CAAC;AAAA,EAClC;AACA,IAAE,eAAe;AACrB;AACA,SAAS,eAAe,GAAG;AACvB,MAAI,EAAE,aAAa,mBAAmB,OAAE,EAAE,GAAG;AACzC,MAAE,aAAa,oCAAoC,OAAE,EAAE;AACvD,MAAE,aAAa,sBAAsB,OAAE,EAAE;AAAA,EAC7C;AACJ;AACA,SAAS,eAAe,GAAG,OAAO;AAC9B,QAAM,KAAK,MAAM;AACjB,MAAI,EAAE,aAAa,WAAW,EAAE,GAAG;AAC/B,MAAE,aAAa,oCAAoC,EAAE;AACrD,MAAE,aAAa,sBAAsB,EAAE;AAAA,EAC3C;AACJ;AACA,SAAS,2BAA2B,GAAG;AACnC,MAAI,EAAE,aAAa,yBAAyB,GAAG;AAC3C,MAAE,aAAa,uBAAuB;AACtC,MAAE,aAAa,6BAA6B;AAAA,EAChD;AACJ;AACA,SAAS,mBAAmB,GAAG,OAAO;AAClC,QAAM,KAAK,MAAM;AACjB,MAAI,EAAE,aAAa,WAAW,EAAE,GAAG;AAC/B,MAAE,aAAa,uBAAuB;AACtC,MAAE,aAAa,sBAAsB,EAAE;AACvC,MAAE,yBAAyB,kBAAkB;AAAA,EACjD;AACJ;AACA,SAAS,eAAe,GAAG;AACvB,IAAE,qCAAqC;AACvC,IAAE,mBAAmB,UAAG,IAAI,OAAE,EAAE;AAChC,IAAE,aAAa,IAAI;AACnB,IAAE,aAAa;AACnB;AACA,SAAS,oBAAoB,GAAG,OAAO;AACnC,QAAM,KAAK,MAAM;AACjB,QAAM,MAAM,MAAM;AAClB,WAAS,IAAI,EAAE,aAAa,UAAU,IAAI,GAAG,KAAK;AAC9C,UAAM,UAAU,EAAE,aAAa,MAAM;AACrC,UAAM,YAAY,EAAE,aAAa,OAAO;AAExC,QAAI,QAAQ,cAAc,QAAQ,OAAE,WAAW,EAAE,YAAY,WAAW,OAAO,MAAM,KAAK;AACtF,QAAE,aAAa,oCAAoC,GAAG;AACtD,UAAI,EAAE,aAAa,YAAY;AAC3B,UAAE,aAAa,gBAAgB,CAAC;AACpC;AAAA,IACJ;AACA,QAAI,EAAE,kBAAkB,SAAS,SAAS,GAAG;AACzC;AAAA,IACJ;AAAA,EACJ;AACJ;AACA,SAAS,aAAa,GAAG,OAAO;AAC5B,UAAQ,MAAM,OAAO;AAAA,IACjB,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,QAAQ;AACX,yBAAmB,GAAG,KAAK;AAC3B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,GAAG;AACN,oBAAc,CAAC;AACff,0BAAoB,GAAG,KAAK;AAC5B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,IAAI;AACP,qBAAe,CAAC;AAChB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,IAAI;AACP,qBAAe,GAAG,KAAK;AACvB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,IAAI;AACP,iCAA2B,CAAC;AAC5B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,IAAI;AACP,qBAAe,CAAC;AAChB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,MAAM;AACT,uBAAiB,GAAG,KAAK;AACzB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,MAAM;AACT,uBAAiB,GAAG,KAAK;AACzB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,MAAM;AACT,uBAAiB,CAAC;AAClB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,SAAS;AACZ,yBAAmB,GAAG,KAAK;AAC3B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,UAAU;AACb,2BAAqB,GAAG,KAAK;AAC7B;AAAA,IACJ;AAAA,IACA,SAAS;AACL,0BAAoB,GAAG,KAAK;AAAA,IAChC;AAAA,EACJ;AACJ;AACA,SAAS,UAAU,GAAG,OAAO;AACzB,MAAI,EAAE,uBAAuB,SAAS,GAAG;AACrC,kBAAc,GAAG,KAAK;AAAA,EAC1B,OACK;AACD,gBAAY,GAAG,KAAK;AAAA,EACxB;AACJ;AAGA,SAAS,aAAa,GAAG,OAAO;AAC5B,MAAIC;AACJ,MAAI,MAAM,UAAU,OAAE,QAAQ;AAC1B,KAACA,MAAK,EAAE,mBAAmB,QAAQA,QAAO,SAAS,SAASA,IAAG,KAAK,GAAG,EAAE,aAAa,OAAO;AAAA,EACjG;AACA,IAAE,aAAa,IAAI;AACnB,IAAE,gBAAgB,EAAE;AACxB;AACA,SAAS,UAAU,GAAG,OAAO;AACzB,IAAE,KAAK,OAAO,IAAI,kCAAkC;AACpD,IAAE,aAAa,IAAI;AACnB,IAAE,gBAAgB,EAAE;AACpB,IAAE,MAAM,KAAK;AACjB;AAGA,SAAS,iBAAiB,GAAG,OAAO;AAChC,MAAI,qBAAqB,IAAI,EAAE,aAAa,YAAY,GAAG;AACvD,MAAE,uBAAuB,SAAS;AAClC,MAAE,wCAAwC;AAC1C,MAAE,wBAAwB,EAAE;AAC5B,MAAE,gBAAgB,cAAc;AAChC,YAAQ,MAAM,MAAM;AAAA,MAChB,KAAK,UAAU,WAAW;AACtB,6BAAqB,GAAG,KAAK;AAC7B;AAAA,MACJ;AAAA,MACA,KAAK,UAAU,sBAAsB;AACjC,uCAA+B,GAAG,KAAK;AACvC;AAAA,MACJ;AAAA,IAEJ;AAAA,EACJ,OACK;AACD,iBAAa,GAAG,KAAK;AAAA,EACzB;AACJ;AACA,SAAS,uBAAuB,GAAG,OAAO;AACtC,IAAE,aAAa,wBAAwB;AACvC,IAAE,yBAAyB,aAAa;AACxC,IAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,IAAE,gBAAgB,cAAc;AACpC;AACA,SAAS,wBAAwB,GAAG,OAAO;AACvC,IAAE,aAAa,wBAAwB;AACvC,IAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,IAAE,gBAAgB,cAAc;AACpC;AACA,SAAS,mBAAmB,GAAG,OAAO;AAClC,IAAE,aAAa,wBAAwB;AACvC,IAAE,mBAAmB,UAAG,UAAU,OAAE,QAAQ;AAC5C,IAAE,gBAAgB,cAAc;AAChC,wBAAsB,GAAG,KAAK;AAClC;AACA,SAAS,qBAAqB,GAAG,OAAO;AACpC,IAAE,aAAa,wBAAwB;AACvC,IAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,IAAE,gBAAgB,cAAc;AACpC;AACA,SAAS,kBAAkB,GAAG,OAAO;AACjC,IAAE,aAAa,wBAAwB;AACvC,IAAE,mBAAmB,UAAG,OAAO,OAAE,KAAK;AACtC,IAAE,gBAAgB,cAAc;AAChC,sBAAoB,GAAG,KAAK;AAChC;AACA,SAAS,qBAAqB,GAAG,OAAO;AACpC,MAAI,EAAE,aAAa,gBAAgB,OAAE,KAAK,GAAG;AACzC,MAAE,aAAa,sBAAsB,OAAE,KAAK;AAC5C,MAAE,oBAAoB;AACtB,MAAE,iBAAiB,KAAK;AAAA,EAC5B;AACJ;AACA,SAAS,qBAAqB,GAAG,OAAO;AACpC,MAAI,cAAc,KAAK,GAAG;AACtB,MAAE,eAAe,OAAO,GAAG,IAAI;AAAA,EACnC,OACK;AACD,iBAAa,GAAG,KAAK;AAAA,EACzB;AACA,QAAM,iBAAiB;AAC3B;AACA,SAAS,oBAAoB,GAAG,OAAO;AACnC,MAAI,CAAC,EAAE,eAAe,EAAE,aAAa,cAAc,GAAG;AAClD,MAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,MAAE,cAAc,EAAE,aAAa;AAC/B,MAAE,aAAa,IAAI;AAAA,EACvB;AACJ;AACA,SAAS,gBAAgB,GAAG,OAAO;AAC/B,UAAQ,MAAM,OAAO;AAAA,IACjB,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,IAAI;AACP,wBAAkB,GAAG,KAAK;AAC1B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,UAAU;AACb,qBAAe,GAAG,KAAK;AACvB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,KAAK;AACR,yBAAmB,GAAG,KAAK;AAC3B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,MAAM;AACT,0BAAoB,GAAG,KAAK;AAC5B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,OAAO;AACV,2BAAqB,GAAG,KAAK;AAC7B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,OAAO;AACV,2BAAqB,GAAG,KAAK;AAC7B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,OAAO;AACV,2BAAqB,GAAG,KAAK;AAC7B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,SAAS;AACZ,6BAAuB,GAAG,KAAK;AAC/B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,UAAU;AACb,8BAAwB,GAAG,KAAK;AAChC;AAAA,IACJ;AAAA,IACA,SAAS;AACL,mBAAa,GAAG,KAAK;AAAA,IACzB;AAAA,EACJ;AACJ;AACA,SAAS,cAAc,GAAG,OAAO;AAC7B,UAAQ,MAAM,OAAO;AAAA,IACjB,KAAK,OAAE,OAAO;AACV,UAAI,EAAE,aAAa,gBAAgB,OAAE,KAAK,GAAG;AACzC,UAAE,aAAa,sBAAsB,OAAE,KAAK;AAC5C,UAAE,oBAAoB;AAAA,MAC1B;AACA;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,UAAU;AACb,2BAAqB,GAAG,KAAK;AAC7B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,IAAI;AAEP;AAAA,IACJ;AAAA,IACA,SAAS;AACL,mBAAa,GAAG,KAAK;AAAA,IACzB;AAAA,EACJ;AACJ;AACA,SAAS,aAAa,GAAG,OAAO;AAC5B,QAAM,4BAA4B,EAAE;AACpC,IAAE,yBAAyB;AAE3B,aAAW,GAAG,KAAK;AACnB,IAAE,yBAAyB;AAC/B;AAGA,SAAS,+BAA+B,GAAG,OAAO;AAC9C,IAAE,uBAAuB,KAAK,KAAK;AACvC;AACA,SAAS,qBAAqB,GAAG,OAAO;AACpC,IAAE,uBAAuB,KAAK,KAAK;AACnC,IAAE,wCAAwC;AAC9C;AACA,SAAS,iBAAiB,GAAG,OAAO;AAChC,MAAI,IAAI;AACR,MAAI,EAAE,uCAAuC;AACzC,WAAO,IAAI,EAAE,uBAAuB,QAAQ,KAAK;AAC7C,mBAAa,GAAG,EAAE,uBAAuB,EAAE;AAAA,IAC/C;AAAA,EACJ,OACK;AACD,WAAO,IAAI,EAAE,uBAAuB,QAAQ,KAAK;AAC7C,QAAE,kBAAkB,EAAE,uBAAuB,EAAE;AAAA,IACnD;AAAA,EACJ;AACA,IAAE,gBAAgB,EAAE;AACpB,IAAE,cAAc,KAAK;AACzB;AAIA,SAAS,kBAAkB,GAAG,OAAO;AACjC,QAAM,KAAK,MAAM;AACjB,MAAI,oBAAoB,IAAI,EAAE,GAAG;AAC7B,QAAI,EAAE,aAAa,gBAAgB,OAAE,OAAO,GAAG;AAC3C,QAAE,aAAa,uBAAuB;AACtC,QAAE,aAAa,sBAAsB,OAAE,OAAO;AAC9C,QAAE,yBAAyB,kBAAkB;AAC7C,QAAE,gBAAgB,cAAc;AAChC,sBAAgB,GAAG,KAAK;AAAA,IAC5B;AAAA,EACJ,OACK;AACD,mBAAe,GAAG,KAAK;AAAA,EAC3B;AACJ;AACA,SAAS,gBAAgB,GAAG,OAAO;AAC/B,QAAM,KAAK,MAAM;AACjB,UAAQ,IAAI;AAAA,IACR,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,OAAO;AACV,UAAI,EAAE,aAAa,gBAAgB,OAAE,OAAO,GAAG;AAC3C,UAAE,aAAa,uBAAuB;AACtC,UAAE,aAAa,sBAAsB,OAAE,OAAO;AAC9C,UAAE,yBAAyB,kBAAkB;AAC7C,UAAE,gBAAgB,cAAc;AAChC,YAAI,OAAO,OAAE,OAAO;AAChB,wBAAc,GAAG,KAAK;AAAA,QAC1B;AAAA,MACJ;AACA;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,IAAI;AAEP;AAAA,IACJ;AAAA,IACA,SAAS;AACL,mBAAa,GAAG,KAAK;AAAA,IACzB;AAAA,EACJ;AACJ;AAGA,SAAS,sBAAsB,GAAG,OAAO;AACrC,UAAQ,MAAM,OAAO;AAAA,IACjB,KAAK,OAAE,MAAM;AACT,qBAAe,GAAG,KAAK;AACvB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,KAAK;AACR,QAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,YAAM,iBAAiB;AACvB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,UAAU;AACb,qBAAe,GAAG,KAAK;AACvB;AAAA,IACJ;AAAA,IACA,SAAS;AACL,yBAAmB,GAAG,KAAK;AAAA,IAC/B;AAAA,EACJ;AACJ;AACA,SAAS,oBAAoB,GAAG,OAAO;AACnC,UAAQ,MAAM,OAAO;AAAA,IACjB,KAAK,OAAE,UAAU;AACb,UAAI,EAAE,aAAa,iBAAiB,OAAE,UAAU;AAC5C,UAAE,aAAa,IAAI;AACnB,UAAE,gBAAgB,cAAc;AAAA,MACpC;AACA;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,UAAU;AACb,2BAAqB,GAAG,KAAK;AAC7B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,KAAK;AAER;AAAA,IACJ;AAAA,IACA,SAAS;AACL,yBAAmB,GAAG,KAAK;AAAA,IAC/B;AAAA,EACJ;AACJ;AACA,SAAS,mBAAmB,GAAG,OAAO;AAClC,MAAI,EAAE,aAAa,iBAAiB,OAAE,UAAU;AAC5C,MAAE,aAAa,IAAI;AACnB,MAAE,gBAAgB,cAAc;AAChC,MAAE,cAAc,KAAK;AAAA,EACzB;AACJ;AAGA,SAAS,oBAAoB,GAAG,OAAO;AACnC,UAAQ,MAAM,OAAO;AAAA,IACjB,KAAK,OAAE,IAAI;AACP,QAAE,aAAa,4BAA4B;AAC3C,QAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,QAAE,gBAAgB,cAAc;AAChC;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,IAAI;AACP,QAAE,aAAa,4BAA4B;AAC3C,QAAE,mBAAmB,UAAG,IAAI,OAAE,EAAE;AAChC,QAAE,gBAAgB,cAAc;AAChC,oBAAc,GAAG,KAAK;AACtB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,OAAO;AACV,UAAI,EAAE,aAAa,gCAAgC,GAAG;AAClD,UAAE,aAAa,4BAA4B;AAC3C,UAAE,aAAa,IAAI;AACnB,UAAE,gBAAgB,cAAc;AAChC,wBAAgB,GAAG,KAAK;AAAA,MAC5B;AACA;AAAA,IACJ;AAAA,IACA,SAAS;AACL,sBAAgB,GAAG,KAAK;AAAA,IAC5B;AAAA,EACJ;AACJ;AACA,SAAS,kBAAkB,GAAG,OAAO;AACjC,QAAM,KAAK,MAAM;AACjB,UAAQ,MAAM,OAAO;AAAA,IACjB,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,OAAO;AACV,UAAI,EAAE,aAAa,gBAAgB,EAAE,GAAG;AACpC,UAAE,aAAa,4BAA4B;AAC3C,UAAE,aAAa,IAAI;AACnB,UAAE,gBAAgB,cAAc;AAAA,MACpC;AACA;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,OAAO;AACV,UAAI,EAAE,aAAa,gCAAgC,GAAG;AAClD,UAAE,aAAa,4BAA4B;AAC3C,UAAE,aAAa,IAAI;AACnB,UAAE,gBAAgB,cAAc;AAChC,sBAAc,GAAG,KAAK;AAAA,MAC1B;AACA;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,IAAI;AAEP;AAAA,IACJ;AAAA,IACA,SAAS;AACL,oBAAc,GAAG,KAAK;AAAA,IAC1B;AAAA,EACJ;AACJ;AAGA,SAAS,cAAc,GAAG,OAAO;AAC7B,UAAQ,MAAM,OAAO;AAAA,IACjB,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,IAAI;AACP,QAAE,aAAa,2BAA2B;AAC1C,QAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,QAAE,gBAAgB,cAAc;AAChC,QAAE,yBAAyB,aAAa;AACxC;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,IAAI;AACP,UAAI,EAAE,aAAa,gBAAgB,OAAE,EAAE,GAAG;AACtC,UAAE,aAAa,2BAA2B;AAC1C,UAAE,aAAa,IAAI;AACnB,UAAE,gBAAgB,cAAc;AAChC,4BAAoB,GAAG,KAAK;AAAA,MAChC;AACA;AAAA,IACJ;AAAA,IACA,SAAS;AACL,sBAAgB,GAAG,KAAK;AAAA,IAC5B;AAAA,EACJ;AACJ;AACA,SAAS,YAAY,GAAG,OAAO;AAC3B,UAAQ,MAAM,OAAO;AAAA,IACjB,KAAK,OAAE,IAAI;AACP,UAAI,EAAE,aAAa,gBAAgB,OAAE,EAAE,GAAG;AACtC,UAAE,aAAa,2BAA2B;AAC1C,UAAE,aAAa,IAAI;AACnB,UAAE,gBAAgB,cAAc;AAAA,MACpC;AACA;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,OAAO;AACV,UAAI,EAAE,aAAa,gBAAgB,OAAE,EAAE,GAAG;AACtC,UAAE,aAAa,2BAA2B;AAC1C,UAAE,aAAa,IAAI;AACnB,UAAE,gBAAgB,cAAc;AAChC,0BAAkB,GAAG,KAAK;AAAA,MAC9B;AACA;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,OAAO;AACV,UAAI,EAAE,aAAa,gBAAgB,MAAM,KAAK,KAAK,EAAE,aAAa,gBAAgB,OAAE,EAAE,GAAG;AACrF,UAAE,aAAa,2BAA2B;AAC1C,UAAE,aAAa,IAAI;AACnB,UAAE,gBAAgB,cAAc;AAChC,0BAAkB,GAAG,KAAK;AAAA,MAC9B;AACA;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,IAAI;AAEP;AAAA,IACJ;AAAA,IACA,SAAS;AACL,oBAAc,GAAG,KAAK;AAAA,IAC1B;AAAA,EACJ;AACJ;AAGA,SAAS,eAAe,GAAG,OAAO;AAC9B,QAAM,KAAK,MAAM;AACjB,MAAI,oBAAoB,IAAI,EAAE,GAAG;AAC7B,QAAI,EAAE,aAAa,gBAAgB,OAAE,EAAE,KAAK,EAAE,aAAa,gBAAgB,OAAE,EAAE,GAAG;AAC9E,QAAE,gBAAgB;AAClB,oBAAc,GAAG,KAAK;AAAA,IAC1B;AAAA,EACJ,OACK;AACD,mBAAe,GAAG,KAAK;AAAA,EAC3B;AACJ;AACA,SAAS,aAAa,GAAG,OAAO;AAC5B,QAAM,KAAK,MAAM;AACjB,UAAQ,IAAI;AAAA,IACR,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,IAAI;AACP,UAAI,EAAE,aAAa,gBAAgB,EAAE,GAAG;AACpC,UAAE,aAAa,uBAAuB;AACtC,UAAE,aAAa,sBAAsB,EAAE;AACvC,UAAE,yBAAyB,kBAAkB;AAC7C,UAAE,gBAAgB,cAAc;AAAA,MACpC;AACA;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,IAAI;AACP,UAAI,EAAE,aAAa,gBAAgB,EAAE,GAAG;AACpC,UAAE,gBAAgB;AAClB,oBAAY,GAAG,KAAK;AAAA,MACxB;AACA;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,MAAM;AAET;AAAA,IACJ;AAAA,IACA,SAAS;AACL,mBAAa,GAAG,KAAK;AAAA,IACzB;AAAA,EACJ;AACJ;AAGA,SAAS,iBAAiB,GAAG,OAAO;AAChC,UAAQ,MAAM,OAAO;AAAA,IACjB,KAAK,OAAE,MAAM;AACT,qBAAe,GAAG,KAAK;AACvB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,QAAQ;AACX,UAAI,EAAE,aAAa,iBAAiB,OAAE,QAAQ;AAC1C,UAAE,aAAa,IAAI;AAAA,MACvB;AACA,QAAE,eAAe,OAAO,GAAG,IAAI;AAC/B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,UAAU;AACb,UAAI,EAAE,aAAa,iBAAiB,OAAE,QAAQ;AAC1C,UAAE,aAAa,IAAI;AAAA,MACvB;AACA,UAAI,EAAE,aAAa,iBAAiB,OAAE,UAAU;AAC5C,UAAE,aAAa,IAAI;AAAA,MACvB;AACA,QAAE,eAAe,OAAO,GAAG,IAAI;AAC/B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,QAAQ;AACX,UAAI,EAAE,aAAa,iBAAiB,OAAE,MAAM,GAAG;AAC3C,UAAE,aAAa,sBAAsB,OAAE,MAAM;AAC7C,UAAE,oBAAoB;AACtB,YAAI,MAAM,UAAU,OAAE,QAAQ;AAC1B,YAAE,iBAAiB,KAAK;AAAA,QAC5B;AAAA,MACJ;AACA;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,UAAU;AACb,qBAAe,GAAG,KAAK;AACvB;AAAA,IACJ;AAAA,IACA;AAAA,EAEJ;AACJ;AACA,SAAS,eAAe,GAAG,OAAO;AAC9B,UAAQ,MAAM,OAAO;AAAA,IACjB,KAAK,OAAE,UAAU;AACb,UAAI,EAAE,aAAa,WAAW,KAC1B,EAAE,aAAa,iBAAiB,OAAE,UAClC,EAAE,aAAa,OAAO,EAAE,aAAa,WAAW,OAAO,OAAE,UAAU;AACnE,UAAE,aAAa,IAAI;AAAA,MACvB;AACA,UAAI,EAAE,aAAa,iBAAiB,OAAE,UAAU;AAC5C,UAAE,aAAa,IAAI;AAAA,MACvB;AACA;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,QAAQ;AACX,UAAI,EAAE,aAAa,iBAAiB,OAAE,QAAQ;AAC1C,UAAE,aAAa,IAAI;AAAA,MACvB;AACA;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,QAAQ;AACX,UAAI,EAAE,aAAa,iBAAiB,OAAE,MAAM,GAAG;AAC3C,UAAE,aAAa,sBAAsB,OAAE,MAAM;AAC7C,UAAE,oBAAoB;AAAA,MAC1B;AACA;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,UAAU;AACb,2BAAqB,GAAG,KAAK;AAC7B;AAAA,IACJ;AAAA,IACA;AAAA,EAEJ;AACJ;AAGA,SAAS,wBAAwB,GAAG,OAAO;AACvC,QAAM,KAAK,MAAM;AACjB,MAAI,OAAO,OAAE,WACT,OAAO,OAAE,SACT,OAAO,OAAE,SACT,OAAO,OAAE,SACT,OAAO,OAAE,SACT,OAAO,OAAE,MACT,OAAO,OAAE,MACT,OAAO,OAAE,IAAI;AACb,MAAE,aAAa,sBAAsB,OAAE,MAAM;AAC7C,MAAE,oBAAoB;AACtB,MAAE,iBAAiB,KAAK;AAAA,EAC5B,OACK;AACD,qBAAiB,GAAG,KAAK;AAAA,EAC7B;AACJ;AACA,SAAS,sBAAsB,GAAG,OAAO;AACrC,QAAM,KAAK,MAAM;AACjB,MAAI,OAAO,OAAE,WACT,OAAO,OAAE,SACT,OAAO,OAAE,SACT,OAAO,OAAE,SACT,OAAO,OAAE,SACT,OAAO,OAAE,MACT,OAAO,OAAE,MACT,OAAO,OAAE,IAAI;AACb,QAAI,EAAE,aAAa,gBAAgB,EAAE,GAAG;AACpC,QAAE,aAAa,sBAAsB,OAAE,MAAM;AAC7C,QAAE,oBAAoB;AACtB,QAAE,SAAS,KAAK;AAAA,IACpB;AAAA,EACJ,OACK;AACD,mBAAe,GAAG,KAAK;AAAA,EAC3B;AACJ;AAGA,SAAS,mBAAmB,GAAG,OAAO;AAClC,UAAQ,MAAM,OAAO;AAAA,IAEjB,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,OAAO;AACV,qBAAe,GAAG,KAAK;AACvB;AAAA,IACJ;AAAA,IAEA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,OAAO;AACV,QAAE,uBAAuB,KAAK,cAAc;AAC5C,QAAE,gBAAgB,cAAc;AAChC,sBAAgB,GAAG,KAAK;AACxB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,KAAK;AACR,QAAE,uBAAuB,KAAK,cAAc;AAC5C,QAAE,gBAAgB,cAAc;AAChC,4BAAsB,GAAG,KAAK;AAC9B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,IAAI;AACP,QAAE,uBAAuB,KAAK,cAAc;AAC5C,QAAE,gBAAgB,cAAc;AAChC,0BAAoB,GAAG,KAAK;AAC5B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE;AAAA,IACP,KAAK,OAAE,IAAI;AACP,QAAE,uBAAuB,KAAK,cAAc;AAC5C,QAAE,gBAAgB,cAAc;AAChC,oBAAc,GAAG,KAAK;AACtB;AAAA,IACJ;AAAA,IACA,SAAS;AACL,QAAE,uBAAuB,KAAK,cAAc;AAC5C,QAAE,gBAAgB,cAAc;AAChC,qBAAe,GAAG,KAAK;AAAA,IAC3B;AAAA,EACJ;AACJ;AACA,SAAS,iBAAiB,GAAG,OAAO;AAChC,MAAI,MAAM,UAAU,OAAE,UAAU;AAC5B,yBAAqB,GAAG,KAAK;AAAA,EACjC;AACJ;AACA,SAAS,cAAc,GAAG,OAAO;AAC7B,MAAI,EAAE,aAAa,YAAY,GAAG;AAC9B,MAAE,aAAa,sBAAsB,OAAE,QAAQ;AAC/C,MAAE,yBAAyB,kBAAkB;AAC7C,MAAE,uBAAuB,MAAM;AAC/B,MAAE,oBAAoB;AACtB,MAAE,MAAM,KAAK;AAAA,EACjB,OACK;AACD,gBAAY,GAAG,KAAK;AAAA,EACxB;AACJ;AAGA,SAAS,kBAAkB,GAAG,OAAO;AACjC,MAAI,MAAM,UAAU,OAAE,MAAM;AACxB,mBAAe,GAAG,KAAK;AAAA,EAC3B,OACK;AACD,mBAAe,GAAG,KAAK;AAAA,EAC3B;AACJ;AACA,SAAS,gBAAgB,GAAG,OAAO;AAC/B,MAAIA;AACJ,MAAI,MAAM,UAAU,OAAE,MAAM;AACxB,QAAI,CAAC,EAAE,iBAAiB;AACpB,QAAE,gBAAgB,cAAc;AAAA,IACpC;AAGA,QAAI,EAAE,QAAQ,0BAA0B,EAAE,aAAa,OAAO,OAAO,OAAE,MAAM;AACzE,QAAE,gBAAgB,EAAE,aAAa,MAAM,IAAI,KAAK;AAEhD,YAAM,cAAc,EAAE,aAAa,MAAM;AACzC,UAAI,eAAe,GAAGA,MAAK,EAAE,YAAY,0BAA0B,WAAW,OAAO,QAAQA,QAAO,SAAS,SAASA,IAAG,SAAS;AAC9H,UAAE,gBAAgB,aAAa,KAAK;AAAA,MACxC;AAAA,IACJ;AAAA,EACJ,OACK;AACD,mBAAe,GAAG,KAAK;AAAA,EAC3B;AACJ;AACA,SAAS,eAAe,GAAG,OAAO;AAC9B,IAAE,gBAAgB,cAAc;AAChC,aAAW,GAAG,KAAK;AACvB;AAGA,SAAS,mBAAmB,GAAG,OAAO;AAClC,UAAQ,MAAM,OAAO;AAAA,IACjB,KAAK,OAAE,MAAM;AACT,qBAAe,GAAG,KAAK;AACvB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,UAAU;AACb,QAAE,eAAe,OAAO,GAAG,IAAI;AAC/B;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,OAAO;AACV,QAAE,eAAe,OAAO,GAAG,IAAI;AAC/B,YAAM,iBAAiB;AACvB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,UAAU;AACb,qBAAe,GAAG,KAAK;AACvB;AAAA,IACJ;AAAA,IACA;AAAA,EAEJ;AACJ;AACA,SAAS,iBAAiB,GAAG,OAAO;AAChC,MAAI,MAAM,UAAU,OAAE,YAAY,CAAC,EAAE,aAAa,yBAAyB,GAAG;AAC1E,MAAE,aAAa,IAAI;AACnB,QAAI,CAAC,EAAE,mBAAmB,EAAE,aAAa,iBAAiB,OAAE,UAAU;AAClE,QAAE,gBAAgB,cAAc;AAAA,IACpC;AAAA,EACJ;AACJ;AAGA,SAAS,sBAAsB,GAAG,OAAO;AACrC,UAAQ,MAAM,OAAO;AAAA,IACjB,KAAK,OAAE,MAAM;AACT,qBAAe,GAAG,KAAK;AACvB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,UAAU;AACb,qBAAe,GAAG,KAAK;AACvB;AAAA,IACJ;AAAA,IACA;AAAA,EAEJ;AACJ;AACA,SAAS,oBAAoB,GAAG,OAAO;AACnC,MAAI,MAAM,UAAU,OAAE,MAAM;AACxB,MAAE,gBAAgB,cAAc;AAAA,EACpC;AACJ;AAGA,SAAS,uBAAuB,GAAG,OAAO;AACtC,MAAI,MAAM,UAAU,OAAE,MAAM;AACxB,mBAAe,GAAG,KAAK;AAAA,EAC3B,OACK;AACD,wBAAoB,GAAG,KAAK;AAAA,EAChC;AACJ;AACA,SAAS,oBAAoB,GAAG,OAAO;AACnC,IAAE,gBAAgB,cAAc;AAChC,aAAW,GAAG,KAAK;AACvB;AAGA,SAAS,2BAA2B,GAAG,OAAO;AAC1C,UAAQ,MAAM,OAAO;AAAA,IACjB,KAAK,OAAE,MAAM;AACT,qBAAe,GAAG,KAAK;AACvB;AAAA,IACJ;AAAA,IACA,KAAK,OAAE,UAAU;AACb,qBAAe,GAAG,KAAK;AACvB;AAAA,IACJ;AAAA,IACA;AAAA,EAEJ;AACJ;AAGA,SAAS,8BAA8B,GAAG,OAAO;AAC7C,QAAM,QAAgB;AACtB,IAAE,kBAAkB,KAAK;AAC7B;AACA,SAAS,0BAA0B,GAAG,OAAO;AACzC,IAAE,kBAAkB,KAAK;AACzB,IAAE,aAAa;AACnB;AACA,SAAS,+BAA+B,GAAG;AACvC,SAAO,EAAE,YAAY,gBAAgB,EAAE,aAAa,OAAO,MAAM,GAAG,QAChE,CAAC,EAAE,oBAAoB,EAAE,aAAa,cAAc,EAAE,aAAa,OAAO,GAAG;AAC7E,MAAE,aAAa,IAAI;AAAA,EACvB;AACJ;AACA,SAAS,yBAAyB,GAAG,OAAO;AACxC,MAAmB,WAAW,KAAK,GAAG;AAClC,mCAA+B,CAAC;AAChC,MAAE,+BAA+B,KAAK;AAAA,EAC1C,OACK;AACD,UAAM,UAAU,EAAE,2BAA2B;AAC7C,UAAM,YAAY,EAAE,YAAY,gBAAgB,OAAO;AACvD,QAAI,cAAc,GAAG,QAAQ;AACzB,MAAe,uBAAuB,KAAK;AAAA,IAC/C,WACS,cAAc,GAAG,KAAK;AAC3B,MAAe,sBAAsB,KAAK;AAC1C,MAAe,oBAAoB,KAAK;AAAA,IAC5C;AACA,IAAe,oBAAoB,KAAK;AACxC,QAAI,MAAM,aAAa;AACnB,QAAE,eAAe,OAAO,SAAS;AAAA,IACrC,OACK;AACD,QAAE,eAAe,OAAO,SAAS;AAAA,IACrC;AACA,UAAM,iBAAiB;AAAA,EAC3B;AACJ;AACA,SAAS,uBAAuB,GAAG,OAAO;AACtC,MAAI,MAAM,UAAU,OAAE,KAAK,MAAM,UAAU,OAAE,IAAI;AAC7C,mCAA+B,CAAC;AAChC,MAAE,6BAA6B,KAAK;AACpC;AAAA,EACJ;AACA,WAAS,IAAI,EAAE,aAAa,UAAU,IAAI,GAAG,KAAK;AAC9C,UAAM,UAAU,EAAE,aAAa,MAAM;AACrC,QAAI,EAAE,YAAY,gBAAgB,OAAO,MAAM,GAAG,MAAM;AACpD,QAAE,6BAA6B,KAAK;AACpC;AAAA,IACJ;AACA,UAAM,UAAU,EAAE,YAAY,WAAW,OAAO;AAChD,QAAI,QAAQ,YAAY,MAAM,MAAM,SAAS;AAEzC,YAAM,UAAU;AAChB,QAAE,aAAa,gBAAgB,CAAC;AAChC;AAAA,IACJ;AAAA,EACJ;AACJ;AA9lGA,IAWM,mBAEA,oBACA,oBAEF,eA0BE,UAQA,sBACA,sBAOO,QA+3EP;AAz7EN;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAM,oBAAoB;AAE1B,IAAM,qBAAqB;AAC3B,IAAM,qBAAqB;AAG3B,KAAC,SAAUC,gBAAe;AACtB,MAAAA,eAAcA,eAAc,aAAa,KAAK;AAC9C,MAAAA,eAAcA,eAAc,iBAAiB,KAAK;AAClD,MAAAA,eAAcA,eAAc,iBAAiB,KAAK;AAClD,MAAAA,eAAcA,eAAc,aAAa,KAAK;AAC9C,MAAAA,eAAcA,eAAc,uBAAuB,KAAK;AACxD,MAAAA,eAAcA,eAAc,gBAAgB,KAAK;AACjD,MAAAA,eAAcA,eAAc,aAAa,KAAK;AAC9C,MAAAA,eAAcA,eAAc,UAAU,KAAK;AAC3C,MAAAA,eAAcA,eAAc,cAAc,KAAK;AAC/C,MAAAA,eAAcA,eAAc,mBAAmB,KAAK;AACpD,MAAAA,eAAcA,eAAc,gBAAgB,MAAM;AAClD,MAAAA,eAAcA,eAAc,qBAAqB,MAAM;AACvD,MAAAA,eAAcA,eAAc,mBAAmB,MAAM;AACrD,MAAAA,eAAcA,eAAc,YAAY,MAAM;AAC9C,MAAAA,eAAcA,eAAc,aAAa,MAAM;AAC/C,MAAAA,eAAcA,eAAc,eAAe,MAAM;AACjD,MAAAA,eAAcA,eAAc,wBAAwB,MAAM;AAC1D,MAAAA,eAAcA,eAAc,iBAAiB,MAAM;AACnD,MAAAA,eAAcA,eAAc,gBAAgB,MAAM;AAClD,MAAAA,eAAcA,eAAc,iBAAiB,MAAM;AACnD,MAAAA,eAAcA,eAAc,oBAAoB,MAAM;AACtD,MAAAA,eAAcA,eAAc,sBAAsB,MAAM;AACxD,MAAAA,eAAcA,eAAc,0BAA0B,MAAM;AAAA,IAChE,GAAG,kBAAkB,gBAAgB,CAAC,EAAE;AACxC,IAAM,WAAW;AAAA,MACb,WAAW;AAAA,MACX,UAAU;AAAA,MACV,aAAa;AAAA,MACb,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,WAAW;AAAA,IACf;AACA,IAAM,uBAAuB,oBAAI,IAAI,CAAC,OAAE,OAAO,OAAE,OAAO,OAAE,OAAO,OAAE,OAAO,OAAE,EAAE,CAAC;AAC/E,IAAM,uBAAuB;AAAA,MACzB,kBAAkB;AAAA,MAClB,wBAAwB;AAAA,MACxB,aAAa;AAAA,MACb,cAAc;AAAA,IAClB;AAEO,IAAM,SAAN,MAAa;AAAA,MAChB,YAAY,SAASC,WAAU,kBAAkB,MAAM,gBAAgB,MAAM;AACzE,aAAK,kBAAkB;AACvB,aAAK,gBAAgB;AACrB,aAAK,eAAe;AACpB,aAAK,UAAU;AACf,aAAK,gBAAgB,cAAc;AACnC,aAAK,wBAAwB,cAAc;AAC3C,aAAK,cAAc;AACnB,aAAK,cAAc;AAEnB,aAAK,mBAAmB;AAKxB,aAAK,yBAAyB,CAAC;AAC/B,aAAK,yBAAyB,CAAC;AAC/B,aAAK,wCAAwC;AAC7C,aAAK,aAAa;AAClB,aAAK,kBAAkB;AACvB,aAAK,yBAAyB;AAC9B,aAAK,UAAU;AAAA,UACX,GAAG;AAAA,UACH,GAAG;AAAA,QACP;AACA,aAAK,cAAc,KAAK,QAAQ;AAChC,aAAK,eAAe,KAAK,QAAQ;AAEjC,YAAI,KAAK,cAAc;AACnB,eAAK,QAAQ,yBAAyB;AAAA,QAC1C;AACA,aAAK,WAAWA,cAAa,QAAQA,cAAa,SAASA,YAAW,KAAK,YAAY,eAAe;AACtG,aAAK,YAAY,IAAI,UAAU,KAAK,SAAS,IAAI;AACjD,aAAK,2BAA2B,IAAI,sBAAsB,KAAK,WAAW;AAC1E,aAAK,oBAAoB,kBAAkB,SAAS,KAAK,YAAY,WAAW,eAAe,CAAC,IAAI,OAAE;AACtG,aAAK,iBAAiB,oBAAoB,QAAQ,oBAAoB,SAAS,kBAAkB,KAAK,UAAU,KAAK,iBAAiB;AACtI,aAAK,eAAe,IAAI,iBAAiB,KAAK,UAAU,KAAK,aAAa,IAAI;AAAA,MAClF;AAAA,MAEA,OAAO,MAAMC,OAAM,SAAS;AACxB,cAAM,SAAS,IAAI,KAAK,OAAO;AAC/B,eAAO,UAAU,MAAMA,OAAM,IAAI;AACjC,eAAO,OAAO;AAAA,MAClB;AAAA,MACA,OAAO,kBAAkB,iBAAiB,SAAS;AAC/C,cAAM,OAAO;AAAA,UACT,GAAG;AAAA,UACH,GAAG;AAAA,QACP;AAGA,4BAAoB,QAAQ,oBAAoB,SAAS,kBAAmB,kBAAkB,KAAK,YAAY,cAAc,UAAG,UAAU,GAAG,MAAM,CAAC,CAAC;AAIrJ,cAAM,eAAe,KAAK,YAAY,cAAc,gBAAgB,GAAG,MAAM,CAAC,CAAC;AAC/E,cAAM,SAAS,IAAI,KAAK,MAAM,cAAc,eAAe;AAC3D,YAAI,OAAO,sBAAsB,OAAE,UAAU;AACzC,iBAAO,uBAAuB,QAAQ,cAAc,WAAW;AAAA,QACnE;AACA,eAAO,iCAAiC;AACxC,eAAO,uBAAuB;AAC9B,eAAO,oBAAoB;AAC3B,eAAO,2BAA2B;AAClC,eAAO;AAAA,MACX;AAAA,MACA,cAAc;AACV,cAAM,cAAc,KAAK,YAAY,cAAc,KAAK,QAAQ;AAChE,cAAM,WAAW,KAAK,YAAY,uBAAuB;AACzD,aAAK,YAAY,aAAa,QAAQ;AACtC,eAAO;AAAA,MACX;AAAA,MAEA,KAAK,OAAO,MAAM,aAAa;AAC3B,YAAIH;AACJ,YAAI,CAAC,KAAK;AACN;AACJ,cAAM,OAAOA,MAAK,MAAM,cAAc,QAAQA,QAAO,SAASA,MAAK;AACnE,cAAM,MAAM;AAAA,UACR;AAAA,UACA,WAAW,IAAI;AAAA,UACf,UAAU,IAAI;AAAA,UACd,aAAa,IAAI;AAAA,UACjB,SAAS,cAAc,IAAI,YAAY,IAAI;AAAA,UAC3C,QAAQ,cAAc,IAAI,WAAW,IAAI;AAAA,UACzC,WAAW,cAAc,IAAI,cAAc,IAAI;AAAA,QACnD;AACA,aAAK,aAAa,GAAG;AAAA,MACzB;AAAA,MAEA,WAAW,MAAM,KAAK,OAAO;AACzB,YAAIA,KAAI;AACR,SAAC,MAAMA,MAAK,KAAK,aAAa,gBAAgB,QAAQ,OAAO,SAAS,SAAS,GAAG,KAAKA,KAAI,IAAI;AAC/F,YAAI,SAAS,KAAK,aAAa,WAAW;AACtC,eAAK,iBAAiB,MAAM,GAAG;AAAA,MACvC;AAAA,MACA,UAAU,MAAM,OAAO;AACnB,YAAIA,KAAI;AACR,YAAI,KAAK,QAAQ,wBAAwB;AACrC,eAAK,gBAAgB,MAAM,KAAK,YAAY;AAAA,QAChD;AACA,SAAC,MAAMA,MAAK,KAAK,aAAa,eAAe,QAAQ,OAAO,SAAS,SAAS,GAAG,KAAKA,KAAI,MAAM,KAAK,aAAa,OAAO;AACzH,YAAI,OAAO;AACP,cAAI;AACJ,cAAI;AACJ,cAAI,KAAK,aAAa,aAAa,KAAK,KAAK,iBAAiB;AAC1D,sBAAU,KAAK;AACf,2BAAe,KAAK;AAAA,UACxB,OACK;AACD,aAAC,EAAE,SAAS,aAAa,IAAI,KAAK;AAAA,UACtC;AACA,eAAK,iBAAiB,SAAS,YAAY;AAAA,QAC/C;AAAA,MACJ;AAAA,MACA,iBAAiB,SAAS,KAAK;AAC3B,cAAM,SAAS,YAAY,KAAK,YAAY,KAAK,YAAY,gBAAgB,OAAO,MAAM,GAAG;AAC7F,aAAK,mBAAmB,CAAC;AACzB,aAAK,UAAU,gBAAgB,CAAC,UAAU,CAAC,KAAK,oBAAoB,KAAK,OAAO;AAAA,MACpF;AAAA,MACA,qBAAqB,cAAc,oBAAoB;AACnD,aAAK,eAAe,cAAc,GAAG,IAAI;AACzC,aAAK,UAAU,QAAQ;AACvB,aAAK,wBAAwB,KAAK;AAClC,aAAK,gBAAgB,cAAc;AAAA,MACvC;AAAA,MACA,2BAA2B;AACvB,aAAK,gBAAgB,cAAc;AACnC,aAAK,wBAAwB,cAAc;AAC3C,aAAK,UAAU,QAAQ,cAAc;AAAA,MACzC;AAAA,MAEA,6BAA6B;AACzB,eAAO,KAAK,aAAa,aAAa,KAAK,KAAK,kBAC1C,KAAK,kBACL,KAAK,aAAa;AAAA,MAC5B;AAAA,MACA,6BAA6B;AACzB,YAAI,OAAO,KAAK;AAChB,eAAO,MAAM;AACT,cAAI,KAAK,YAAY,WAAW,IAAI,MAAM,UAAG,MAAM;AAC/C,iBAAK,cAAc;AACnB;AAAA,UACJ;AACA,iBAAO,KAAK,YAAY,cAAc,IAAI;AAAA,QAC9C;AAAA,MACJ;AAAA,MACA,mCAAmC;AAC/B,YAAI,CAAC,KAAK,mBAAmB,KAAK,YAAY,gBAAgB,KAAK,eAAe,MAAM,GAAG,MAAM;AAC7F;AAAA,QACJ;AACA,gBAAQ,KAAK,mBAAmB;AAAA,UAC5B,KAAK,OAAE;AAAA,UACP,KAAK,OAAE,UAAU;AACb,iBAAK,UAAU,QAAQ,cAAc;AACrC;AAAA,UACJ;AAAA,UACA,KAAK,OAAE;AAAA,UACP,KAAK,OAAE;AAAA,UACP,KAAK,OAAE;AAAA,UACP,KAAK,OAAE;AAAA,UACP,KAAK,OAAE;AAAA,UACP,KAAK,OAAE,UAAU;AACb,iBAAK,UAAU,QAAQ,cAAc;AACrC;AAAA,UACJ;AAAA,UACA,KAAK,OAAE,QAAQ;AACX,iBAAK,UAAU,QAAQ,cAAc;AACrC;AAAA,UACJ;AAAA,UACA,KAAK,OAAE,WAAW;AACd,iBAAK,UAAU,QAAQ,cAAc;AACrC;AAAA,UACJ;AAAA,UACA;AAAA,QAEJ;AAAA,MACJ;AAAA,MAEA,iBAAiB,OAAO;AACpB,cAAM,OAAO,MAAM,QAAQ;AAC3B,cAAM,WAAW,MAAM,YAAY;AACnC,cAAM,WAAW,MAAM,YAAY;AACnC,aAAK,YAAY,gBAAgB,KAAK,UAAU,MAAM,UAAU,QAAQ;AACxE,YAAI,MAAM,UAAU;AAChB,gBAAM,mBAAmB,KAAK,YAAY,cAAc,KAAK,QAAQ;AACrE,gBAAM,cAAc,iBAAiB,KAAK,CAAC,SAAS,KAAK,YAAY,mBAAmB,IAAI,CAAC;AAC7F,cAAI,aAAa;AACb,iBAAK,YAAY,0BAA0B,aAAa,MAAM,QAAQ;AAAA,UAC1E;AAAA,QACJ;AAAA,MACJ;AAAA,MACA,qBAAqB,SAASI,WAAU;AACpC,YAAI,KAAK,QAAQ,wBAAwB;AACrC,gBAAM,MAAMA,aAAY;AAAA,YACpB,GAAGA;AAAA,YACH,UAAUA;AAAA,UACd;AACA,eAAK,YAAY,0BAA0B,SAAS,GAAG;AAAA,QAC3D;AACA,YAAI,KAAK,+BAA+B,GAAG;AACvC,eAAK,qBAAqB,OAAO;AAAA,QACrC,OACK;AACD,gBAAMC,UAAS,KAAK,aAAa;AACjC,eAAK,YAAY,YAAYA,SAAQ,OAAO;AAAA,QAChD;AAAA,MACJ;AAAA,MACA,eAAe,OAAO,cAAc;AAChC,cAAM,UAAU,KAAK,YAAY,cAAc,MAAM,SAAS,cAAc,MAAM,KAAK;AACvF,aAAK,qBAAqB,SAAS,MAAM,QAAQ;AAAA,MACrD;AAAA,MACA,eAAe,OAAO,cAAc;AAChC,cAAM,UAAU,KAAK,YAAY,cAAc,MAAM,SAAS,cAAc,MAAM,KAAK;AACvF,aAAK,qBAAqB,SAAS,MAAM,QAAQ;AACjD,aAAK,aAAa,KAAK,SAAS,MAAM,KAAK;AAAA,MAC/C;AAAA,MACA,mBAAmB,SAAS,OAAO;AAC/B,cAAM,UAAU,KAAK,YAAY,cAAc,SAAS,GAAG,MAAM,CAAC,CAAC;AACnE,aAAK,qBAAqB,SAAS,IAAI;AACvC,aAAK,aAAa,KAAK,SAAS,KAAK;AAAA,MACzC;AAAA,MACA,gBAAgB,OAAO;AACnB,cAAM,OAAO,KAAK,YAAY,cAAc,MAAM,SAAS,GAAG,MAAM,MAAM,KAAK;AAC/E,cAAM,UAAU,KAAK,YAAY,uBAAuB;AACxD,aAAK,YAAY,mBAAmB,MAAM,OAAO;AACjD,aAAK,qBAAqB,MAAM,MAAM,QAAQ;AAC9C,aAAK,aAAa,KAAK,MAAM,MAAM,KAAK;AACxC,YAAI,KAAK,QAAQ;AACb,eAAK,YAAY,0BAA0B,SAAS,IAAI;AAAA,MAChE;AAAA,MACA,yBAAyB;AACrB,cAAM,UAAU,KAAK,YAAY,cAAc,UAAG,MAAM,GAAG,MAAM,CAAC,CAAC;AACnE,YAAI,KAAK,QAAQ;AACb,eAAK,YAAY,0BAA0B,SAAS,IAAI;AAC5D,aAAK,YAAY,YAAY,KAAK,aAAa,SAAS,OAAO;AAC/D,aAAK,aAAa,KAAK,SAAS,OAAE,IAAI;AAAA,MAC1C;AAAA,MACA,mBAAmB,OAAOA,SAAQ;AAC9B,cAAM,cAAc,KAAK,YAAY,kBAAkB,MAAM,IAAI;AACjE,aAAK,YAAY,YAAYA,SAAQ,WAAW;AAChD,YAAI,KAAK,QAAQ,wBAAwB;AACrC,eAAK,YAAY,0BAA0B,aAAa,MAAM,QAAQ;AAAA,QAC1E;AAAA,MACJ;AAAA,MACA,kBAAkB,OAAO;AACrB,YAAIA;AACJ,YAAI;AACJ,YAAI,KAAK,+BAA+B,GAAG;AACvC,WAAC,EAAE,QAAAA,SAAQ,cAAc,IAAI,KAAK,6BAA6B;AAC/D,cAAI,eAAe;AACf,iBAAK,YAAY,iBAAiBA,SAAQ,MAAM,OAAO,aAAa;AAAA,UACxE,OACK;AACD,iBAAK,YAAY,WAAWA,SAAQ,MAAM,KAAK;AAAA,UACnD;AAAA,QACJ,OACK;AACD,UAAAA,UAAS,KAAK,aAAa;AAC3B,eAAK,YAAY,WAAWA,SAAQ,MAAM,KAAK;AAAA,QACnD;AACA,YAAI,CAAC,MAAM;AACP;AACJ,cAAMC,YAAW,KAAK,YAAY,cAAcD,OAAM;AACtD,cAAM,cAAc,gBAAgBC,UAAS,YAAY,aAAa,IAAIA,UAAS;AACnF,cAAM,WAAWA,UAAS,cAAc;AAExC,cAAM,QAAQ,KAAK,YAAY,0BAA0B,QAAQ;AACjE,YAAI,OAAO;AACP,gBAAM,EAAE,SAAS,QAAQ,UAAU,IAAI,MAAM;AAC7C,eAAK,YAAY,6BAA6B,UAAU,EAAE,SAAS,QAAQ,UAAU,CAAC;AAAA,QAC1F,WACS,KAAK,QAAQ,wBAAwB;AAC1C,eAAK,YAAY,0BAA0B,UAAU,MAAM,QAAQ;AAAA,QACvE;AAAA,MACJ;AAAA,MACA,YAAY,OAAO,WAAW;AAC1B,iBAAS,QAAQ,KAAK,YAAY,cAAc,KAAK,GAAG,OAAO,QAAQ,KAAK,YAAY,cAAc,KAAK,GAAG;AAC1G,eAAK,YAAY,WAAW,KAAK;AACjC,eAAK,YAAY,YAAY,WAAW,KAAK;AAAA,QACjD;AAAA,MACJ;AAAA,MACA,gBAAgB,SAAS,cAAc;AACnC,YAAI,KAAK,YAAY,0BAA0B,OAAO,KAAK,aAAa,UAAU;AAC9E,gBAAM,QAAQ,aAAa;AAC3B,gBAAM,KAAK,KAAK,YAAY,WAAW,OAAO;AAC9C,gBAAM,SAGN,aAAa,SAAS,UAAU,WAAW,OAAO,aAAa,UACzD;AAAA,YACE,QAAQ,EAAE,GAAG,MAAM;AAAA,YACnB,SAAS,MAAM;AAAA,YACf,QAAQ,MAAM;AAAA,YACd,WAAW,MAAM;AAAA,UACrB,IACE;AAAA,YACE,SAAS,MAAM;AAAA,YACf,QAAQ,MAAM;AAAA,YACd,WAAW,MAAM;AAAA,UACrB;AACJ,eAAK,YAAY,6BAA6B,SAAS,MAAM;AAAA,QACjE;AAAA,MACJ;AAAA,MAEA,2CAA2C,OAAO;AAE9C,YAAI,CAAC,KAAK;AACN,iBAAO;AACX,YAAI;AACJ,YAAI;AACJ,YAAI,KAAK,aAAa,aAAa,KAAK,KAAK,iBAAiB;AAC1D,oBAAU,KAAK;AACf,yBAAe,KAAK;AAAA,QACxB,OACK;AACD,WAAC,EAAE,SAAS,aAAa,IAAI,KAAK;AAAA,QACtC;AACA,YAAI,MAAM,UAAU,OAAE,OAClB,KAAK,YAAY,WAAW,OAAO,MAAM,UAAG,kBAC5C,KAAK,YAAY,gBAAgB,OAAO,MAAM,GAAG,QAAQ;AACzD,iBAAO;AAAA,QACX;AACA,eAEA,KAAK,UAAU,kBAGT,MAAM,UAAU,OAAE,UAAU,MAAM,UAAU,OAAE,eAC5C,CAAC,KAAK,oBAAoB,cAAc,SAAS,GAAG,IAAI;AAAA,MACpE;AAAA,MACA,cAAc,OAAO;AACjB,gBAAQ,MAAM,MAAM;AAAA,UAChB,KAAK,UAAU,WAAW;AACtB,iBAAK,YAAY,KAAK;AACtB;AAAA,UACJ;AAAA,UACA,KAAK,UAAU,gBAAgB;AAC3B,iBAAK,gBAAgB,KAAK;AAC1B;AAAA,UACJ;AAAA,UACA,KAAK,UAAU,SAAS;AACpB,iBAAK,UAAU,KAAK;AACpB;AAAA,UACJ;AAAA,UACA,KAAK,UAAU,SAAS;AACpB,iBAAK,UAAU,KAAK;AACpB;AAAA,UACJ;AAAA,UACA,KAAK,UAAU,WAAW;AACtB,iBAAK,iBAAiB,KAAK;AAC3B;AAAA,UACJ;AAAA,UACA,KAAK,UAAU,SAAS;AACpB,iBAAK,SAAS,KAAK;AACnB;AAAA,UACJ;AAAA,UACA,KAAK,UAAU,KAAK;AAChB,iBAAK,MAAM,KAAK;AAChB;AAAA,UACJ;AAAA,UACA,KAAK,UAAU,sBAAsB;AACjC,iBAAK,sBAAsB,KAAK;AAChC;AAAA,UACJ;AAAA,QACJ;AAAA,MACJ;AAAA,MAEA,oBAAoB,KAAK,SAAS,WAAW;AACzC,cAAM,KAAK,KAAK,YAAY,gBAAgB,OAAO;AACnD,cAAM,QAAQ,KAAK,YAAY,YAAY,OAAO;AAClD,eAAsB,mBAAmB,KAAK,IAAI,OAAO,SAAS;AAAA,MACtE;AAAA,MAEA,uCAAuC;AACnC,cAAM,aAAa,KAAK,yBAAyB,QAAQ;AACzD,YAAI,YAAY;AACZ,gBAAM,WAAW,KAAK,yBAAyB,QAAQ,UAAU,CAAC,UAAU,MAAM,SAAS,UAAU,UAAU,KAAK,aAAa,SAAS,MAAM,OAAO,CAAC;AACxJ,gBAAM,YAAY,WAAW,IAAI,aAAa,IAAI,WAAW;AAC7D,mBAAS,IAAI,WAAW,KAAK,GAAG,KAAK;AACjC,kBAAM,QAAQ,KAAK,yBAAyB,QAAQ;AACpD,iBAAK,eAAe,MAAM,OAAO,KAAK,YAAY,gBAAgB,MAAM,OAAO,CAAC;AAChF,kBAAM,UAAU,KAAK,aAAa;AAAA,UACtC;AAAA,QACJ;AAAA,MACJ;AAAA,MAEA,kBAAkB;AACd,aAAK,aAAa,uBAAuB;AACzC,aAAK,aAAa,wBAAwB;AAC1C,aAAK,yBAAyB,kBAAkB;AAChD,aAAK,gBAAgB,cAAc;AAAA,MACvC;AAAA,MACA,iBAAiB;AACb,aAAK,aAAa,oCAAoC,OAAE,CAAC;AACzD,aAAK,aAAa,sBAAsB,OAAE,CAAC;AAAA,MAC/C;AAAA,MAEA,sBAAsB;AAClB,iBAAS,IAAI,KAAK,aAAa,UAAU,KAAK,GAAG,KAAK;AAElD,kBAAQ,MAAM,KAAK,KAAK,kBAAkB,KAAK,oBAAoB,KAAK,aAAa,OAAO,IAAI;AAAA,YAC5F,KAAK,OAAE,IAAI;AACP,mBAAK,gBAAgB,cAAc;AACnC;AAAA,YACJ;AAAA,YACA,KAAK,OAAE;AAAA,YACP,KAAK,OAAE;AAAA,YACP,KAAK,OAAE,OAAO;AACV,mBAAK,gBAAgB,cAAc;AACnC;AAAA,YACJ;AAAA,YACA,KAAK,OAAE,SAAS;AACZ,mBAAK,gBAAgB,cAAc;AACnC;AAAA,YACJ;AAAA,YACA,KAAK,OAAE,UAAU;AACb,mBAAK,gBAAgB,cAAc;AACnC;AAAA,YACJ;AAAA,YACA,KAAK,OAAE,OAAO;AACV,mBAAK,gBAAgB,cAAc;AACnC;AAAA,YACJ;AAAA,YACA,KAAK,OAAE,MAAM;AACT,mBAAK,gBAAgB,cAAc;AACnC;AAAA,YACJ;AAAA,YACA,KAAK,OAAE,UAAU;AACb,mBAAK,gBAAgB,cAAc;AACnC;AAAA,YACJ;AAAA,YACA,KAAK,OAAE,QAAQ;AACX,mBAAK,6BAA6B,CAAC;AACnC;AAAA,YACJ;AAAA,YACA,KAAK,OAAE,UAAU;AACb,mBAAK,gBAAgB,KAAK,uBAAuB;AACjD;AAAA,YACJ;AAAA,YACA,KAAK,OAAE,MAAM;AACT,mBAAK,gBAAgB,KAAK,cAAc,cAAc,aAAa,cAAc;AACjF;AAAA,YACJ;AAAA,YACA,KAAK,OAAE;AAAA,YACP,KAAK,OAAE,IAAI;AACP,kBAAI,IAAI,GAAG;AACP,qBAAK,gBAAgB,cAAc;AACnC;AAAA,cACJ;AACA;AAAA,YACJ;AAAA,YACA,KAAK,OAAE,MAAM;AACT,kBAAI,IAAI,GAAG;AACP,qBAAK,gBAAgB,cAAc;AACnC;AAAA,cACJ;AACA;AAAA,YACJ;AAAA,UACJ;AAAA,QACJ;AACA,aAAK,gBAAgB,cAAc;AAAA,MACvC;AAAA,MACA,6BAA6B,WAAW;AACpC,YAAI,YAAY,GAAG;AACf,mBAAS,IAAI,YAAY,GAAG,IAAI,GAAG,KAAK;AACpC,kBAAM,KAAK,KAAK,aAAa,OAAO;AACpC,gBAAI,OAAO,OAAE,UAAU;AACnB;AAAA,YACJ,WACS,OAAO,OAAE,OAAO;AACrB,mBAAK,gBAAgB,cAAc;AACnC;AAAA,YACJ;AAAA,UACJ;AAAA,QACJ;AACA,aAAK,gBAAgB,cAAc;AAAA,MACvC;AAAA,MAEA,gCAAgC,IAAI;AAChC,eAAO,qBAAqB,IAAI,EAAE;AAAA,MACtC;AAAA,MACA,iCAAiC;AAC7B,eAAO,KAAK,0BAA0B,KAAK,gCAAgC,KAAK,aAAa,YAAY;AAAA,MAC7G;AAAA,MACA,+BAA+B;AAC3B,iBAAS,IAAI,KAAK,aAAa,UAAU,KAAK,GAAG,KAAK;AAClD,gBAAM,cAAc,KAAK,aAAa,MAAM;AAC5C,kBAAQ,KAAK,aAAa,OAAO,IAAI;AAAA,YACjC,KAAK,OAAE,UAAU;AACb,kBAAI,KAAK,YAAY,gBAAgB,WAAW,MAAM,GAAG,MAAM;AAC3D,uBAAO,EAAE,QAAQ,KAAK,YAAY,mBAAmB,WAAW,GAAG,eAAe,KAAK;AAAA,cAC3F;AACA;AAAA,YACJ;AAAA,YACA,KAAK,OAAE,OAAO;AACV,oBAAMD,UAAS,KAAK,YAAY,cAAc,WAAW;AACzD,kBAAIA,SAAQ;AACR,uBAAO,EAAE,QAAAA,SAAQ,eAAe,YAAY;AAAA,cAChD;AACA,qBAAO,EAAE,QAAQ,KAAK,aAAa,MAAM,IAAI,IAAI,eAAe,KAAK;AAAA,YACzE;AAAA,YACA;AAAA,UAEJ;AAAA,QACJ;AACA,eAAO,EAAE,QAAQ,KAAK,aAAa,MAAM,IAAI,eAAe,KAAK;AAAA,MACrE;AAAA,MACA,qBAAqB,SAAS;AAC1B,cAAMD,YAAW,KAAK,6BAA6B;AACnD,YAAIA,UAAS,eAAe;AACxB,eAAK,YAAY,aAAaA,UAAS,QAAQ,SAASA,UAAS,aAAa;AAAA,QAClF,OACK;AACD,eAAK,YAAY,YAAYA,UAAS,QAAQ,OAAO;AAAA,QACzD;AAAA,MACJ;AAAA,MAEA,kBAAkB,SAAS,IAAI;AAC3B,cAAM,KAAK,KAAK,YAAY,gBAAgB,OAAO;AACnD,eAAO,iBAAiB,IAAI,IAAI,EAAE;AAAA,MACtC;AAAA,MACA,YAAY,OAAO;AACf,aAAK,kBAAkB;AACvB,YAAI,KAAK,UAAU,eAAe;AAC9B,oCAA0B,MAAM,KAAK;AACrC;AAAA,QACJ;AACA,gBAAQ,KAAK,eAAe;AAAA,UACxB,KAAK,cAAc,SAAS;AACxB,+BAAmB,MAAM,KAAK;AAC9B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,aAAa;AAC5B,4BAAgB,MAAM,KAAK;AAC3B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,aAAa;AAC5B,4BAAgB,MAAM,KAAK;AAC3B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,SAAS;AACxB,wBAAY,MAAM,KAAK;AACvB;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,mBAAmB;AAClC,gCAAoB,MAAM,KAAK;AAC/B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,YAAY;AAC3B,2BAAe,MAAM,KAAK;AAC1B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc,aAAa;AAC5B,4BAAgB,MAAM,KAAK;AAC3B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc,oBAAoB;AACnC,iBAAK,kBAAkB,KAAK;AAC5B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc,QAAQ;AACvB,6BAAiB,MAAM,KAAK;AAC5B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,eAAe;AAC9B,iCAAqB,MAAM,KAAK;AAChC;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,iBAAiB;AAChC,+BAAmB,MAAM,KAAK;AAC9B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,YAAY;AAC3B,2BAAe,MAAM,KAAK;AAC1B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,kBAAkB;AACjC,gCAAoB,MAAM,KAAK;AAC/B;AAAA,UACJ;AAAA,UACA;AAAA,QAEJ;AAAA,MACJ;AAAA,MACA,gBAAgB,OAAO;AACnB,aAAK,kBAAkB;AACvB,YAAI,KAAK,UAAU,eAAe;AAC9B,wCAA8B,MAAM,KAAK;AACzC;AAAA,QACJ;AACA,gBAAQ,KAAK,eAAe;AAAA,UACxB,KAAK,cAAc,SAAS;AACxB,+BAAmB,MAAM,KAAK;AAC9B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,aAAa;AAC5B,4BAAgB,MAAM,KAAK;AAC3B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,aAAa;AAC5B,4BAAgB,MAAM,KAAK;AAC3B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,SAAS;AACxB,wBAAY,MAAM,KAAK;AACvB;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,mBAAmB;AAClC,gCAAoB,MAAM,KAAK;AAC/B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,YAAY;AAC3B,2BAAe,MAAM,KAAK;AAC1B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,MAAM;AACrB,iBAAK,kBAAkB,KAAK;AAC5B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc,QAAQ;AACvB,6BAAiB,MAAM,KAAK;AAC5B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,iBAAiB;AAChC,+BAAmB,MAAM,KAAK;AAC9B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,YAAY;AAC3B,2BAAe,MAAM,KAAK;AAC1B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,kBAAkB;AACjC,gCAAoB,MAAM,KAAK;AAC/B;AAAA,UACJ;AAAA,UACA;AAAA,QAEJ;AAAA,MACJ;AAAA,MACA,UAAU,OAAO;AACb,aAAK,kBAAkB;AACvB,YAAI,KAAK,kBAAkB;AACvB,wBAAc,MAAM,KAAK;AACzB;AAAA,QACJ;AACA,gBAAQ,KAAK,eAAe;AAAA,UACxB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc,gBAAgB;AAC/B,0BAAc,MAAM,KAAK;AACzB;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,eAAe;AAC9B,6BAAiB,MAAM,KAAK;AAC5B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,YAAY;AAC3B,2CAA+B,MAAM,KAAK;AAC1C;AAAA,UACJ;AAAA,UACA,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc,sBAAsB;AACrC,oCAAwB,MAAM,KAAK;AACnC;AAAA,UACJ;AAAA,UACA;AAAA,QAEJ;AAAA,MACJ;AAAA,MACA,UAAU,OAAO;AACb,aAAK,kBAAkB;AACvB,gBAAQ,KAAK,eAAe;AAAA,UACxB,KAAK,cAAc,SAAS;AACxB,iCAAqB,MAAM,KAAK;AAChC;AAAA,UACJ;AAAA,UACA,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc,YAAY;AAC3B,iBAAK,KAAK,OAAO,IAAI,gBAAgB;AACrC;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,eAAe;AAC9B,6BAAiB,MAAM,KAAK;AAC5B;AAAA,UACJ;AAAA,UACA;AAAA,QAEJ;AAAA,MACJ;AAAA,MACA,WAAW,OAAO;AACd,aAAK,kBAAkB;AACvB,aAAK,eAAe;AACpB,aAAK,iBAAiB,KAAK;AAC3B,YAAI,MAAM,eAAe,CAAC,MAAM,gBAAgB;AAC5C,eAAK,KAAK,OAAO,IAAI,6CAA6C;AAAA,QACtE;AAAA,MACJ;AAAA,MAWA,iBAAiB,OAAO;AACpB,YAAI,KAAK,2CAA2C,KAAK,GAAG;AACxD,mCAAyB,MAAM,KAAK;AAAA,QACxC,OACK;AACD,eAAK,+BAA+B,KAAK;AAAA,QAC7C;AAAA,MACJ;AAAA,MACA,+BAA+B,OAAO;AAClC,gBAAQ,KAAK,eAAe;AAAA,UACxB,KAAK,cAAc,SAAS;AACxB,+BAAmB,MAAM,KAAK;AAC9B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,aAAa;AAC5B,+BAAmB,MAAM,KAAK;AAC9B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,aAAa;AAC5B,+BAAmB,MAAM,KAAK;AAC9B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,SAAS;AACxB,2BAAe,MAAM,KAAK;AAC1B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,mBAAmB;AAClC,mCAAuB,MAAM,KAAK;AAClC;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,YAAY;AAC3B,8BAAkB,MAAM,KAAK;AAC7B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,SAAS;AACxB,2BAAe,MAAM,KAAK;AAC1B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,UAAU;AACzB,4BAAgB,MAAM,KAAK;AAC3B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,eAAe;AAC9B,6BAAiB,MAAM,KAAK;AAC5B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,YAAY;AAC3B,8BAAkB,MAAM,KAAK;AAC7B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,iBAAiB;AAChC,kCAAsB,MAAM,KAAK;AACjC;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,eAAe;AAC9B,gCAAoB,MAAM,KAAK;AAC/B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,QAAQ;AACvB,0BAAc,MAAM,KAAK;AACzB;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,SAAS;AACxB,2BAAe,MAAM,KAAK;AAC1B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,WAAW;AAC1B,6BAAiB,MAAM,KAAK;AAC5B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,oBAAoB;AACnC,oCAAwB,MAAM,KAAK;AACnC;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,aAAa;AAC5B,+BAAmB,MAAM,KAAK;AAC9B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,YAAY;AAC3B,8BAAkB,MAAM,KAAK;AAC7B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,aAAa;AAC5B,+BAAmB,MAAM,KAAK;AAC9B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,gBAAgB;AAC/B,kCAAsB,MAAM,KAAK;AACjC;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,kBAAkB;AACjC,mCAAuB,MAAM,KAAK;AAClC;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,sBAAsB;AACrC,uCAA2B,MAAM,KAAK;AACtC;AAAA,UACJ;AAAA,UACA;AAAA,QAEJ;AAAA,MACJ;AAAA,MACA,SAAS,OAAO;AACZ,aAAK,kBAAkB;AACvB,aAAK,eAAe;AACpB,YAAI,KAAK,kBAAkB;AACvB,iCAAuB,MAAM,KAAK;AAAA,QACtC,OACK;AACD,eAAK,6BAA6B,KAAK;AAAA,QAC3C;AAAA,MACJ;AAAA,MACA,6BAA6B,OAAO;AAChC,gBAAQ,KAAK,eAAe;AAAA,UACxB,KAAK,cAAc,SAAS;AACxB,+BAAmB,MAAM,KAAK;AAC9B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,aAAa;AAC5B,6BAAiB,MAAM,KAAK;AAC5B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,aAAa;AAC5B,6BAAiB,MAAM,KAAK;AAC5B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,SAAS;AACxB,yBAAa,MAAM,KAAK;AACxB;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,mBAAmB;AAClC,iCAAqB,MAAM,KAAK;AAChC;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,YAAY;AAC3B,4BAAgB,MAAM,KAAK;AAC3B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,SAAS;AACxB,yBAAa,MAAM,KAAK;AACxB;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,MAAM;AACrB,yBAAa,MAAM,KAAK;AACxB;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,UAAU;AACzB,0BAAc,MAAM,KAAK;AACzB;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,eAAe;AAC9B,6BAAiB,MAAM,KAAK;AAC5B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,YAAY;AAC3B,4BAAgB,MAAM,KAAK;AAC3B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,iBAAiB;AAChC,gCAAoB,MAAM,KAAK;AAC/B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,eAAe;AAC9B,8BAAkB,MAAM,KAAK;AAC7B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,QAAQ;AACvB,wBAAY,MAAM,KAAK;AACvB;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,SAAS;AACxB,yBAAa,MAAM,KAAK;AACxB;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,WAAW;AAC1B,2BAAe,MAAM,KAAK;AAC1B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,oBAAoB;AACnC,kCAAsB,MAAM,KAAK;AACjC;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,aAAa;AAC5B,6BAAiB,MAAM,KAAK;AAC5B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,YAAY;AAC3B,4BAAgB,MAAM,KAAK;AAC3B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,aAAa;AAC5B,6BAAiB,MAAM,KAAK;AAC5B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,gBAAgB;AAC/B,gCAAoB,MAAM,KAAK;AAC/B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,kBAAkB;AACjC,gCAAoB,MAAM,KAAK;AAC/B;AAAA,UACJ;AAAA,UACA;AAAA,QAEJ;AAAA,MACJ;AAAA,MACA,MAAM,OAAO;AACT,gBAAQ,KAAK,eAAe;AAAA,UACxB,KAAK,cAAc,SAAS;AACxB,+BAAmB,MAAM,KAAK;AAC9B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,aAAa;AAC5B,4BAAgB,MAAM,KAAK;AAC3B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,aAAa;AAC5B,4BAAgB,MAAM,KAAK;AAC3B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,SAAS;AACxB,wBAAY,MAAM,KAAK;AACvB;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,mBAAmB;AAClC,gCAAoB,MAAM,KAAK;AAC/B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,YAAY;AAC3B,2BAAe,MAAM,KAAK;AAC1B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc,oBAAoB;AACnC,sBAAU,MAAM,KAAK;AACrB;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,MAAM;AACrB,sBAAU,MAAM,KAAK;AACrB;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,eAAe;AAC9B,6BAAiB,MAAM,KAAK;AAC5B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,aAAa;AAC5B,0BAAc,MAAM,KAAK;AACzB;AAAA,UACJ;AAAA,UACA,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc,sBAAsB;AACrC,wBAAY,MAAM,KAAK;AACvB;AAAA,UACJ;AAAA,UACA;AAAA,QAEJ;AAAA,MACJ;AAAA,MACA,sBAAsB,OAAO;AACzB,YAAI,KAAK,iBAAiB;AACtB,eAAK,kBAAkB;AACvB,cAAI,MAAM,MAAM,WAAW,CAAC,MAAc,YAAY,WAAW;AAC7D,gBAAI,MAAM,MAAM,WAAW,GAAG;AAC1B;AAAA,YACJ;AACA,kBAAM,QAAQ,MAAM,MAAM,OAAO,CAAC;AAAA,UACtC;AAAA,QACJ;AACA,YAAI,KAAK,UAAU,eAAe;AAC9B,eAAK,kBAAkB,KAAK;AAC5B;AAAA,QACJ;AACA,gBAAQ,KAAK,eAAe;AAAA,UACxB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc,gBAAgB;AAC/B,iBAAK,kBAAkB,KAAK;AAC5B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc,sBAAsB;AACrC,sCAA0B,MAAM,KAAK;AACrC;AAAA,UACJ;AAAA,UACA,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc;AAAA,UACnB,KAAK,cAAc,QAAQ;AACvB,6BAAiB,MAAM,KAAK;AAC5B;AAAA,UACJ;AAAA,UACA,KAAK,cAAc,eAAe;AAC9B,2CAA+B,MAAM,KAAK;AAC1C;AAAA,UACJ;AAAA,UACA;AAAA,QAEJ;AAAA,MACJ;AAAA,IACJ;AAi2CA,IAAM,sBAAsB,oBAAI,IAAI,CAAC,OAAE,SAAS,OAAE,KAAK,OAAE,UAAU,OAAE,OAAO,OAAE,IAAI,OAAE,OAAO,OAAE,IAAI,OAAE,OAAO,OAAE,EAAE,CAAC;AAAA;AAAA;;;ACj6E/G,SAAS,cAAc,MAAM,SAAS;AAClC,SAAQ,QAAQ,YAAY,cAAc,IAAI,KAC1C,QAAQ,YAAY,gBAAgB,IAAI,MAAM,GAAG,QACjD,cAAc,IAAI,QAAQ,YAAY,WAAW,IAAI,CAAC;AAC9D;AAkDO,SAAS,eAAe,MAAM,SAAS;AAC1C,QAAM,OAAO,EAAE,GAAGG,cAAa,GAAG,QAAQ;AAC1C,SAAO,cAAc,MAAM,IAAI;AACnC;AACA,SAAS,oBAAoB,YAAY,SAAS;AAC9C,MAAIC,QAAO;AAEX,QAAM,YAAY,QAAQ,YAAY,cAAc,UAAU,KAC1D,QAAQ,YAAY,WAAW,UAAU,MAAM,UAAE,YACjD,QAAQ,YAAY,gBAAgB,UAAU,MAAM,GAAG,OACrD,QAAQ,YAAY,mBAAmB,UAAU,IACjD;AACN,QAAM,aAAa,QAAQ,YAAY,cAAc,SAAS;AAC9D,MAAI,YAAY;AACZ,eAAW,eAAe,YAAY;AAClC,MAAAA,SAAQ,cAAc,aAAa,OAAO;AAAA,IAC9C;AAAA,EACJ;AACA,SAAOA;AACX;AACA,SAAS,cAAc,MAAM,SAAS;AAClC,MAAI,QAAQ,YAAY,cAAc,IAAI,GAAG;AACzC,WAAO,iBAAiB,MAAM,OAAO;AAAA,EACzC;AACA,MAAI,QAAQ,YAAY,WAAW,IAAI,GAAG;AACtC,WAAO,kBAAkB,MAAM,OAAO;AAAA,EAC1C;AACA,MAAI,QAAQ,YAAY,cAAc,IAAI,GAAG;AACzC,WAAO,qBAAqB,MAAM,OAAO;AAAA,EAC7C;AACA,MAAI,QAAQ,YAAY,mBAAmB,IAAI,GAAG;AAC9C,WAAO,0BAA0B,MAAM,OAAO;AAAA,EAClD;AAEA,SAAO;AACX;AACA,SAAS,iBAAiB,MAAM,SAAS;AACrC,QAAM,KAAK,QAAQ,YAAY,WAAW,IAAI;AAC9C,SAAO,IAAI,KAAK,oBAAoB,MAAM,OAAO,KAAK,cAAc,MAAM,OAAO,IAAI,KAAK,GAAG,oBAAoB,MAAM,OAAO,MAAM;AACxI;AACA,SAAS,oBAAoB,MAAM,EAAE,YAAY,GAAG;AAChD,MAAIA,QAAO;AACX,aAAWC,SAAQ,YAAY,YAAY,IAAI,GAAG;AAC9C,IAAAD,SAAQ;AACR,QAAI,CAACC,MAAK,WAAW;AACjB,MAAAD,SAAQC,MAAK;AAAA,IACjB;AAEI,cAAQA,MAAK,WAAW;AAAA,QACpB,KAAK,GAAG,KAAK;AACT,UAAAD,SAAQ,OAAOC,MAAK;AACpB;AAAA,QACJ;AAAA,QACA,KAAK,GAAG,OAAO;AACX,cAAIA,MAAK,SAAS,SAAS;AACvB,YAAAD,SAAQ;AAAA,UACZ;AACA,UAAAA,SAAQC,MAAK;AACb;AAAA,QACJ;AAAA,QACA,KAAK,GAAG,OAAO;AACX,UAAAD,SAAQ,SAASC,MAAK;AACtB;AAAA,QACJ;AAAA,QACA,SAAS;AACL,UAAAD,SAAQ,GAAGC,MAAK,UAAUA,MAAK;AAAA,QACnC;AAAA,MACJ;AACJ,IAAAD,SAAQ,KAAK,gBAAgBC,MAAK,KAAK;AAAA,EAC3C;AACA,SAAOD;AACX;AACA,SAAS,kBAAkB,MAAM,SAAS;AACtC,QAAM,EAAE,YAAY,IAAI;AACxB,QAAM,UAAU,YAAY,mBAAmB,IAAI;AACnD,QAAME,UAAS,YAAY,cAAc,IAAI;AAC7C,QAAM,WAAWA,WAAU,YAAY,cAAcA,OAAM,KAAK,YAAY,WAAWA,OAAM;AAC7F,SAAO,YACH,YAAY,gBAAgBA,OAAM,MAAM,GAAG,QAC3C,iBAAiB,UAAU,QAAQ,gBAAgB,IACjD,UACA,WAAW,OAAO;AAC5B;AACA,SAAS,qBAAqB,MAAM,EAAE,YAAY,GAAG;AACjD,SAAO,OAAO,YAAY,sBAAsB,IAAI;AACxD;AACA,SAAS,0BAA0B,MAAM,EAAE,YAAY,GAAG;AACtD,SAAO,aAAa,YAAY,wBAAwB,IAAI;AAChE;AAtKA,IAIM,eAyBAH;AA7BN;AAAA;AAAA;AACA;AACA;AAEA,IAAM,gBAAgB,oBAAI,IAAI;AAAA,MAC1B,UAAE;AAAA,MACF,UAAE;AAAA,MACF,UAAE;AAAA,MACF,UAAE;AAAA,MACF,UAAE;AAAA,MACF,UAAE;AAAA,MACF,UAAE;AAAA,MACF,UAAE;AAAA,MACF,UAAE;AAAA,MACF,UAAE;AAAA,MACF,UAAE;AAAA,MACF,UAAE;AAAA,MACF,UAAE;AAAA,MACF,UAAE;AAAA,MACF,UAAE;AAAA,MACF,UAAE;AAAA,MACF,UAAE;AAAA,MACF,UAAE;AAAA,IACN,CAAC;AAMD,IAAMA,eAAc,EAAE,aAAa,oBAAoB,kBAAkB,KAAK;AAAA;AAAA;;;ACEvE,SAASI,OAAMC,OAAM,SAAS;AACjC,SAAO,OAAO,MAAMA,OAAM,OAAO;AACrC;AACO,SAAS,cAAc,iBAAiBA,OAAM,SAAS;AAC1D,MAAI,OAAO,oBAAoB,UAAU;AACrC,cAAUA;AACV,IAAAA,QAAO;AACP,sBAAkB;AAAA,EACtB;AACA,QAAM,SAAS,OAAO,kBAAkB,iBAAiB,OAAO;AAChE,SAAO,UAAU,MAAMA,OAAM,IAAI;AACjC,SAAO,OAAO,YAAY;AAC9B;AA3CA,IAAAC,aAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AAAA;AAAA;;;ACVA,SAASC,gBAAe,OAAO;AAC3B,SAAO,IAAIC,MAAK,KAAK;AACzB;AACA,SAAS,iBAAiB,IAAI;AAC1B,QAAM,QAAQ,GAAG,SAAS,GAAG,IAAI,MAAM;AACvC,SAAO,QAAQ,KAAK;AACxB;AAEO,SAAS,wBAAwB,MAAM,UAAU,UAAU;AAC9D,MAAIC,OAAM;AACV,MAAI,MAAM;AACN,IAAAA,QAAO;AAAA,EACX;AACA,MAAI,UAAU;AACV,IAAAA,QAAO,WAAW,iBAAiB,QAAQ;AAAA,EAC/C,WACS,UAAU;AACf,IAAAA,QAAO;AAAA,EACX;AACA,MAAI,UAAU;AACV,IAAAA,QAAO,IAAI,iBAAiB,QAAQ;AAAA,EACxC;AACA,SAAOA;AACX;AAzBA,IA0Ba;AA1Bb,IAAAC,aAAA;AAAA;AAAA,IAAAA;AACA,IAAAC;AAyBO,IAAM,UAAU;AAAA,MAEnB,eAAe;AAAA,MACf,eAAeC;AAAA,MACf,YAAY;AAAA,MAEZ,iBAAiB;AACb,cAAM,OAAO,IAAIC,UAAS,CAAC,CAAC;AAC5B,aAAK,YAAY,aAAK,cAAc;AACpC,eAAO;AAAA,MACX;AAAA,MACA,yBAAyB;AACrB,eAAO,IAAIA,UAAS,CAAC,CAAC;AAAA,MAC1B;AAAA,MACA,cAAc,SAAS,cAAc,OAAO;AACxC,cAAM,UAAU,uBAAO,OAAO,IAAI;AAClC,cAAM,mBAAmB,uBAAO,OAAO,IAAI;AAC3C,cAAM,gBAAgB,uBAAO,OAAO,IAAI;AACxC,iBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACnC,gBAAM,WAAW,MAAM,GAAG;AAC1B,kBAAQ,YAAY,MAAM,GAAG;AAC7B,2BAAiB,YAAY,MAAM,GAAG;AACtC,wBAAc,YAAY,MAAM,GAAG;AAAA,QACvC;AACA,cAAM,OAAO,IAAI,QAAQ,SAAS,SAAS,CAAC,CAAC;AAC7C,aAAK,YAAY;AACjB,aAAK,wBAAwB;AAC7B,aAAK,qBAAqB;AAC1B,eAAO;AAAA,MACX;AAAA,MACA,kBAAkBC,OAAM;AACpB,eAAO,IAAIC,SAAQD,KAAI;AAAA,MAC3B;AAAA,MAEA,YAAY,YAAY,SAAS;AAC7B,cAAME,QAAO,WAAW,SAAS,WAAW,SAAS,SAAS;AAC9D,YAAIA,OAAM;AACN,UAAAA,MAAK,OAAO;AACZ,kBAAQ,OAAOA;AAAA,QACnB;AACA,mBAAW,SAAS,KAAK,OAAO;AAChC,gBAAQ,SAAS;AAAA,MACrB;AAAA,MACA,aAAa,YAAY,SAAS,eAAe;AAC7C,cAAM,eAAe,WAAW,SAAS,QAAQ,aAAa;AAC9D,cAAM,EAAE,MAAAA,MAAK,IAAI;AACjB,YAAIA,OAAM;AACN,UAAAA,MAAK,OAAO;AACZ,kBAAQ,OAAOA;AAAA,QACnB;AACA,sBAAc,OAAO;AACrB,gBAAQ,OAAO;AACf,mBAAW,SAAS,OAAO,cAAc,GAAG,OAAO;AACnD,gBAAQ,SAAS;AAAA,MACrB;AAAA,MACA,mBAAmB,iBAAiB,gBAAgB;AAChD,gBAAQ,YAAY,iBAAiB,cAAc;AAAA,MACvD;AAAA,MACA,mBAAmB,iBAAiB;AAChC,eAAO,gBAAgB,SAAS;AAAA,MACpC;AAAA,MACA,gBAAgBC,WAAU,MAAM,UAAU,UAAU;AAChD,cAAMH,QAAO,wBAAwB,MAAM,UAAU,QAAQ;AAC7D,YAAI,cAAcG,UAAS,SAAS,KAAK,CAAC,SAAS,YAAY,IAAI,KAAK,KAAK,SAAS,UAAU;AAChG,YAAI,aAAa;AACb,sBAAY,OAAOH,UAAS,QAAQA,UAAS,SAASA,QAAO;AAAA,QACjE,OACK;AACD,wBAAc,IAAI,sBAAsB,YAAYA,KAAI;AACxD,kBAAQ,YAAYG,WAAU,WAAW;AAAA,QAC7C;AACA,oBAAY,YAAY,SAAS,QAAQ,SAAS,SAAS,OAAO;AAClE,oBAAY,gBAAgB,aAAa,QAAQ,aAAa,SAAS,WAAW;AAClF,oBAAY,gBAAgB,aAAa,QAAQ,aAAa,SAAS,WAAW;AAAA,MACtF;AAAA,MACA,gBAAgBA,WAAU,MAAM;AAC5B,QAAAA,UAAS,YAAY;AAAA,MACzB;AAAA,MACA,gBAAgBA,WAAU;AACtB,eAAOA,UAAS;AAAA,MACpB;AAAA,MACA,WAAW,MAAM;AACb,YAAI,KAAK,QAAQ;AACb,gBAAM,MAAM,KAAK,OAAO,SAAS,QAAQ,IAAI;AAC7C,gBAAM,EAAE,MAAAD,OAAM,MAAAE,MAAK,IAAI;AACvB,eAAK,OAAO;AACZ,eAAK,OAAO;AACZ,cAAIF,OAAM;AACN,YAAAA,MAAK,OAAOE;AAAA,UAChB;AACA,cAAIA,OAAM;AACN,YAAAA,MAAK,OAAOF;AAAA,UAChB;AACA,eAAK,OAAO,SAAS,OAAO,KAAK,CAAC;AAClC,eAAK,SAAS;AAAA,QAClB;AAAA,MACJ;AAAA,MACA,WAAW,YAAYG,OAAM;AACzB,cAAM,YAAY,WAAW,SAAS,WAAW,SAAS,SAAS;AACnE,YAAI,aAAa,OAAO,SAAS,GAAG;AAChC,oBAAU,QAAQA;AAAA,QACtB,OACK;AACD,kBAAQ,YAAY,YAAYZ,gBAAeY,KAAI,CAAC;AAAA,QACxD;AAAA,MACJ;AAAA,MACA,iBAAiB,YAAYA,OAAM,eAAe;AAC9C,cAAM,WAAW,WAAW,SAAS,WAAW,SAAS,QAAQ,aAAa,IAAI;AAClF,YAAI,YAAY,OAAO,QAAQ,GAAG;AAC9B,mBAAS,QAAQA;AAAA,QACrB,OACK;AACD,kBAAQ,aAAa,YAAYZ,gBAAeY,KAAI,GAAG,aAAa;AAAA,QACxE;AAAA,MACJ;AAAA,MACA,gBAAgB,WAAW,OAAO;AAC9B,iBAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK;AACnC,gBAAM,WAAW,MAAM,GAAG;AAC1B,cAAI,OAAO,UAAU,QAAQ,cAAc,aAAa;AACpD,sBAAU,QAAQ,YAAY,MAAM,GAAG;AACvC,sBAAU,sBAAsB,YAAY,MAAM,GAAG;AACrD,sBAAU,mBAAmB,YAAY,MAAM,GAAG;AAAA,UACtD;AAAA,QACJ;AAAA,MACJ;AAAA,MAEA,cAAc,MAAM;AAChB,eAAO,KAAK,SAAS;AAAA,MACzB;AAAA,MACA,cAAc,MAAM;AAChB,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,cAAc,MAAM;AAChB,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,YAAY,SAAS;AACjB,eAAO,QAAQ;AAAA,MACnB;AAAA,MAEA,WAAW,SAAS;AAChB,eAAO,QAAQ;AAAA,MACnB;AAAA,MACA,gBAAgB,SAAS;AACrB,eAAO,QAAQ;AAAA,MACnB;AAAA,MACA,mBAAmB,UAAU;AACzB,eAAO,SAAS;AAAA,MACpB;AAAA,MACA,sBAAsB,aAAa;AAC/B,eAAO,YAAY;AAAA,MACvB;AAAA,MACA,wBAAwB,aAAa;AACjC,YAAIC;AACJ,gBAAQA,MAAK,YAAY,eAAe,QAAQA,QAAO,SAASA,MAAK;AAAA,MACzE;AAAA,MACA,4BAA4B,aAAa;AACrC,YAAIA;AACJ,gBAAQA,MAAK,YAAY,mBAAmB,QAAQA,QAAO,SAASA,MAAK;AAAA,MAC7E;AAAA,MACA,4BAA4B,aAAa;AACrC,YAAIA;AACJ,gBAAQA,MAAK,YAAY,mBAAmB,QAAQA,QAAO,SAASA,MAAK;AAAA,MAC7E;AAAA,MAEA,mBAAmB,MAAM;AACrB,eAAO,YAAY,IAAI,KAAK,KAAK,SAAS;AAAA,MAC9C;AAAA,MAEA,0BAA0B,MAAMC,WAAU;AACtC,YAAIA,WAAU;AACV,eAAK,aAAaA,UAAS;AAC3B,eAAK,WAAWA,UAAS;AAAA,QAC7B;AACA,aAAK,qBAAqBA;AAAA,MAC9B;AAAA,MACA,0BAA0B,MAAM;AAC5B,eAAO,KAAK;AAAA,MAChB;AAAA,MACA,6BAA6B,MAAM,aAAa;AAC5C,YAAI,YAAY,aAAa;AACzB,eAAK,WAAW,YAAY;AAChC,aAAK,qBAAqB;AAAA,UACtB,GAAG,KAAK;AAAA,UACR,GAAG;AAAA,QACP;AAAA,MACJ;AAAA,IACJ;AAAA;AAAA;;;ACtMM,SAAU,gBACd,SACA,SACAC,aACA,SAA0B;AAE1B,QAAM,OAAO;IACX,kBACE,OAAO,QAAQ,qBAAqB,YAChC,QAAQ,mBACR;IACN,aAAa;IACb,wBAAwB,QAAQ;;AAGlC,SAAOA,cACHC,OAAc,SAAS,IAAI,IAC3B,cAAc,SAAS,SAAS,IAAI;AAC1C;AAUM,SAAU,iBAAiB,KAAiC;AAMhE,QAAM,QAAQ,YAAY,MAAM,MAAM,CAAC,GAAG;AAC1C,WAASC,SAAQ,GAAGA,SAAQ,MAAM,QAAQA,UAAS,GAAG;AACpD,UAAM,OAAO,MAAMA;AACnB,QAAI,WAAW,IAAI,GAAG;AACpB,YAAM,UAAU,OAAO,KAAK,OAAOA,QAAO,GAAG,GAAG,KAAK,QAAQ;;;AAIjE,MAAI,SAAS;AACb,WAASA,SAAQ,GAAGA,SAAQ,MAAM,QAAQA,UAAS,GAAG;AACpD,UAAM,OAAO,MAAMA;AACnB,cAAU,eAAe,MAAM,UAAU;;AAG3C,SAAO;AACT;AA/DA,IAkCM;AAlCN;;IAAAC;AACA,IAAAC;AACA,IAAAA;AAgCA,IAAM,aAAa,EAAE,aAAa,QAAkB;;;;;ACgDpD,SAASC,cAAa,GAAS;AAC3B,SACI,MAAMC,WAAU,SAChB,MAAMA,WAAU,WAChB,MAAMA,WAAU,OAChB,MAAMA,WAAU,YAChB,MAAMA,WAAU;AAExB;AAEA,SAAS,kBAAkB,GAAS;AAChC,SAAO,MAAMA,WAAU,SAAS,MAAMA,WAAU,MAAMD,cAAa,CAAC;AACxE;AAEA,SAAS,SAAS,GAAS;AACvB,SAAO,KAAKC,WAAU,QAAQ,KAAKA,WAAU;AACjD;AAEA,SAAS,aAAa,GAAS;AAC3B,SACK,KAAKA,WAAU,UAAU,KAAKA,WAAU,UACxC,KAAKA,WAAU,UAAU,KAAKA,WAAU;AAEjD;AAEA,SAAS,WAAW,GAAS;AACzB,SACK,KAAKA,WAAU,UAAU,KAAKA,WAAU,UACxC,KAAKA,WAAU,UAAU,KAAKA,WAAU;AAEjD;AAhHA,IAQWA,YA+BAC,QA2EC,WA+BN,WASeC;AA1JrB;;;AAQA,KAAA,SAAWF,YAAS;AAChB,MAAAA,WAAAA,WAAA,SAAA,KAAA;AACA,MAAAA,WAAAA,WAAA,aAAA,MAAA;AACA,MAAAA,WAAAA,WAAA,cAAA,MAAA;AACA,MAAAA,WAAAA,WAAA,oBAAA,MAAA;AACA,MAAAA,WAAAA,WAAA,WAAA,MAAA;AACA,MAAAA,WAAAA,WAAA,qBAAA,MAAA;AACA,MAAAA,WAAAA,WAAA,SAAA,MAAA;AACA,MAAAA,WAAAA,WAAA,SAAA,MAAA;AACA,MAAAA,WAAAA,WAAA,iBAAA,MAAA;AACA,MAAAA,WAAAA,WAAA,iBAAA,MAAA;AACA,MAAAA,WAAAA,WAAA,UAAA,MAAA;AACA,MAAAA,WAAAA,WAAA,WAAA,MAAA;AACA,MAAAA,WAAAA,WAAA,UAAA,MAAA;AACA,MAAAA,WAAAA,WAAA,UAAA,MAAA;AACA,MAAAA,WAAAA,WAAA,UAAA,MAAA;AACA,MAAAA,WAAAA,WAAA,QAAA,MAAA;AACA,MAAAA,WAAAA,WAAA,QAAA,MAAA;AACA,MAAAA,WAAAA,WAAA,QAAA,MAAA;AACA,MAAAA,WAAAA,WAAA,kBAAA,MAAA;AACA,MAAAA,WAAAA,WAAA,YAAA,MAAA;AACA,MAAAA,WAAAA,WAAA,YAAA,MAAA;AACA,MAAAA,WAAAA,WAAA,YAAA,MAAA;AACA,MAAAA,WAAAA,WAAA,YAAA,OAAA;AACA,MAAAA,WAAAA,WAAA,YAAA,MAAA;AACA,MAAAA,WAAAA,WAAA,YAAA,OAAA;AACA,MAAAA,WAAAA,WAAA,YAAA,OAAA;AACA,MAAAA,WAAAA,WAAA,0BAAA,MAAA;IACJ,GA5BWA,eAAAA,aAAS,CAAA,EAAA;AA+BpB,KAAA,SAAWC,QAAK;AACZ,MAAAA,OAAAA,OAAA,UAAA,KAAA;AACA,MAAAA,OAAAA,OAAA,mBAAA,KAAA;AACA,MAAAA,OAAAA,OAAA,eAAA,KAAA;AACA,MAAAA,OAAAA,OAAA,sBAAA,KAAA;AACA,MAAAA,OAAAA,OAAA,0BAAA,KAAA;AACA,MAAAA,OAAAA,OAAA,sBAAA,KAAA;AACA,MAAAA,OAAAA,OAAA,yBAAA,KAAA;AAGA,MAAAA,OAAAA,OAAA,yBAAA,KAAA;AACA,MAAAA,OAAAA,OAAA,qBAAA,KAAA;AACA,MAAAA,OAAAA,OAAA,wBAAA,MAAA;AACA,MAAAA,OAAAA,OAAA,0BAAA,MAAA;AACA,MAAAA,OAAAA,OAAA,wBAAA,MAAA;AACA,MAAAA,OAAAA,OAAA,wBAAA,MAAA;AACA,MAAAA,OAAAA,OAAA,wBAAA,MAAA;AAGA,MAAAA,OAAAA,OAAA,uBAAA,MAAA;AACA,MAAAA,OAAAA,OAAA,mBAAA,MAAA;AAGA,MAAAA,OAAAA,OAAA,6BAAA,MAAA;AAGA,MAAAA,OAAAA,OAAA,mBAAA,MAAA;AACA,MAAAA,OAAAA,OAAA,mBAAA,MAAA;AACA,MAAAA,OAAAA,OAAA,sBAAA,MAAA;AACA,MAAAA,OAAAA,OAAA,mBAAA,MAAA;AAGA,MAAAA,OAAAA,OAAA,oBAAA,MAAA;AACA,MAAAA,OAAAA,OAAA,0BAAA,MAAA;AACA,MAAAA,OAAAA,OAAA,kBAAA,MAAA;AAEA,MAAAA,OAAAA,OAAA,kBAAA,MAAA;AACA,MAAAA,OAAAA,OAAA,yBAAA,MAAA;AACA,MAAAA,OAAAA,OAAA,mBAAA,MAAA;AACA,MAAAA,OAAAA,OAAA,qBAAA,MAAA;AACA,MAAAA,OAAAA,OAAA,iBAAA,MAAA;IACJ,GAzCWA,WAAAA,SAAK,CAAA,EAAA;AA2EhB,KAAA,SAAYE,YAAS;AACjB,MAAAA,WAAAA,WAAA,aAAA,KAAA;AACA,MAAAA,WAAAA,WAAA,cAAA,KAAA;AACA,MAAAA,WAAAA,WAAA,YAAA,KAAA;AACA,MAAAA,WAAAA,WAAA,YAAA,KAAA;IACJ,GALY,cAAA,YAAS,CAAA,EAAA;AA+BrB,IAAM,YAAY;MACd,OAAO,IAAI,WAAW,CAAC,IAAM,IAAM,IAAM,IAAM,IAAM,EAAI,CAAC;MAC1D,UAAU,IAAI,WAAW,CAAC,IAAM,IAAM,EAAI,CAAC;MAC3C,YAAY,IAAI,WAAW,CAAC,IAAM,IAAM,EAAI,CAAC;MAC7C,WAAW,IAAI,WAAW,CAAC,IAAM,IAAM,KAAM,IAAM,KAAM,KAAM,KAAM,GAAI,CAAC;MAC1E,UAAU,IAAI,WAAW,CAAC,IAAM,IAAM,KAAM,KAAM,KAAM,KAAM,GAAI,CAAC;MACnE,UAAU,IAAI,WAAW,CAAC,IAAM,IAAM,KAAM,KAAM,KAAM,KAAM,GAAI,CAAC;;AAGvE,IAAqBD,aAArB,MAA8B;MAsB1B,YACI,EACI,UAAU,OACV,iBAAiB,KAAI,GAER,KAAc;AAAd,aAAA,MAAA;AAzBb,aAAA,QAAQD,OAAM;AAEd,aAAA,SAAS;AAET,aAAA,eAAe;AAEf,aAAA,QAAQ;AAER,aAAA,YAAYA,OAAM;AAElB,aAAA,YAAY;AAEb,aAAA,UAAU;AAET,aAAA,SAAS;AAgFT,aAAA,gBAAgB;AA8WhB,aAAA,YAAY;AACZ,aAAA,cAAc;AAEd,aAAA,eAAe;AACf,aAAA,eAAe;AArbnB,aAAK,UAAU;AACf,aAAK,iBAAiB;AACtB,aAAK,aAAa,UAAU,0BAAgB;MAChD;MAEO,QAAK;AACR,aAAK,QAAQA,OAAM;AACnB,aAAK,SAAS;AACd,aAAK,eAAe;AACpB,aAAK,QAAQ;AACb,aAAK,YAAYA,OAAM;AACvB,aAAK,kBAAkB;AACvB,aAAK,UAAU;AACf,aAAK,SAAS;MAClB;MAEO,MAAM,OAAa;AACtB,aAAK,UAAU,KAAK,OAAO;AAC3B,aAAK,SAAS;AACd,aAAK,MAAK;MACd;MAEO,MAAG;AACN,YAAI,KAAK;AAAS,eAAK,OAAM;MACjC;MAEO,QAAK;AACR,aAAK,UAAU;MACnB;MAEO,SAAM;AACT,aAAK,UAAU;AACf,YAAI,KAAK,QAAQ,KAAK,OAAO,SAAS,KAAK,QAAQ;AAC/C,eAAK,MAAK;;MAElB;MAKO,WAAQ;AACX,eAAO,KAAK;MAChB;MAKO,kBAAe;AAClB,eAAO,KAAK;MAChB;MAEQ,UAAU,GAAS;AACvB,YACI,MAAMD,WAAU,MACf,CAAC,KAAK,kBAAkB,KAAK,cAAcA,WAAU,EAAE,GAC1D;AACE,cAAI,KAAK,QAAQ,KAAK,cAAc;AAChC,iBAAK,IAAI,OAAO,KAAK,cAAc,KAAK,KAAK;;AAEjD,eAAK,QAAQC,OAAM;AACnB,eAAK,eAAe,KAAK;mBAClB,KAAK,kBAAkB,MAAMD,WAAU,KAAK;AACnD,eAAK,QAAQC,OAAM;;MAE3B;MAIQ,0BAA0B,GAAS;AACvC,cAAM,QAAQ,KAAK,kBAAkB,KAAK,gBAAgB;AAC1D,cAAM,UAAU,QAEV,kBAAkB,CAAC,KAElB,IAAI,QAAU,KAAK,gBAAgB,KAAK;AAE/C,YAAI,CAAC,SAAS;AACV,eAAK,YAAY;mBACV,CAAC,OAAO;AACf,eAAK;AACL;;AAGJ,aAAK,gBAAgB;AACrB,aAAK,QAAQA,OAAM;AACnB,aAAK,eAAe,CAAC;MACzB;MAGQ,kBAAkB,GAAS;AAC/B,YAAI,KAAK,kBAAkB,KAAK,gBAAgB,QAAQ;AACpD,cAAI,MAAMD,WAAU,MAAMD,cAAa,CAAC,GAAG;AACvC,kBAAM,YAAY,KAAK,QAAQ,KAAK,gBAAgB;AAEpD,gBAAI,KAAK,eAAe,WAAW;AAE/B,oBAAM,cAAc,KAAK;AACzB,mBAAK,QAAQ;AACb,mBAAK,IAAI,OAAO,KAAK,cAAc,SAAS;AAC5C,mBAAK,QAAQ;;AAGjB,iBAAK,YAAY;AACjB,iBAAK,eAAe,YAAY;AAChC,iBAAK,sBAAsB,CAAC;AAC5B;;AAGJ,eAAK,gBAAgB;;AAGzB,aAAK,IAAI,QAAU,KAAK,gBAAgB,KAAK,gBAAgB;AACzD,eAAK,iBAAiB;mBACf,KAAK,kBAAkB,GAAG;AACjC,cAAI,KAAK,oBAAoB,UAAU,UAAU;AAE7C,gBAAI,KAAK,kBAAkB,MAAMC,WAAU,KAAK;AAC5C,mBAAK,QAAQC,OAAM;;qBAEhB,KAAK,cAAcD,WAAU,EAAE,GAAG;AAEzC,iBAAK,gBAAgB;;eAEtB;AAEH,eAAK,gBAAgB,OAAO,MAAMA,WAAU,EAAE;;MAEtD;MAEQ,mBAAmB,GAAS;AAChC,YAAI,MAAM,UAAU,MAAM,KAAK,gBAAgB;AAC3C,cAAI,EAAE,KAAK,kBAAkB,UAAU,MAAM,QAAQ;AACjD,iBAAK,QAAQC,OAAM;AACnB,iBAAK,kBAAkB,UAAU;AACjC,iBAAK,gBAAgB;AACrB,iBAAK,eAAe,KAAK,QAAQ;;eAElC;AACH,eAAK,gBAAgB;AACrB,eAAK,QAAQA,OAAM;AACnB,eAAK,mBAAmB,CAAC;;MAEjC;MAQQ,cAAc,GAAS;AAC3B,eAAO,EAAE,KAAK,QAAQ,KAAK,OAAO,SAAS,KAAK,QAAQ;AACpD,cAAI,KAAK,OAAO,WAAW,KAAK,QAAQ,KAAK,MAAM,MAAM,GAAG;AACxD,mBAAO;;;AAUf,aAAK,QAAQ,KAAK,OAAO,SAAS,KAAK,SAAS;AAEhD,eAAO;MACX;MAUQ,mBAAmB,GAAS;AAChC,YAAI,MAAM,KAAK,gBAAgB,KAAK,gBAAgB;AAChD,cAAI,EAAE,KAAK,kBAAkB,KAAK,gBAAgB,QAAQ;AACtD,gBAAI,KAAK,oBAAoB,UAAU,UAAU;AAC7C,mBAAK,IAAI,QAAQ,KAAK,cAAc,KAAK,OAAO,CAAC;mBAC9C;AACH,mBAAK,IAAI,UAAU,KAAK,cAAc,KAAK,OAAO,CAAC;;AAGvD,iBAAK,gBAAgB;AACrB,iBAAK,eAAe,KAAK,QAAQ;AACjC,iBAAK,QAAQA,OAAM;;mBAEhB,KAAK,kBAAkB,GAAG;AAEjC,cAAI,KAAK,cAAc,KAAK,gBAAgB,EAAE,GAAG;AAC7C,iBAAK,gBAAgB;;mBAElB,MAAM,KAAK,gBAAgB,KAAK,gBAAgB,IAAI;AAE3D,eAAK,gBAAgB;;MAE7B;MAQQ,eAAe,GAAS;AAC5B,eAAO,KAAK,UAAU,CAAC,kBAAkB,CAAC,IAAI,aAAa,CAAC;MAChE;MAEQ,aAAa,UAAsB,QAAc;AACrD,aAAK,YAAY;AACjB,aAAK,kBAAkB;AACvB,aAAK,gBAAgB;AACrB,aAAK,QAAQA,OAAM;MACvB;MAEQ,mBAAmB,GAAS;AAChC,YAAI,MAAMD,WAAU,iBAAiB;AACjC,eAAK,QAAQC,OAAM;AACnB,eAAK,eAAe,KAAK,QAAQ;mBAC1B,MAAMD,WAAU,cAAc;AACrC,eAAK,QAAQC,OAAM;AACnB,eAAK,eAAe,KAAK,QAAQ;mBAC1B,KAAK,eAAe,CAAC,GAAG;AAC/B,gBAAM,QAAQ,IAAI;AAClB,eAAK,eAAe,KAAK;AACzB,cAAI,CAAC,KAAK,WAAW,UAAU,UAAU,SAAS,IAAI;AAClD,iBAAK,aAAa,UAAU,UAAU,CAAC;iBACpC;AACH,iBAAK,QACD,CAAC,KAAK,WAAW,UAAU,UAAU,UAAU,KACzCA,OAAM,iBACNA,OAAM;;mBAEb,MAAMD,WAAU,OAAO;AAC9B,eAAK,QAAQC,OAAM;eAChB;AACH,eAAK,QAAQA,OAAM;AACnB,eAAK,UAAU,CAAC;;MAExB;MACQ,eAAe,GAAS;AAC5B,YAAI,kBAAkB,CAAC,GAAG;AACtB,eAAK,IAAI,cAAc,KAAK,cAAc,KAAK,KAAK;AACpD,eAAK,eAAe;AACpB,eAAK,QAAQA,OAAM;AACnB,eAAK,yBAAyB,CAAC;;MAEvC;MACQ,0BAA0B,GAAS;AACvC,YAAIF,cAAa,CAAC,GAAG;mBAEV,MAAMC,WAAU,IAAI;AAC3B,eAAK,QAAQC,OAAM;eAChB;AACH,eAAK,QAAQ,KAAK,eAAe,CAAC,IAC5BA,OAAM,mBACNA,OAAM;AACZ,eAAK,eAAe,KAAK;;MAEjC;MACQ,sBAAsB,GAAS;AACnC,YAAI,MAAMD,WAAU,MAAMD,cAAa,CAAC,GAAG;AACvC,eAAK,IAAI,WAAW,KAAK,cAAc,KAAK,KAAK;AACjD,eAAK,eAAe;AACpB,eAAK,QAAQE,OAAM;AACnB,eAAK,yBAAyB,CAAC;;MAEvC;MACQ,yBAAyB,GAAS;AAEtC,YAAI,MAAMD,WAAU,MAAM,KAAK,cAAcA,WAAU,EAAE,GAAG;AACxD,eAAK,QAAQC,OAAM;AACnB,eAAK,eAAe,KAAK,QAAQ;;MAEzC;MACQ,yBAAyB,GAAS;AACtC,YAAI,MAAMD,WAAU,IAAI;AACpB,eAAK,IAAI,aAAa,KAAK,KAAK;AAChC,cAAI,KAAK,WAAW;AAChB,iBAAK,QAAQC,OAAM;AACnB,iBAAK,gBAAgB;iBAClB;AACH,iBAAK,QAAQA,OAAM;;AAEvB,eAAK,YAAY,KAAK;AACtB,eAAK,eAAe,KAAK,QAAQ;mBAC1B,MAAMD,WAAU,OAAO;AAC9B,eAAK,QAAQC,OAAM;mBACZ,CAACF,cAAa,CAAC,GAAG;AACzB,eAAK,QAAQE,OAAM;AACnB,eAAK,eAAe,KAAK;;MAEjC;MACQ,sBAAsB,GAAS;AACnC,YAAI,MAAMD,WAAU,IAAI;AACpB,eAAK,IAAI,iBAAiB,KAAK,KAAK;AACpC,eAAK,QAAQC,OAAM;AACnB,eAAK,YAAYA,OAAM;AACvB,eAAK,eAAe,KAAK,QAAQ;AACjC,eAAK,YAAY;mBACV,CAACF,cAAa,CAAC,GAAG;AACzB,eAAK,QAAQE,OAAM;AACnB,eAAK,yBAAyB,CAAC;;MAEvC;MACQ,qBAAqB,GAAS;AAClC,YAAI,MAAMD,WAAU,MAAM,kBAAkB,CAAC,GAAG;AAC5C,eAAK,IAAI,aAAa,KAAK,cAAc,KAAK,KAAK;AACnD,eAAK,eAAe;AACpB,eAAK,QAAQC,OAAM;AACnB,eAAK,wBAAwB,CAAC;;MAEtC;MACQ,wBAAwB,GAAS;AACrC,YAAI,MAAMD,WAAU,IAAI;AACpB,eAAK,QAAQC,OAAM;mBACZ,MAAMD,WAAU,SAAS,MAAMA,WAAU,IAAI;AACpD,eAAK,IAAI,YAAY,UAAU,SAAS,KAAK,KAAK;AAClD,eAAK,QAAQC,OAAM;AACnB,eAAK,yBAAyB,CAAC;mBACxB,CAACF,cAAa,CAAC,GAAG;AACzB,eAAK,IAAI,YAAY,UAAU,SAAS,KAAK,KAAK;AAClD,eAAK,QAAQE,OAAM;AACnB,eAAK,eAAe,KAAK;;MAEjC;MACQ,0BAA0B,GAAS;AACvC,YAAI,MAAMD,WAAU,aAAa;AAC7B,eAAK,QAAQC,OAAM;AACnB,eAAK,eAAe,KAAK,QAAQ;mBAC1B,MAAMD,WAAU,aAAa;AACpC,eAAK,QAAQC,OAAM;AACnB,eAAK,eAAe,KAAK,QAAQ;mBAC1B,CAACF,cAAa,CAAC,GAAG;AACzB,eAAK,eAAe,KAAK;AACzB,eAAK,QAAQE,OAAM;AACnB,eAAK,8BAA8B,CAAC;;MAE5C;MACQ,uBAAuB,GAAW,OAAa;AACnD,YACI,MAAM,SACL,CAAC,KAAK,kBAAkB,KAAK,cAAc,KAAK,GACnD;AACE,eAAK,IAAI,aAAa,KAAK,cAAc,KAAK,KAAK;AACnD,eAAK,eAAe;AACpB,eAAK,IAAI,YACL,UAAUD,WAAU,cACd,UAAU,SACV,UAAU,QAChB,KAAK,KAAK;AAEd,eAAK,QAAQC,OAAM;mBACZ,KAAK,kBAAkB,MAAMD,WAAU,KAAK;AACnD,eAAK,YAAY,KAAK;AACtB,eAAK,QAAQC,OAAM;;MAE3B;MACQ,kCAAkC,GAAS;AAC/C,aAAK,uBAAuB,GAAGD,WAAU,WAAW;MACxD;MACQ,kCAAkC,GAAS;AAC/C,aAAK,uBAAuB,GAAGA,WAAU,WAAW;MACxD;MACQ,8BAA8B,GAAS;AAC3C,YAAID,cAAa,CAAC,KAAK,MAAMC,WAAU,IAAI;AACvC,eAAK,IAAI,aAAa,KAAK,cAAc,KAAK,KAAK;AACnD,eAAK,eAAe;AACpB,eAAK,IAAI,YAAY,UAAU,UAAU,KAAK,KAAK;AACnD,eAAK,QAAQC,OAAM;AACnB,eAAK,yBAAyB,CAAC;mBACxB,KAAK,kBAAkB,MAAMD,WAAU,KAAK;AACnD,eAAK,YAAY,KAAK;AACtB,eAAK,QAAQC,OAAM;;MAE3B;MACQ,uBAAuB,GAAS;AACpC,YAAI,MAAMD,WAAU,sBAAsB;AACtC,eAAK,QAAQC,OAAM;AACnB,eAAK,gBAAgB;eAClB;AACH,eAAK,QACD,MAAMD,WAAU,OACVC,OAAM,gBACNA,OAAM;;MAExB;MACQ,mBAAmB,GAAS;AAChC,YAAI,MAAMD,WAAU,MAAM,KAAK,cAAcA,WAAU,EAAE,GAAG;AACxD,eAAK,IAAI,cAAc,KAAK,cAAc,KAAK,KAAK;AACpD,eAAK,QAAQC,OAAM;AACnB,eAAK,eAAe,KAAK,QAAQ;;MAEzC;MACQ,6BAA6B,GAAS;AAC1C,YAAI,MAAMD,WAAU,MAAM,KAAK,cAAcA,WAAU,EAAE,GAAG;AACxD,eAAK,IAAI,wBAAwB,KAAK,cAAc,KAAK,KAAK;AAC9D,eAAK,QAAQC,OAAM;AACnB,eAAK,eAAe,KAAK,QAAQ;;MAEzC;MACQ,mBAAmB,GAAS;AAChC,YAAI,MAAMD,WAAU,MAAM;AACtB,eAAK,QAAQC,OAAM;AACnB,eAAK,kBAAkB,UAAU;AAEjC,eAAK,gBAAgB;AACrB,eAAK,eAAe,KAAK,QAAQ;eAC9B;AACH,eAAK,QAAQA,OAAM;;MAE3B;MACQ,sBAAsB,GAAS;AACnC,YAAI,MAAMD,WAAU,MAAM,KAAK,cAAcA,WAAU,EAAE,GAAG;AACxD,eAAK,IAAI,UAAU,KAAK,cAAc,KAAK,OAAO,CAAC;AACnD,eAAK,QAAQC,OAAM;AACnB,eAAK,eAAe,KAAK,QAAQ;;MAEzC;MACQ,oBAAoB,GAAS;AACjC,cAAM,QAAQ,IAAI;AAClB,YAAI,UAAU,UAAU,UAAU,IAAI;AAClC,eAAK,aAAa,UAAU,WAAW,CAAC;mBACjC,UAAU,UAAU,SAAS,IAAI;AACxC,eAAK,aAAa,UAAU,UAAU,CAAC;eACpC;AACH,eAAK,QAAQA,OAAM;AACnB,eAAK,eAAe,CAAC;;MAE7B;MAQQ,kBAAkB,GAAS;AAE/B,aAAK,eAAe;AACpB,aAAK,eAAe;AAEpB,YAAI,MAAMD,WAAU,KAAK;AACrB,eAAK,QAAQC,OAAM;mBACZ,MAAMD,WAAU,KAAK;eAEzB;AACH,eAAK,YAAY;AACjB,eAAK,cAAc,KAAK,WAAW;AACnC,eAAK,QAAQC,OAAM;AACnB,eAAK,mBAAmB,CAAC;;MAEjC;MAEQ,mBAAmB,GAAS;AAChC,aAAK,gBAAgB;AAErB,aAAK,YAAY,gBACb,KAAK,YACL,KAAK,aACL,KAAK,YAAY,GACjB,CAAC;AAGL,YAAI,KAAK,YAAY,GAAG;AACpB,eAAK,gBAAe;AACpB,eAAK;AACL;;AAGJ,aAAK,cAAc,KAAK,WAAW,KAAK;AAExC,cAAM,SAAS,KAAK,cAAc,aAAa;AAG/C,YAAI,QAAQ;AAER,gBAAM,eAAe,UAAU,MAAM;AAGrC,cAAI,CAAC,KAAK,kBAAiB,KAAM,MAAMD,WAAU,MAAM;AACnD,iBAAK,aAAa;iBACf;AAEH,kBAAM,cAAc,KAAK,QAAQ,KAAK,eAAe;AAErD,gBAAI,cAAc,KAAK,cAAc;AACjC,mBAAK,YAAY,KAAK,cAAc,WAAW;;AAInD,iBAAK,eAAe,KAAK;AACzB,iBAAK,aAAa;AAClB,iBAAK,eAAe;AACpB,iBAAK,eAAe,KAAK,QAAQ;AAEjC,gBAAI,gBAAgB,GAAG;AACnB,mBAAK,gBAAe;;;;MAIpC;MAEQ,kBAAe;AACnB,aAAK,QAAQ,KAAK;AAElB,YAAI,KAAK,iBAAiB,GAAG;AACzB;;AAGJ,cAAM,eACD,KAAK,WAAW,KAAK,gBAAgB,aAAa,iBACnD;AAEJ,gBAAQ,aAAa;UACjB,KAAK;AACD,iBAAK,cACD,KAAK,WAAW,KAAK,gBACjB,CAAC,aAAa,YAAY;AAElC;UACJ,KAAK;AACD,iBAAK,cAAc,KAAK,WAAW,KAAK,eAAe,EAAE;AACzD;UACJ,KAAK,GAAG;AACJ,iBAAK,cAAc,KAAK,WAAW,KAAK,eAAe,EAAE;AACzD,iBAAK,cAAc,KAAK,WAAW,KAAK,eAAe,EAAE;;;MAGrE;MAEQ,yBAAyB,GAAS;AACtC,aAAK,IAAI,QAAUA,WAAU,QAAQ;AACjC,eAAK;AACL,eAAK,QAAQC,OAAM;eAChB;AACH,eAAK,QAAQA,OAAM;AACnB,eAAK,qBAAqB,CAAC;;MAEnC;MAEQ,kBAAkB,QAAe;AACrC,cAAM,cAAc,KAAK,QAAQ,KAAK,eAAe;AACrD,cAAM,cACF,cAAc,IAAI,OAAO,KAAK,UAAUA,OAAM,WAAW;AAE7D,YAAI,gBAAgB,KAAK,OAAO;AAE5B,cAAI,cAAc,KAAK,cAAc;AACjC,iBAAK,YAAY,KAAK,cAAc,WAAW;;AAGnD,eAAK,eAAe,KAAK,QAAQ,OAAO,MAAM;AAC9C,eAAK,cAAc,iBAAiB,KAAK,YAAY,CAAC;;AAE1D,aAAK,QAAQ,KAAK;MACtB;MACQ,qBAAqB,GAAS;AAClC,YAAI,MAAMD,WAAU,MAAM;AACtB,eAAK,kBAAkB,IAAI;mBACpB,SAAS,CAAC,GAAG;AACpB,eAAK,eAAe,KAAK,eAAe,MAAM,IAAIA,WAAU;AAC5D,eAAK;eACF;AACH,cAAI,KAAK,kBAAiB,GAAI;AAC1B,iBAAK,kBAAkB,KAAK;iBACzB;AACH,iBAAK,QAAQ,KAAK;;AAEtB,eAAK;;MAEb;MACQ,iBAAiB,GAAS;AAC9B,YAAI,MAAMA,WAAU,MAAM;AACtB,eAAK,kBAAkB,IAAI;mBACpB,SAAS,CAAC,GAAG;AACpB,eAAK,eAAe,KAAK,eAAe,MAAM,IAAIA,WAAU;AAC5D,eAAK;mBACE,WAAW,CAAC,GAAG;AACtB,eAAK,eACD,KAAK,eAAe,OAAO,IAAI,MAAQA,WAAU,SAAS;AAC9D,eAAK;eACF;AACH,cAAI,KAAK,kBAAiB,GAAI;AAC1B,iBAAK,kBAAkB,KAAK;iBACzB;AACH,iBAAK,QAAQ,KAAK;;AAEtB,eAAK;;MAEb;MAEQ,oBAAiB;AACrB,eACI,CAAC,KAAK,YACL,KAAK,cAAcC,OAAM,QACtB,KAAK,cAAcA,OAAM;MAErC;MAKQ,UAAO;AAEX,YAAI,KAAK,WAAW,KAAK,iBAAiB,KAAK,OAAO;AAClD,cACI,KAAK,UAAUA,OAAM,QACpB,KAAK,UAAUA,OAAM,gBAAgB,KAAK,kBAAkB,GAC/D;AACE,iBAAK,IAAI,OAAO,KAAK,cAAc,KAAK,KAAK;AAC7C,iBAAK,eAAe,KAAK;qBAEzB,KAAK,UAAUA,OAAM,sBACrB,KAAK,UAAUA,OAAM,sBACrB,KAAK,UAAUA,OAAM,oBACvB;AACE,iBAAK,IAAI,aAAa,KAAK,cAAc,KAAK,KAAK;AACnD,iBAAK,eAAe,KAAK;;;MAGrC;MAEQ,iBAAc;AAClB,eAAO,KAAK,QAAQ,KAAK,OAAO,SAAS,KAAK,UAAU,KAAK;MACjE;MAOQ,QAAK;AACT,eAAO,KAAK,eAAc,GAAI;AAC1B,gBAAM,IAAI,KAAK,OAAO,WAAW,KAAK,QAAQ,KAAK,MAAM;AACzD,cAAI,KAAK,UAAUA,OAAM,MAAM;AAC3B,iBAAK,UAAU,CAAC;qBACT,KAAK,UAAUA,OAAM,sBAAsB;AAClD,iBAAK,0BAA0B,CAAC;qBACzB,KAAK,UAAUA,OAAM,cAAc;AAC1C,iBAAK,kBAAkB,CAAC;qBACjB,KAAK,UAAUA,OAAM,eAAe;AAC3C,iBAAK,mBAAmB,CAAC;qBAClB,KAAK,UAAUA,OAAM,oBAAoB;AAChD,iBAAK,kCAAkC,CAAC;qBACjC,KAAK,UAAUA,OAAM,iBAAiB;AAC7C,iBAAK,qBAAqB,CAAC;qBACpB,KAAK,UAAUA,OAAM,eAAe;AAC3C,iBAAK,mBAAmB,CAAC;qBAClB,KAAK,UAAUA,OAAM,kBAAkB;AAC9C,iBAAK,sBAAsB,CAAC;qBACrB,KAAK,UAAUA,OAAM,qBAAqB;AACjD,iBAAK,yBAAyB,CAAC;qBACxB,KAAK,UAAUA,OAAM,WAAW;AACvC,iBAAK,eAAe,CAAC;qBACd,KAAK,UAAUA,OAAM,kBAAkB;AAC9C,iBAAK,sBAAsB,CAAC;qBACrB,KAAK,UAAUA,OAAM,eAAe;AAC3C,iBAAK,mBAAmB,CAAC;qBAClB,KAAK,UAAUA,OAAM,oBAAoB;AAChD,iBAAK,wBAAwB,CAAC;qBACvB,KAAK,UAAUA,OAAM,oBAAoB;AAChD,iBAAK,kCAAkC,CAAC;qBACjC,KAAK,UAAUA,OAAM,sBAAsB;AAClD,iBAAK,0BAA0B,CAAC;qBACzB,KAAK,UAAUA,OAAM,sBAAsB;AAClD,iBAAK,0BAA0B,CAAC;qBACzB,KAAK,UAAUA,OAAM,qBAAqB;AACjD,iBAAK,yBAAyB,CAAC;qBACxB,KAAK,UAAUA,OAAM,gBAAgB;AAC5C,iBAAK,oBAAoB,CAAC;qBACnB,KAAK,UAAUA,OAAM,oBAAoB;AAChD,iBAAK,8BAA8B,CAAC;qBAC7B,KAAK,UAAUA,OAAM,kBAAkB;AAC9C,iBAAK,sBAAsB,CAAC;qBACrB,KAAK,UAAUA,OAAM,eAAe;AAC3C,iBAAK,mBAAmB,CAAC;qBAClB,KAAK,UAAUA,OAAM,mBAAmB;AAC/C,iBAAK,uBAAuB,CAAC;qBACtB,KAAK,UAAUA,OAAM,eAAe;AAC3C,iBAAK,mBAAmB,CAAC;qBAClB,KAAK,UAAUA,OAAM,yBAAyB;AACrD,iBAAK,6BAA6B,CAAC;qBAC5B,KAAK,UAAUA,OAAM,eAAe;AAC3C,iBAAK,mBAAmB,CAAC;qBAClB,KAAK,UAAUA,OAAM,cAAc;AAC1C,iBAAK,kBAAkB,CAAC;qBACjB,KAAK,UAAUA,OAAM,aAAa;AACzC,iBAAK,iBAAiB,CAAC;qBAChB,KAAK,UAAUA,OAAM,iBAAiB;AAC7C,iBAAK,qBAAqB,CAAC;iBACxB;AAEH,iBAAK,yBAAyB,CAAC;;AAEnC,eAAK;;AAET,aAAK,QAAO;MAChB;MAEQ,SAAM;AACV,YAAI,KAAK,UAAUA,OAAM,eAAe;AACpC,eAAK,gBAAe;;AAIxB,YAAI,KAAK,eAAe,KAAK,OAAO;AAChC,eAAK,mBAAkB;;AAE3B,aAAK,IAAI,MAAK;MAClB;MAGQ,qBAAkB;AACtB,cAAM,WAAW,KAAK,OAAO,SAAS,KAAK;AAC3C,YAAI,KAAK,UAAUA,OAAM,eAAe;AACpC,cAAI,KAAK,oBAAoB,UAAU,UAAU;AAC7C,iBAAK,IAAI,QAAQ,KAAK,cAAc,UAAU,CAAC;iBAC5C;AACH,iBAAK,IAAI,UAAU,KAAK,cAAc,UAAU,CAAC;;mBAGrD,KAAK,UAAUA,OAAM,mBACrB,KAAK,kBAAiB,GACxB;AACE,eAAK,kBAAkB,KAAK;mBAG5B,KAAK,UAAUA,OAAM,eACrB,KAAK,kBAAiB,GACxB;AACE,eAAK,kBAAkB,KAAK;mBAG5B,KAAK,UAAUA,OAAM,aACrB,KAAK,UAAUA,OAAM,uBACrB,KAAK,UAAUA,OAAM,wBACrB,KAAK,UAAUA,OAAM,sBACrB,KAAK,UAAUA,OAAM,mBACrB,KAAK,UAAUA,OAAM,sBACrB,KAAK,UAAUA,OAAM,sBACrB,KAAK,UAAUA,OAAM,sBACrB,KAAK,UAAUA,OAAM,kBACvB;eAKK;AACH,eAAK,IAAI,OAAO,KAAK,cAAc,QAAQ;;MAEnD;MAEQ,YAAY,OAAe,UAAgB;AAC/C,YACI,KAAK,cAAcA,OAAM,QACzB,KAAK,cAAcA,OAAM,cAC3B;AACE,eAAK,IAAI,aAAa,OAAO,QAAQ;eAClC;AACH,eAAK,IAAI,OAAO,OAAO,QAAQ;;MAEvC;MACQ,cAAc,IAAU;AAC5B,YACI,KAAK,cAAcA,OAAM,QACzB,KAAK,cAAcA,OAAM,cAC3B;AACE,eAAK,IAAI,eAAe,EAAE;eACvB;AACH,eAAK,IAAI,aAAa,EAAE;;MAEhC;;;;;;AC77BJ,IAGM,UASA,MACA,kBACA,SACA,SAEA,kBAkDA,cAsBA,wBAEA,yBAyGA,WAEOG;AAtMb;;;AACA;AAEA,IAAM,WAAW,oBAAI,IAAI;MACrB;MACA;MACA;MACA;MACA;MACA;MACA;KACH;AACD,IAAM,OAAO,oBAAI,IAAI,CAAC,GAAG,CAAC;AAC1B,IAAM,mBAAmB,oBAAI,IAAI,CAAC,SAAS,OAAO,CAAC;AACnD,IAAM,UAAU,oBAAI,IAAI,CAAC,MAAM,IAAI,CAAC;AACpC,IAAM,UAAU,oBAAI,IAAI,CAAC,MAAM,IAAI,CAAC;AAEpC,IAAM,mBAAmB,oBAAI,IAAyB;MAClD,CAAC,MAAM,oBAAI,IAAI,CAAC,MAAM,MAAM,IAAI,CAAC,CAAC;MAClC,CAAC,MAAM,oBAAI,IAAI,CAAC,IAAI,CAAC,CAAC;MACtB,CAAC,MAAM,oBAAI,IAAI,CAAC,SAAS,MAAM,IAAI,CAAC,CAAC;MACrC,CAAC,QAAQ,oBAAI,IAAI,CAAC,QAAQ,QAAQ,QAAQ,CAAC,CAAC;MAC5C,CAAC,MAAM,oBAAI,IAAI,CAAC,IAAI,CAAC,CAAC;MACtB,CAAC,KAAK,IAAI;MACV,CAAC,MAAM,IAAI;MACX,CAAC,MAAM,IAAI;MACX,CAAC,MAAM,IAAI;MACX,CAAC,MAAM,IAAI;MACX,CAAC,MAAM,IAAI;MACX,CAAC,MAAM,IAAI;MACX,CAAC,UAAU,QAAQ;MACnB,CAAC,SAAS,QAAQ;MAClB,CAAC,UAAU,QAAQ;MACnB,CAAC,UAAU,QAAQ;MACnB,CAAC,YAAY,QAAQ;MACrB,CAAC,YAAY,QAAQ;MACrB,CAAC,UAAU,oBAAI,IAAI,CAAC,QAAQ,CAAC,CAAC;MAC9B,CAAC,YAAY,oBAAI,IAAI,CAAC,YAAY,QAAQ,CAAC,CAAC;MAC5C,CAAC,MAAM,OAAO;MACd,CAAC,MAAM,OAAO;MACd,CAAC,WAAW,IAAI;MAChB,CAAC,WAAW,IAAI;MAChB,CAAC,SAAS,IAAI;MACd,CAAC,cAAc,IAAI;MACnB,CAAC,WAAW,IAAI;MAChB,CAAC,OAAO,IAAI;MACZ,CAAC,MAAM,IAAI;MACX,CAAC,YAAY,IAAI;MACjB,CAAC,cAAc,IAAI;MACnB,CAAC,UAAU,IAAI;MACf,CAAC,UAAU,IAAI;MACf,CAAC,QAAQ,IAAI;MACb,CAAC,UAAU,IAAI;MACf,CAAC,MAAM,IAAI;MACX,CAAC,QAAQ,IAAI;MACb,CAAC,OAAO,IAAI;MACZ,CAAC,MAAM,IAAI;MACX,CAAC,OAAO,IAAI;MACZ,CAAC,WAAW,IAAI;MAChB,CAAC,SAAS,IAAI;MACd,CAAC,MAAM,IAAI;MACX,CAAC,MAAM,OAAO;MACd,CAAC,MAAM,OAAO;MACd,CAAC,SAAS,gBAAgB;MAC1B,CAAC,SAAS,gBAAgB;KAC7B;AAED,IAAM,eAAe,oBAAI,IAAI;MACzB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;KACH;AAED,IAAM,yBAAyB,oBAAI,IAAI,CAAC,QAAQ,KAAK,CAAC;AAEtD,IAAM,0BAA0B,oBAAI,IAAI;MACpC;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;KACH;AA+FD,IAAM,YAAY;AAEZ,IAAOA,UAAP,MAAa;MA6Bf,YACI,KACiB,UAAyB,CAAA,GAAE;;AAA3B,aAAA,UAAA;AA7Bd,aAAA,aAAa;AAEb,aAAA,WAAW;AAKV,aAAA,eAAe;AAEf,aAAA,UAAU;AACV,aAAA,aAAa;AACb,aAAA,cAAc;AACd,aAAA,UAA4C;AAC5C,aAAA,QAAkB,CAAA;AACT,aAAA,iBAA4B,CAAA;AAM5B,aAAA,UAAoB,CAAA;AAC7B,aAAA,eAAe;AAEf,aAAA,aAAa;AAEb,aAAA,QAAQ;AAMZ,aAAK,MAAM,QAAG,QAAH,QAAG,SAAH,MAAO,CAAA;AAClB,aAAK,qBAAoBC,MAAA,QAAQ,mBAAa,QAAAA,QAAA,SAAAA,MAAI,CAAC,QAAQ;AAC3D,aAAK,2BACD,KAAA,QAAQ,6BAAuB,QAAA,OAAA,SAAA,KAAI,CAAC,QAAQ;AAChD,aAAK,YAAY,MAAK,KAAA,QAAQ,eAAS,QAAA,OAAA,SAAA,KAAIC,YACvC,KAAK,SACL,IAAI;AAER,SAAA,MAAA,KAAA,KAAK,KAAI,kBAAY,QAAA,OAAA,SAAA,SAAA,GAAA,KAAA,IAAG,IAAI;MAChC;MAKA,OAAO,OAAe,UAAgB;;AAClC,cAAMC,QAAO,KAAK,SAAS,OAAO,QAAQ;AAC1C,aAAK,WAAW,WAAW;AAC3B,SAAA,MAAAF,MAAA,KAAK,KAAI,YAAM,QAAA,OAAA,SAAA,SAAA,GAAA,KAAAA,KAAGE,KAAI;AACtB,aAAK,aAAa;MACtB;MAGA,aAAa,IAAU;;AAKnB,cAAM,MAAM,KAAK,UAAU,gBAAe;AAC1C,aAAK,WAAW,MAAM;AACtB,SAAA,MAAAF,MAAA,KAAK,KAAI,YAAM,QAAA,OAAA,SAAA,SAAA,GAAA,KAAAA,KAAG,cAAc,EAAE,CAAC;AACnC,aAAK,aAAa;MACtB;MAEU,cAAc,MAAY;AAChC,eAAO,CAAC,KAAK,QAAQ,WAAW,aAAa,IAAI,IAAI;MACzD;MAGA,cAAc,OAAe,UAAgB;AACzC,aAAK,WAAW;AAEhB,YAAI,OAAO,KAAK,SAAS,OAAO,QAAQ;AAExC,YAAI,KAAK,mBAAmB;AACxB,iBAAO,KAAK,YAAW;;AAG3B,aAAK,YAAY,IAAI;MACzB;MAEQ,YAAY,MAAY;;AAC5B,aAAK,eAAe,KAAK;AACzB,aAAK,UAAU;AAEf,cAAM,eACF,CAAC,KAAK,QAAQ,WAAW,iBAAiB,IAAI,IAAI;AAEtD,YAAI,cAAc;AACd,iBACI,KAAK,MAAM,SAAS,KACpB,aAAa,IAAI,KAAK,MAAM,KAAK,MAAM,SAAS,EAAE,GACpD;AACE,kBAAM,KAAK,KAAK,MAAM,IAAG;AACzB,aAAA,MAAAA,MAAA,KAAK,KAAI,gBAAU,QAAA,OAAA,SAAA,SAAA,GAAA,KAAAA,KAAG,IAAI,IAAI;;;AAGtC,YAAI,CAAC,KAAK,cAAc,IAAI,GAAG;AAC3B,eAAK,MAAM,KAAK,IAAI;AACpB,cAAI,uBAAuB,IAAI,IAAI,GAAG;AAClC,iBAAK,eAAe,KAAK,IAAI;qBACtB,wBAAwB,IAAI,IAAI,GAAG;AAC1C,iBAAK,eAAe,KAAK,KAAK;;;AAGtC,SAAA,MAAA,KAAA,KAAK,KAAI,mBAAa,QAAA,OAAA,SAAA,SAAA,GAAA,KAAA,IAAG,IAAI;AAC7B,YAAI,KAAK,IAAI;AAAW,eAAK,UAAU,CAAA;MAC3C;MAEQ,WAAW,WAAkB;;AACjC,aAAK,aAAa,KAAK;AAEvB,YAAI,KAAK,SAAS;AACd,WAAA,MAAAA,MAAA,KAAK,KAAI,eAAS,QAAA,OAAA,SAAA,SAAA,GAAA,KAAAA,KAAG,KAAK,SAAS,KAAK,SAAS,SAAS;AAC1D,eAAK,UAAU;;AAEnB,YAAI,KAAK,IAAI,cAAc,KAAK,cAAc,KAAK,OAAO,GAAG;AACzD,eAAK,IAAI,WAAW,KAAK,SAAS,IAAI;;AAG1C,aAAK,UAAU;MACnB;MAGA,aAAa,UAAgB;AACzB,aAAK,WAAW;AAChB,aAAK,WAAW,KAAK;AAGrB,aAAK,aAAa,WAAW;MACjC;MAGA,WAAW,OAAe,UAAgB;;AACtC,aAAK,WAAW;AAEhB,YAAI,OAAO,KAAK,SAAS,OAAO,QAAQ;AAExC,YAAI,KAAK,mBAAmB;AACxB,iBAAO,KAAK,YAAW;;AAG3B,YACI,uBAAuB,IAAI,IAAI,KAC/B,wBAAwB,IAAI,IAAI,GAClC;AACE,eAAK,eAAe,IAAG;;AAG3B,YAAI,CAAC,KAAK,cAAc,IAAI,GAAG;AAC3B,gBAAM,MAAM,KAAK,MAAM,YAAY,IAAI;AACvC,cAAI,QAAQ,IAAI;AACZ,gBAAI,KAAK,IAAI,YAAY;AACrB,kBAAI,QAAQ,KAAK,MAAM,SAAS;AAChC,qBAAO,SAAS;AAEZ,qBAAK,IAAI,WAAW,KAAK,MAAM,IAAG,GAAK,UAAU,CAAC;;;AAEnD,mBAAK,MAAM,SAAS;qBACpB,CAAC,KAAK,QAAQ,WAAW,SAAS,KAAK;AAE9C,iBAAK,YAAY,GAAG;AACpB,iBAAK,gBAAgB,IAAI;;mBAEtB,CAAC,KAAK,QAAQ,WAAW,SAAS,MAAM;AAE/C,WAAA,MAAAA,MAAA,KAAK,KAAI,mBAAa,QAAA,OAAA,SAAA,SAAA,GAAA,KAAAA,KAAG,IAAI;AAC7B,WAAA,MAAA,KAAA,KAAK,KAAI,eAAS,QAAA,OAAA,SAAA,SAAA,GAAA,KAAA,IAAG,MAAM,CAAA,GAAI,IAAI;AACnC,WAAA,MAAA,KAAA,KAAK,KAAI,gBAAU,QAAA,OAAA,SAAA,SAAA,GAAA,KAAA,IAAG,MAAM,KAAK;;AAIrC,aAAK,aAAa,WAAW;MACjC;MAGA,iBAAiB,UAAgB;AAC7B,aAAK,WAAW;AAChB,YACI,KAAK,QAAQ,WACb,KAAK,QAAQ,wBACb,KAAK,eAAe,KAAK,eAAe,SAAS,IACnD;AACE,eAAK,gBAAgB,KAAK;AAG1B,eAAK,aAAa,WAAW;eAC1B;AAEH,eAAK,aAAa,QAAQ;;MAElC;MAEQ,gBAAgB,eAAsB;;AAC1C,cAAM,OAAO,KAAK;AAClB,aAAK,WAAW,aAAa;AAG7B,YAAI,KAAK,MAAM,KAAK,MAAM,SAAS,OAAO,MAAM;AAE5C,WAAA,MAAAA,MAAA,KAAK,KAAI,gBAAU,QAAA,OAAA,SAAA,SAAA,GAAA,KAAAA,KAAG,MAAM,CAAC,aAAa;AAC1C,eAAK,MAAM,IAAG;;MAEtB;MAGA,aAAa,OAAe,UAAgB;AACxC,aAAK,aAAa;AAClB,cAAM,OAAO,KAAK,SAAS,OAAO,QAAQ;AAE1C,aAAK,aAAa,KAAK,0BACjB,KAAK,YAAW,IAChB;MACV;MAGA,aAAa,OAAe,UAAgB;AACxC,aAAK,eAAe,KAAK,SAAS,OAAO,QAAQ;MACrD;MAGA,eAAe,IAAU;AACrB,aAAK,eAAe,cAAc,EAAE;MACxC;MAGA,YAAY,OAAkB,UAAgB;;AAC1C,aAAK,WAAW;AAEhB,SAAA,MAAAA,MAAA,KAAK,KAAI,iBAAW,QAAA,OAAA,SAAA,SAAA,GAAA,KAAAA,KAChB,KAAK,YACL,KAAK,aACL,UAAU,UAAU,SACd,MACA,UAAU,UAAU,SACpB,MACA,UAAU,UAAU,UACpB,SACA,IAAI;AAGd,YACI,KAAK,WACL,CAAC,OAAO,UAAU,eAAe,KAAK,KAAK,SAAS,KAAK,UAAU,GACrE;AACE,eAAK,QAAQ,KAAK,cAAc,KAAK;;AAEzC,aAAK,cAAc;MACvB;MAEQ,mBAAmB,OAAa;AACpC,cAAM,MAAM,MAAM,OAAO,SAAS;AAClC,YAAI,OAAO,MAAM,IAAI,QAAQ,MAAM,OAAO,GAAG,GAAG;AAEhD,YAAI,KAAK,mBAAmB;AACxB,iBAAO,KAAK,YAAW;;AAG3B,eAAO;MACX;MAGA,cAAc,OAAe,UAAgB;AACzC,aAAK,WAAW;AAChB,cAAM,QAAQ,KAAK,SAAS,OAAO,QAAQ;AAE3C,YAAI,KAAK,IAAI,yBAAyB;AAClC,gBAAM,OAAO,KAAK,mBAAmB,KAAK;AAC1C,eAAK,IAAI,wBAAwB,IAAI,QAAQ,IAAI,OAAO;;AAI5D,aAAK,aAAa,WAAW;MACjC;MAGA,wBAAwB,OAAe,UAAgB;AACnD,aAAK,WAAW;AAChB,cAAM,QAAQ,KAAK,SAAS,OAAO,QAAQ;AAE3C,YAAI,KAAK,IAAI,yBAAyB;AAClC,gBAAM,OAAO,KAAK,mBAAmB,KAAK;AAC1C,eAAK,IAAI,wBAAwB,IAAI,QAAQ,IAAI,OAAO;;AAI5D,aAAK,aAAa,WAAW;MACjC;MAGA,UAAU,OAAe,UAAkB,QAAc;;AACrD,aAAK,WAAW;AAEhB,SAAA,MAAAA,MAAA,KAAK,KAAI,eAAS,QAAA,OAAA,SAAA,SAAA,GAAA,KAAAA,KAAG,KAAK,SAAS,OAAO,WAAW,MAAM,CAAC;AAC5D,SAAA,MAAA,KAAA,KAAK,KAAI,kBAAY,QAAA,OAAA,SAAA,SAAA,GAAA,KAAA,EAAA;AAGrB,aAAK,aAAa,WAAW;MACjC;MAGA,QAAQ,OAAe,UAAkB,QAAc;;AACnD,aAAK,WAAW;AAChB,cAAM,QAAQ,KAAK,SAAS,OAAO,WAAW,MAAM;AAEpD,YAAI,KAAK,QAAQ,WAAW,KAAK,QAAQ,gBAAgB;AACrD,WAAA,MAAAA,MAAA,KAAK,KAAI,kBAAY,QAAA,OAAA,SAAA,SAAA,GAAA,KAAAA,GAAA;AACrB,WAAA,MAAA,KAAA,KAAK,KAAI,YAAM,QAAA,OAAA,SAAA,SAAA,GAAA,KAAA,IAAG,KAAK;AACvB,WAAA,MAAA,KAAA,KAAK,KAAI,gBAAU,QAAA,OAAA,SAAA,SAAA,GAAA,KAAA,EAAA;eAChB;AACH,WAAA,MAAA,KAAA,KAAK,KAAI,eAAS,QAAA,OAAA,SAAA,SAAA,GAAA,KAAA,IAAG,UAAU,SAAS;AACxC,WAAA,MAAA,KAAA,KAAK,KAAI,kBAAY,QAAA,OAAA,SAAA,SAAA,GAAA,KAAA,EAAA;;AAIzB,aAAK,aAAa,WAAW;MACjC;MAGA,QAAK;;AACD,YAAI,KAAK,IAAI,YAAY;AAErB,eAAK,WAAW,KAAK;AACrB,mBACQ,IAAI,KAAK,MAAM,QACnB,IAAI,GACJ,KAAK,IAAI,WAAW,KAAK,MAAM,EAAE,IAAI,IAAI;AAC5C;;AAEL,SAAA,MAAAA,MAAA,KAAK,KAAI,WAAK,QAAA,OAAA,SAAA,SAAA,GAAA,KAAAA,GAAA;MAClB;MAKO,QAAK;;AACR,SAAA,MAAAA,MAAA,KAAK,KAAI,aAAO,QAAA,OAAA,SAAA,SAAA,GAAA,KAAAA,GAAA;AAChB,aAAK,UAAU,MAAK;AACpB,aAAK,UAAU;AACf,aAAK,aAAa;AAClB,aAAK,UAAU;AACf,aAAK,MAAM,SAAS;AACpB,aAAK,aAAa;AAClB,aAAK,WAAW;AAChB,SAAA,MAAA,KAAA,KAAK,KAAI,kBAAY,QAAA,OAAA,SAAA,SAAA,GAAA,KAAA,IAAG,IAAI;AAC5B,aAAK,QAAQ,SAAS;AACtB,aAAK,eAAe;AACpB,aAAK,aAAa;AAClB,aAAK,QAAQ;MACjB;MAQO,cAAcE,OAAY;AAC7B,aAAK,MAAK;AACV,aAAK,IAAIA,KAAI;MACjB;MAEQ,SAAS,OAAeC,MAAW;AACvC,eAAO,QAAQ,KAAK,gBAAgB,KAAK,QAAQ,GAAG,QAAQ;AACxD,eAAK,YAAW;;AAGpB,YAAIC,OAAM,KAAK,QAAQ,GAAG,MACtB,QAAQ,KAAK,cACbD,OAAM,KAAK,YAAY;AAG3B,eAAOA,OAAM,KAAK,eAAe,KAAK,QAAQ,GAAG,QAAQ;AACrD,eAAK,YAAW;AAChB,UAAAC,QAAO,KAAK,QAAQ,GAAG,MAAM,GAAGD,OAAM,KAAK,YAAY;;AAG3D,eAAOC;MACX;MAEQ,cAAW;AACf,aAAK,gBAAgB,KAAK,QAAQ,GAAG;AACrC,aAAK;AACL,aAAK,QAAQ,MAAK;MACtB;MAOO,MAAM,OAAa;;AACtB,YAAI,KAAK,OAAO;AACZ,WAAA,MAAAJ,MAAA,KAAK,KAAI,aAAO,QAAA,OAAA,SAAA,SAAA,GAAA,KAAAA,KAAG,IAAI,MAAM,sBAAsB,CAAC;AACpD;;AAGJ,aAAK,QAAQ,KAAK,KAAK;AACvB,YAAI,KAAK,UAAU,SAAS;AACxB,eAAK,UAAU,MAAM,KAAK;AAC1B,eAAK;;MAEb;MAOO,IAAI,OAAc;;AACrB,YAAI,KAAK,OAAO;AACZ,WAAA,MAAAA,MAAA,KAAK,KAAI,aAAO,QAAA,OAAA,SAAA,SAAA,GAAA,KAAAA,KAAG,MAAM,oBAAoB,CAAC;AAC9C;;AAGJ,YAAI;AAAO,eAAK,MAAM,KAAK;AAC3B,aAAK,QAAQ;AACb,aAAK,UAAU,IAAG;MACtB;MAKO,QAAK;AACR,aAAK,UAAU,MAAK;MACxB;MAKO,SAAM;AACT,aAAK,UAAU,OAAM;AAErB,eACI,KAAK,UAAU,WACf,KAAK,aAAa,KAAK,QAAQ,QACjC;AACE,eAAK,UAAU,MAAM,KAAK,QAAQ,KAAK,aAAa;;AAGxD,YAAI,KAAK;AAAO,eAAK,UAAU,IAAG;MACtC;MAQO,WAAW,OAAa;AAC3B,aAAK,MAAM,KAAK;MACpB;MAOO,KAAK,OAAc;AACtB,aAAK,IAAI,KAAK;MAClB;;;;;;AC7nBE,SAAU,cAAcK,OAAc,SAAiB;AACzD,QAAM,UAAU,IAAI,WAAW,QAAW,OAAO;AACjD,MAAIC,QAAO,SAAS,OAAO,EAAE,IAAID,KAAI;AACrC,SAAO,QAAQ;AACnB;AA3BA,IAAAE,YAAA;;;AAGA,IAAAA;AAsDA;AASA;AAGA,IAAAA;AAiBA,IAAAA;;;;;AC/EA,IAAAC,eAAA;SAAAA,cAAA;kBAAAC;EAAA,eAAAC;EAAA;cAAAC;EAAA,aAAAC;EAAA,iBAAAC;EAAA,YAAAC;EAAA;;;IAyBMC,QAoBOJ,OAWbD,cAyBeD,WAgBAG,QAeAC,YAcAC;AA9Hf,IAAAE,aAAA;;AAKA,IAAAC;AAcA,IAAAC;AACA,IAAAC;AACA;AACA,IAAAH;AACA,IAAAA;AAmCA;AAEA;AAnCA,IAAMD,SAAQ,SAAS,CAAC,SAAS,SAASK,aAAY,YACpD,QAAQ,WAAW,QAAQ,kBACvB,cAAqB,SAAS,OAAO,IACrC,gBAAgB,SAAS,SAASA,aAAY,OAAO,CAAC;AAiBrD,IAAMT,QAAO,QAAQI,QAAO,CAAC,KAAK,YACvC,QAAQ,WAAW,QAAQ,kBACvB,YAAsB,KAAK,OAAO,IAClC,iBAAiB,GAAG,CAAC;AAQ3B,IAAAL,eAAeC,MAAK,CAAA,CAAE;AAyBf,KAAM,EAAE,UAAAF,cAAa;AAgBrB,KAAM,EAAE,OAAAG,WAAU;AAelB,KAAM,EAAE,WAAAC,eAAc;AActB,KAAM,EAAE,MAAAC,UAAS;;;;;ACpIxB;;;ACDA;;;ACAA,yBAAwB;;;ACCxB;AACA;;;ADAA;;;AEAA;AACA;;;ACHAO;;;ACGA;AACA;;;ACJA;;;ACEA;AAEAC;AACA;;;ACJA;AACAC;AACAC;AACA;;;ACJA;AACA;AACA;;;ACFA;;;ACAA;AACA;AACA;AACA;AACA;;;ACJA;AACA;AACA;;;ACFA;AACA;;;ACDA;;;ACAAC;;;ACAAC;;;ACAA;;;ACAA,IAAAC,6BAAgC;AAChC;AACA;AACA;AACA;;;ACJA;;;ACCO,IAAM,mCAAmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBzC,IAAMC,uBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiBjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AD/BF;AACA;;;AECA;;;ACLA;AACA;AAEA;AACA;AACA;;;AtBIA;AACA;AACA;;;ADRA;;;AwBHAC;;;ACAAC;;;ACAAC;;;ACAAC;;;ACAAC;;;ACAAC;;;ACAAC;;;ACAAC;AACA;AACA;;;ACFA;AACA;;;ADGA;AACA;;;AELA;AACAC;AACA;AACA;;;ACHAC;;;ACAA;AACA;;;ACDA;AAWO,IAAM,0BAAN,cAAsC,aAAa;AAAA,EACtD,cAAc;AACV,UAAM,GAAG,SAAS;AAClB,WAAO,eAAe,MAAM,gBAAgB;AAAA,MACxC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,CAAC,aAAa,uBAAuB;AAAA,IAChD,CAAC;AAAA,EACL;AACJ;;;ADlBO,IAAM,eAAN,cAA2B,wBAAwB;AAAA,EACtD,YAAY,QAAQ;AAChB,UAAM,MAAM;AACZ,WAAO,eAAe,MAAM,gBAAgB;AAAA,MACxC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,CAAC,aAAa,yBAAyB,gBAAgB;AAAA,IAClE,CAAC;AACD,WAAO,eAAe,MAAM,aAAa;AAAA,MACrC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACX,CAAC;AACD,WAAO,eAAe,MAAM,gBAAgB;AAAA,MACxC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACX,CAAC;AACD,WAAO,eAAe,MAAM,iBAAiB;AAAA,MACzC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACX,CAAC;AACD,WAAO,eAAe,MAAM,kBAAkB;AAAA,MAC1C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACX,CAAC;AACD,SAAK,YAAY,QAAQ,aAAa,KAAK;AAC3C,SAAK,eAAe,QAAQ,gBAAgB,KAAK;AACjD,SAAK,gBAAgB,QAAQ,iBAAiB,KAAK;AACnD,SAAK,iBACD,QAAQ,mBAAmB,CAACC,UAASA,MAAK;AAC9C,QAAI,KAAK,gBAAgB,KAAK,WAAW;AACrC,YAAM,IAAI,MAAM,uCAAuC;AAAA,IAC3D;AAAA,EACJ;AAAA,EACA,MAAM,mBAAmB,WAAW,qBAAqB,CAAC,GAAG;AACzD,WAAO,KAAK,eAAe,WAAW,kBAAkB;AAAA,EAC5D;AAAA,EACA,iBAAiBA,OAAM,WAAW;AAC9B,QAAI;AACJ,QAAI,WAAW;AACX,UAAI,KAAK,eAAe;AACpB,cAAM,wBAAwB,UAAU,QAAQ,0BAA0B,MAAM;AAChF,iBAASA,MAAK,MAAM,IAAI,OAAO,MAAM,wBAAwB,CAAC;AAAA,MAClE,OACK;AACD,iBAASA,MAAK,MAAM,SAAS;AAAA,MACjC;AAAA,IACJ,OACK;AACD,eAASA,MAAK,MAAM,EAAE;AAAA,IAC1B;AACA,WAAO,OAAO,OAAO,CAAC,MAAM,MAAM,EAAE;AAAA,EACxC;AAAA,EACA,MAAM,gBAAgB,OAEtB,YAAY,CAAC,GAAG,qBAAqB,CAAC,GAAG;AAErC,UAAM,aAAa,UAAU,SAAS,IAAI,YAAY,IAAI,MAAM,MAAM,MAAM,EAAE,KAAK,CAAC,CAAC;AACrF,UAAM,EAAE,cAAc,IAAI,qBAAqB,aAAa,2BAA2B,MAAO,IAAI;AAClG,UAAM,YAAY,IAAI,MAAM;AAC5B,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,GAAG;AACtC,YAAMA,QAAO,MAAM;AACnB,UAAI,mBAAmB;AACvB,UAAI,YAAY;AAChB,iBAAW,SAAS,MAAM,KAAK,UAAUA,KAAI,GAAG;AAC5C,YAAI,cAAc;AAElB,YAAI,+BAA+B;AACnC,YAAI,WAAW;AACX,gBAAM,aAAaA,MAAK,QAAQ,KAAK;AACrC,gBAAM,oBAAoBA,MAAK,QAAQ,SAAS,IAAK,MAAM,KAAK,eAAe,SAAS;AACxF,gBAAM,mCAAmCA,MAAK,MAAM,mBAAmB,UAAU;AACjF,0CAAgC,iCAAiC,MAAM,KAAK,KAAK,CAAC,GAAG;AACrF,cAAI,0BAA0B;AAC1B,2BAAe;AAAA,UACnB;AAAA,QACJ;AACA,4BAAoB;AACpB,cAAM,iBAAiB,MAAM,MAAM,KAAK,KAAK,CAAC,GAAG;AACjD,cAAM,MAAM,WAAW,GAAG,OAAO,OAAO,WAAW,GAAG,QAAQ,WACxD,EAAE,GAAG,WAAW,GAAG,IAAI,IACvB,CAAC;AACP,YAAI,QAAQ;AAAA,UACR,MAAM;AAAA,UACN,IAAI,mBAAmB;AAAA,QAC3B;AACA,cAAM,0BAA0B;AAAA,UAC5B,GAAG,WAAW;AAAA,UACd;AAAA,QACJ;AACA,uBAAe;AACf,kBAAU,KAAK,IAAI,SAAS;AAAA,UACxB;AAAA,UACA,UAAU;AAAA,QACd,CAAC,CAAC;AACF,4BAAoB;AACpB,oBAAY;AAAA,MAChB;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAAA,EACA,MAAM,eAAe,WAAW,qBAAqB,CAAC,GAAG;AACrD,UAAM,oBAAoB,UAAU,OAAO,CAAC,QAAQ,IAAI,gBAAgB,MAAS;AACjF,UAAM,QAAQ,kBAAkB,IAAI,CAAC,QAAQ,IAAI,WAAW;AAC5D,UAAM,YAAY,kBAAkB,IAAI,CAAC,QAAQ,IAAI,QAAQ;AAC7D,WAAO,KAAK,gBAAgB,OAAO,WAAW,kBAAkB;AAAA,EACpE;AAAA,EACA,SAAS,MAAM,WAAW;AACtB,UAAMA,QAAO,KAAK,KAAK,SAAS,EAAE,KAAK;AACvC,WAAOA,UAAS,KAAK,OAAOA;AAAA,EAChC;AAAA,EACA,MAAM,YAAY,QAAQ,WAAW;AACjC,UAAM,OAAO,CAAC;AACd,UAAM,aAAa,CAAC;AACpB,QAAI,QAAQ;AACZ,eAAW,KAAK,QAAQ;AACpB,YAAM,OAAO,MAAM,KAAK,eAAe,CAAC;AACxC,UAAI,QAAQ,QAAQ,WAAW,SAAS,IAAI,UAAU,SAAS,KAC3D,KAAK,WAAW;AAChB,YAAI,QAAQ,KAAK,WAAW;AACxB,kBAAQ,KAAK,2BAA2B;AAAA,qCACvB,KAAK,WAAW;AAAA,QACrC;AACA,YAAI,WAAW,SAAS,GAAG;AACvB,gBAAMC,OAAM,KAAK,SAAS,YAAY,SAAS;AAC/C,cAAIA,SAAQ,MAAM;AACd,iBAAK,KAAKA,IAAG;AAAA,UACjB;AAIA,iBAAO,QAAQ,KAAK,gBACf,QAAQ,OAAO,KAAK,aAAa,QAAQ,GAAI;AAC9C,qBAAS,MAAM,KAAK,eAAe,WAAW,EAAE;AAChD,uBAAW,MAAM;AAAA,UACrB;AAAA,QACJ;AAAA,MACJ;AACA,iBAAW,KAAK,CAAC;AACjB,eAAS;AAAA,IACb;AACA,UAAM,MAAM,KAAK,SAAS,YAAY,SAAS;AAC/C,QAAI,QAAQ,MAAM;AACd,WAAK,KAAK,GAAG;AAAA,IACjB;AACA,WAAO;AAAA,EACX;AACJ;AAoCO,IAAM,iCAAN,cAA6C,aAAa;AAAA,EAC7D,YAAY,QAAQ;AAChB,UAAM,MAAM;AACZ,WAAO,eAAe,MAAM,cAAc;AAAA,MACtC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,CAAC,QAAQ,MAAM,KAAK,EAAE;AAAA,IACjC,CAAC;AACD,SAAK,aAAa,QAAQ,cAAc,KAAK;AAC7C,SAAK,gBAAgB,QAAQ,iBAAiB;AAAA,EAClD;AAAA,EACA,MAAM,WAAWC,OAAM,YAAY;AAC/B,UAAM,cAAc,CAAC;AAErB,QAAI,YAAY,WAAW,WAAW,SAAS;AAC/C,QAAI;AACJ,aAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK,GAAG;AAC3C,YAAM,IAAI,WAAW;AACrB,UAAI,MAAM,IAAI;AACV,oBAAY;AACZ;AAAA,MACJ;AACA,UAAIA,MAAK,SAAS,CAAC,GAAG;AAClB,oBAAY;AACZ,wBAAgB,WAAW,MAAM,IAAI,CAAC;AACtC;AAAA,MACJ;AAAA,IACJ;AAEA,UAAM,SAAS,KAAK,iBAAiBA,OAAM,SAAS;AAEpD,QAAI,aAAa,CAAC;AAClB,UAAM,aAAa,KAAK,gBAAgB,KAAK;AAC7C,eAAW,KAAK,QAAQ;AACpB,UAAK,MAAM,KAAK,eAAe,CAAC,IAAK,KAAK,WAAW;AACjD,mBAAW,KAAK,CAAC;AAAA,MACrB,OACK;AACD,YAAI,WAAW,QAAQ;AACnB,gBAAM,aAAa,MAAM,KAAK,YAAY,YAAY,UAAU;AAChE,sBAAY,KAAK,GAAG,UAAU;AAC9B,uBAAa,CAAC;AAAA,QAClB;AACA,YAAI,CAAC,eAAe;AAChB,sBAAY,KAAK,CAAC;AAAA,QACtB,OACK;AACD,gBAAM,YAAY,MAAM,KAAK,WAAW,GAAG,aAAa;AACxD,sBAAY,KAAK,GAAG,SAAS;AAAA,QACjC;AAAA,MACJ;AAAA,IACJ;AACA,QAAI,WAAW,QAAQ;AACnB,YAAM,aAAa,MAAM,KAAK,YAAY,YAAY,UAAU;AAChE,kBAAY,KAAK,GAAG,UAAU;AAAA,IAClC;AACA,WAAO;AAAA,EACX;AAAA,EACA,MAAM,UAAUA,OAAM;AAClB,WAAO,KAAK,WAAWA,OAAM,KAAK,UAAU;AAAA,EAChD;AAAA,EACA,OAAO,aAAa,UAAU,SAAS;AACnC,WAAO,IAAI,+BAA+B;AAAA,MACtC,GAAG;AAAA,MACH,YAAY,+BAA+B,yBAAyB,QAAQ;AAAA,IAChF,CAAC;AAAA,EACL;AAAA,EACA,OAAO,yBAAyB,UAAU;AACtC,QAAI,aAAa,OAAO;AACpB,aAAO;AAAA,QAEH;AAAA,QAEA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QAEA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QAEA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,IACJ,WACS,aAAa,MAAM;AACxB,aAAO;AAAA,QAEH;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QAEA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QAEA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,IACJ,WACS,aAAa,QAAQ;AAC1B,aAAO;AAAA,QAEH;AAAA,QAEA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QAEA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QAEA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,IACJ,WACS,aAAa,MAAM;AACxB,aAAO;AAAA,QAEH;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QAEA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QAEA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,IACJ,WACS,aAAa,OAAO;AACzB,aAAO;AAAA,QAEH;AAAA,QAEA;AAAA,QAEA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QAEA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,IACJ,WACS,aAAa,SAAS;AAC3B,aAAO;AAAA,QAEH;AAAA,QAEA;AAAA,QAEA;AAAA,QAEA;AAAA,QAEA;AAAA,QAEA;AAAA,QAEA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,IACJ,WACS,aAAa,UAAU;AAC5B,aAAO;AAAA,QAEH;AAAA,QACA;AAAA,QACA;AAAA,QAEA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,IACJ,WACS,aAAa,OAAO;AACzB,aAAO;AAAA,QAEH;AAAA,QACA;AAAA,QACA;AAAA,QAEA;AAAA,QAEA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,IACJ,WACS,aAAa,QAAQ;AAC1B,aAAO;AAAA,QAEH;AAAA,QACA;AAAA,QAEA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QAEA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,IACJ,WACS,aAAa,QAAQ;AAC1B,aAAO;AAAA,QAEH;AAAA,QACA;AAAA,QACA;AAAA,QAEA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QAEA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,IACJ,WACS,aAAa,SAAS;AAC3B,aAAO;AAAA,QAEH;AAAA,QACA;AAAA,QAEA;AAAA,QACA;AAAA,QACA;AAAA,QAEA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QAEA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,IACJ,WACS,aAAa,SAAS;AAC3B,aAAO;AAAA,QAEH;AAAA,QAEA;AAAA,QACA;AAAA,QACA;AAAA,QAEA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QAEA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,IACJ,WACS,aAAa,YAAY;AAC9B,aAAO;AAAA,QAEH;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QAKA;AAAA,QAEA;AAAA,QACA;AAAA,QACA;AAAA,QAGA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,IACJ,WACS,aAAa,SAAS;AAC3B,aAAO;AAAA,QAEH;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QAEA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QAEA;AAAA,QACA;AAAA,QACA;AAAA,QAEA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,IACJ,WACS,aAAa,QAAQ;AAC1B,aAAO;AAAA,QAEH;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QAEA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QAEA;AAAA,QACA;AAAA,MACJ;AAAA,IACJ,WACS,aAAa,OAAO;AACzB,aAAO;AAAA,QAEH;AAAA,QACA;AAAA,QAEA;AAAA,QACA;AAAA,QACA;AAAA,QAEA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QAEA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,QAEA;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AAAA,IACJ,OACK;AACD,YAAM,IAAI,MAAM,YAAY,4BAA4B;AAAA,IAC5D;AAAA,EACJ;AACJ;;;AJvmBA;AACA;;;AMTA;AACA;;;ACAA;;;ACDA;;;ACAA;AACAC;AACA;AACA;;;ACHAC;AACA;;;ACDAC;AACA;;;ACDA;AACA;;;ACDA,IAAAC,iBAA0C;AAC1CC;AACA;AACAC;AACAC;;;ACJAC;;;ACAA;;;ACGA;AACA;AACA;;;ACJA,IAAAC,6BAAgC;AAChC;;;ACDA;;;ACCA;AACA;;;ACHAC;;;ACAA,IAAAC,6BAAgC;AAChC;;;ACDA;;;ADGA;;;AEHA,IAAAC,6BAAgC;AAChC;AAEA;;;ACDA,SAAS,UAAU,SAAS;AAC1B,SAAQ,OAAO,YAAY,eAAiB,YAAY;AAC1D;AAGA,SAASC,UAAS,SAAS;AACzB,SAAQ,OAAO,YAAY,YAAc,YAAY;AACvD;AAGA,SAASC,SAAQ,UAAU;AACzB,MAAI,MAAM,QAAQ,QAAQ;AAAG,WAAO;AAAA,WAC3B,UAAU,QAAQ;AAAG,WAAO,CAAC;AAEtC,SAAO,CAAE,QAAS;AACpB;AAGA,SAAS,OAAO,QAAQ,QAAQ;AAC9B,MAAIC,QAAO,QAAQ,KAAK;AAExB,MAAI,QAAQ;AACV,iBAAa,OAAO,KAAK,MAAM;AAE/B,SAAKA,SAAQ,GAAG,SAAS,WAAW,QAAQA,SAAQ,QAAQA,UAAS,GAAG;AACtE,YAAM,WAAWA;AACjB,aAAO,OAAO,OAAO;AAAA,IACvB;AAAA,EACF;AAEA,SAAO;AACT;AAGA,SAAS,OAAO,QAAQ,OAAO;AAC7B,MAAI,SAAS,IAAI;AAEjB,OAAK,QAAQ,GAAG,QAAQ,OAAO,SAAS,GAAG;AACzC,cAAU;AAAA,EACZ;AAEA,SAAO;AACT;AAGA,SAAS,eAAe,QAAQ;AAC9B,SAAQ,WAAW,KAAO,OAAO,sBAAsB,IAAI;AAC7D;AAGA,IAAI,cAAmB;AACvB,IAAI,aAAmBF;AACvB,IAAI,YAAmBC;AACvB,IAAI,WAAmB;AACvB,IAAI,mBAAmB;AACvB,IAAI,WAAmB;AAEvB,IAAI,SAAS;AAAA,EACZ,WAAW;AAAA,EACX,UAAU;AAAA,EACV,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,gBAAgB;AAAA,EAChB,QAAQ;AACT;AAKA,SAAS,YAAYE,YAAW,SAAS;AACvC,MAAI,QAAQ,IAAI,UAAUA,WAAU,UAAU;AAE9C,MAAI,CAACA,WAAU;AAAM,WAAO;AAE5B,MAAIA,WAAU,KAAK,MAAM;AACvB,aAAS,SAASA,WAAU,KAAK,OAAO;AAAA,EAC1C;AAEA,WAAS,OAAOA,WAAU,KAAK,OAAO,KAAK,OAAOA,WAAU,KAAK,SAAS,KAAK;AAE/E,MAAI,CAAC,WAAWA,WAAU,KAAK,SAAS;AACtC,aAAS,SAASA,WAAU,KAAK;AAAA,EACnC;AAEA,SAAO,UAAU,MAAM;AACzB;AAGA,SAAS,gBAAgB,QAAQ,MAAM;AAErC,QAAM,KAAK,IAAI;AAEf,OAAK,OAAO;AACZ,OAAK,SAAS;AACd,OAAK,OAAO;AACZ,OAAK,UAAU,YAAY,MAAM,KAAK;AAGtC,MAAI,MAAM,mBAAmB;AAE3B,UAAM,kBAAkB,MAAM,KAAK,WAAW;AAAA,EAChD,OAAO;AAEL,SAAK,QAAS,IAAI,MAAM,EAAG,SAAS;AAAA,EACtC;AACF;AAIA,gBAAgB,YAAY,OAAO,OAAO,MAAM,SAAS;AACzD,gBAAgB,UAAU,cAAc;AAGxC,gBAAgB,UAAU,WAAW,SAASC,UAAS,SAAS;AAC9D,SAAO,KAAK,OAAO,OAAO,YAAY,MAAM,OAAO;AACrD;AAGA,IAAI,YAAY;AAGhB,SAAS,QAAQ,QAAQ,WAAW,SAAS,UAAU,eAAe;AACpE,MAAI,OAAO;AACX,MAAI,OAAO;AACX,MAAI,gBAAgB,KAAK,MAAM,gBAAgB,CAAC,IAAI;AAEpD,MAAI,WAAW,YAAY,eAAe;AACxC,WAAO;AACP,gBAAY,WAAW,gBAAgB,KAAK;AAAA,EAC9C;AAEA,MAAI,UAAU,WAAW,eAAe;AACtC,WAAO;AACP,cAAU,WAAW,gBAAgB,KAAK;AAAA,EAC5C;AAEA,SAAO;AAAA,IACL,KAAK,OAAO,OAAO,MAAM,WAAW,OAAO,EAAE,QAAQ,OAAO,QAAG,IAAI;AAAA,IACnE,KAAK,WAAW,YAAY,KAAK;AAAA,EACnC;AACF;AAGA,SAAS,SAAS,QAAQ,KAAK;AAC7B,SAAO,OAAO,OAAO,KAAK,MAAM,OAAO,MAAM,IAAI;AACnD;AAGA,SAAS,YAAY,MAAM,SAAS;AAClC,YAAU,OAAO,OAAO,WAAW,IAAI;AAEvC,MAAI,CAAC,KAAK;AAAQ,WAAO;AAEzB,MAAI,CAAC,QAAQ;AAAW,YAAQ,YAAY;AAC5C,MAAI,OAAO,QAAQ,WAAgB;AAAU,YAAQ,SAAc;AACnE,MAAI,OAAO,QAAQ,gBAAgB;AAAU,YAAQ,cAAc;AACnE,MAAI,OAAO,QAAQ,eAAgB;AAAU,YAAQ,aAAc;AAEnE,MAAI,KAAK;AACT,MAAI,aAAa,CAAE,CAAE;AACrB,MAAI,WAAW,CAAC;AAChB,MAAI;AACJ,MAAI,cAAc;AAElB,SAAQ,QAAQ,GAAG,KAAK,KAAK,MAAM,GAAI;AACrC,aAAS,KAAK,MAAM,KAAK;AACzB,eAAW,KAAK,MAAM,QAAQ,MAAM,GAAG,MAAM;AAE7C,QAAI,KAAK,YAAY,MAAM,SAAS,cAAc,GAAG;AACnD,oBAAc,WAAW,SAAS;AAAA,IACpC;AAAA,EACF;AAEA,MAAI,cAAc;AAAG,kBAAc,WAAW,SAAS;AAEvD,MAAI,SAAS,IAAI,GAAG;AACpB,MAAI,eAAe,KAAK,IAAI,KAAK,OAAO,QAAQ,YAAY,SAAS,MAAM,EAAE,SAAS,EAAE;AACxF,MAAI,gBAAgB,QAAQ,aAAa,QAAQ,SAAS,eAAe;AAEzE,OAAK,IAAI,GAAG,KAAK,QAAQ,aAAa,KAAK;AACzC,QAAI,cAAc,IAAI;AAAG;AACzB,WAAO;AAAA,MACL,KAAK;AAAA,MACL,WAAW,cAAc;AAAA,MACzB,SAAS,cAAc;AAAA,MACvB,KAAK,YAAY,WAAW,eAAe,WAAW,cAAc;AAAA,MACpE;AAAA,IACF;AACA,aAAS,OAAO,OAAO,KAAK,QAAQ,MAAM,IAAI,UAAU,KAAK,OAAO,IAAI,GAAG,SAAS,GAAG,YAAY,IACjG,QAAQ,KAAK,MAAM,OAAO;AAAA,EAC9B;AAEA,SAAO,QAAQ,KAAK,QAAQ,WAAW,cAAc,SAAS,cAAc,KAAK,UAAU,aAAa;AACxG,YAAU,OAAO,OAAO,KAAK,QAAQ,MAAM,IAAI,UAAU,KAAK,OAAO,GAAG,SAAS,GAAG,YAAY,IAC9F,QAAQ,KAAK,MAAM;AACrB,YAAU,OAAO,OAAO,KAAK,QAAQ,SAAS,eAAe,IAAI,KAAK,GAAG,IAAI;AAE7E,OAAK,IAAI,GAAG,KAAK,QAAQ,YAAY,KAAK;AACxC,QAAI,cAAc,KAAK,SAAS;AAAQ;AACxC,WAAO;AAAA,MACL,KAAK;AAAA,MACL,WAAW,cAAc;AAAA,MACzB,SAAS,cAAc;AAAA,MACvB,KAAK,YAAY,WAAW,eAAe,WAAW,cAAc;AAAA,MACpE;AAAA,IACF;AACA,cAAU,OAAO,OAAO,KAAK,QAAQ,MAAM,IAAI,UAAU,KAAK,OAAO,IAAI,GAAG,SAAS,GAAG,YAAY,IAClG,QAAQ,KAAK,MAAM;AAAA,EACvB;AAEA,SAAO,OAAO,QAAQ,OAAO,EAAE;AACjC;AAGA,IAAI,UAAU;AAEd,IAAI,2BAA2B;AAAA,EAC7B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AAEA,IAAI,kBAAkB;AAAA,EACpB;AAAA,EACA;AAAA,EACA;AACF;AAEA,SAAS,oBAAoBC,MAAK;AAChC,MAAI,SAAS,CAAC;AAEd,MAAIA,SAAQ,MAAM;AAChB,WAAO,KAAKA,IAAG,EAAE,QAAQ,SAAU,OAAO;AACxC,MAAAA,KAAI,OAAO,QAAQ,SAAU,OAAO;AAClC,eAAO,OAAO,KAAK,KAAK;AAAA,MAC1B,CAAC;AAAA,IACH,CAAC;AAAA,EACH;AAEA,SAAO;AACT;AAEA,SAAS,OAAO,KAAK,SAAS;AAC5B,YAAU,WAAW,CAAC;AAEtB,SAAO,KAAK,OAAO,EAAE,QAAQ,SAAU,MAAM;AAC3C,QAAI,yBAAyB,QAAQ,IAAI,MAAM,IAAI;AACjD,YAAM,IAAI,UAAU,qBAAqB,OAAO,gCAAgC,MAAM,cAAc;AAAA,IACtG;AAAA,EACF,CAAC;AAGD,OAAK,UAAgB;AACrB,OAAK,MAAgB;AACrB,OAAK,OAAgB,QAAQ,WAAoB;AACjD,OAAK,UAAgB,QAAQ,cAAoB,WAAY;AAAE,WAAO;AAAA,EAAM;AAC5E,OAAK,YAAgB,QAAQ,gBAAoB,SAAUC,OAAM;AAAE,WAAOA;AAAA,EAAM;AAChF,OAAK,aAAgB,QAAQ,iBAAoB;AACjD,OAAK,YAAgB,QAAQ,gBAAoB;AACjD,OAAK,YAAgB,QAAQ,gBAAoB;AACjD,OAAK,gBAAgB,QAAQ,oBAAoB;AACjD,OAAK,eAAgB,QAAQ,mBAAoB;AACjD,OAAK,QAAgB,QAAQ,YAAoB;AACjD,OAAK,eAAgB,oBAAoB,QAAQ,mBAAmB,IAAI;AAExE,MAAI,gBAAgB,QAAQ,KAAK,IAAI,MAAM,IAAI;AAC7C,UAAM,IAAI,UAAU,mBAAmB,KAAK,OAAO,yBAAyB,MAAM,cAAc;AAAA,EAClG;AACF;AAEA,IAAI,OAAO;AAQX,SAAS,YAAYC,SAAQ,MAAM;AACjC,MAAI,SAAS,CAAC;AAEd,EAAAA,QAAO,MAAM,QAAQ,SAAU,aAAa;AAC1C,QAAI,WAAW,OAAO;AAEtB,WAAO,QAAQ,SAAU,cAAc,eAAe;AACpD,UAAI,aAAa,QAAQ,YAAY,OACjC,aAAa,SAAS,YAAY,QAClC,aAAa,UAAU,YAAY,OAAO;AAE5C,mBAAW;AAAA,MACb;AAAA,IACF,CAAC;AAED,WAAO,YAAY;AAAA,EACrB,CAAC;AAED,SAAO;AACT;AAGA,SAAS,aAA2B;AAClC,MAAI,SAAS;AAAA,IACP,QAAQ,CAAC;AAAA,IACT,UAAU,CAAC;AAAA,IACX,SAAS,CAAC;AAAA,IACV,UAAU,CAAC;AAAA,IACX,OAAO;AAAA,MACL,QAAQ,CAAC;AAAA,MACT,UAAU,CAAC;AAAA,MACX,SAAS,CAAC;AAAA,MACV,UAAU,CAAC;AAAA,IACb;AAAA,EACF,GAAGL,QAAO;AAEd,WAAS,YAAYM,OAAM;AACzB,QAAIA,MAAK,OAAO;AACd,aAAO,MAAMA,MAAK,MAAM,KAAKA,KAAI;AACjC,aAAO,MAAM,YAAY,KAAKA,KAAI;AAAA,IACpC,OAAO;AACL,aAAOA,MAAK,MAAMA,MAAK,OAAO,OAAO,YAAYA,MAAK,OAAOA;AAAA,IAC/D;AAAA,EACF;AAEA,OAAKN,SAAQ,GAAG,SAAS,UAAU,QAAQA,SAAQ,QAAQA,UAAS,GAAG;AACrE,cAAUA,QAAO,QAAQ,WAAW;AAAA,EACtC;AACA,SAAO;AACT;AAGA,SAAS,SAAS,YAAY;AAC5B,SAAO,KAAK,OAAO,UAAU;AAC/B;AAGA,SAAS,UAAU,SAAS,SAASO,QAAO,YAAY;AACtD,MAAI,WAAW,CAAC;AAChB,MAAI,WAAW,CAAC;AAEhB,MAAI,sBAAsB,MAAM;AAE9B,aAAS,KAAK,UAAU;AAAA,EAE1B,WAAW,MAAM,QAAQ,UAAU,GAAG;AAEpC,eAAW,SAAS,OAAO,UAAU;AAAA,EAEvC,WAAW,eAAe,MAAM,QAAQ,WAAW,QAAQ,KAAK,MAAM,QAAQ,WAAW,QAAQ,IAAI;AAEnG,QAAI,WAAW;AAAU,iBAAW,SAAS,OAAO,WAAW,QAAQ;AACvE,QAAI,WAAW;AAAU,iBAAW,SAAS,OAAO,WAAW,QAAQ;AAAA,EAEzE,OAAO;AACL,UAAM,IAAI,UAAU,kHAC6C;AAAA,EACnE;AAEA,WAAS,QAAQ,SAAU,QAAQ;AACjC,QAAI,EAAE,kBAAkB,OAAO;AAC7B,YAAM,IAAI,UAAU,oFAAoF;AAAA,IAC1G;AAEA,QAAI,OAAO,YAAY,OAAO,aAAa,UAAU;AACnD,YAAM,IAAI,UAAU,iHAAiH;AAAA,IACvI;AAEA,QAAI,OAAO,OAAO;AAChB,YAAM,IAAI,UAAU,oGAAoG;AAAA,IAC1H;AAAA,EACF,CAAC;AAED,WAAS,QAAQ,SAAU,QAAQ;AACjC,QAAI,EAAE,kBAAkB,OAAO;AAC7B,YAAM,IAAI,UAAU,oFAAoF;AAAA,IAC1G;AAAA,EACF,CAAC;AAED,MAAI,SAAS,OAAO,OAAO,SAAS,SAAS;AAE7C,SAAO,YAAY,KAAK,YAAY,CAAC,GAAG,OAAO,QAAQ;AACvD,SAAO,YAAY,KAAK,YAAY,CAAC,GAAG,OAAO,QAAQ;AAEvD,SAAO,mBAAmB,YAAY,QAAQ,UAAU;AACxD,SAAO,mBAAmB,YAAY,QAAQ,UAAU;AACxD,SAAO,kBAAmB,WAAW,OAAO,kBAAkB,OAAO,gBAAgB;AAErF,SAAO;AACT;AAGA,IAAI,SAAS;AAEb,IAAI,MAAM,IAAI,KAAK,yBAAyB;AAAA,EAC1C,MAAM;AAAA,EACN,WAAW,SAAUH,OAAM;AAAE,WAAOA,UAAS,OAAOA,QAAO;AAAA,EAAI;AACjE,CAAC;AAED,IAAI,MAAM,IAAI,KAAK,yBAAyB;AAAA,EAC1C,MAAM;AAAA,EACN,WAAW,SAAUA,OAAM;AAAE,WAAOA,UAAS,OAAOA,QAAO,CAAC;AAAA,EAAG;AACjE,CAAC;AAED,IAAI,MAAM,IAAI,KAAK,yBAAyB;AAAA,EAC1C,MAAM;AAAA,EACN,WAAW,SAAUA,OAAM;AAAE,WAAOA,UAAS,OAAOA,QAAO,CAAC;AAAA,EAAG;AACjE,CAAC;AAED,IAAI,WAAW,IAAI,OAAO;AAAA,EACxB,UAAU;AAAA,IACR;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF,CAAC;AAED,SAAS,gBAAgBA,OAAM;AAC7B,MAAIA,UAAS;AAAM,WAAO;AAE1B,MAAI,MAAMA,MAAK;AAEf,SAAQ,QAAQ,KAAKA,UAAS,OACtB,QAAQ,MAAMA,UAAS,UAAUA,UAAS,UAAUA,UAAS;AACvE;AAEA,SAAS,oBAAoB;AAC3B,SAAO;AACT;AAEA,SAAS,OAAO,QAAQ;AACtB,SAAO,WAAW;AACpB;AAEA,IAAI,QAAQ,IAAI,KAAK,0BAA0B;AAAA,EAC7C,MAAM;AAAA,EACN,SAAS;AAAA,EACT,WAAW;AAAA,EACX,WAAW;AAAA,EACX,WAAW;AAAA,IACT,WAAW,WAAY;AAAE,aAAO;AAAA,IAAQ;AAAA,IACxC,WAAW,WAAY;AAAE,aAAO;AAAA,IAAQ;AAAA,IACxC,WAAW,WAAY;AAAE,aAAO;AAAA,IAAQ;AAAA,IACxC,WAAW,WAAY;AAAE,aAAO;AAAA,IAAQ;AAAA,IACxC,OAAW,WAAY;AAAE,aAAO;AAAA,IAAQ;AAAA,EAC1C;AAAA,EACA,cAAc;AAChB,CAAC;AAED,SAAS,mBAAmBA,OAAM;AAChC,MAAIA,UAAS;AAAM,WAAO;AAE1B,MAAI,MAAMA,MAAK;AAEf,SAAQ,QAAQ,MAAMA,UAAS,UAAUA,UAAS,UAAUA,UAAS,WAC7D,QAAQ,MAAMA,UAAS,WAAWA,UAAS,WAAWA,UAAS;AACzE;AAEA,SAAS,qBAAqBA,OAAM;AAClC,SAAOA,UAAS,UACTA,UAAS,UACTA,UAAS;AAClB;AAEA,SAAS,UAAU,QAAQ;AACzB,SAAO,OAAO,UAAU,SAAS,KAAK,MAAM,MAAM;AACpD;AAEA,IAAI,OAAO,IAAI,KAAK,0BAA0B;AAAA,EAC5C,MAAM;AAAA,EACN,SAAS;AAAA,EACT,WAAW;AAAA,EACX,WAAW;AAAA,EACX,WAAW;AAAA,IACT,WAAW,SAAU,QAAQ;AAAE,aAAO,SAAS,SAAS;AAAA,IAAS;AAAA,IACjE,WAAW,SAAU,QAAQ;AAAE,aAAO,SAAS,SAAS;AAAA,IAAS;AAAA,IACjE,WAAW,SAAU,QAAQ;AAAE,aAAO,SAAS,SAAS;AAAA,IAAS;AAAA,EACnE;AAAA,EACA,cAAc;AAChB,CAAC;AAED,SAAS,UAAU,GAAG;AACpB,SAAS,MAAe,KAAO,KAAK,MAC3B,MAAe,KAAO,KAAK,MAC3B,MAAe,KAAO,KAAK;AACtC;AAEA,SAAS,UAAU,GAAG;AACpB,SAAS,MAAe,KAAO,KAAK;AACtC;AAEA,SAAS,UAAU,GAAG;AACpB,SAAS,MAAe,KAAO,KAAK;AACtC;AAEA,SAAS,mBAAmBA,OAAM;AAChC,MAAIA,UAAS;AAAM,WAAO;AAE1B,MAAI,MAAMA,MAAK,QACXJ,SAAQ,GACR,YAAY,OACZ;AAEJ,MAAI,CAAC;AAAK,WAAO;AAEjB,OAAKI,MAAKJ;AAGV,MAAI,OAAO,OAAO,OAAO,KAAK;AAC5B,SAAKI,MAAK,EAAEJ;AAAA,EACd;AAEA,MAAI,OAAO,KAAK;AAEd,QAAIA,SAAQ,MAAM;AAAK,aAAO;AAC9B,SAAKI,MAAK,EAAEJ;AAIZ,QAAI,OAAO,KAAK;AAEd,MAAAA;AAEA,aAAOA,SAAQ,KAAKA,UAAS;AAC3B,aAAKI,MAAKJ;AACV,YAAI,OAAO;AAAK;AAChB,YAAI,OAAO,OAAO,OAAO;AAAK,iBAAO;AACrC,oBAAY;AAAA,MACd;AACA,aAAO,aAAa,OAAO;AAAA,IAC7B;AAGA,QAAI,OAAO,KAAK;AAEd,MAAAA;AAEA,aAAOA,SAAQ,KAAKA,UAAS;AAC3B,aAAKI,MAAKJ;AACV,YAAI,OAAO;AAAK;AAChB,YAAI,CAAC,UAAUI,MAAK,WAAWJ,MAAK,CAAC;AAAG,iBAAO;AAC/C,oBAAY;AAAA,MACd;AACA,aAAO,aAAa,OAAO;AAAA,IAC7B;AAGA,QAAI,OAAO,KAAK;AAEd,MAAAA;AAEA,aAAOA,SAAQ,KAAKA,UAAS;AAC3B,aAAKI,MAAKJ;AACV,YAAI,OAAO;AAAK;AAChB,YAAI,CAAC,UAAUI,MAAK,WAAWJ,MAAK,CAAC;AAAG,iBAAO;AAC/C,oBAAY;AAAA,MACd;AACA,aAAO,aAAa,OAAO;AAAA,IAC7B;AAAA,EACF;AAKA,MAAI,OAAO;AAAK,WAAO;AAEvB,SAAOA,SAAQ,KAAKA,UAAS;AAC3B,SAAKI,MAAKJ;AACV,QAAI,OAAO;AAAK;AAChB,QAAI,CAAC,UAAUI,MAAK,WAAWJ,MAAK,CAAC,GAAG;AACtC,aAAO;AAAA,IACT;AACA,gBAAY;AAAA,EACd;AAGA,MAAI,CAAC,aAAa,OAAO;AAAK,WAAO;AAErC,SAAO;AACT;AAEA,SAAS,qBAAqBI,OAAM;AAClC,MAAI,QAAQA,OAAM,OAAO,GAAG;AAE5B,MAAI,MAAM,QAAQ,GAAG,MAAM,IAAI;AAC7B,YAAQ,MAAM,QAAQ,MAAM,EAAE;AAAA,EAChC;AAEA,OAAK,MAAM;AAEX,MAAI,OAAO,OAAO,OAAO,KAAK;AAC5B,QAAI,OAAO;AAAK,aAAO;AACvB,YAAQ,MAAM,MAAM,CAAC;AACrB,SAAK,MAAM;AAAA,EACb;AAEA,MAAI,UAAU;AAAK,WAAO;AAE1B,MAAI,OAAO,KAAK;AACd,QAAI,MAAM,OAAO;AAAK,aAAO,OAAO,SAAS,MAAM,MAAM,CAAC,GAAG,CAAC;AAC9D,QAAI,MAAM,OAAO;AAAK,aAAO,OAAO,SAAS,MAAM,MAAM,CAAC,GAAG,EAAE;AAC/D,QAAI,MAAM,OAAO;AAAK,aAAO,OAAO,SAAS,MAAM,MAAM,CAAC,GAAG,CAAC;AAAA,EAChE;AAEA,SAAO,OAAO,SAAS,OAAO,EAAE;AAClC;AAEA,SAAS,UAAU,QAAQ;AACzB,SAAQ,OAAO,UAAU,SAAS,KAAK,MAAM,MAAO,sBAC5C,SAAS,MAAM,KAAK,CAAC,OAAO,eAAe,MAAM;AAC3D;AAEA,IAAI,MAAM,IAAI,KAAK,yBAAyB;AAAA,EAC1C,MAAM;AAAA,EACN,SAAS;AAAA,EACT,WAAW;AAAA,EACX,WAAW;AAAA,EACX,WAAW;AAAA,IACT,QAAa,SAAU,KAAK;AAAE,aAAO,OAAO,IAAI,OAAO,IAAI,SAAS,CAAC,IAAI,QAAQ,IAAI,SAAS,CAAC,EAAE,MAAM,CAAC;AAAA,IAAG;AAAA,IAC3G,OAAa,SAAU,KAAK;AAAE,aAAO,OAAO,IAAI,OAAQ,IAAI,SAAS,CAAC,IAAI,QAAS,IAAI,SAAS,CAAC,EAAE,MAAM,CAAC;AAAA,IAAG;AAAA,IAC7G,SAAa,SAAU,KAAK;AAAE,aAAO,IAAI,SAAS,EAAE;AAAA,IAAG;AAAA,IAEvD,aAAa,SAAU,KAAK;AAAE,aAAO,OAAO,IAAI,OAAO,IAAI,SAAS,EAAE,EAAE,YAAY,IAAK,QAAQ,IAAI,SAAS,EAAE,EAAE,YAAY,EAAE,MAAM,CAAC;AAAA,IAAG;AAAA,EAC5I;AAAA,EACA,cAAc;AAAA,EACd,cAAc;AAAA,IACZ,QAAa,CAAE,GAAI,KAAM;AAAA,IACzB,OAAa,CAAE,GAAI,KAAM;AAAA,IACzB,SAAa,CAAE,IAAI,KAAM;AAAA,IACzB,aAAa,CAAE,IAAI,KAAM;AAAA,EAC3B;AACF,CAAC;AAED,IAAI,qBAAqB,IAAI;AAAA,EAE3B;AAOuB;AAEzB,SAAS,iBAAiBA,OAAM;AAC9B,MAAIA,UAAS;AAAM,WAAO;AAE1B,MAAI,CAAC,mBAAmB,KAAKA,KAAI,KAG7BA,MAAKA,MAAK,SAAS,OAAO,KAAK;AACjC,WAAO;AAAA,EACT;AAEA,SAAO;AACT;AAEA,SAAS,mBAAmBA,OAAM;AAChC,MAAI,OAAO;AAEX,UAASA,MAAK,QAAQ,MAAM,EAAE,EAAE,YAAY;AAC5C,SAAS,MAAM,OAAO,MAAM,KAAK;AAEjC,MAAI,KAAK,QAAQ,MAAM,EAAE,KAAK,GAAG;AAC/B,YAAQ,MAAM,MAAM,CAAC;AAAA,EACvB;AAEA,MAAI,UAAU,QAAQ;AACpB,WAAQ,SAAS,IAAK,OAAO,oBAAoB,OAAO;AAAA,EAE1D,WAAW,UAAU,QAAQ;AAC3B,WAAO;AAAA,EACT;AACA,SAAO,OAAO,WAAW,OAAO,EAAE;AACpC;AAGA,IAAI,yBAAyB;AAE7B,SAAS,mBAAmB,QAAQ,OAAO;AACzC,MAAI;AAEJ,MAAI,MAAM,MAAM,GAAG;AACjB,YAAQ,OAAO;AAAA,MACb,KAAK;AAAa,eAAO;AAAA,MACzB,KAAK;AAAa,eAAO;AAAA,MACzB,KAAK;AAAa,eAAO;AAAA,IAC3B;AAAA,EACF,WAAW,OAAO,sBAAsB,QAAQ;AAC9C,YAAQ,OAAO;AAAA,MACb,KAAK;AAAa,eAAO;AAAA,MACzB,KAAK;AAAa,eAAO;AAAA,MACzB,KAAK;AAAa,eAAO;AAAA,IAC3B;AAAA,EACF,WAAW,OAAO,sBAAsB,QAAQ;AAC9C,YAAQ,OAAO;AAAA,MACb,KAAK;AAAa,eAAO;AAAA,MACzB,KAAK;AAAa,eAAO;AAAA,MACzB,KAAK;AAAa,eAAO;AAAA,IAC3B;AAAA,EACF,WAAW,OAAO,eAAe,MAAM,GAAG;AACxC,WAAO;AAAA,EACT;AAEA,QAAM,OAAO,SAAS,EAAE;AAKxB,SAAO,uBAAuB,KAAK,GAAG,IAAI,IAAI,QAAQ,KAAK,IAAI,IAAI;AACrE;AAEA,SAAS,QAAQ,QAAQ;AACvB,SAAQ,OAAO,UAAU,SAAS,KAAK,MAAM,MAAM,sBAC3C,SAAS,MAAM,KAAK,OAAO,eAAe,MAAM;AAC1D;AAEA,IAAI,QAAQ,IAAI,KAAK,2BAA2B;AAAA,EAC9C,MAAM;AAAA,EACN,SAAS;AAAA,EACT,WAAW;AAAA,EACX,WAAW;AAAA,EACX,WAAW;AAAA,EACX,cAAc;AAChB,CAAC;AAED,IAAI,OAAO,SAAS,OAAO;AAAA,EACzB,UAAU;AAAA,IACR;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF,CAAC;AAED,IAAI,OAAO;AAEX,IAAI,mBAAmB,IAAI;AAAA,EACzB;AAEgB;AAElB,IAAI,wBAAwB,IAAI;AAAA,EAC9B;AASwB;AAE1B,SAAS,qBAAqBA,OAAM;AAClC,MAAIA,UAAS;AAAM,WAAO;AAC1B,MAAI,iBAAiB,KAAKA,KAAI,MAAM;AAAM,WAAO;AACjD,MAAI,sBAAsB,KAAKA,KAAI,MAAM;AAAM,WAAO;AACtD,SAAO;AACT;AAEA,SAAS,uBAAuBA,OAAM;AACpC,MAAI,OAAO,MAAM,OAAO,KAAK,MAAM,QAAQ,QAAQ,WAAW,GAC1D,QAAQ,MAAM,SAAS,WAAWI;AAEtC,UAAQ,iBAAiB,KAAKJ,KAAI;AAClC,MAAI,UAAU;AAAM,YAAQ,sBAAsB,KAAKA,KAAI;AAE3D,MAAI,UAAU;AAAM,UAAM,IAAI,MAAM,oBAAoB;AAIxD,SAAO,CAAE,MAAM;AACf,UAAQ,CAAE,MAAM,KAAM;AACtB,QAAM,CAAE,MAAM;AAEd,MAAI,CAAC,MAAM,IAAI;AACb,WAAO,IAAI,KAAK,KAAK,IAAI,MAAM,OAAO,GAAG,CAAC;AAAA,EAC5C;AAIA,SAAO,CAAE,MAAM;AACf,WAAS,CAAE,MAAM;AACjB,WAAS,CAAE,MAAM;AAEjB,MAAI,MAAM,IAAI;AACZ,eAAW,MAAM,GAAG,MAAM,GAAG,CAAC;AAC9B,WAAO,SAAS,SAAS,GAAG;AAC1B,kBAAY;AAAA,IACd;AACA,eAAW,CAAC;AAAA,EACd;AAIA,MAAI,MAAM,IAAI;AACZ,cAAU,CAAE,MAAM;AAClB,gBAAY,EAAE,MAAM,OAAO;AAC3B,aAAS,UAAU,KAAK,aAAa;AACrC,QAAI,MAAM,OAAO;AAAK,cAAQ,CAAC;AAAA,EACjC;AAEA,EAAAI,QAAO,IAAI,KAAK,KAAK,IAAI,MAAM,OAAO,KAAK,MAAM,QAAQ,QAAQ,QAAQ,CAAC;AAE1E,MAAI;AAAO,IAAAA,MAAK,QAAQA,MAAK,QAAQ,IAAI,KAAK;AAE9C,SAAOA;AACT;AAEA,SAAS,uBAAuB,QAAoB;AAClD,SAAO,OAAO,YAAY;AAC5B;AAEA,IAAI,YAAY,IAAI,KAAK,+BAA+B;AAAA,EACtD,MAAM;AAAA,EACN,SAAS;AAAA,EACT,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,WAAW;AACb,CAAC;AAED,SAAS,iBAAiBJ,OAAM;AAC9B,SAAOA,UAAS,QAAQA,UAAS;AACnC;AAEA,IAAI,QAAQ,IAAI,KAAK,2BAA2B;AAAA,EAC9C,MAAM;AAAA,EACN,SAAS;AACX,CAAC;AASD,IAAI,aAAa;AAGjB,SAAS,kBAAkBA,OAAM;AAC/B,MAAIA,UAAS;AAAM,WAAO;AAE1B,MAAI,MAAM,KAAK,SAAS,GAAG,MAAMA,MAAK,QAAQD,OAAM;AAGpD,OAAK,MAAM,GAAG,MAAM,KAAK,OAAO;AAC9B,WAAOA,KAAI,QAAQC,MAAK,OAAO,GAAG,CAAC;AAGnC,QAAI,OAAO;AAAI;AAGf,QAAI,OAAO;AAAG,aAAO;AAErB,cAAU;AAAA,EACZ;AAGA,SAAQ,SAAS,MAAO;AAC1B;AAEA,SAAS,oBAAoBA,OAAM;AACjC,MAAI,KAAK,UACL,QAAQA,MAAK,QAAQ,YAAY,EAAE,GACnC,MAAM,MAAM,QACZD,OAAM,YACN,OAAO,GACP,SAAS,CAAC;AAId,OAAK,MAAM,GAAG,MAAM,KAAK,OAAO;AAC9B,QAAK,MAAM,MAAM,KAAM,KAAK;AAC1B,aAAO,KAAM,QAAQ,KAAM,GAAI;AAC/B,aAAO,KAAM,QAAQ,IAAK,GAAI;AAC9B,aAAO,KAAK,OAAO,GAAI;AAAA,IACzB;AAEA,WAAQ,QAAQ,IAAKA,KAAI,QAAQ,MAAM,OAAO,GAAG,CAAC;AAAA,EACpD;AAIA,aAAY,MAAM,IAAK;AAEvB,MAAI,aAAa,GAAG;AAClB,WAAO,KAAM,QAAQ,KAAM,GAAI;AAC/B,WAAO,KAAM,QAAQ,IAAK,GAAI;AAC9B,WAAO,KAAK,OAAO,GAAI;AAAA,EACzB,WAAW,aAAa,IAAI;AAC1B,WAAO,KAAM,QAAQ,KAAM,GAAI;AAC/B,WAAO,KAAM,QAAQ,IAAK,GAAI;AAAA,EAChC,WAAW,aAAa,IAAI;AAC1B,WAAO,KAAM,QAAQ,IAAK,GAAI;AAAA,EAChC;AAEA,SAAO,IAAI,WAAW,MAAM;AAC9B;AAEA,SAAS,oBAAoB,QAAoB;AAC/C,MAAI,SAAS,IAAI,OAAO,GAAG,KAAK,MAC5B,MAAM,OAAO,QACbA,OAAM;AAIV,OAAK,MAAM,GAAG,MAAM,KAAK,OAAO;AAC9B,QAAK,MAAM,MAAM,KAAM,KAAK;AAC1B,gBAAUA,KAAK,QAAQ,KAAM;AAC7B,gBAAUA,KAAK,QAAQ,KAAM;AAC7B,gBAAUA,KAAK,QAAQ,IAAK;AAC5B,gBAAUA,KAAI,OAAO;AAAA,IACvB;AAEA,YAAQ,QAAQ,KAAK,OAAO;AAAA,EAC9B;AAIA,SAAO,MAAM;AAEb,MAAI,SAAS,GAAG;AACd,cAAUA,KAAK,QAAQ,KAAM;AAC7B,cAAUA,KAAK,QAAQ,KAAM;AAC7B,cAAUA,KAAK,QAAQ,IAAK;AAC5B,cAAUA,KAAI,OAAO;AAAA,EACvB,WAAW,SAAS,GAAG;AACrB,cAAUA,KAAK,QAAQ,KAAM;AAC7B,cAAUA,KAAK,QAAQ,IAAK;AAC5B,cAAUA,KAAK,QAAQ,IAAK;AAC5B,cAAUA,KAAI;AAAA,EAChB,WAAW,SAAS,GAAG;AACrB,cAAUA,KAAK,QAAQ,IAAK;AAC5B,cAAUA,KAAK,QAAQ,IAAK;AAC5B,cAAUA,KAAI;AACd,cAAUA,KAAI;AAAA,EAChB;AAEA,SAAO;AACT;AAEA,SAAS,SAAS,KAAK;AACrB,SAAO,OAAO,UAAU,SAAS,KAAK,GAAG,MAAO;AAClD;AAEA,IAAI,SAAS,IAAI,KAAK,4BAA4B;AAAA,EAChD,MAAM;AAAA,EACN,SAAS;AAAA,EACT,WAAW;AAAA,EACX,WAAW;AAAA,EACX,WAAW;AACb,CAAC;AAED,IAAI,oBAAoB,OAAO,UAAU;AACzC,IAAI,cAAoB,OAAO,UAAU;AAEzC,SAAS,gBAAgBC,OAAM;AAC7B,MAAIA,UAAS;AAAM,WAAO;AAE1B,MAAI,aAAa,CAAC,GAAGJ,QAAO,QAAQ,MAAM,SAAS,YAC/C,SAASI;AAEb,OAAKJ,SAAQ,GAAG,SAAS,OAAO,QAAQA,SAAQ,QAAQA,UAAS,GAAG;AAClE,WAAO,OAAOA;AACd,iBAAa;AAEb,QAAI,YAAY,KAAK,IAAI,MAAM;AAAmB,aAAO;AAEzD,SAAK,WAAW,MAAM;AACpB,UAAI,kBAAkB,KAAK,MAAM,OAAO,GAAG;AACzC,YAAI,CAAC;AAAY,uBAAa;AAAA;AACzB,iBAAO;AAAA,MACd;AAAA,IACF;AAEA,QAAI,CAAC;AAAY,aAAO;AAExB,QAAI,WAAW,QAAQ,OAAO,MAAM;AAAI,iBAAW,KAAK,OAAO;AAAA;AAC1D,aAAO;AAAA,EACd;AAEA,SAAO;AACT;AAEA,SAAS,kBAAkBI,OAAM;AAC/B,SAAOA,UAAS,OAAOA,QAAO,CAAC;AACjC;AAEA,IAAI,OAAO,IAAI,KAAK,0BAA0B;AAAA,EAC5C,MAAM;AAAA,EACN,SAAS;AAAA,EACT,WAAW;AACb,CAAC;AAED,IAAI,cAAc,OAAO,UAAU;AAEnC,SAAS,iBAAiBA,OAAM;AAC9B,MAAIA,UAAS;AAAM,WAAO;AAE1B,MAAIJ,QAAO,QAAQ,MAAM,MAAM,QAC3B,SAASI;AAEb,WAAS,IAAI,MAAM,OAAO,MAAM;AAEhC,OAAKJ,SAAQ,GAAG,SAAS,OAAO,QAAQA,SAAQ,QAAQA,UAAS,GAAG;AAClE,WAAO,OAAOA;AAEd,QAAI,YAAY,KAAK,IAAI,MAAM;AAAmB,aAAO;AAEzD,WAAO,OAAO,KAAK,IAAI;AAEvB,QAAI,KAAK,WAAW;AAAG,aAAO;AAE9B,WAAOA,UAAS,CAAE,KAAK,IAAI,KAAK,KAAK,GAAI;AAAA,EAC3C;AAEA,SAAO;AACT;AAEA,SAAS,mBAAmBI,OAAM;AAChC,MAAIA,UAAS;AAAM,WAAO,CAAC;AAE3B,MAAIJ,QAAO,QAAQ,MAAM,MAAM,QAC3B,SAASI;AAEb,WAAS,IAAI,MAAM,OAAO,MAAM;AAEhC,OAAKJ,SAAQ,GAAG,SAAS,OAAO,QAAQA,SAAQ,QAAQA,UAAS,GAAG;AAClE,WAAO,OAAOA;AAEd,WAAO,OAAO,KAAK,IAAI;AAEvB,WAAOA,UAAS,CAAE,KAAK,IAAI,KAAK,KAAK,GAAI;AAAA,EAC3C;AAEA,SAAO;AACT;AAEA,IAAI,QAAQ,IAAI,KAAK,2BAA2B;AAAA,EAC9C,MAAM;AAAA,EACN,SAAS;AAAA,EACT,WAAW;AACb,CAAC;AAED,IAAI,oBAAoB,OAAO,UAAU;AAEzC,SAAS,eAAeI,OAAM;AAC5B,MAAIA,UAAS;AAAM,WAAO;AAE1B,MAAI,KAAK,SAASA;AAElB,OAAK,OAAO,QAAQ;AAClB,QAAI,kBAAkB,KAAK,QAAQ,GAAG,GAAG;AACvC,UAAI,OAAO,SAAS;AAAM,eAAO;AAAA,IACnC;AAAA,EACF;AAEA,SAAO;AACT;AAEA,SAAS,iBAAiBA,OAAM;AAC9B,SAAOA,UAAS,OAAOA,QAAO,CAAC;AACjC;AAEA,IAAI,MAAM,IAAI,KAAK,yBAAyB;AAAA,EAC1C,MAAM;AAAA,EACN,SAAS;AAAA,EACT,WAAW;AACb,CAAC;AAED,IAAI,WAAW,KAAK,OAAO;AAAA,EACzB,UAAU;AAAA,IACR;AAAA,IACA;AAAA,EACF;AAAA,EACA,UAAU;AAAA,IACR;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF,CAAC;AAUD,IAAI,oBAAoB,OAAO,UAAU;AAGzC,IAAI,kBAAoB;AACxB,IAAI,mBAAoB;AACxB,IAAI,mBAAoB;AACxB,IAAI,oBAAoB;AAGxB,IAAI,gBAAiB;AACrB,IAAI,iBAAiB;AACrB,IAAI,gBAAiB;AAGrB,IAAI,wBAAgC;AACpC,IAAI,gCAAgC;AACpC,IAAI,0BAAgC;AACpC,IAAI,qBAAgC;AACpC,IAAI,kBAAgC;AAGpC,SAAS,OAAO,KAAK;AAAE,SAAO,OAAO,UAAU,SAAS,KAAK,GAAG;AAAG;AAEnE,SAAS,OAAO,GAAG;AACjB,SAAQ,MAAM,MAAkB,MAAM;AACxC;AAEA,SAAS,eAAe,GAAG;AACzB,SAAQ,MAAM,KAAmB,MAAM;AACzC;AAEA,SAAS,aAAa,GAAG;AACvB,SAAQ,MAAM,KACN,MAAM,MACN,MAAM,MACN,MAAM;AAChB;AAEA,SAAS,kBAAkB,GAAG;AAC5B,SAAO,MAAM,MACN,MAAM,MACN,MAAM,MACN,MAAM,OACN,MAAM;AACf;AAEA,SAAS,YAAY,GAAG;AACtB,MAAI;AAEJ,MAAK,MAAe,KAAO,KAAK,IAAc;AAC5C,WAAO,IAAI;AAAA,EACb;AAGA,OAAK,IAAI;AAET,MAAK,MAAe,MAAQ,MAAM,KAAc;AAC9C,WAAO,KAAK,KAAO;AAAA,EACrB;AAEA,SAAO;AACT;AAEA,SAAS,cAAc,GAAG;AACxB,MAAI,MAAM,KAAa;AAAE,WAAO;AAAA,EAAG;AACnC,MAAI,MAAM,KAAa;AAAE,WAAO;AAAA,EAAG;AACnC,MAAI,MAAM,IAAa;AAAE,WAAO;AAAA,EAAG;AACnC,SAAO;AACT;AAEA,SAAS,gBAAgB,GAAG;AAC1B,MAAK,MAAe,KAAO,KAAK,IAAc;AAC5C,WAAO,IAAI;AAAA,EACb;AAEA,SAAO;AACT;AAEA,SAAS,qBAAqB,GAAG;AAE/B,SAAQ,MAAM,KAAe,OACtB,MAAM,KAAe,SACrB,MAAM,KAAe,OACrB,MAAM,MAAe,MACrB,MAAM,IAAiB,MACvB,MAAM,MAAe,OACrB,MAAM,MAAe,OACrB,MAAM,MAAe,OACrB,MAAM,MAAe,OACrB,MAAM,MAAe,SACrB,MAAM,KAAmB,MACzB,MAAM,KAAe,MACrB,MAAM,KAAe,MACrB,MAAM,KAAe,OACrB,MAAM,KAAe,SACrB,MAAM,KAAe,SACrB,MAAM,KAAe,WACrB,MAAM,KAAe,WAAW;AACzC;AAEA,SAAS,kBAAkB,GAAG;AAC5B,MAAI,KAAK,OAAQ;AACf,WAAO,OAAO,aAAa,CAAC;AAAA,EAC9B;AAGA,SAAO,OAAO;AAAA,KACV,IAAI,SAAa,MAAM;AAAA,KACvB,IAAI,QAAY,QAAU;AAAA,EAC9B;AACF;AAEA,IAAI,oBAAoB,IAAI,MAAM,GAAG;AACrC,IAAI,kBAAkB,IAAI,MAAM,GAAG;AACnC,KAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC5B,oBAAkB,KAAK,qBAAqB,CAAC,IAAI,IAAI;AACrD,kBAAgB,KAAK,qBAAqB,CAAC;AAC7C;AAHS;AAMT,SAAS,QAAQ,OAAO,SAAS;AAC/B,OAAK,QAAQ;AAEb,OAAK,WAAY,QAAQ,eAAgB;AACzC,OAAK,SAAY,QAAQ,aAAgB;AACzC,OAAK,YAAY,QAAQ,gBAAgB;AAGzC,OAAK,SAAY,QAAQ,aAAgB;AAEzC,OAAK,OAAY,QAAQ,WAAgB;AACzC,OAAK,WAAY,QAAQ,eAAgB;AAEzC,OAAK,gBAAgB,KAAK,OAAO;AACjC,OAAK,UAAgB,KAAK,OAAO;AAEjC,OAAK,SAAa,MAAM;AACxB,OAAK,WAAa;AAClB,OAAK,OAAa;AAClB,OAAK,YAAa;AAClB,OAAK,aAAa;AAIlB,OAAK,iBAAiB;AAEtB,OAAK,YAAY,CAAC;AAYpB;AAGA,SAAS,cAAc,OAAO,SAAS;AACrC,MAAI,OAAO;AAAA,IACT,MAAU,MAAM;AAAA,IAChB,QAAU,MAAM,MAAM,MAAM,GAAG,EAAE;AAAA,IACjC,UAAU,MAAM;AAAA,IAChB,MAAU,MAAM;AAAA,IAChB,QAAU,MAAM,WAAW,MAAM;AAAA,EACnC;AAEA,OAAK,UAAU,QAAQ,IAAI;AAE3B,SAAO,IAAI,UAAU,SAAS,IAAI;AACpC;AAEA,SAAS,WAAW,OAAO,SAAS;AAClC,QAAM,cAAc,OAAO,OAAO;AACpC;AAEA,SAAS,aAAa,OAAO,SAAS;AACpC,MAAI,MAAM,WAAW;AACnB,UAAM,UAAU,KAAK,MAAM,cAAc,OAAO,OAAO,CAAC;AAAA,EAC1D;AACF;AAGA,IAAI,oBAAoB;AAAA,EAEtB,MAAM,SAAS,oBAAoB,OAAO,MAAM,MAAM;AAEpD,QAAI,OAAO,OAAO;AAElB,QAAI,MAAM,YAAY,MAAM;AAC1B,iBAAW,OAAO,gCAAgC;AAAA,IACpD;AAEA,QAAI,KAAK,WAAW,GAAG;AACrB,iBAAW,OAAO,6CAA6C;AAAA,IACjE;AAEA,YAAQ,uBAAuB,KAAK,KAAK,EAAE;AAE3C,QAAI,UAAU,MAAM;AAClB,iBAAW,OAAO,2CAA2C;AAAA,IAC/D;AAEA,YAAQ,SAAS,MAAM,IAAI,EAAE;AAC7B,YAAQ,SAAS,MAAM,IAAI,EAAE;AAE7B,QAAI,UAAU,GAAG;AACf,iBAAW,OAAO,2CAA2C;AAAA,IAC/D;AAEA,UAAM,UAAU,KAAK;AACrB,UAAM,kBAAmB,QAAQ;AAEjC,QAAI,UAAU,KAAK,UAAU,GAAG;AAC9B,mBAAa,OAAO,0CAA0C;AAAA,IAChE;AAAA,EACF;AAAA,EAEA,KAAK,SAAS,mBAAmB,OAAO,MAAM,MAAM;AAElD,QAAI,QAAQ;AAEZ,QAAI,KAAK,WAAW,GAAG;AACrB,iBAAW,OAAO,6CAA6C;AAAA,IACjE;AAEA,aAAS,KAAK;AACd,aAAS,KAAK;AAEd,QAAI,CAAC,mBAAmB,KAAK,MAAM,GAAG;AACpC,iBAAW,OAAO,6DAA6D;AAAA,IACjF;AAEA,QAAI,kBAAkB,KAAK,MAAM,QAAQ,MAAM,GAAG;AAChD,iBAAW,OAAO,gDAAgD,SAAS,cAAc;AAAA,IAC3F;AAEA,QAAI,CAAC,gBAAgB,KAAK,MAAM,GAAG;AACjC,iBAAW,OAAO,8DAA8D;AAAA,IAClF;AAEA,QAAI;AACF,eAAS,mBAAmB,MAAM;AAAA,IACpC,SAAS,KAAP;AACA,iBAAW,OAAO,8BAA8B,MAAM;AAAA,IACxD;AAEA,UAAM,OAAO,UAAU;AAAA,EACzB;AACF;AAGA,SAAS,eAAe,OAAO,OAAOK,MAAK,WAAW;AACpD,MAAI,WAAW,SAAS,YAAY;AAEpC,MAAI,QAAQA,MAAK;AACf,cAAU,MAAM,MAAM,MAAM,OAAOA,IAAG;AAEtC,QAAI,WAAW;AACb,WAAK,YAAY,GAAG,UAAU,QAAQ,QAAQ,YAAY,SAAS,aAAa,GAAG;AACjF,qBAAa,QAAQ,WAAW,SAAS;AACzC,YAAI,EAAE,eAAe,KACd,MAAQ,cAAc,cAAc,UAAY;AACrD,qBAAW,OAAO,+BAA+B;AAAA,QACnD;AAAA,MACF;AAAA,IACF,WAAW,sBAAsB,KAAK,OAAO,GAAG;AAC9C,iBAAW,OAAO,8CAA8C;AAAA,IAClE;AAEA,UAAM,UAAU;AAAA,EAClB;AACF;AAEA,SAAS,cAAc,OAAO,aAAa,QAAQ,iBAAiB;AAClE,MAAI,YAAY,KAAKT,QAAO;AAE5B,MAAI,CAAC,OAAO,SAAS,MAAM,GAAG;AAC5B,eAAW,OAAO,mEAAmE;AAAA,EACvF;AAEA,eAAa,OAAO,KAAK,MAAM;AAE/B,OAAKA,SAAQ,GAAG,WAAW,WAAW,QAAQA,SAAQ,UAAUA,UAAS,GAAG;AAC1E,UAAM,WAAWA;AAEjB,QAAI,CAAC,kBAAkB,KAAK,aAAa,GAAG,GAAG;AAC7C,kBAAY,OAAO,OAAO;AAC1B,sBAAgB,OAAO;AAAA,IACzB;AAAA,EACF;AACF;AAEA,SAAS,iBAAiB,OAAO,SAAS,iBAAiB,QAAQ,SAAS,WAC1E,WAAW,gBAAgB,UAAU;AAErC,MAAIA,QAAO;AAKX,MAAI,MAAM,QAAQ,OAAO,GAAG;AAC1B,cAAU,MAAM,UAAU,MAAM,KAAK,OAAO;AAE5C,SAAKA,SAAQ,GAAG,WAAW,QAAQ,QAAQA,SAAQ,UAAUA,UAAS,GAAG;AACvE,UAAI,MAAM,QAAQ,QAAQA,OAAM,GAAG;AACjC,mBAAW,OAAO,6CAA6C;AAAA,MACjE;AAEA,UAAI,OAAO,YAAY,YAAY,OAAO,QAAQA,OAAM,MAAM,mBAAmB;AAC/E,gBAAQA,UAAS;AAAA,MACnB;AAAA,IACF;AAAA,EACF;AAKA,MAAI,OAAO,YAAY,YAAY,OAAO,OAAO,MAAM,mBAAmB;AACxE,cAAU;AAAA,EACZ;AAGA,YAAU,OAAO,OAAO;AAExB,MAAI,YAAY,MAAM;AACpB,cAAU,CAAC;AAAA,EACb;AAEA,MAAI,WAAW,2BAA2B;AACxC,QAAI,MAAM,QAAQ,SAAS,GAAG;AAC5B,WAAKA,SAAQ,GAAG,WAAW,UAAU,QAAQA,SAAQ,UAAUA,UAAS,GAAG;AACzE,sBAAc,OAAO,SAAS,UAAUA,SAAQ,eAAe;AAAA,MACjE;AAAA,IACF,OAAO;AACL,oBAAc,OAAO,SAAS,WAAW,eAAe;AAAA,IAC1D;AAAA,EACF,OAAO;AACL,QAAI,CAAC,MAAM,QACP,CAAC,kBAAkB,KAAK,iBAAiB,OAAO,KAChD,kBAAkB,KAAK,SAAS,OAAO,GAAG;AAC5C,YAAM,OAAO,aAAa,MAAM;AAChC,YAAM,YAAY,kBAAkB,MAAM;AAC1C,YAAM,WAAW,YAAY,MAAM;AACnC,iBAAW,OAAO,wBAAwB;AAAA,IAC5C;AAGA,QAAI,YAAY,aAAa;AAC3B,aAAO,eAAe,SAAS,SAAS;AAAA,QACtC,cAAc;AAAA,QACd,YAAY;AAAA,QACZ,UAAU;AAAA,QACV,OAAO;AAAA,MACT,CAAC;AAAA,IACH,OAAO;AACL,cAAQ,WAAW;AAAA,IACrB;AACA,WAAO,gBAAgB;AAAA,EACzB;AAEA,SAAO;AACT;AAEA,SAAS,cAAc,OAAO;AAC5B,MAAI;AAEJ,OAAK,MAAM,MAAM,WAAW,MAAM,QAAQ;AAE1C,MAAI,OAAO,IAAc;AACvB,UAAM;AAAA,EACR,WAAW,OAAO,IAAc;AAC9B,UAAM;AACN,QAAI,MAAM,MAAM,WAAW,MAAM,QAAQ,MAAM,IAAc;AAC3D,YAAM;AAAA,IACR;AAAA,EACF,OAAO;AACL,eAAW,OAAO,0BAA0B;AAAA,EAC9C;AAEA,QAAM,QAAQ;AACd,QAAM,YAAY,MAAM;AACxB,QAAM,iBAAiB;AACzB;AAEA,SAAS,oBAAoB,OAAO,eAAe,aAAa;AAC9D,MAAI,aAAa,GACb,KAAK,MAAM,MAAM,WAAW,MAAM,QAAQ;AAE9C,SAAO,OAAO,GAAG;AACf,WAAO,eAAe,EAAE,GAAG;AACzB,UAAI,OAAO,KAAiB,MAAM,mBAAmB,IAAI;AACvD,cAAM,iBAAiB,MAAM;AAAA,MAC/B;AACA,WAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAAA,IAC9C;AAEA,QAAI,iBAAiB,OAAO,IAAa;AACvC,SAAG;AACD,aAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAAA,MAC9C,SAAS,OAAO,MAAgB,OAAO,MAAgB,OAAO;AAAA,IAChE;AAEA,QAAI,OAAO,EAAE,GAAG;AACd,oBAAc,KAAK;AAEnB,WAAK,MAAM,MAAM,WAAW,MAAM,QAAQ;AAC1C;AACA,YAAM,aAAa;AAEnB,aAAO,OAAO,IAAiB;AAC7B,cAAM;AACN,aAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAAA,MAC9C;AAAA,IACF,OAAO;AACL;AAAA,IACF;AAAA,EACF;AAEA,MAAI,gBAAgB,MAAM,eAAe,KAAK,MAAM,aAAa,aAAa;AAC5E,iBAAa,OAAO,uBAAuB;AAAA,EAC7C;AAEA,SAAO;AACT;AAEA,SAAS,sBAAsB,OAAO;AACpC,MAAI,YAAY,MAAM,UAClB;AAEJ,OAAK,MAAM,MAAM,WAAW,SAAS;AAIrC,OAAK,OAAO,MAAe,OAAO,OAC9B,OAAO,MAAM,MAAM,WAAW,YAAY,CAAC,KAC3C,OAAO,MAAM,MAAM,WAAW,YAAY,CAAC,GAAG;AAEhD,iBAAa;AAEb,SAAK,MAAM,MAAM,WAAW,SAAS;AAErC,QAAI,OAAO,KAAK,aAAa,EAAE,GAAG;AAChC,aAAO;AAAA,IACT;AAAA,EACF;AAEA,SAAO;AACT;AAEA,SAAS,iBAAiB,OAAO,OAAO;AACtC,MAAI,UAAU,GAAG;AACf,UAAM,UAAU;AAAA,EAClB,WAAW,QAAQ,GAAG;AACpB,UAAM,UAAU,OAAO,OAAO,MAAM,QAAQ,CAAC;AAAA,EAC/C;AACF;AAGA,SAAS,gBAAgB,OAAO,YAAY,sBAAsB;AAChE,MAAI,WACA,WACA,cACA,YACA,mBACA,OACA,YACA,aACA,QAAQ,MAAM,MACd,UAAU,MAAM,QAChB;AAEJ,OAAK,MAAM,MAAM,WAAW,MAAM,QAAQ;AAE1C,MAAI,aAAa,EAAE,KACf,kBAAkB,EAAE,KACpB,OAAO,MACP,OAAO,MACP,OAAO,MACP,OAAO,MACP,OAAO,OACP,OAAO,MACP,OAAO,MACP,OAAO,MACP,OAAO,MACP,OAAO,MACP,OAAO,IAAa;AACtB,WAAO;AAAA,EACT;AAEA,MAAI,OAAO,MAAe,OAAO,IAAa;AAC5C,gBAAY,MAAM,MAAM,WAAW,MAAM,WAAW,CAAC;AAErD,QAAI,aAAa,SAAS,KACtB,wBAAwB,kBAAkB,SAAS,GAAG;AACxD,aAAO;AAAA,IACT;AAAA,EACF;AAEA,QAAM,OAAO;AACb,QAAM,SAAS;AACf,iBAAe,aAAa,MAAM;AAClC,sBAAoB;AAEpB,SAAO,OAAO,GAAG;AACf,QAAI,OAAO,IAAa;AACtB,kBAAY,MAAM,MAAM,WAAW,MAAM,WAAW,CAAC;AAErD,UAAI,aAAa,SAAS,KACtB,wBAAwB,kBAAkB,SAAS,GAAG;AACxD;AAAA,MACF;AAAA,IAEF,WAAW,OAAO,IAAa;AAC7B,kBAAY,MAAM,MAAM,WAAW,MAAM,WAAW,CAAC;AAErD,UAAI,aAAa,SAAS,GAAG;AAC3B;AAAA,MACF;AAAA,IAEF,WAAY,MAAM,aAAa,MAAM,aAAa,sBAAsB,KAAK,KAClE,wBAAwB,kBAAkB,EAAE,GAAG;AACxD;AAAA,IAEF,WAAW,OAAO,EAAE,GAAG;AACrB,cAAQ,MAAM;AACd,mBAAa,MAAM;AACnB,oBAAc,MAAM;AACpB,0BAAoB,OAAO,OAAO,EAAE;AAEpC,UAAI,MAAM,cAAc,YAAY;AAClC,4BAAoB;AACpB,aAAK,MAAM,MAAM,WAAW,MAAM,QAAQ;AAC1C;AAAA,MACF,OAAO;AACL,cAAM,WAAW;AACjB,cAAM,OAAO;AACb,cAAM,YAAY;AAClB,cAAM,aAAa;AACnB;AAAA,MACF;AAAA,IACF;AAEA,QAAI,mBAAmB;AACrB,qBAAe,OAAO,cAAc,YAAY,KAAK;AACrD,uBAAiB,OAAO,MAAM,OAAO,KAAK;AAC1C,qBAAe,aAAa,MAAM;AAClC,0BAAoB;AAAA,IACtB;AAEA,QAAI,CAAC,eAAe,EAAE,GAAG;AACvB,mBAAa,MAAM,WAAW;AAAA,IAChC;AAEA,SAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAAA,EAC9C;AAEA,iBAAe,OAAO,cAAc,YAAY,KAAK;AAErD,MAAI,MAAM,QAAQ;AAChB,WAAO;AAAA,EACT;AAEA,QAAM,OAAO;AACb,QAAM,SAAS;AACf,SAAO;AACT;AAEA,SAAS,uBAAuB,OAAO,YAAY;AACjD,MAAI,IACA,cAAc;AAElB,OAAK,MAAM,MAAM,WAAW,MAAM,QAAQ;AAE1C,MAAI,OAAO,IAAa;AACtB,WAAO;AAAA,EACT;AAEA,QAAM,OAAO;AACb,QAAM,SAAS;AACf,QAAM;AACN,iBAAe,aAAa,MAAM;AAElC,UAAQ,KAAK,MAAM,MAAM,WAAW,MAAM,QAAQ,OAAO,GAAG;AAC1D,QAAI,OAAO,IAAa;AACtB,qBAAe,OAAO,cAAc,MAAM,UAAU,IAAI;AACxD,WAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAE5C,UAAI,OAAO,IAAa;AACtB,uBAAe,MAAM;AACrB,cAAM;AACN,qBAAa,MAAM;AAAA,MACrB,OAAO;AACL,eAAO;AAAA,MACT;AAAA,IAEF,WAAW,OAAO,EAAE,GAAG;AACrB,qBAAe,OAAO,cAAc,YAAY,IAAI;AACpD,uBAAiB,OAAO,oBAAoB,OAAO,OAAO,UAAU,CAAC;AACrE,qBAAe,aAAa,MAAM;AAAA,IAEpC,WAAW,MAAM,aAAa,MAAM,aAAa,sBAAsB,KAAK,GAAG;AAC7E,iBAAW,OAAO,8DAA8D;AAAA,IAElF,OAAO;AACL,YAAM;AACN,mBAAa,MAAM;AAAA,IACrB;AAAA,EACF;AAEA,aAAW,OAAO,4DAA4D;AAChF;AAEA,SAAS,uBAAuB,OAAO,YAAY;AACjD,MAAI,cACA,YACA,WACA,WACA,KACA;AAEJ,OAAK,MAAM,MAAM,WAAW,MAAM,QAAQ;AAE1C,MAAI,OAAO,IAAa;AACtB,WAAO;AAAA,EACT;AAEA,QAAM,OAAO;AACb,QAAM,SAAS;AACf,QAAM;AACN,iBAAe,aAAa,MAAM;AAElC,UAAQ,KAAK,MAAM,MAAM,WAAW,MAAM,QAAQ,OAAO,GAAG;AAC1D,QAAI,OAAO,IAAa;AACtB,qBAAe,OAAO,cAAc,MAAM,UAAU,IAAI;AACxD,YAAM;AACN,aAAO;AAAA,IAET,WAAW,OAAO,IAAa;AAC7B,qBAAe,OAAO,cAAc,MAAM,UAAU,IAAI;AACxD,WAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAE5C,UAAI,OAAO,EAAE,GAAG;AACd,4BAAoB,OAAO,OAAO,UAAU;AAAA,MAG9C,WAAW,KAAK,OAAO,kBAAkB,KAAK;AAC5C,cAAM,UAAU,gBAAgB;AAChC,cAAM;AAAA,MAER,YAAY,MAAM,cAAc,EAAE,KAAK,GAAG;AACxC,oBAAY;AACZ,oBAAY;AAEZ,eAAO,YAAY,GAAG,aAAa;AACjC,eAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAE5C,eAAK,MAAM,YAAY,EAAE,MAAM,GAAG;AAChC,yBAAa,aAAa,KAAK;AAAA,UAEjC,OAAO;AACL,uBAAW,OAAO,gCAAgC;AAAA,UACpD;AAAA,QACF;AAEA,cAAM,UAAU,kBAAkB,SAAS;AAE3C,cAAM;AAAA,MAER,OAAO;AACL,mBAAW,OAAO,yBAAyB;AAAA,MAC7C;AAEA,qBAAe,aAAa,MAAM;AAAA,IAEpC,WAAW,OAAO,EAAE,GAAG;AACrB,qBAAe,OAAO,cAAc,YAAY,IAAI;AACpD,uBAAiB,OAAO,oBAAoB,OAAO,OAAO,UAAU,CAAC;AACrE,qBAAe,aAAa,MAAM;AAAA,IAEpC,WAAW,MAAM,aAAa,MAAM,aAAa,sBAAsB,KAAK,GAAG;AAC7E,iBAAW,OAAO,8DAA8D;AAAA,IAElF,OAAO;AACL,YAAM;AACN,mBAAa,MAAM;AAAA,IACrB;AAAA,EACF;AAEA,aAAW,OAAO,4DAA4D;AAChF;AAEA,SAAS,mBAAmB,OAAO,YAAY;AAC7C,MAAI,WAAW,MACX,OACA,YACA,MACA,OAAW,MAAM,KACjB,SACA,UAAW,MAAM,QACjB,WACA,YACA,QACA,gBACA,WACA,kBAAkB,uBAAO,OAAO,IAAI,GACpC,SACA,QACA,WACA;AAEJ,OAAK,MAAM,MAAM,WAAW,MAAM,QAAQ;AAE1C,MAAI,OAAO,IAAa;AACtB,iBAAa;AACb,gBAAY;AACZ,cAAU,CAAC;AAAA,EACb,WAAW,OAAO,KAAa;AAC7B,iBAAa;AACb,gBAAY;AACZ,cAAU,CAAC;AAAA,EACb,OAAO;AACL,WAAO;AAAA,EACT;AAEA,MAAI,MAAM,WAAW,MAAM;AACzB,UAAM,UAAU,MAAM,UAAU;AAAA,EAClC;AAEA,OAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAE5C,SAAO,OAAO,GAAG;AACf,wBAAoB,OAAO,MAAM,UAAU;AAE3C,SAAK,MAAM,MAAM,WAAW,MAAM,QAAQ;AAE1C,QAAI,OAAO,YAAY;AACrB,YAAM;AACN,YAAM,MAAM;AACZ,YAAM,SAAS;AACf,YAAM,OAAO,YAAY,YAAY;AACrC,YAAM,SAAS;AACf,aAAO;AAAA,IACT,WAAW,CAAC,UAAU;AACpB,iBAAW,OAAO,8CAA8C;AAAA,IAClE,WAAW,OAAO,IAAa;AAE7B,iBAAW,OAAO,0CAA0C;AAAA,IAC9D;AAEA,aAAS,UAAU,YAAY;AAC/B,aAAS,iBAAiB;AAE1B,QAAI,OAAO,IAAa;AACtB,kBAAY,MAAM,MAAM,WAAW,MAAM,WAAW,CAAC;AAErD,UAAI,aAAa,SAAS,GAAG;AAC3B,iBAAS,iBAAiB;AAC1B,cAAM;AACN,4BAAoB,OAAO,MAAM,UAAU;AAAA,MAC7C;AAAA,IACF;AAEA,YAAQ,MAAM;AACd,iBAAa,MAAM;AACnB,WAAO,MAAM;AACb,gBAAY,OAAO,YAAY,iBAAiB,OAAO,IAAI;AAC3D,aAAS,MAAM;AACf,cAAU,MAAM;AAChB,wBAAoB,OAAO,MAAM,UAAU;AAE3C,SAAK,MAAM,MAAM,WAAW,MAAM,QAAQ;AAE1C,SAAK,kBAAkB,MAAM,SAAS,UAAU,OAAO,IAAa;AAClE,eAAS;AACT,WAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAC5C,0BAAoB,OAAO,MAAM,UAAU;AAC3C,kBAAY,OAAO,YAAY,iBAAiB,OAAO,IAAI;AAC3D,kBAAY,MAAM;AAAA,IACpB;AAEA,QAAI,WAAW;AACb,uBAAiB,OAAO,SAAS,iBAAiB,QAAQ,SAAS,WAAW,OAAO,YAAY,IAAI;AAAA,IACvG,WAAW,QAAQ;AACjB,cAAQ,KAAK,iBAAiB,OAAO,MAAM,iBAAiB,QAAQ,SAAS,WAAW,OAAO,YAAY,IAAI,CAAC;AAAA,IAClH,OAAO;AACL,cAAQ,KAAK,OAAO;AAAA,IACtB;AAEA,wBAAoB,OAAO,MAAM,UAAU;AAE3C,SAAK,MAAM,MAAM,WAAW,MAAM,QAAQ;AAE1C,QAAI,OAAO,IAAa;AACtB,iBAAW;AACX,WAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAAA,IAC9C,OAAO;AACL,iBAAW;AAAA,IACb;AAAA,EACF;AAEA,aAAW,OAAO,uDAAuD;AAC3E;AAEA,SAAS,gBAAgB,OAAO,YAAY;AAC1C,MAAI,cACA,SACA,WAAiB,eACjB,iBAAiB,OACjB,iBAAiB,OACjB,aAAiB,YACjB,aAAiB,GACjB,iBAAiB,OACjB,KACA;AAEJ,OAAK,MAAM,MAAM,WAAW,MAAM,QAAQ;AAE1C,MAAI,OAAO,KAAa;AACtB,cAAU;AAAA,EACZ,WAAW,OAAO,IAAa;AAC7B,cAAU;AAAA,EACZ,OAAO;AACL,WAAO;AAAA,EACT;AAEA,QAAM,OAAO;AACb,QAAM,SAAS;AAEf,SAAO,OAAO,GAAG;AACf,SAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAE5C,QAAI,OAAO,MAAe,OAAO,IAAa;AAC5C,UAAI,kBAAkB,UAAU;AAC9B,mBAAY,OAAO,KAAe,gBAAgB;AAAA,MACpD,OAAO;AACL,mBAAW,OAAO,sCAAsC;AAAA,MAC1D;AAAA,IAEF,YAAY,MAAM,gBAAgB,EAAE,MAAM,GAAG;AAC3C,UAAI,QAAQ,GAAG;AACb,mBAAW,OAAO,8EAA8E;AAAA,MAClG,WAAW,CAAC,gBAAgB;AAC1B,qBAAa,aAAa,MAAM;AAChC,yBAAiB;AAAA,MACnB,OAAO;AACL,mBAAW,OAAO,2CAA2C;AAAA,MAC/D;AAAA,IAEF,OAAO;AACL;AAAA,IACF;AAAA,EACF;AAEA,MAAI,eAAe,EAAE,GAAG;AACtB,OAAG;AAAE,WAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAAA,IAAG,SAC7C,eAAe,EAAE;AAExB,QAAI,OAAO,IAAa;AACtB,SAAG;AAAE,aAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAAA,MAAG,SAC7C,CAAC,OAAO,EAAE,KAAM,OAAO;AAAA,IAChC;AAAA,EACF;AAEA,SAAO,OAAO,GAAG;AACf,kBAAc,KAAK;AACnB,UAAM,aAAa;AAEnB,SAAK,MAAM,MAAM,WAAW,MAAM,QAAQ;AAE1C,YAAQ,CAAC,kBAAkB,MAAM,aAAa,eACtC,OAAO,IAAkB;AAC/B,YAAM;AACN,WAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAAA,IAC9C;AAEA,QAAI,CAAC,kBAAkB,MAAM,aAAa,YAAY;AACpD,mBAAa,MAAM;AAAA,IACrB;AAEA,QAAI,OAAO,EAAE,GAAG;AACd;AACA;AAAA,IACF;AAGA,QAAI,MAAM,aAAa,YAAY;AAGjC,UAAI,aAAa,eAAe;AAC9B,cAAM,UAAU,OAAO,OAAO,MAAM,iBAAiB,IAAI,aAAa,UAAU;AAAA,MAClF,WAAW,aAAa,eAAe;AACrC,YAAI,gBAAgB;AAClB,gBAAM,UAAU;AAAA,QAClB;AAAA,MACF;AAGA;AAAA,IACF;AAGA,QAAI,SAAS;AAGX,UAAI,eAAe,EAAE,GAAG;AACtB,yBAAiB;AAEjB,cAAM,UAAU,OAAO,OAAO,MAAM,iBAAiB,IAAI,aAAa,UAAU;AAAA,MAGlF,WAAW,gBAAgB;AACzB,yBAAiB;AACjB,cAAM,UAAU,OAAO,OAAO,MAAM,aAAa,CAAC;AAAA,MAGpD,WAAW,eAAe,GAAG;AAC3B,YAAI,gBAAgB;AAClB,gBAAM,UAAU;AAAA,QAClB;AAAA,MAGF,OAAO;AACL,cAAM,UAAU,OAAO,OAAO,MAAM,UAAU;AAAA,MAChD;AAAA,IAGF,OAAO;AAEL,YAAM,UAAU,OAAO,OAAO,MAAM,iBAAiB,IAAI,aAAa,UAAU;AAAA,IAClF;AAEA,qBAAiB;AACjB,qBAAiB;AACjB,iBAAa;AACb,mBAAe,MAAM;AAErB,WAAO,CAAC,OAAO,EAAE,KAAM,OAAO,GAAI;AAChC,WAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAAA,IAC9C;AAEA,mBAAe,OAAO,cAAc,MAAM,UAAU,KAAK;AAAA,EAC3D;AAEA,SAAO;AACT;AAEA,SAAS,kBAAkB,OAAO,YAAY;AAC5C,MAAI,OACA,OAAY,MAAM,KAClB,UAAY,MAAM,QAClB,UAAY,CAAC,GACb,WACA,WAAY,OACZ;AAIJ,MAAI,MAAM,mBAAmB;AAAI,WAAO;AAExC,MAAI,MAAM,WAAW,MAAM;AACzB,UAAM,UAAU,MAAM,UAAU;AAAA,EAClC;AAEA,OAAK,MAAM,MAAM,WAAW,MAAM,QAAQ;AAE1C,SAAO,OAAO,GAAG;AACf,QAAI,MAAM,mBAAmB,IAAI;AAC/B,YAAM,WAAW,MAAM;AACvB,iBAAW,OAAO,gDAAgD;AAAA,IACpE;AAEA,QAAI,OAAO,IAAa;AACtB;AAAA,IACF;AAEA,gBAAY,MAAM,MAAM,WAAW,MAAM,WAAW,CAAC;AAErD,QAAI,CAAC,aAAa,SAAS,GAAG;AAC5B;AAAA,IACF;AAEA,eAAW;AACX,UAAM;AAEN,QAAI,oBAAoB,OAAO,MAAM,EAAE,GAAG;AACxC,UAAI,MAAM,cAAc,YAAY;AAClC,gBAAQ,KAAK,IAAI;AACjB,aAAK,MAAM,MAAM,WAAW,MAAM,QAAQ;AAC1C;AAAA,MACF;AAAA,IACF;AAEA,YAAQ,MAAM;AACd,gBAAY,OAAO,YAAY,kBAAkB,OAAO,IAAI;AAC5D,YAAQ,KAAK,MAAM,MAAM;AACzB,wBAAoB,OAAO,MAAM,EAAE;AAEnC,SAAK,MAAM,MAAM,WAAW,MAAM,QAAQ;AAE1C,SAAK,MAAM,SAAS,SAAS,MAAM,aAAa,eAAgB,OAAO,GAAI;AACzE,iBAAW,OAAO,qCAAqC;AAAA,IACzD,WAAW,MAAM,aAAa,YAAY;AACxC;AAAA,IACF;AAAA,EACF;AAEA,MAAI,UAAU;AACZ,UAAM,MAAM;AACZ,UAAM,SAAS;AACf,UAAM,OAAO;AACb,UAAM,SAAS;AACf,WAAO;AAAA,EACT;AACA,SAAO;AACT;AAEA,SAAS,iBAAiB,OAAO,YAAY,YAAY;AACvD,MAAI,WACA,cACA,OACA,UACA,eACA,SACA,OAAgB,MAAM,KACtB,UAAgB,MAAM,QACtB,UAAgB,CAAC,GACjB,kBAAkB,uBAAO,OAAO,IAAI,GACpC,SAAgB,MAChB,UAAgB,MAChB,YAAgB,MAChB,gBAAgB,OAChB,WAAgB,OAChB;AAIJ,MAAI,MAAM,mBAAmB;AAAI,WAAO;AAExC,MAAI,MAAM,WAAW,MAAM;AACzB,UAAM,UAAU,MAAM,UAAU;AAAA,EAClC;AAEA,OAAK,MAAM,MAAM,WAAW,MAAM,QAAQ;AAE1C,SAAO,OAAO,GAAG;AACf,QAAI,CAAC,iBAAiB,MAAM,mBAAmB,IAAI;AACjD,YAAM,WAAW,MAAM;AACvB,iBAAW,OAAO,gDAAgD;AAAA,IACpE;AAEA,gBAAY,MAAM,MAAM,WAAW,MAAM,WAAW,CAAC;AACrD,YAAQ,MAAM;AAMd,SAAK,OAAO,MAAe,OAAO,OAAgB,aAAa,SAAS,GAAG;AAEzE,UAAI,OAAO,IAAa;AACtB,YAAI,eAAe;AACjB,2BAAiB,OAAO,SAAS,iBAAiB,QAAQ,SAAS,MAAM,UAAU,eAAe,OAAO;AACzG,mBAAS,UAAU,YAAY;AAAA,QACjC;AAEA,mBAAW;AACX,wBAAgB;AAChB,uBAAe;AAAA,MAEjB,WAAW,eAAe;AAExB,wBAAgB;AAChB,uBAAe;AAAA,MAEjB,OAAO;AACL,mBAAW,OAAO,mGAAmG;AAAA,MACvH;AAEA,YAAM,YAAY;AAClB,WAAK;AAAA,IAKP,OAAO;AACL,iBAAW,MAAM;AACjB,sBAAgB,MAAM;AACtB,gBAAU,MAAM;AAEhB,UAAI,CAAC,YAAY,OAAO,YAAY,kBAAkB,OAAO,IAAI,GAAG;AAGlE;AAAA,MACF;AAEA,UAAI,MAAM,SAAS,OAAO;AACxB,aAAK,MAAM,MAAM,WAAW,MAAM,QAAQ;AAE1C,eAAO,eAAe,EAAE,GAAG;AACzB,eAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAAA,QAC9C;AAEA,YAAI,OAAO,IAAa;AACtB,eAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAE5C,cAAI,CAAC,aAAa,EAAE,GAAG;AACrB,uBAAW,OAAO,yFAAyF;AAAA,UAC7G;AAEA,cAAI,eAAe;AACjB,6BAAiB,OAAO,SAAS,iBAAiB,QAAQ,SAAS,MAAM,UAAU,eAAe,OAAO;AACzG,qBAAS,UAAU,YAAY;AAAA,UACjC;AAEA,qBAAW;AACX,0BAAgB;AAChB,yBAAe;AACf,mBAAS,MAAM;AACf,oBAAU,MAAM;AAAA,QAElB,WAAW,UAAU;AACnB,qBAAW,OAAO,0DAA0D;AAAA,QAE9E,OAAO;AACL,gBAAM,MAAM;AACZ,gBAAM,SAAS;AACf,iBAAO;AAAA,QACT;AAAA,MAEF,WAAW,UAAU;AACnB,mBAAW,OAAO,gFAAgF;AAAA,MAEpG,OAAO;AACL,cAAM,MAAM;AACZ,cAAM,SAAS;AACf,eAAO;AAAA,MACT;AAAA,IACF;AAKA,QAAI,MAAM,SAAS,SAAS,MAAM,aAAa,YAAY;AACzD,UAAI,eAAe;AACjB,mBAAW,MAAM;AACjB,wBAAgB,MAAM;AACtB,kBAAU,MAAM;AAAA,MAClB;AAEA,UAAI,YAAY,OAAO,YAAY,mBAAmB,MAAM,YAAY,GAAG;AACzE,YAAI,eAAe;AACjB,oBAAU,MAAM;AAAA,QAClB,OAAO;AACL,sBAAY,MAAM;AAAA,QACpB;AAAA,MACF;AAEA,UAAI,CAAC,eAAe;AAClB,yBAAiB,OAAO,SAAS,iBAAiB,QAAQ,SAAS,WAAW,UAAU,eAAe,OAAO;AAC9G,iBAAS,UAAU,YAAY;AAAA,MACjC;AAEA,0BAAoB,OAAO,MAAM,EAAE;AACnC,WAAK,MAAM,MAAM,WAAW,MAAM,QAAQ;AAAA,IAC5C;AAEA,SAAK,MAAM,SAAS,SAAS,MAAM,aAAa,eAAgB,OAAO,GAAI;AACzE,iBAAW,OAAO,oCAAoC;AAAA,IACxD,WAAW,MAAM,aAAa,YAAY;AACxC;AAAA,IACF;AAAA,EACF;AAOA,MAAI,eAAe;AACjB,qBAAiB,OAAO,SAAS,iBAAiB,QAAQ,SAAS,MAAM,UAAU,eAAe,OAAO;AAAA,EAC3G;AAGA,MAAI,UAAU;AACZ,UAAM,MAAM;AACZ,UAAM,SAAS;AACf,UAAM,OAAO;AACb,UAAM,SAAS;AAAA,EACjB;AAEA,SAAO;AACT;AAEA,SAAS,gBAAgB,OAAO;AAC9B,MAAI,WACA,aAAa,OACb,UAAa,OACb,WACA,SACA;AAEJ,OAAK,MAAM,MAAM,WAAW,MAAM,QAAQ;AAE1C,MAAI,OAAO;AAAa,WAAO;AAE/B,MAAI,MAAM,QAAQ,MAAM;AACtB,eAAW,OAAO,+BAA+B;AAAA,EACnD;AAEA,OAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAE5C,MAAI,OAAO,IAAa;AACtB,iBAAa;AACb,SAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAAA,EAE9C,WAAW,OAAO,IAAa;AAC7B,cAAU;AACV,gBAAY;AACZ,SAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAAA,EAE9C,OAAO;AACL,gBAAY;AAAA,EACd;AAEA,cAAY,MAAM;AAElB,MAAI,YAAY;AACd,OAAG;AAAE,WAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAAA,IAAG,SAC7C,OAAO,KAAK,OAAO;AAE1B,QAAI,MAAM,WAAW,MAAM,QAAQ;AACjC,gBAAU,MAAM,MAAM,MAAM,WAAW,MAAM,QAAQ;AACrD,WAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAAA,IAC9C,OAAO;AACL,iBAAW,OAAO,oDAAoD;AAAA,IACxE;AAAA,EACF,OAAO;AACL,WAAO,OAAO,KAAK,CAAC,aAAa,EAAE,GAAG;AAEpC,UAAI,OAAO,IAAa;AACtB,YAAI,CAAC,SAAS;AACZ,sBAAY,MAAM,MAAM,MAAM,YAAY,GAAG,MAAM,WAAW,CAAC;AAE/D,cAAI,CAAC,mBAAmB,KAAK,SAAS,GAAG;AACvC,uBAAW,OAAO,iDAAiD;AAAA,UACrE;AAEA,oBAAU;AACV,sBAAY,MAAM,WAAW;AAAA,QAC/B,OAAO;AACL,qBAAW,OAAO,6CAA6C;AAAA,QACjE;AAAA,MACF;AAEA,WAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAAA,IAC9C;AAEA,cAAU,MAAM,MAAM,MAAM,WAAW,MAAM,QAAQ;AAErD,QAAI,wBAAwB,KAAK,OAAO,GAAG;AACzC,iBAAW,OAAO,qDAAqD;AAAA,IACzE;AAAA,EACF;AAEA,MAAI,WAAW,CAAC,gBAAgB,KAAK,OAAO,GAAG;AAC7C,eAAW,OAAO,8CAA8C,OAAO;AAAA,EACzE;AAEA,MAAI;AACF,cAAU,mBAAmB,OAAO;AAAA,EACtC,SAAS,KAAP;AACA,eAAW,OAAO,4BAA4B,OAAO;AAAA,EACvD;AAEA,MAAI,YAAY;AACd,UAAM,MAAM;AAAA,EAEd,WAAW,kBAAkB,KAAK,MAAM,QAAQ,SAAS,GAAG;AAC1D,UAAM,MAAM,MAAM,OAAO,aAAa;AAAA,EAExC,WAAW,cAAc,KAAK;AAC5B,UAAM,MAAM,MAAM;AAAA,EAEpB,WAAW,cAAc,MAAM;AAC7B,UAAM,MAAM,uBAAuB;AAAA,EAErC,OAAO;AACL,eAAW,OAAO,4BAA4B,YAAY,GAAG;AAAA,EAC/D;AAEA,SAAO;AACT;AAEA,SAAS,mBAAmB,OAAO;AACjC,MAAI,WACA;AAEJ,OAAK,MAAM,MAAM,WAAW,MAAM,QAAQ;AAE1C,MAAI,OAAO;AAAa,WAAO;AAE/B,MAAI,MAAM,WAAW,MAAM;AACzB,eAAW,OAAO,mCAAmC;AAAA,EACvD;AAEA,OAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAC5C,cAAY,MAAM;AAElB,SAAO,OAAO,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,kBAAkB,EAAE,GAAG;AAC9D,SAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAAA,EAC9C;AAEA,MAAI,MAAM,aAAa,WAAW;AAChC,eAAW,OAAO,4DAA4D;AAAA,EAChF;AAEA,QAAM,SAAS,MAAM,MAAM,MAAM,WAAW,MAAM,QAAQ;AAC1D,SAAO;AACT;AAEA,SAAS,UAAU,OAAO;AACxB,MAAI,WAAW,OACX;AAEJ,OAAK,MAAM,MAAM,WAAW,MAAM,QAAQ;AAE1C,MAAI,OAAO;AAAa,WAAO;AAE/B,OAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAC5C,cAAY,MAAM;AAElB,SAAO,OAAO,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC,kBAAkB,EAAE,GAAG;AAC9D,SAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAAA,EAC9C;AAEA,MAAI,MAAM,aAAa,WAAW;AAChC,eAAW,OAAO,2DAA2D;AAAA,EAC/E;AAEA,UAAQ,MAAM,MAAM,MAAM,WAAW,MAAM,QAAQ;AAEnD,MAAI,CAAC,kBAAkB,KAAK,MAAM,WAAW,KAAK,GAAG;AACnD,eAAW,OAAO,yBAAyB,QAAQ,GAAG;AAAA,EACxD;AAEA,QAAM,SAAS,MAAM,UAAU;AAC/B,sBAAoB,OAAO,MAAM,EAAE;AACnC,SAAO;AACT;AAEA,SAAS,YAAY,OAAO,cAAc,aAAa,aAAa,cAAc;AAChF,MAAI,kBACA,mBACA,uBACA,eAAe,GACf,YAAa,OACb,aAAa,OACb,WACA,cACA,UACAM,OACA,YACA;AAEJ,MAAI,MAAM,aAAa,MAAM;AAC3B,UAAM,SAAS,QAAQ,KAAK;AAAA,EAC9B;AAEA,QAAM,MAAS;AACf,QAAM,SAAS;AACf,QAAM,OAAS;AACf,QAAM,SAAS;AAEf,qBAAmB,oBAAoB,wBACrC,sBAAsB,eACtB,qBAAsB;AAExB,MAAI,aAAa;AACf,QAAI,oBAAoB,OAAO,MAAM,EAAE,GAAG;AACxC,kBAAY;AAEZ,UAAI,MAAM,aAAa,cAAc;AACnC,uBAAe;AAAA,MACjB,WAAW,MAAM,eAAe,cAAc;AAC5C,uBAAe;AAAA,MACjB,WAAW,MAAM,aAAa,cAAc;AAC1C,uBAAe;AAAA,MACjB;AAAA,IACF;AAAA,EACF;AAEA,MAAI,iBAAiB,GAAG;AACtB,WAAO,gBAAgB,KAAK,KAAK,mBAAmB,KAAK,GAAG;AAC1D,UAAI,oBAAoB,OAAO,MAAM,EAAE,GAAG;AACxC,oBAAY;AACZ,gCAAwB;AAExB,YAAI,MAAM,aAAa,cAAc;AACnC,yBAAe;AAAA,QACjB,WAAW,MAAM,eAAe,cAAc;AAC5C,yBAAe;AAAA,QACjB,WAAW,MAAM,aAAa,cAAc;AAC1C,yBAAe;AAAA,QACjB;AAAA,MACF,OAAO;AACL,gCAAwB;AAAA,MAC1B;AAAA,IACF;AAAA,EACF;AAEA,MAAI,uBAAuB;AACzB,4BAAwB,aAAa;AAAA,EACvC;AAEA,MAAI,iBAAiB,KAAK,sBAAsB,aAAa;AAC3D,QAAI,oBAAoB,eAAe,qBAAqB,aAAa;AACvE,mBAAa;AAAA,IACf,OAAO;AACL,mBAAa,eAAe;AAAA,IAC9B;AAEA,kBAAc,MAAM,WAAW,MAAM;AAErC,QAAI,iBAAiB,GAAG;AACtB,UAAI,0BACC,kBAAkB,OAAO,WAAW,KACpC,iBAAiB,OAAO,aAAa,UAAU,MAChD,mBAAmB,OAAO,UAAU,GAAG;AACzC,qBAAa;AAAA,MACf,OAAO;AACL,YAAK,qBAAqB,gBAAgB,OAAO,UAAU,KACvD,uBAAuB,OAAO,UAAU,KACxC,uBAAuB,OAAO,UAAU,GAAG;AAC7C,uBAAa;AAAA,QAEf,WAAW,UAAU,KAAK,GAAG;AAC3B,uBAAa;AAEb,cAAI,MAAM,QAAQ,QAAQ,MAAM,WAAW,MAAM;AAC/C,uBAAW,OAAO,2CAA2C;AAAA,UAC/D;AAAA,QAEF,WAAW,gBAAgB,OAAO,YAAY,oBAAoB,WAAW,GAAG;AAC9E,uBAAa;AAEb,cAAI,MAAM,QAAQ,MAAM;AACtB,kBAAM,MAAM;AAAA,UACd;AAAA,QACF;AAEA,YAAI,MAAM,WAAW,MAAM;AACzB,gBAAM,UAAU,MAAM,UAAU,MAAM;AAAA,QACxC;AAAA,MACF;AAAA,IACF,WAAW,iBAAiB,GAAG;AAG7B,mBAAa,yBAAyB,kBAAkB,OAAO,WAAW;AAAA,IAC5E;AAAA,EACF;AAEA,MAAI,MAAM,QAAQ,MAAM;AACtB,QAAI,MAAM,WAAW,MAAM;AACzB,YAAM,UAAU,MAAM,UAAU,MAAM;AAAA,IACxC;AAAA,EAEF,WAAW,MAAM,QAAQ,KAAK;AAO5B,QAAI,MAAM,WAAW,QAAQ,MAAM,SAAS,UAAU;AACpD,iBAAW,OAAO,sEAAsE,MAAM,OAAO,GAAG;AAAA,IAC1G;AAEA,SAAK,YAAY,GAAG,eAAe,MAAM,cAAc,QAAQ,YAAY,cAAc,aAAa,GAAG;AACvG,MAAAA,QAAO,MAAM,cAAc;AAE3B,UAAIA,MAAK,QAAQ,MAAM,MAAM,GAAG;AAC9B,cAAM,SAASA,MAAK,UAAU,MAAM,MAAM;AAC1C,cAAM,MAAMA,MAAK;AACjB,YAAI,MAAM,WAAW,MAAM;AACzB,gBAAM,UAAU,MAAM,UAAU,MAAM;AAAA,QACxC;AACA;AAAA,MACF;AAAA,IACF;AAAA,EACF,WAAW,MAAM,QAAQ,KAAK;AAC5B,QAAI,kBAAkB,KAAK,MAAM,QAAQ,MAAM,QAAQ,aAAa,MAAM,GAAG,GAAG;AAC9E,MAAAA,QAAO,MAAM,QAAQ,MAAM,QAAQ,YAAY,MAAM;AAAA,IACvD,OAAO;AAEL,MAAAA,QAAO;AACP,iBAAW,MAAM,QAAQ,MAAM,MAAM,QAAQ;AAE7C,WAAK,YAAY,GAAG,eAAe,SAAS,QAAQ,YAAY,cAAc,aAAa,GAAG;AAC5F,YAAI,MAAM,IAAI,MAAM,GAAG,SAAS,WAAW,IAAI,MAAM,MAAM,SAAS,WAAW,KAAK;AAClF,UAAAA,QAAO,SAAS;AAChB;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAEA,QAAI,CAACA,OAAM;AACT,iBAAW,OAAO,mBAAmB,MAAM,MAAM,GAAG;AAAA,IACtD;AAEA,QAAI,MAAM,WAAW,QAAQA,MAAK,SAAS,MAAM,MAAM;AACrD,iBAAW,OAAO,kCAAkC,MAAM,MAAM,0BAA0BA,MAAK,OAAO,aAAa,MAAM,OAAO,GAAG;AAAA,IACrI;AAEA,QAAI,CAACA,MAAK,QAAQ,MAAM,QAAQ,MAAM,GAAG,GAAG;AAC1C,iBAAW,OAAO,kCAAkC,MAAM,MAAM,gBAAgB;AAAA,IAClF,OAAO;AACL,YAAM,SAASA,MAAK,UAAU,MAAM,QAAQ,MAAM,GAAG;AACrD,UAAI,MAAM,WAAW,MAAM;AACzB,cAAM,UAAU,MAAM,UAAU,MAAM;AAAA,MACxC;AAAA,IACF;AAAA,EACF;AAEA,MAAI,MAAM,aAAa,MAAM;AAC3B,UAAM,SAAS,SAAS,KAAK;AAAA,EAC/B;AACA,SAAO,MAAM,QAAQ,QAAS,MAAM,WAAW,QAAQ;AACzD;AAEA,SAAS,aAAa,OAAO;AAC3B,MAAI,gBAAgB,MAAM,UACtB,WACA,eACA,eACA,gBAAgB,OAChB;AAEJ,QAAM,UAAU;AAChB,QAAM,kBAAkB,MAAM;AAC9B,QAAM,SAAS,uBAAO,OAAO,IAAI;AACjC,QAAM,YAAY,uBAAO,OAAO,IAAI;AAEpC,UAAQ,KAAK,MAAM,MAAM,WAAW,MAAM,QAAQ,OAAO,GAAG;AAC1D,wBAAoB,OAAO,MAAM,EAAE;AAEnC,SAAK,MAAM,MAAM,WAAW,MAAM,QAAQ;AAE1C,QAAI,MAAM,aAAa,KAAK,OAAO,IAAa;AAC9C;AAAA,IACF;AAEA,oBAAgB;AAChB,SAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAC5C,gBAAY,MAAM;AAElB,WAAO,OAAO,KAAK,CAAC,aAAa,EAAE,GAAG;AACpC,WAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAAA,IAC9C;AAEA,oBAAgB,MAAM,MAAM,MAAM,WAAW,MAAM,QAAQ;AAC3D,oBAAgB,CAAC;AAEjB,QAAI,cAAc,SAAS,GAAG;AAC5B,iBAAW,OAAO,8DAA8D;AAAA,IAClF;AAEA,WAAO,OAAO,GAAG;AACf,aAAO,eAAe,EAAE,GAAG;AACzB,aAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAAA,MAC9C;AAEA,UAAI,OAAO,IAAa;AACtB,WAAG;AAAE,eAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAAA,QAAG,SAC7C,OAAO,KAAK,CAAC,OAAO,EAAE;AAC7B;AAAA,MACF;AAEA,UAAI,OAAO,EAAE;AAAG;AAEhB,kBAAY,MAAM;AAElB,aAAO,OAAO,KAAK,CAAC,aAAa,EAAE,GAAG;AACpC,aAAK,MAAM,MAAM,WAAW,EAAE,MAAM,QAAQ;AAAA,MAC9C;AAEA,oBAAc,KAAK,MAAM,MAAM,MAAM,WAAW,MAAM,QAAQ,CAAC;AAAA,IACjE;AAEA,QAAI,OAAO;AAAG,oBAAc,KAAK;AAEjC,QAAI,kBAAkB,KAAK,mBAAmB,aAAa,GAAG;AAC5D,wBAAkB,eAAe,OAAO,eAAe,aAAa;AAAA,IACtE,OAAO;AACL,mBAAa,OAAO,iCAAiC,gBAAgB,GAAG;AAAA,IAC1E;AAAA,EACF;AAEA,sBAAoB,OAAO,MAAM,EAAE;AAEnC,MAAI,MAAM,eAAe,KACrB,MAAM,MAAM,WAAW,MAAM,QAAQ,MAAU,MAC/C,MAAM,MAAM,WAAW,MAAM,WAAW,CAAC,MAAM,MAC/C,MAAM,MAAM,WAAW,MAAM,WAAW,CAAC,MAAM,IAAa;AAC9D,UAAM,YAAY;AAClB,wBAAoB,OAAO,MAAM,EAAE;AAAA,EAErC,WAAW,eAAe;AACxB,eAAW,OAAO,iCAAiC;AAAA,EACrD;AAEA,cAAY,OAAO,MAAM,aAAa,GAAG,mBAAmB,OAAO,IAAI;AACvE,sBAAoB,OAAO,MAAM,EAAE;AAEnC,MAAI,MAAM,mBACN,8BAA8B,KAAK,MAAM,MAAM,MAAM,eAAe,MAAM,QAAQ,CAAC,GAAG;AACxF,iBAAa,OAAO,kDAAkD;AAAA,EACxE;AAEA,QAAM,UAAU,KAAK,MAAM,MAAM;AAEjC,MAAI,MAAM,aAAa,MAAM,aAAa,sBAAsB,KAAK,GAAG;AAEtE,QAAI,MAAM,MAAM,WAAW,MAAM,QAAQ,MAAM,IAAa;AAC1D,YAAM,YAAY;AAClB,0BAAoB,OAAO,MAAM,EAAE;AAAA,IACrC;AACA;AAAA,EACF;AAEA,MAAI,MAAM,WAAY,MAAM,SAAS,GAAI;AACvC,eAAW,OAAO,uDAAuD;AAAA,EAC3E,OAAO;AACL;AAAA,EACF;AACF;AAGA,SAAS,cAAc,OAAO,SAAS;AACrC,UAAQ,OAAO,KAAK;AACpB,YAAU,WAAW,CAAC;AAEtB,MAAI,MAAM,WAAW,GAAG;AAGtB,QAAI,MAAM,WAAW,MAAM,SAAS,CAAC,MAAM,MACvC,MAAM,WAAW,MAAM,SAAS,CAAC,MAAM,IAAc;AACvD,eAAS;AAAA,IACX;AAGA,QAAI,MAAM,WAAW,CAAC,MAAM,OAAQ;AAClC,cAAQ,MAAM,MAAM,CAAC;AAAA,IACvB;AAAA,EACF;AAEA,MAAI,QAAQ,IAAI,QAAQ,OAAO,OAAO;AAEtC,MAAI,UAAU,MAAM,QAAQ,IAAI;AAEhC,MAAI,YAAY,IAAI;AAClB,UAAM,WAAW;AACjB,eAAW,OAAO,mCAAmC;AAAA,EACvD;AAGA,QAAM,SAAS;AAEf,SAAO,MAAM,MAAM,WAAW,MAAM,QAAQ,MAAM,IAAiB;AACjE,UAAM,cAAc;AACpB,UAAM,YAAY;AAAA,EACpB;AAEA,SAAO,MAAM,WAAY,MAAM,SAAS,GAAI;AAC1C,iBAAa,KAAK;AAAA,EACpB;AAEA,SAAO,MAAM;AACf;AAGA,SAAS,UAAU,OAAO,UAAU,SAAS;AAC3C,MAAI,aAAa,QAAQ,OAAO,aAAa,YAAY,OAAO,YAAY,aAAa;AACvF,cAAU;AACV,eAAW;AAAA,EACb;AAEA,MAAI,YAAY,cAAc,OAAO,OAAO;AAE5C,MAAI,OAAO,aAAa,YAAY;AAClC,WAAO;AAAA,EACT;AAEA,WAASN,SAAQ,GAAG,SAAS,UAAU,QAAQA,SAAQ,QAAQA,UAAS,GAAG;AACzE,aAAS,UAAUA,OAAM;AAAA,EAC3B;AACF;AAGA,SAAS,OAAO,OAAO,SAAS;AAC9B,MAAI,YAAY,cAAc,OAAO,OAAO;AAE5C,MAAI,UAAU,WAAW,GAAG;AAE1B,WAAO;AAAA,EACT,WAAW,UAAU,WAAW,GAAG;AACjC,WAAO,UAAU;AAAA,EACnB;AACA,QAAM,IAAI,UAAU,0DAA0D;AAChF;AAGA,IAAI,YAAY;AAChB,IAAI,SAAY;AAEhB,IAAI,SAAS;AAAA,EACZ,SAAS;AAAA,EACT,MAAM;AACP;AAQA,IAAI,YAAkB,OAAO,UAAU;AACvC,IAAI,kBAAkB,OAAO,UAAU;AAEvC,IAAI,WAA4B;AAChC,IAAI,WAA4B;AAChC,IAAI,iBAA4B;AAChC,IAAI,uBAA4B;AAChC,IAAI,aAA4B;AAChC,IAAI,mBAA4B;AAChC,IAAI,oBAA4B;AAChC,IAAI,aAA4B;AAChC,IAAI,eAA4B;AAChC,IAAI,iBAA4B;AAChC,IAAI,oBAA4B;AAChC,IAAI,gBAA4B;AAChC,IAAI,aAA4B;AAChC,IAAI,aAA4B;AAChC,IAAI,aAA4B;AAChC,IAAI,cAA4B;AAChC,IAAI,oBAA4B;AAChC,IAAI,gBAA4B;AAChC,IAAI,qBAA4B;AAChC,IAAI,2BAA4B;AAChC,IAAI,4BAA4B;AAChC,IAAI,oBAA4B;AAChC,IAAI,0BAA4B;AAChC,IAAI,qBAA4B;AAChC,IAAI,2BAA4B;AAEhC,IAAI,mBAAmB,CAAC;AAExB,iBAAiB,KAAU;AAC3B,iBAAiB,KAAU;AAC3B,iBAAiB,KAAU;AAC3B,iBAAiB,KAAU;AAC3B,iBAAiB,MAAU;AAC3B,iBAAiB,MAAU;AAC3B,iBAAiB,MAAU;AAC3B,iBAAiB,MAAU;AAC3B,iBAAiB,MAAU;AAC3B,iBAAiB,MAAU;AAC3B,iBAAiB,MAAU;AAC3B,iBAAiB,OAAU;AAC3B,iBAAiB,OAAU;AAC3B,iBAAiB,QAAU;AAC3B,iBAAiB,QAAU;AAE3B,IAAI,6BAA6B;AAAA,EAC/B;AAAA,EAAK;AAAA,EAAK;AAAA,EAAO;AAAA,EAAO;AAAA,EAAO;AAAA,EAAM;AAAA,EAAM;AAAA,EAC3C;AAAA,EAAK;AAAA,EAAK;AAAA,EAAM;AAAA,EAAM;AAAA,EAAM;AAAA,EAAO;AAAA,EAAO;AAC5C;AAEA,IAAI,2BAA2B;AAE/B,SAAS,gBAAgBK,SAAQF,MAAK;AACpC,MAAI,QAAQ,MAAMH,QAAO,QAAQ,KAAK,OAAOM;AAE7C,MAAIH,SAAQ;AAAM,WAAO,CAAC;AAE1B,WAAS,CAAC;AACV,SAAO,OAAO,KAAKA,IAAG;AAEtB,OAAKH,SAAQ,GAAG,SAAS,KAAK,QAAQA,SAAQ,QAAQA,UAAS,GAAG;AAChE,UAAM,KAAKA;AACX,YAAQ,OAAOG,KAAI,IAAI;AAEvB,QAAI,IAAI,MAAM,GAAG,CAAC,MAAM,MAAM;AAC5B,YAAM,uBAAuB,IAAI,MAAM,CAAC;AAAA,IAC1C;AACA,IAAAG,QAAOD,QAAO,gBAAgB,YAAY;AAE1C,QAAIC,SAAQ,gBAAgB,KAAKA,MAAK,cAAc,KAAK,GAAG;AAC1D,cAAQA,MAAK,aAAa;AAAA,IAC5B;AAEA,WAAO,OAAO;AAAA,EAChB;AAEA,SAAO;AACT;AAEA,SAAS,UAAU,WAAW;AAC5B,MAAI,QAAQ,QAAQ;AAEpB,WAAS,UAAU,SAAS,EAAE,EAAE,YAAY;AAE5C,MAAI,aAAa,KAAM;AACrB,aAAS;AACT,aAAS;AAAA,EACX,WAAW,aAAa,OAAQ;AAC9B,aAAS;AACT,aAAS;AAAA,EACX,WAAW,aAAa,YAAY;AAClC,aAAS;AACT,aAAS;AAAA,EACX,OAAO;AACL,UAAM,IAAI,UAAU,+DAA+D;AAAA,EACrF;AAEA,SAAO,OAAO,SAAS,OAAO,OAAO,KAAK,SAAS,OAAO,MAAM,IAAI;AACtE;AAGA,IAAI,sBAAsB;AAA1B,IACI,sBAAsB;AAE1B,SAAS,MAAM,SAAS;AACtB,OAAK,SAAgB,QAAQ,aAAa;AAC1C,OAAK,SAAgB,KAAK,IAAI,GAAI,QAAQ,aAAa,CAAE;AACzD,OAAK,gBAAgB,QAAQ,oBAAoB;AACjD,OAAK,cAAgB,QAAQ,kBAAkB;AAC/C,OAAK,YAAiB,OAAO,UAAU,QAAQ,YAAY,IAAI,KAAK,QAAQ;AAC5E,OAAK,WAAgB,gBAAgB,KAAK,QAAQ,QAAQ,aAAa,IAAI;AAC3E,OAAK,WAAgB,QAAQ,eAAe;AAC5C,OAAK,YAAgB,QAAQ,gBAAgB;AAC7C,OAAK,SAAgB,QAAQ,aAAa;AAC1C,OAAK,eAAgB,QAAQ,mBAAmB;AAChD,OAAK,eAAgB,QAAQ,mBAAmB;AAChD,OAAK,cAAgB,QAAQ,mBAAmB,MAAM,sBAAsB;AAC5E,OAAK,cAAgB,QAAQ,kBAAkB;AAC/C,OAAK,WAAgB,OAAO,QAAQ,gBAAgB,aAAa,QAAQ,cAAc;AAEvF,OAAK,gBAAgB,KAAK,OAAO;AACjC,OAAK,gBAAgB,KAAK,OAAO;AAEjC,OAAK,MAAM;AACX,OAAK,SAAS;AAEd,OAAK,aAAa,CAAC;AACnB,OAAK,iBAAiB;AACxB;AAGA,SAAS,aAAa,QAAQ,QAAQ;AACpC,MAAI,MAAM,OAAO,OAAO,KAAK,MAAM,GAC/B,WAAW,GACXI,QAAO,IACP,SAAS,IACT,MACA,SAAS,OAAO;AAEpB,SAAO,WAAW,QAAQ;AACxB,IAAAA,QAAO,OAAO,QAAQ,MAAM,QAAQ;AACpC,QAAIA,UAAS,IAAI;AACf,aAAO,OAAO,MAAM,QAAQ;AAC5B,iBAAW;AAAA,IACb,OAAO;AACL,aAAO,OAAO,MAAM,UAAUA,QAAO,CAAC;AACtC,iBAAWA,QAAO;AAAA,IACpB;AAEA,QAAI,KAAK,UAAU,SAAS;AAAM,gBAAU;AAE5C,cAAU;AAAA,EACZ;AAEA,SAAO;AACT;AAEA,SAAS,iBAAiB,OAAO,OAAO;AACtC,SAAO,OAAO,OAAO,OAAO,KAAK,MAAM,SAAS,KAAK;AACvD;AAEA,SAAS,sBAAsB,OAAOC,MAAK;AACzC,MAAIX,QAAO,QAAQM;AAEnB,OAAKN,SAAQ,GAAG,SAAS,MAAM,cAAc,QAAQA,SAAQ,QAAQA,UAAS,GAAG;AAC/E,IAAAM,QAAO,MAAM,cAAcN;AAE3B,QAAIM,MAAK,QAAQK,IAAG,GAAG;AACrB,aAAO;AAAA,IACT;AAAA,EACF;AAEA,SAAO;AACT;AAGA,SAAS,aAAa,GAAG;AACvB,SAAO,MAAM,cAAc,MAAM;AACnC;AAMA,SAAS,YAAY,GAAG;AACtB,SAAS,MAAW,KAAK,KAAK,OACrB,OAAW,KAAK,KAAK,SAAa,MAAM,QAAU,MAAM,QACxD,SAAW,KAAK,KAAK,SAAa,MAAM,YACxC,SAAW,KAAK,KAAK;AAChC;AAOA,SAAS,qBAAqB,GAAG;AAC/B,SAAO,YAAY,CAAC,KACf,MAAM,YAEN,MAAM,wBACN,MAAM;AACb;AAWA,SAAS,YAAY,GAAGC,OAAM,SAAS;AACrC,MAAI,wBAAwB,qBAAqB,CAAC;AAClD,MAAI,YAAY,yBAAyB,CAAC,aAAa,CAAC;AACxD,UAEE,UACE,wBACE,yBAEG,MAAM,cACN,MAAM,4BACN,MAAM,6BACN,MAAM,2BACN,MAAM,6BAGV,MAAM,cACN,EAAEA,UAAS,cAAc,CAAC,cACzB,qBAAqBA,KAAI,KAAK,CAAC,aAAaA,KAAI,KAAK,MAAM,cAC3DA,UAAS,cAAc;AAC/B;AAGA,SAAS,iBAAiB,GAAG;AAI3B,SAAO,YAAY,CAAC,KAAK,MAAM,YAC1B,CAAC,aAAa,CAAC,KAGf,MAAM,cACN,MAAM,iBACN,MAAM,cACN,MAAM,cACN,MAAM,4BACN,MAAM,6BACN,MAAM,2BACN,MAAM,4BAEN,MAAM,cACN,MAAM,kBACN,MAAM,iBACN,MAAM,oBACN,MAAM,sBACN,MAAM,eACN,MAAM,qBACN,MAAM,qBACN,MAAM,qBAEN,MAAM,gBACN,MAAM,sBACN,MAAM;AACb;AAGA,SAAS,gBAAgB,GAAG;AAE1B,SAAO,CAAC,aAAa,CAAC,KAAK,MAAM;AACnC;AAGA,SAAS,YAAY,QAAQ,KAAK;AAChC,MAAIC,SAAQ,OAAO,WAAW,GAAG,GAAG;AACpC,MAAIA,UAAS,SAAUA,UAAS,SAAU,MAAM,IAAI,OAAO,QAAQ;AACjE,aAAS,OAAO,WAAW,MAAM,CAAC;AAClC,QAAI,UAAU,SAAU,UAAU,OAAQ;AAExC,cAAQA,SAAQ,SAAU,OAAQ,SAAS,QAAS;AAAA,IACtD;AAAA,EACF;AACA,SAAOA;AACT;AAGA,SAAS,oBAAoB,QAAQ;AACnC,MAAI,iBAAiB;AACrB,SAAO,eAAe,KAAK,MAAM;AACnC;AAEA,IAAI,cAAgB;AAApB,IACI,eAAgB;AADpB,IAEI,gBAAgB;AAFpB,IAGI,eAAgB;AAHpB,IAII,eAAgB;AASpB,SAAS,kBAAkB,QAAQ,gBAAgB,gBAAgB,WACjE,mBAAmB,aAAa,aAAa,SAAS;AAEtD,MAAI;AACJ,MAAI,OAAO;AACX,MAAI,WAAW;AACf,MAAI,eAAe;AACnB,MAAI,kBAAkB;AACtB,MAAI,mBAAmB,cAAc;AACrC,MAAI,oBAAoB;AACxB,MAAI,QAAQ,iBAAiB,YAAY,QAAQ,CAAC,CAAC,KACxC,gBAAgB,YAAY,QAAQ,OAAO,SAAS,CAAC,CAAC;AAEjE,MAAI,kBAAkB,aAAa;AAGjC,SAAK,IAAI,GAAG,IAAI,OAAO,QAAQ,QAAQ,QAAU,KAAK,IAAI,KAAK;AAC7D,aAAO,YAAY,QAAQ,CAAC;AAC5B,UAAI,CAAC,YAAY,IAAI,GAAG;AACtB,eAAO;AAAA,MACT;AACA,cAAQ,SAAS,YAAY,MAAM,UAAU,OAAO;AACpD,iBAAW;AAAA,IACb;AAAA,EACF,OAAO;AAEL,SAAK,IAAI,GAAG,IAAI,OAAO,QAAQ,QAAQ,QAAU,KAAK,IAAI,KAAK;AAC7D,aAAO,YAAY,QAAQ,CAAC;AAC5B,UAAI,SAAS,gBAAgB;AAC3B,uBAAe;AAEf,YAAI,kBAAkB;AACpB,4BAAkB,mBAEf,IAAI,oBAAoB,IAAI,aAC5B,OAAO,oBAAoB,OAAO;AACrC,8BAAoB;AAAA,QACtB;AAAA,MACF,WAAW,CAAC,YAAY,IAAI,GAAG;AAC7B,eAAO;AAAA,MACT;AACA,cAAQ,SAAS,YAAY,MAAM,UAAU,OAAO;AACpD,iBAAW;AAAA,IACb;AAEA,sBAAkB,mBAAoB,qBACnC,IAAI,oBAAoB,IAAI,aAC5B,OAAO,oBAAoB,OAAO;AAAA,EACvC;AAIA,MAAI,CAAC,gBAAgB,CAAC,iBAAiB;AAGrC,QAAI,SAAS,CAAC,eAAe,CAAC,kBAAkB,MAAM,GAAG;AACvD,aAAO;AAAA,IACT;AACA,WAAO,gBAAgB,sBAAsB,eAAe;AAAA,EAC9D;AAEA,MAAI,iBAAiB,KAAK,oBAAoB,MAAM,GAAG;AACrD,WAAO;AAAA,EACT;AAGA,MAAI,CAAC,aAAa;AAChB,WAAO,kBAAkB,eAAe;AAAA,EAC1C;AACA,SAAO,gBAAgB,sBAAsB,eAAe;AAC9D;AAQA,SAAS,YAAY,OAAO,QAAQ,OAAO,OAAO,SAAS;AACzD,QAAM,OAAQ,WAAY;AACxB,QAAI,OAAO,WAAW,GAAG;AACvB,aAAO,MAAM,gBAAgB,sBAAsB,OAAO;AAAA,IAC5D;AACA,QAAI,CAAC,MAAM,cAAc;AACvB,UAAI,2BAA2B,QAAQ,MAAM,MAAM,MAAM,yBAAyB,KAAK,MAAM,GAAG;AAC9F,eAAO,MAAM,gBAAgB,sBAAuB,MAAM,SAAS,MAAQ,MAAM,SAAS;AAAA,MAC5F;AAAA,IACF;AAEA,QAAI,SAAS,MAAM,SAAS,KAAK,IAAI,GAAG,KAAK;AAQ7C,QAAI,YAAY,MAAM,cAAc,KAChC,KAAK,KAAK,IAAI,KAAK,IAAI,MAAM,WAAW,EAAE,GAAG,MAAM,YAAY,MAAM;AAGzE,QAAI,iBAAiB,SAEf,MAAM,YAAY,MAAM,SAAS,MAAM;AAC7C,aAAS,cAAcC,SAAQ;AAC7B,aAAO,sBAAsB,OAAOA,OAAM;AAAA,IAC5C;AAEA,YAAQ;AAAA,MAAkB;AAAA,MAAQ;AAAA,MAAgB,MAAM;AAAA,MAAQ;AAAA,MAC9D;AAAA,MAAe,MAAM;AAAA,MAAa,MAAM,eAAe,CAAC;AAAA,MAAO;AAAA,IAAO,GAAG;AAAA,MAEzE,KAAK;AACH,eAAO;AAAA,MACT,KAAK;AACH,eAAO,MAAM,OAAO,QAAQ,MAAM,IAAI,IAAI;AAAA,MAC5C,KAAK;AACH,eAAO,MAAM,YAAY,QAAQ,MAAM,MAAM,IACzC,kBAAkB,aAAa,QAAQ,MAAM,CAAC;AAAA,MACpD,KAAK;AACH,eAAO,MAAM,YAAY,QAAQ,MAAM,MAAM,IACzC,kBAAkB,aAAa,WAAW,QAAQ,SAAS,GAAG,MAAM,CAAC;AAAA,MAC3E,KAAK;AACH,eAAO,MAAM,aAAa,MAAM,IAAI;AAAA,MACtC;AACE,cAAM,IAAI,UAAU,wCAAwC;AAAA,IAChE;AAAA,EACF,EAAE;AACJ;AAGA,SAAS,YAAY,QAAQ,gBAAgB;AAC3C,MAAI,kBAAkB,oBAAoB,MAAM,IAAI,OAAO,cAAc,IAAI;AAG7E,MAAI,OAAgB,OAAO,OAAO,SAAS,OAAO;AAClD,MAAI,OAAO,SAAS,OAAO,OAAO,SAAS,OAAO,QAAQ,WAAW;AACrE,MAAI,QAAQ,OAAO,MAAO,OAAO,KAAK;AAEtC,SAAO,kBAAkB,QAAQ;AACnC;AAGA,SAAS,kBAAkB,QAAQ;AACjC,SAAO,OAAO,OAAO,SAAS,OAAO,OAAO,OAAO,MAAM,GAAG,EAAE,IAAI;AACpE;AAIA,SAAS,WAAW,QAAQ,OAAO;AAKjC,MAAI,SAAS;AAGb,MAAI,SAAU,WAAY;AACxB,QAAI,SAAS,OAAO,QAAQ,IAAI;AAChC,aAAS,WAAW,KAAK,SAAS,OAAO;AACzC,WAAO,YAAY;AACnB,WAAO,SAAS,OAAO,MAAM,GAAG,MAAM,GAAG,KAAK;AAAA,EAChD,EAAE;AAEF,MAAI,mBAAmB,OAAO,OAAO,QAAQ,OAAO,OAAO;AAC3D,MAAI;AAGJ,MAAI;AACJ,SAAQ,QAAQ,OAAO,KAAK,MAAM,GAAI;AACpC,QAAI,SAAS,MAAM,IAAI,OAAO,MAAM;AACpC,mBAAgB,KAAK,OAAO;AAC5B,cAAU,UACL,CAAC,oBAAoB,CAAC,gBAAgB,SAAS,KAC9C,OAAO,MACT,SAAS,MAAM,KAAK;AACxB,uBAAmB;AAAA,EACrB;AAEA,SAAO;AACT;AAMA,SAAS,SAAS,MAAM,OAAO;AAC7B,MAAI,SAAS,MAAM,KAAK,OAAO;AAAK,WAAO;AAG3C,MAAI,UAAU;AACd,MAAI;AAEJ,MAAI,QAAQ,GAAGL,MAAK,OAAO,GAAGC,QAAO;AACrC,MAAI,SAAS;AAMb,SAAQ,QAAQ,QAAQ,KAAK,IAAI,GAAI;AACnC,IAAAA,QAAO,MAAM;AAEb,QAAIA,QAAO,QAAQ,OAAO;AACxB,MAAAD,OAAO,OAAO,QAAS,OAAOC;AAC9B,gBAAU,OAAO,KAAK,MAAM,OAAOD,IAAG;AAEtC,cAAQA,OAAM;AAAA,IAChB;AACA,WAAOC;AAAA,EACT;AAIA,YAAU;AAEV,MAAI,KAAK,SAAS,QAAQ,SAAS,OAAO,OAAO;AAC/C,cAAU,KAAK,MAAM,OAAO,IAAI,IAAI,OAAO,KAAK,MAAM,OAAO,CAAC;AAAA,EAChE,OAAO;AACL,cAAU,KAAK,MAAM,KAAK;AAAA,EAC5B;AAEA,SAAO,OAAO,MAAM,CAAC;AACvB;AAGA,SAAS,aAAa,QAAQ;AAC5B,MAAI,SAAS;AACb,MAAI,OAAO;AACX,MAAI;AAEJ,WAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,QAAQ,QAAU,KAAK,IAAI,KAAK;AACjE,WAAO,YAAY,QAAQ,CAAC;AAC5B,gBAAY,iBAAiB;AAE7B,QAAI,CAAC,aAAa,YAAY,IAAI,GAAG;AACnC,gBAAU,OAAO;AACjB,UAAI,QAAQ;AAAS,kBAAU,OAAO,IAAI;AAAA,IAC5C,OAAO;AACL,gBAAU,aAAa,UAAU,IAAI;AAAA,IACvC;AAAA,EACF;AAEA,SAAO;AACT;AAEA,SAAS,kBAAkB,OAAO,OAAO,QAAQ;AAC/C,MAAI,UAAU,IACV,OAAU,MAAM,KAChBV,QACA,QACA;AAEJ,OAAKA,SAAQ,GAAG,SAAS,OAAO,QAAQA,SAAQ,QAAQA,UAAS,GAAG;AAClE,YAAQ,OAAOA;AAEf,QAAI,MAAM,UAAU;AAClB,cAAQ,MAAM,SAAS,KAAK,QAAQ,OAAOA,MAAK,GAAG,KAAK;AAAA,IAC1D;AAGA,QAAI,UAAU,OAAO,OAAO,OAAO,OAAO,KAAK,KAC1C,OAAO,UAAU,eACjB,UAAU,OAAO,OAAO,MAAM,OAAO,KAAK,GAAI;AAEjD,UAAI,YAAY;AAAI,mBAAW,OAAO,CAAC,MAAM,eAAe,MAAM;AAClE,iBAAW,MAAM;AAAA,IACnB;AAAA,EACF;AAEA,QAAM,MAAM;AACZ,QAAM,OAAO,MAAM,UAAU;AAC/B;AAEA,SAAS,mBAAmB,OAAO,OAAO,QAAQ,SAAS;AACzD,MAAI,UAAU,IACV,OAAU,MAAM,KAChBA,QACA,QACA;AAEJ,OAAKA,SAAQ,GAAG,SAAS,OAAO,QAAQA,SAAQ,QAAQA,UAAS,GAAG;AAClE,YAAQ,OAAOA;AAEf,QAAI,MAAM,UAAU;AAClB,cAAQ,MAAM,SAAS,KAAK,QAAQ,OAAOA,MAAK,GAAG,KAAK;AAAA,IAC1D;AAGA,QAAI,UAAU,OAAO,QAAQ,GAAG,OAAO,MAAM,MAAM,OAAO,IAAI,KACzD,OAAO,UAAU,eACjB,UAAU,OAAO,QAAQ,GAAG,MAAM,MAAM,MAAM,OAAO,IAAI,GAAI;AAEhE,UAAI,CAAC,WAAW,YAAY,IAAI;AAC9B,mBAAW,iBAAiB,OAAO,KAAK;AAAA,MAC1C;AAEA,UAAI,MAAM,QAAQ,mBAAmB,MAAM,KAAK,WAAW,CAAC,GAAG;AAC7D,mBAAW;AAAA,MACb,OAAO;AACL,mBAAW;AAAA,MACb;AAEA,iBAAW,MAAM;AAAA,IACnB;AAAA,EACF;AAEA,QAAM,MAAM;AACZ,QAAM,OAAO,WAAW;AAC1B;AAEA,SAAS,iBAAiB,OAAO,OAAO,QAAQ;AAC9C,MAAI,UAAgB,IAChB,OAAgB,MAAM,KACtB,gBAAgB,OAAO,KAAK,MAAM,GAClCA,QACA,QACA,WACA,aACA;AAEJ,OAAKA,SAAQ,GAAG,SAAS,cAAc,QAAQA,SAAQ,QAAQA,UAAS,GAAG;AAEzE,iBAAa;AACb,QAAI,YAAY;AAAI,oBAAc;AAElC,QAAI,MAAM;AAAc,oBAAc;AAEtC,gBAAY,cAAcA;AAC1B,kBAAc,OAAO;AAErB,QAAI,MAAM,UAAU;AAClB,oBAAc,MAAM,SAAS,KAAK,QAAQ,WAAW,WAAW;AAAA,IAClE;AAEA,QAAI,CAAC,UAAU,OAAO,OAAO,WAAW,OAAO,KAAK,GAAG;AACrD;AAAA,IACF;AAEA,QAAI,MAAM,KAAK,SAAS;AAAM,oBAAc;AAE5C,kBAAc,MAAM,QAAQ,MAAM,eAAe,MAAM,MAAM,OAAO,MAAM,eAAe,KAAK;AAE9F,QAAI,CAAC,UAAU,OAAO,OAAO,aAAa,OAAO,KAAK,GAAG;AACvD;AAAA,IACF;AAEA,kBAAc,MAAM;AAGpB,eAAW;AAAA,EACb;AAEA,QAAM,MAAM;AACZ,QAAM,OAAO,MAAM,UAAU;AAC/B;AAEA,SAAS,kBAAkB,OAAO,OAAO,QAAQ,SAAS;AACxD,MAAI,UAAgB,IAChB,OAAgB,MAAM,KACtB,gBAAgB,OAAO,KAAK,MAAM,GAClCA,QACA,QACA,WACA,aACA,cACA;AAGJ,MAAI,MAAM,aAAa,MAAM;AAE3B,kBAAc,KAAK;AAAA,EACrB,WAAW,OAAO,MAAM,aAAa,YAAY;AAE/C,kBAAc,KAAK,MAAM,QAAQ;AAAA,EACnC,WAAW,MAAM,UAAU;AAEzB,UAAM,IAAI,UAAU,0CAA0C;AAAA,EAChE;AAEA,OAAKA,SAAQ,GAAG,SAAS,cAAc,QAAQA,SAAQ,QAAQA,UAAS,GAAG;AACzE,iBAAa;AAEb,QAAI,CAAC,WAAW,YAAY,IAAI;AAC9B,oBAAc,iBAAiB,OAAO,KAAK;AAAA,IAC7C;AAEA,gBAAY,cAAcA;AAC1B,kBAAc,OAAO;AAErB,QAAI,MAAM,UAAU;AAClB,oBAAc,MAAM,SAAS,KAAK,QAAQ,WAAW,WAAW;AAAA,IAClE;AAEA,QAAI,CAAC,UAAU,OAAO,QAAQ,GAAG,WAAW,MAAM,MAAM,IAAI,GAAG;AAC7D;AAAA,IACF;AAEA,mBAAgB,MAAM,QAAQ,QAAQ,MAAM,QAAQ,OACpC,MAAM,QAAQ,MAAM,KAAK,SAAS;AAElD,QAAI,cAAc;AAChB,UAAI,MAAM,QAAQ,mBAAmB,MAAM,KAAK,WAAW,CAAC,GAAG;AAC7D,sBAAc;AAAA,MAChB,OAAO;AACL,sBAAc;AAAA,MAChB;AAAA,IACF;AAEA,kBAAc,MAAM;AAEpB,QAAI,cAAc;AAChB,oBAAc,iBAAiB,OAAO,KAAK;AAAA,IAC7C;AAEA,QAAI,CAAC,UAAU,OAAO,QAAQ,GAAG,aAAa,MAAM,YAAY,GAAG;AACjE;AAAA,IACF;AAEA,QAAI,MAAM,QAAQ,mBAAmB,MAAM,KAAK,WAAW,CAAC,GAAG;AAC7D,oBAAc;AAAA,IAChB,OAAO;AACL,oBAAc;AAAA,IAChB;AAEA,kBAAc,MAAM;AAGpB,eAAW;AAAA,EACb;AAEA,QAAM,MAAM;AACZ,QAAM,OAAO,WAAW;AAC1B;AAEA,SAAS,WAAW,OAAO,QAAQ,UAAU;AAC3C,MAAI,SAAS,UAAUA,QAAO,QAAQM,OAAM;AAE5C,aAAW,WAAW,MAAM,gBAAgB,MAAM;AAElD,OAAKN,SAAQ,GAAG,SAAS,SAAS,QAAQA,SAAQ,QAAQA,UAAS,GAAG;AACpE,IAAAM,QAAO,SAASN;AAEhB,SAAKM,MAAK,cAAeA,MAAK,eACzB,CAACA,MAAK,cAAgB,OAAO,WAAW,YAAc,kBAAkBA,MAAK,gBAC7E,CAACA,MAAK,aAAcA,MAAK,UAAU,MAAM,IAAI;AAEhD,UAAI,UAAU;AACZ,YAAIA,MAAK,SAASA,MAAK,eAAe;AACpC,gBAAM,MAAMA,MAAK,cAAc,MAAM;AAAA,QACvC,OAAO;AACL,gBAAM,MAAMA,MAAK;AAAA,QACnB;AAAA,MACF,OAAO;AACL,cAAM,MAAM;AAAA,MACd;AAEA,UAAIA,MAAK,WAAW;AAClB,gBAAQ,MAAM,SAASA,MAAK,QAAQA,MAAK;AAEzC,YAAI,UAAU,KAAKA,MAAK,SAAS,MAAM,qBAAqB;AAC1D,oBAAUA,MAAK,UAAU,QAAQ,KAAK;AAAA,QACxC,WAAW,gBAAgB,KAAKA,MAAK,WAAW,KAAK,GAAG;AACtD,oBAAUA,MAAK,UAAU,OAAO,QAAQ,KAAK;AAAA,QAC/C,OAAO;AACL,gBAAM,IAAI,UAAU,OAAOA,MAAK,MAAM,iCAAiC,QAAQ,SAAS;AAAA,QAC1F;AAEA,cAAM,OAAO;AAAA,MACf;AAEA,aAAO;AAAA,IACT;AAAA,EACF;AAEA,SAAO;AACT;AAKA,SAAS,UAAU,OAAO,OAAO,QAAQ,OAAO,SAAS,OAAO,YAAY;AAC1E,QAAM,MAAM;AACZ,QAAM,OAAO;AAEb,MAAI,CAAC,WAAW,OAAO,QAAQ,KAAK,GAAG;AACrC,eAAW,OAAO,QAAQ,IAAI;AAAA,EAChC;AAEA,MAAIA,QAAO,UAAU,KAAK,MAAM,IAAI;AACpC,MAAI,UAAU;AACd,MAAI;AAEJ,MAAI,OAAO;AACT,YAAS,MAAM,YAAY,KAAK,MAAM,YAAY;AAAA,EACpD;AAEA,MAAI,gBAAgBA,UAAS,qBAAqBA,UAAS,kBACvD,gBACA;AAEJ,MAAI,eAAe;AACjB,qBAAiB,MAAM,WAAW,QAAQ,MAAM;AAChD,gBAAY,mBAAmB;AAAA,EACjC;AAEA,MAAK,MAAM,QAAQ,QAAQ,MAAM,QAAQ,OAAQ,aAAc,MAAM,WAAW,KAAK,QAAQ,GAAI;AAC/F,cAAU;AAAA,EACZ;AAEA,MAAI,aAAa,MAAM,eAAe,iBAAiB;AACrD,UAAM,OAAO,UAAU;AAAA,EACzB,OAAO;AACL,QAAI,iBAAiB,aAAa,CAAC,MAAM,eAAe,iBAAiB;AACvE,YAAM,eAAe,kBAAkB;AAAA,IACzC;AACA,QAAIA,UAAS,mBAAmB;AAC9B,UAAI,SAAU,OAAO,KAAK,MAAM,IAAI,EAAE,WAAW,GAAI;AACnD,0BAAkB,OAAO,OAAO,MAAM,MAAM,OAAO;AACnD,YAAI,WAAW;AACb,gBAAM,OAAO,UAAU,iBAAiB,MAAM;AAAA,QAChD;AAAA,MACF,OAAO;AACL,yBAAiB,OAAO,OAAO,MAAM,IAAI;AACzC,YAAI,WAAW;AACb,gBAAM,OAAO,UAAU,iBAAiB,MAAM,MAAM;AAAA,QACtD;AAAA,MACF;AAAA,IACF,WAAWA,UAAS,kBAAkB;AACpC,UAAI,SAAU,MAAM,KAAK,WAAW,GAAI;AACtC,YAAI,MAAM,iBAAiB,CAAC,cAAc,QAAQ,GAAG;AACnD,6BAAmB,OAAO,QAAQ,GAAG,MAAM,MAAM,OAAO;AAAA,QAC1D,OAAO;AACL,6BAAmB,OAAO,OAAO,MAAM,MAAM,OAAO;AAAA,QACtD;AACA,YAAI,WAAW;AACb,gBAAM,OAAO,UAAU,iBAAiB,MAAM;AAAA,QAChD;AAAA,MACF,OAAO;AACL,0BAAkB,OAAO,OAAO,MAAM,IAAI;AAC1C,YAAI,WAAW;AACb,gBAAM,OAAO,UAAU,iBAAiB,MAAM,MAAM;AAAA,QACtD;AAAA,MACF;AAAA,IACF,WAAWA,UAAS,mBAAmB;AACrC,UAAI,MAAM,QAAQ,KAAK;AACrB,oBAAY,OAAO,MAAM,MAAM,OAAO,OAAO,OAAO;AAAA,MACtD;AAAA,IACF,WAAWA,UAAS,sBAAsB;AACxC,aAAO;AAAA,IACT,OAAO;AACL,UAAI,MAAM;AAAa,eAAO;AAC9B,YAAM,IAAI,UAAU,4CAA4CA,KAAI;AAAA,IACtE;AAEA,QAAI,MAAM,QAAQ,QAAQ,MAAM,QAAQ,KAAK;AAc3C,eAAS;AAAA,QACP,MAAM,IAAI,OAAO,MAAM,MAAM,IAAI,MAAM,CAAC,IAAI,MAAM;AAAA,MACpD,EAAE,QAAQ,MAAM,KAAK;AAErB,UAAI,MAAM,IAAI,OAAO,KAAK;AACxB,iBAAS,MAAM;AAAA,MACjB,WAAW,OAAO,MAAM,GAAG,EAAE,MAAM,sBAAsB;AACvD,iBAAS,OAAO,OAAO,MAAM,EAAE;AAAA,MACjC,OAAO;AACL,iBAAS,OAAO,SAAS;AAAA,MAC3B;AAEA,YAAM,OAAO,SAAS,MAAM,MAAM;AAAA,IACpC;AAAA,EACF;AAEA,SAAO;AACT;AAEA,SAAS,uBAAuB,QAAQ,OAAO;AAC7C,MAAI,UAAU,CAAC,GACX,oBAAoB,CAAC,GACrBN,QACA;AAEJ,cAAY,QAAQ,SAAS,iBAAiB;AAE9C,OAAKA,SAAQ,GAAG,SAAS,kBAAkB,QAAQA,SAAQ,QAAQA,UAAS,GAAG;AAC7E,UAAM,WAAW,KAAK,QAAQ,kBAAkBA,QAAO;AAAA,EACzD;AACA,QAAM,iBAAiB,IAAI,MAAM,MAAM;AACzC;AAEA,SAAS,YAAY,QAAQ,SAAS,mBAAmB;AACvD,MAAI,eACAA,QACA;AAEJ,MAAI,WAAW,QAAQ,OAAO,WAAW,UAAU;AACjD,IAAAA,SAAQ,QAAQ,QAAQ,MAAM;AAC9B,QAAIA,WAAU,IAAI;AAChB,UAAI,kBAAkB,QAAQA,MAAK,MAAM,IAAI;AAC3C,0BAAkB,KAAKA,MAAK;AAAA,MAC9B;AAAA,IACF,OAAO;AACL,cAAQ,KAAK,MAAM;AAEnB,UAAI,MAAM,QAAQ,MAAM,GAAG;AACzB,aAAKA,SAAQ,GAAG,SAAS,OAAO,QAAQA,SAAQ,QAAQA,UAAS,GAAG;AAClE,sBAAY,OAAOA,SAAQ,SAAS,iBAAiB;AAAA,QACvD;AAAA,MACF,OAAO;AACL,wBAAgB,OAAO,KAAK,MAAM;AAElC,aAAKA,SAAQ,GAAG,SAAS,cAAc,QAAQA,SAAQ,QAAQA,UAAS,GAAG;AACzE,sBAAY,OAAO,cAAcA,UAAS,SAAS,iBAAiB;AAAA,QACtE;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AAEA,SAAS,OAAO,OAAO,SAAS;AAC9B,YAAU,WAAW,CAAC;AAEtB,MAAI,QAAQ,IAAI,MAAM,OAAO;AAE7B,MAAI,CAAC,MAAM;AAAQ,2BAAuB,OAAO,KAAK;AAEtD,MAAI,QAAQ;AAEZ,MAAI,MAAM,UAAU;AAClB,YAAQ,MAAM,SAAS,KAAK,EAAE,IAAI,MAAM,GAAG,IAAI,KAAK;AAAA,EACtD;AAEA,MAAI,UAAU,OAAO,GAAG,OAAO,MAAM,IAAI;AAAG,WAAO,MAAM,OAAO;AAEhE,SAAO;AACT;AAEA,IAAI,SAAS;AAEb,IAAI,SAAS;AAAA,EACZ,MAAM;AACP;AAEA,SAAS,QAAQ,MAAM,IAAI;AACzB,SAAO,WAAY;AACjB,UAAM,IAAI,MAAM,mBAAmB,OAAO,wCAC1B,KAAK,yCAAyC;AAAA,EAChE;AACF;AASA,IAAI,OAAsB,OAAO;AACjC,IAAI,UAAsB,OAAO;AACjC,IAAI,OAAsB,OAAO;AAqBjC,IAAI,WAAsB,QAAQ,YAAY,MAAM;AACpD,IAAI,cAAsB,QAAQ,eAAe,SAAS;AAC1D,IAAI,WAAsB,QAAQ,YAAY,MAAM;;;ACrvHpDe;AACA;AACA;AACA;AACA;;;ACLA,IAAAC,6BAAgC;;;AC6DzB,IAAI,iBAEX,OAAO,SAAS,eAAe,KAAK,WAEZ,oBAAI,IAAI,KAAK,SAAS,SAAS,KAAK,SAAS,WAAW,SAAS,MAAM,IACzE,oBAAI,IAAI,6BAA6B;;;ACjE3D,IAAM,OAAO;AACb,IAAM,OAAO,CAAC,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AAC/D,IAAM,OAAO;AACb,IAAM,WAAW;AAEjB,IAAM,SAAS;AAEf,IAAM,cAAc;AAGpB,IAAM,OAAO;AACb,IAAM,OAAO;AACb,IAAM,eAAe;AACrB,IAAM,4BAA4B;AAClC,IAAM,wBAAwB;AAE9B,IAAM,WAAW;AAEjB,IAAM,WAAW;AACjB,IAAM,eAAe;AAGrB,IAAM,mBAAmB;AAEzB,IAAM,QAAQ,CAAC,UAAU;AACrB,MAAI,MAAM,OAAO;AACb,WAAO;AACX,QAAM,CAAC,MAAM,SAAS,IAAI,IAAI,MAAM,MAAM,GAAG;AAC7C,MAAI,CAAC,QACD,CAAC,QACD,KAAK,WAAW,KAChB,KAAK,SAAS,MACd,KAAK,SAAS;AACd,WAAO;AACX,MAAI,KAAK,OAAO,OAAO,KAAK,SAAS,GAAG,KAAK,KAAK,SAAS,IAAI;AAC3D,WAAO;AACX,MAAI,CAAC,iBAAiB,KAAK,IAAI,KAC3B,CAAC,mCAAmC,KAAK,IAAI;AAC7C,WAAO;AACX,SAAO,KACF,MAAM,GAAG,EACT,MAAM,CAAC,SAAS,wCAAwC,KAAK,IAAI,CAAC;AAC3E;AAEA,IAAM,OAAO;AAEb,IAAM,OAAO;AAEb,IAAM,WAAW,CAAC,UAAU,MAAM,SAAS,KACvC,MAAM,SAAS,OACd,oBAAoB,KAAK,KAAK,KAC1B,oCAAoC,KAAK,KAAK,KAC3C,4EAA4E,KAAK,KAAK;AAClG,SAAS,KAAK,GAAG;AACb,SAAO,EAAE,KAAK,KAAK,CAAC;AACxB;AACO,IAAM,aAAa;AAAA,EACtB;AAAA,EACA,MAAsB,qBAAK,KAAK,QAAW,KAAK;AAAA,EAChD,aAAa;AAAA,EACb,UAAU;AAAA,EACV;AAAA,EACA,iBAAiC,qBAAK,MAAM;AAAA,EAC5C,gBAAgC,qBAAK,WAAW;AAAA,EAChD,KAAqB,qBAAK,IAAI;AAAA,EAC9B,OAAO;AAAA,EACP,UAA0B,qBAAK,QAAQ;AAAA,EACvC,MAAsB,qBAAK,IAAI;AAAA,EAC/B,MAAsB,qBAAK,IAAI;AAAA,EAC/B;AAAA,EACA,MAAsB,qBAAK,IAAI;AAAA,EAC/B,gBAAgC,qBAAK,YAAY;AAAA,EACjD,6BAA6C,qBAAK,yBAAyB;AAAA,EAC3E,yBAAyC,qBAAK,qBAAqB;AACvE;AACO,IAAM,aAAa;AAAA,EACtB,GAAG;AAAA,EACH,MAAsB,qBAAK,QAAQ;AAAA,EACnC,MAAsB,qBAAK,QAAQ;AAAA,EACnC,aAA6B,qBAAK,YAAY;AAAA,EAC9C,iBAAiC,qBAAK,gBAAgB;AAC1D;AACA,SAAS,WAAW,MAAM;AAEtB,SAAO,OAAO,MAAM,MAAM,OAAO,QAAQ,KAAK,OAAO,QAAQ;AACjE;AACA,SAAS,KAAKC,MAAK;AAEf,QAAM,UAAUA,KAAI,MAAM,IAAI;AAC9B,MAAI,CAAC;AACD,WAAO;AACX,QAAM,OAAO,CAAC,QAAQ;AACtB,QAAM,QAAQ,CAAC,QAAQ;AACvB,QAAM,MAAM,CAAC,QAAQ;AACrB,SAAQ,SAAS,KACb,SAAS,MACT,OAAO,KACP,QAAQ,SAAS,KAAK,WAAW,IAAI,IAAI,KAAK,KAAK;AAC3D;AACA,SAAS,KAAK,MAAMA,MAAK;AACrB,QAAM,UAAUA,KAAI,MAAM,IAAI;AAC9B,MAAI,CAAC;AACD,WAAO;AACX,QAAM,OAAO,CAAC,QAAQ;AACtB,QAAM,SAAS,CAAC,QAAQ;AACxB,QAAM,SAAS,CAAC,QAAQ;AACxB,QAAM,WAAW,CAAC,CAAC,QAAQ;AAC3B,UAAU,QAAQ,MAAM,UAAU,MAAM,UAAU,MAC7C,QAAQ,MAAM,UAAU,MAAM,UAAU,QACxC,CAAC,QAAQ;AAClB;AACA,IAAM,sBAAsB;AAC5B,SAAS,UAAUA,MAAK;AAEpB,QAAM,WAAWA,KAAI,MAAM,mBAAmB;AAC9C,SAAO,SAAS,UAAU,KAAK,KAAK,SAAS,EAAE,KAAK,KAAK,MAAM,SAAS,EAAE;AAC9E;AACA,IAAM,mBAAmB;AACzB,IAAM,cAAc;AACpB,SAAS,IAAIA,MAAK;AAEd,SAAO,iBAAiB,KAAKA,IAAG,KAAK,YAAY,KAAKA,IAAG;AAC7D;AACA,IAAM,WAAW;AACjB,SAAS,MAAMA,MAAK;AAChB,MAAI,SAAS,KAAKA,IAAG;AACjB,WAAO;AACX,MAAI;AACA,QAAI,OAAOA,IAAG;AACd,WAAO;AAAA,EACX,SACO,GAAP;AACI,WAAO;AAAA,EACX;AACJ;;;AFrIA;AACA;AACA;;;AGJAC;AACO,IAAM,aAAN,MAAiB;AAAA,EACpB,YAAY,QAAQ;AAKhB,WAAO,eAAe,MAAM,UAAU;AAAA,MAClC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACX,CAAC;AACD,SAAK,SAAS,IAAIC,aAAY,UAAU,CAAC,CAAC;AAAA,EAC9C;AACJ;;;ACfA,IAAAC,iBAA0C;AAC1CC;AACA;AACA;AAEA;AACO,IAAM,mBAAN,cAA+B,WAAW;AAAA,EAC7C,YAAY,QAAQ,eAAe;AAC/B,UAAM,UAAU,CAAC,CAAC;AAClB,WAAO,eAAe,MAAM,aAAa;AAAA,MACrC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACX,CAAC;AACD,WAAO,eAAe,MAAM,aAAa;AAAA,MACrC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACX,CAAC;AACD,WAAO,eAAe,MAAM,iBAAiB;AAAA,MACzC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACX,CAAC;AACD,WAAO,eAAe,MAAM,WAAW;AAAA,MACnC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACX,CAAC;AACD,WAAO,eAAe,MAAM,yBAAyB;AAAA,MACjD,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACX,CAAC;AACD,WAAO,eAAe,MAAM,qBAAqB;AAAA,MAC7C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACX,CAAC;AACD,WAAO,eAAe,MAAM,8BAA8B;AAAA,MACtD,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACX,CAAC;AACD,WAAO,eAAe,MAAM,gCAAgC;AAAA,MACxD,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACX,CAAC;AACD,WAAO,eAAe,MAAM,uBAAuB;AAAA,MAC/C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACX,CAAC;AACD,WAAO,eAAe,MAAM,UAAU;AAAA,MAClC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACX,CAAC;AACD,WAAO,eAAe,MAAM,gBAAgB;AAAA,MACxC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACX,CAAC;AACD,UAAM,SAAS,QAAQ,gBAAgBC,wBAAuB,gBAAgB;AAC9E,UAAM,cAAc,QAAQ,qBACxBA,wBAAuB,sBAAsB;AACjD,QAAI,CAAC,eAAe,CAAC,QAAQ;AACzB,YAAM,IAAI,MAAM,0CAA0C;AAAA,IAC9D;AACA,UAAM,uBAAuB,QAAQ,8BACjCA,wBAAuB,gCAAgC;AAC3D,UAAM,0BAA0B,QAAQ,0CACpC,QAAQ,kCACPA,wBAAuB,6CAA6C,KACjEA,wBAAuB,kCAAkC;AACjE,UAAM,kBAAkB,QAAQ,yBAC5BA,wBAAuB,0BAA0B;AACrD,SAAK,sBACD,QAAQ,uBACJA,wBAAuB,wBAAwB;AACvD,SAAK,YAAY,QAAQ,aAAa,KAAK;AAC3C,SAAK,YAAY,QAAQ,cAAc,cAAc,IAAI,KAAK;AAC9D,SAAK,gBAAgB,QAAQ,iBAAiB,KAAK;AACnD,SAAK,UAAU,QAAQ;AACvB,SAAK,wBAAwB;AAC7B,SAAK,oBAAoB;AACzB,SAAK,6BAA6B;AAClC,SAAK,+BAA+B;AACpC,QAAI,KAAK,mBAAmB;AACxB,UAAI,CAAC,KAAK,4BAA4B;AAClC,cAAM,IAAI,MAAM,0CAA0C;AAAA,MAC9D;AACA,UAAI,CAAC,KAAK,8BAA8B;AACpC,cAAM,IAAI,MAAM,4CAA4C;AAAA,MAChE;AACA,UAAI,CAAC,KAAK,uBAAuB;AAC7B,cAAM,IAAI,MAAM,oCAAoC;AAAA,MACxD;AAAA,IACJ;AACA,SAAK,eAAe;AAAA,MAChB;AAAA,MACA,GAAG;AAAA,IACP;AAAA,EACJ;AAAA,EACA,MAAM,eAAe,OAAO;AACxB,UAAM,aAAa,WAAW,KAAK,gBAAgB,MAAM,IAAI,CAAC,MAAM,EAAE,QAAQ,OAAO,GAAG,CAAC,IAAI,OAAO,KAAK,SAAS;AAClH,UAAM,aAAa,CAAC;AACpB,aAAS,IAAI,GAAG,IAAI,WAAW,QAAQ,KAAK,GAAG;AAC3C,YAAM,QAAQ,WAAW;AACzB,YAAM,EAAE,MAAAC,MAAK,IAAI,MAAM,KAAK,mBAAmB;AAAA,QAC3C,OAAO,KAAK;AAAA,QACZ;AAAA,MACJ,CAAC;AACD,eAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,GAAG;AACtC,mBAAW,KAAKA,MAAK,KAAK,GAAG,SAAS;AAAA,MAC1C;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAAA,EACA,MAAM,WAAWC,OAAM;AACnB,UAAM,EAAE,MAAAD,MAAK,IAAI,MAAM,KAAK,mBAAmB;AAAA,MAC3C,OAAO,KAAK;AAAA,MACZ,OAAO,KAAK,gBAAgBC,MAAK,QAAQ,OAAO,GAAG,IAAIA;AAAA,IAC3D,CAAC;AACD,WAAOD,MAAK,KAAK,GAAG;AAAA,EACxB;AAAA,EACA,MAAM,mBAAmB,SAAS;AAC9B,QAAI,CAAC,KAAK,QAAQ;AACd,YAAM,uBAAuB;AAAA,QACzB,8BAA8B,KAAK;AAAA,QACnC,4BAA4B,KAAK;AAAA,QACjC,mBAAmB,KAAK;AAAA,QACxB,qBAAqB,KAAK;AAAA,QAC1B,UAAU,KAAK,aAAa;AAAA,MAChC;AACA,YAAM,WAAW,YAAY,oBAAoB;AACjD,YAAM,eAAe,IAAI,6BAAc;AAAA,QACnC,GAAG,KAAK;AAAA,QACR,UAAU;AAAA,QACV,aAAa;AAAA,UACT,SAAS,KAAK;AAAA,UACd,SAASE,QAAO,IAAI,SAAY;AAAA,UAChC,GAAG,KAAK,aAAa;AAAA,QACzB;AAAA,MACJ,CAAC;AACD,WAAK,SAAS,IAAI,yBAAU,YAAY;AAAA,IAC5C;AACA,UAAM,eAAe,CAAC;AACtB,QAAI,KAAK,mBAAmB;AACxB,mBAAa,UAAU;AAAA,QACnB,WAAW,KAAK;AAAA,QAChB,GAAG,aAAa;AAAA,MACpB;AACA,mBAAa,SAAS;AAAA,QAClB,eAAe,KAAK;AAAA,QACpB,GAAG,aAAa;AAAA,MACpB;AAAA,IACJ;AACA,WAAO,KAAK,OAAO,KAAK,KAAK,OAAO,gBAAgB,KAAK,KAAK,MAAM,GAAG,SAAS,YAAY;AAAA,EAChG;AACJ;;;A7DlKAC;AACAC;;;A8DXAC;AACAC;;;ACDAC;AACAC;;;A/DaA;;;AgEdA;AACA;AACO,IAAM,gBAAN,cAA4B,aAAa;AAAA,EAC5C,YAAY,QAAQ;AAChB,UAAM,MAAM;AACZ,WAAO,eAAe,MAAM,aAAa;AAAA,MACrC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACX,CAAC;AACD,WAAO,eAAe,MAAM,QAAQ;AAAA,MAChC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACX,CAAC;AACD,WAAO,eAAe,MAAM,YAAY;AAAA,MACpC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACX,CAAC;AACD,WAAO,eAAe,MAAM,WAAW;AAAA,MACnC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACX,CAAC;AACD,SAAK,YAAY,QAAQ;AACzB,SAAK,OAAO,QAAQ,QAAQ,CAAC;AAC7B,SAAK,WAAW,QAAQ,YAAY,CAAC;AACrC,SAAK,UAAU,QAAQ,WAAW;AAAA,EACtC;AAAA,EAMA,sBAAsB,QAAQ,YAAY;AACtC,UAAM,IAAI,MAAM,kBAAkB;AAAA,EACtC;AAAA,EACA,MAAM,qBAAqB,OAAO,QAAQ;AACtC,UAAM,eAAe,uBAAuB,MAAM;AAClD,UAAM,mBAAmB,MAAM,gBAAgB,UAAU,aAAa,WAAW,KAAK,WAAW,aAAa,MAAM,KAAK,MAAM,aAAa,UAAU,KAAK,UAAU,EAAE,SAAS,KAAK,QAAQ,CAAC;AAC9L,UAAM,aAAa,MAAM,kBAAkB,qBAAqB,KAAK,OAAO,GAAG,KAAK;AACpF,QAAI;AACA,YAAM,UAAU,MAAM,KAAK,sBAAsB,OAAO,UAAU;AAClE,YAAM,YAAY,mBAAmB,OAAO;AAC5C,aAAO;AAAA,IACX,SACO,OAAP;AACI,YAAM,YAAY,qBAAqB,KAAK;AAC5C,YAAM;AAAA,IACV;AAAA,EACJ;AACJ;;;ACvDA;AACO,IAAM,uBAAN,cAAmC,cAAc;AAAA,EACpD,IAAI,eAAe;AACf,WAAO,CAAC,aAAa,cAAc,MAAM;AAAA,EAC7C;AAAA,EACA,mBAAmB;AACf,WAAO,KAAK,YAAY,iBAAiB;AAAA,EAC7C;AAAA,EACA,YAAY,QAAQ;AAChB,UAAM,MAAM;AACZ,WAAO,eAAe,MAAM,eAAe;AAAA,MACvC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACX,CAAC;AACD,WAAO,eAAe,MAAM,KAAK;AAAA,MAC7B,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACX,CAAC;AACD,WAAO,eAAe,MAAM,UAAU;AAAA,MAClC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACX,CAAC;AACD,SAAK,cAAc,OAAO;AAC1B,SAAK,IAAI,OAAO,KAAK,KAAK;AAC1B,SAAK,SAAS,OAAO;AAAA,EACzB;AAAA,EACA,MAAM,sBAAsB,OAAO,YAAY;AAC3C,WAAO,KAAK,YAAY,iBAAiB,OAAO,KAAK,GAAG,KAAK,QAAQ,YAAY,SAAS,aAAa,CAAC;AAAA,EAC5G;AAAA,EACA,MAAM,aAAa,WAAW,SAAS;AACnC,WAAO,KAAK,YAAY,aAAa,WAAW,OAAO;AAAA,EAC3D;AACJ;AACO,IAAM,cAAN,cAA0B,aAAa;AAAA,EAE1C,YAAY,YAAY,UAAU;AAC9B,UAAM,QAAQ;AACd,WAAO,eAAe,MAAM,gBAAgB;AAAA,MACxC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO,CAAC,aAAa,gBAAgB,KAAK,iBAAiB,CAAC;AAAA,IAChE,CAAC;AACD,WAAO,eAAe,MAAM,cAAc;AAAA,MACtC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACX,CAAC;AACD,SAAK,aAAa;AAAA,EACtB;AAAA,EAEA,MAAM,OAAO,SAAS;AAClB,UAAM,IAAI,MAAM,kBAAkB;AAAA,EACtC;AAAA,EACA,MAAM,iBAAiB,OAAO,IAAI,GAAGC,UAAS,QAAW,aAAa,QACpE;AACE,UAAM,UAAU,MAAM,KAAK,gCAAgC,MAAM,KAAK,WAAW,WAAW,KAAK,GAAG,GAAGA,OAAM;AAC7G,WAAO,QAAQ,IAAI,CAAC,WAAW,OAAO,EAAE;AAAA,EAC5C;AAAA,EACA,MAAM,0BAA0B,OAAO,IAAI,GAAGA,UAAS,QAAW,aAAa,QAC7E;AACE,WAAO,KAAK,gCAAgC,MAAM,KAAK,WAAW,WAAW,KAAK,GAAG,GAAGA,OAAM;AAAA,EAClG;AAAA,EACA,OAAO,UAAU,QAAQ,YAAY,aAErC,WAAW;AACP,UAAM,IAAI,MAAM,qGAAqG;AAAA,EACzH;AAAA,EACA,OAAO,cAAc,OAAO,aAE5B,WAAW;AACP,UAAM,IAAI,MAAM,qGAAqG;AAAA,EACzH;AAAA,EACA,YAAY,WAAWA,SAAQ,WAAW,MAAM,UAAU,SAAS;AAC/D,QAAI,OAAO,cAAc,UAAU;AAC/B,aAAO,IAAI,qBAAqB;AAAA,QAC5B,aAAa;AAAA,QACb,GAAG;AAAA,QACH,QAAAA;AAAA,QACA,MAAM,CAAC,GAAI,QAAQ,CAAC,GAAI,KAAK,iBAAiB,CAAC;AAAA,QAC/C;AAAA,QACA;AAAA,QACA;AAAA,MACJ,CAAC;AAAA,IACL,OACK;AACD,aAAO,IAAI,qBAAqB;AAAA,QAC5B,aAAa;AAAA,QACb,GAAG,WAAW;AAAA,QACd,QAAQ,WAAW;AAAA,QACnB,MAAM,CAAC,GAAI,WAAW,QAAQ,CAAC,GAAI,KAAK,iBAAiB,CAAC;AAAA,QAC1D,UAAU,WAAW;AAAA,QACrB,SAAS,WAAW;AAAA,QACpB,WAAW,WAAW;AAAA,MAC1B,CAAC;AAAA,IACL;AAAA,EACJ;AACJ;;;ACzGA,2BAAyB;AACzB,sBAA0B;;;ACC1B;;;ACDA;AACA,IAAM,iBAAiB,OAAO,IAAI;AAClC,IAAM,sBAAsB,OAAO,SAAS;AAC5C,IAAM,QAAQ;AAAA,EACV,QAAQ;AAAA,EACR,IAAI;AAAA,EACJ,KAAK;AAAA,EACL,IAAI;AAAA,EACJ,KAAK;AAAA,EACL,KAAK;AACT;AACA,IAAM,oBAAN,cAAgC,YAAY;AAAA,EACxC,mBAAmB;AACf,WAAO;AAAA,EACX;AAAA,EACA,YAAY,YAAY,QAAQ;AAC5B,UAAM,YAAY,CAAC,CAAC;AACpB,WAAO,eAAe,MAAM,aAAa;AAAA,MACrC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACX,CAAC;AACD,WAAO,eAAe,MAAM,oBAAoB;AAAA,MAC5C,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACX,CAAC;AACD,WAAO,eAAe,MAAM,iBAAiB;AAAA,MACzC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACX,CAAC;AACD,WAAO,eAAe,MAAM,UAAU;AAAA,MAClC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACX,CAAC;AACD,WAAO,eAAe,MAAM,YAAY;AAAA,MACpC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACX,CAAC;AACD,WAAO,eAAe,MAAM,iBAAiB;AAAA,MACzC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACX,CAAC;AACD,WAAO,eAAe,MAAM,MAAM;AAAA,MAC9B,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACX,CAAC;AACD,WAAO,eAAe,MAAM,UAAU;AAAA,MAClC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACX,CAAC;AACD,SAAK,SAAS,OAAO;AACrB,SAAK,KAAK,OAAO;AACjB,UAAM,UAAU,OAAO,QAAQ,OAAO,OAAO;AAC7C,UAAM,WAAW,QAAQ,KAAK,CAAC,MAAM,EAAE,OAAO,cAAc,IAAI;AAChE,UAAM,gBAAgB,QAAQ,KAAK,CAAC,MAAM,EAAE,OAAO,mBAAmB,IAAI;AAC1E,QAAI,YAAY;AACZ,YAAM,IAAI,MAAM,mBAAmB;AACvC,QAAI,iBAAiB;AACjB,YAAM,IAAI,MAAM,wBAAwB;AAC5C,SAAK,WAAW;AAChB,SAAK,gBAAgB;AACrB,SAAK,YAAY,OAAO;AACxB,SAAK,mBAAmB,OAAO;AAC/B,SAAK,gBAAgB,QAChB,IAAI,CAAC,CAAC,KAAK,KAAK,MAAO,SAAS,OAAQ,IAAI,EAC5C,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;AACtB,QAAI,OAAO,QAAQ;AACf,WAAK,SAAS,OAAO;AAAA,IACzB;AAAA,EACJ;AAAA,EACA,OAAO,UAAU,IAAI;AACjB,aAAS,OAAO,YAAY,QAAQ;AAChC,aAAO,IAAI,kBAAkB,YAAY,EAAE,GAAG,QAAQ,GAAG,CAAC;AAAA,IAC9D;AACA,mBAAe,UAAU,OAAO,WAAW,YAAY,UAAU;AAC7D,YAAM,OAAO,CAAC;AACd,eAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,GAAG;AACtC,cAAM,WAAW,MAAM,QAAQ,SAAS,IAAI,UAAU,KAAK;AAC3D,cAAM,SAAS,IAAI,SAAS;AAAA,UACxB,aAAa,MAAM;AAAA,UACnB;AAAA,QACJ,CAAC;AACD,aAAK,KAAK,MAAM;AAAA,MACpB;AACA,aAAO,kBAAkB,cAAc,MAAM,YAAY;AAAA,QACrD,GAAG;AAAA,QACH;AAAA,MACJ,CAAC;AAAA,IACL;AACA,mBAAe,cAAc,MAAM,YAAY,UAAU;AACrD,YAAM,WAAW,IAAI,kBAAkB,YAAY,EAAE,GAAG,UAAU,GAAG,CAAC;AACtE,YAAM,SAAS,aAAa,IAAI;AAChC,aAAO;AAAA,IACX;AACA,WAAO,EAAE,QAAQ,WAAW,cAAc;AAAA,EAC9C;AAAA,EACA,MAAM,UAAU,QAAQ;AACpB,WAAO,KAAK,aAAa,OAAO,IAAI,CAAC,aAAa;AAC9C,YAAM,cAAc,SAAS,KAAK;AAClC,UAAI,OAAO,gBAAgB;AACvB,cAAM,IAAI,MAAM,iCAAiC;AACrD,aAAO,IAAI,SAAS,EAAE,aAAa,SAAS,CAAC;AAAA,IACjD,CAAC,CAAC;AAAA,EACN;AAAA,EACA,MAAM,aAAa,WAAW;AAC1B,UAAM,QAAQ,UAAU,IAAI,CAAC,EAAE,YAAY,MAAM,WAAW;AAC5D,WAAO,KAAK,WAAW,MAAM,KAAK,WAAW,eAAe,KAAK,GAAG,SAAS;AAAA,EACjF;AAAA,EACA,MAAM,WAAW,SAAS,WAAW;AAGjC,UAAM,cAAc,KAAK,OAAO,IAAI,IAAI,KAAK,WAAW;AACxD,UAAM,eAAe,KAAK,OAAO,IAAI,IAAI,KAAK,YAAY;AAC1D,UAAM,kBAAkB,KAAK,OAAO,IAAI,IAAI,KAAK,mBAAmB;AACpE,UAAM,KAAK,GAAG,aAAa,QAAQ,IAAI,CAAC,QAAQ,QAAQ,KAAK,GAAG;AAAA,mBACrD;AAAA,gBACH,qBAAqB,IAAI,OAAO,KAAK,GAAG;AAAA,kBACtC,iBAAiB,UAAU,KAAK,SAAS,KAAK;AAAA,SACvD,CAAC;AAAA,EACN;AAAA,EACA,MAAM,iBAAiB,OAAO,IAAI,GAAG,UAAU,QAC/C,aAAa,QACX;AACE,UAAM,UAAU,MAAM,KAAK,gCAAgC,MAAM,KAAK,WAAW,WAAW,KAAK,GAAG,CAAC;AACrG,WAAO,QAAQ,IAAI,CAAC,WAAW,OAAO,EAAE;AAAA,EAC5C;AAAA,EACA,MAAM,0BAA0B,OAAO,GAAGC,SAAQ,aAAa,QAC7D;AACE,WAAO,MAAM,0BAA0B,OAAO,GAAGA,OAAM;AAAA,EAC3D;AAAA,EACA,MAAM,gCAAgC,OAAO,GAAGA,SAAQ;AAGpD,UAAM,kBAAkB,KAAK,OAAO,IAAI,IAAI,KAAK,mBAAmB;AACpE,UAAM,eAAe,KAAK,OAAO,IAAI,IAAI,KAAK,YAAY;AAC1D,UAAM,YAAY,KAAK,OAAO,IAAI,KAAK,cAAc,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE,KAAK,IAAI,CAAC;AACpF,UAAM,SAAS,IAAI,MAAM,KAAK,GAAG;AACjC,UAAM,WAAW,MAAM,KAAK,GAAG,UAAU,KAAK,OAAO,KAAK;AAAA,MACtD,KAAK,OAAO;AAAA,qBACH,cAAc,uBAAuB;AAAA,mBACvC;AAAA;AAAA,MAEP,KAAK,kBAAkBA,WAAU,KAAK,MAAM;AAAA,MAC5C,KAAK,OAAO;AAAA;AAAA,oBAEJ;AAAA;AAAA,IAEZ,EAAE,OAAO,CAAC,MAAM,KAAK,IAAI,GAAG,EAAE,CAAC;AAC/B,UAAM,UAAU,CAAC;AACjB,eAAW,WAAW,UAAU;AAC5B,UAAI,QAAQ,aAAa,QAAQ,QAAQ,KAAK,kBAAkB,MAAM;AAClE,gBAAQ,KAAK;AAAA,UACT,IAAI,SAAS;AAAA,YACT,aAAa,QAAQ,KAAK;AAAA,YAC1B,UAAU;AAAA,UACd,CAAC;AAAA,UACD,QAAQ;AAAA,QACZ,CAAC;AAAA,MACL;AAAA,IACJ;AACA,WAAO;AAAA,EACX;AAAA,EACA,kBAAkBA,SAAQ;AACtB,QAAIA,WAAU;AACV,aAAO;AACX,WAAO,KAAK,OAAO,KAAK,OAAO,QAAQA,OAAM,EAAE,QAAQ,CAAC,CAAC,KAAK,GAAG,MAAM,OAAO,QAAQ,GAAG,EAAE,IAAI,CAAC,CAAC,QAAQ,KAAK,MAAM;AAGhH,YAAM,SAAS,KAAK,OAAO,IAAI,IAAI,MAAM;AACzC,YAAM,QAAQ,KAAK,OAAO,IAAI,MAAM,OAAO;AAC3C,aAAO,KAAK,OAAO,MAAO,UAAU,SAAS;AAAA,IACjD,CAAC,CAAC,GAAG,SAAS,SAAS;AAAA,EAC3B;AAAA,EACA,aAAa,UAAU,OAAO,WAAW,YAAY,UAAU;AAC3D,UAAM,OAAO,CAAC;AACd,aAAS,IAAI,GAAG,IAAI,MAAM,QAAQ,KAAK,GAAG;AACtC,YAAM,WAAW,MAAM,QAAQ,SAAS,IAAI,UAAU,KAAK;AAC3D,YAAM,SAAS,IAAI,SAAS;AAAA,QACxB,aAAa,MAAM;AAAA,QACnB;AAAA,MACJ,CAAC;AACD,WAAK,KAAK,MAAM;AAAA,IACpB;AACA,WAAO,kBAAkB,cAAc,MAAM,YAAY,QAAQ;AAAA,EACrE;AAAA,EACA,aAAa,cAAc,MAAM,YAAY,UAAU;AACnD,UAAM,WAAW,IAAI,kBAAkB,YAAY,QAAQ;AAC3D,UAAM,SAAS,aAAa,IAAI;AAChC,WAAO;AAAA,EACX;AACJ;AACA,OAAO,eAAe,mBAAmB,YAAY;AAAA,EACjD,YAAY;AAAA,EACZ,cAAc;AAAA,EACd,UAAU;AAAA,EACV,OAAO;AACX,CAAC;AACD,OAAO,eAAe,mBAAmB,iBAAiB;AAAA,EACtD,YAAY;AAAA,EACZ,cAAc;AAAA,EACd,UAAU;AAAA,EACV,OAAO;AACX,CAAC;;;AC1ND;AAEAC;;;ACDAC;;;ACDA;AACA;AACAC;;;ACFA;;;ACAAC;;;ACCAC;AACAC;;;ACFA;AACAC;;;ACCAC;AACA;;;ACHA;;;A7EqBA;;;A8EpBO,IAAM,qBAAN,MAAyB;AAAA,EAC5B,MAAM,aAAa,WAAW,IAAI,+BAA+B,GAAG;AAChE,UAAM,OAAO,MAAM,KAAK,KAAK;AAC7B,WAAO,SAAS,eAAe,IAAI;AAAA,EACvC;AACJ;;;ACNA;;;ACAA,IAAAC,6BAAgC;AAChC;AAGA;;;AhFqBAC;AACA;;;SiF0Bc;;;ACpDP,IAAM,UAAU;;;ACAvB;;;;;;;;;;;;;;AAIM,IAAO,WAAP,cAAwB,MAAK;cAKjC,QAC4B,OACD,SACE,SACC;;kBAGvB,UAAe,QAAC,UAAA,SAAA,SAAA,MAAA,YAAA;;SAErB,SAAU;AACZ,SAAC,UAAA;AAED,SAAA,QAAO;;kBAOH,QAAW,eAAkB,SAAQ,SAAE;SACxC,QAAA;aAED,IAAM,mBAA6C,EAAA,OAAA,YAAA,aAAA,EAAA,CAAA;;kBAGjD;mBACD,KAAA;aAEG,IAAA,gBAAgB,QAAA,OAAA,SAAA,OAAA;;mBAEnB,KAAA;aAEG,IAAA,oBAAgB,QAAA,OAAA,SAAA,OAAA;;mBAEnB,KAAA;aAEG,IAAA,sBAAgB,QAAA,OAAA,SAAA,OAAA;;mBAEnB,KAAA;aAEG,IAAA,cAAgB,QAAA,OAAA,SAAA,OAAA;;mBAEnB,KAAA;aAEG,IAAA,cAAgB,QAAA,OAAA,SAAA,OAAA;;mBAEnB,KAAA;aAEG,IAAA,yBAAgB,QAAA,OAAA,SAAA,OAAA;;mBAEnB,KAAA;aAEG,IAAA,eAAe,QAAA,OAAA,SAAA,OAAA;;kBAElB,KAAA;aAED,IAAO,oBAAqB,QAAO,OAAS,SAAS,OAAA;IACvD;AACD,WAAA,IAAA,SAAA,QAAA,OAAA,SAAA,OAAA;EAED;;IAIS,mCAAuB,SAAW;cAHvB,EAAA,SAAoB,MAAS,GAAC;UAI9C,QAAA,QAAA,WAAA,qBAAA,MAAgE;SAChE,SAAA;AAEF,QAAC;AAAA,WAAA,QAAA;EACF;AAED;AACE,IAAA,4BAAA,cAAA,mBAAA;gBACU;AACV,UAAC,EAAA,SAAA,qBAAA,CAAA;EACF;AAED;AAAA,IAAA,kBAAA,cAAA,SAAA;;UACoB,GAAA,SAAc;AAClC,SAAC,SAAA;EAAA;AAED;AAAA,IAAA,sBAAA,cAAA,SAAA;;UACoB,GAAA,SAAc;AAClC,SAAC,SAAA;EAAA;AAED;AAAA,IAAA,wBAAA,cAAA,SAAA;;UACoB,GAAA,SAAc;AAClC,SAAC,SAAA;EAAA;AAED;AAAA,IAAA,gBAAA,cAAA,SAAA;;UACoB,GAAA,SAAc;AAClC,SAAC,SAAA;EAAA;AAED;AAAA,IAAA,gBAAA,cAAA,SAAA;;UACoB,GAAA,SAAc;AAClC,SAAC,SAAA;EAAA;AAED;AAAA,IAAA,2BAAA,cAAA,SAAA;;UACoB,GAAA,SAAc;AAClC,SAAC,SAAA;EAAA;AAED;AAAA,IAAA,iBAAA,cAAA,SAAA;;UACoB,GAAA,SAAc;AAClC,SAAC,SAAA;EAAA;AAED;AAAoD,IAAA,sBAAA,cAAA,SAAA;AAAA;;;ACnG9C,IAAO,SAAP,MAAa;cASjB,UAA8B,YAA6B;SACzD,WAAK;SACL,aAAK;SACL,UAAK,IAAU,WAAI;SACnB,kBAAK,sBAAkB,SAAsB,OAAS;;SAG3C,eAAc;QACzB,CAAA,KAAK,SAAK,MAAS;sBACZ,MAAW;YAChB,IAAA,MAAU,mDAAM;;UAElB,cAAM,IAAc,YAAI;UAExB,OAAM,4BAAO,KAAmC,SAAK,IAAS;qBACnD,SAAW,MAAI;iBACnB,QAAM,YAAQ,OAAY,KAAM,GAAC;oBACpC,KAAS,QAAQ,OAAO,IAAC;;AACzB,gBAAO;;;eAEV,QAAA,YAAA,MAAA,GAAA;YAED,MAAK,KAAU,QAAI,OAAW,IAAC;;AAC7B,cAAS;;;UAEV,OAAA,iBAAA;AACH,QAAC;AAED,uBAAe,OAAA,KAAc,aAAA,GAAA;AAC3B,YAAI,IAAA,UAAA,cAAA;cACF;kBACE,KAAO,MAAM,IAAA,IAAK;;0BAEd,sCAA2B,IAAA,IAAA;0BAC5B,eAAA,IAAA,GAAA;;;;0BAGC,QAAQ;;;gBAIZ,UAAQ,SAAU;0BAChB,IAAS;0BACV,SAAA,OAAA;gBAED,aAAa,UAAK,SAAS;yBACzB,SAAa,QAAY,SAAA,YAAA,KAAA,eAAA;;;;uBAM5B,SAAA,EAAA,SAAA;AAAA;YACF;;sBAEM,MAAA;;;;uBAEG;gBACR;iBACK;SACN,OAAA,CAAA;AACH,SAAC,SAAA,CAAA;EACF;EAED,OAAM,MAAA;AAKJ,QAAA,KAAA,SAAA,IAAA,GAAA;aACO,KAAK,UAAQ,GAAA,KAAA,SAAA,CAAA;;QAElB,CAAA,MAAK;AAGP,UAAM,CAAC,KAAY,SAAA,CAAA,KAAA,KAAA;AAAA,eAAA;YACb,MAAK;eACP,KAAO;cACR,KAAA,KAAA,KAAA,IAAA;QAED,KAAK,KAAI;;mBAEF;kBAAiC,CAAA;oBAEhC,CAAG;;;gBAGP,KAAK,IAAI;aACV,WAAC,GAAA,GAAA;aAEF;;oBAEK,GAAM,KAAK,IAAC,UAAA,MAAA,GAAA;cAEjB,WAAW,GAAA,GAAA;cACZ,MAAA,UAAA,CAAA;;QAID,cAAS,SAAc;mBACd;eACR,cAAA,QAAA;WAED,KAAK,KAAA,KAAY;;;;;IAalB,oBAAA;EACF,cAAA;AAED,SAAA,SAAA,CAAA;;;;;AAKG,QAAA,KAAA,YAAA;AACG,MAAAC,QAAA,OAAWA;AASf,WAAA,aAAA;;QAEEA,MAAK,SAAA,IAAa,GAAA;AACnB,WAAA,aAAA;AAED,MAAAA,QAAOA,MAAY,MAAA,GAAA,EAAA;;QAGjB,CAAAA,OAAI;aACF,CAAA;;UAED,kBAAA,YAAA,cAAA,IAAAA,MAAAA,MAAA,SAAA,MAAA,EAAA;QACD,QAAQA,MAAC,MAAS,YAAO,cAAA;cACvB,WAAK,KAAa,CAAA,iBAAK;kBACnB,KAAO,MAAM,EAAE;aACpB,CAAA;;aAGC,OAAO,SAAG,GAAA;cACX,CAAA,KAAA,OAAA,KAAA,EAAA,IAAA,MAAA,IAAA,GAAA,MAAA,MAAA,CAAA,CAAA;WAED,SAAM,CAAA;;QAGN,CAAA,iBAAgB;oBACT,CAAA,MAAO,IAAK,KAAO,EAAG;;WAE5B;;aAGC,OAAQ;;iBAET;AAAA,aAAA;QAED,OAAK,UAAA;AAAiB,aAAA;eAErB,WAAA,aAAA;UAED,iBAAa,QAAA;AACd,eAAA,MAAA,SAAA;MAED;;AACE,eAAI,OAAS,KAAI,KAAA,EAAA,SAAA;;YACb,IAAA;gDAAwC,MAAA,YAAA;;;+BAK3B,aAAW;2BACzB,cAAA,iBAAA,aAAA;eACD,KAAI,iBAAiB,QAAUC,QAAE,SAAAA,MAAA,KAAA,cAAA,IAAA,YAAA,MAAA;oBAC/B,YAAc,OAAK,KAAO;;YAG5B,IAAA;4DAGD,MAAA,YAAA;;;cAIC;;;;;SAUD,KAAA,OAAA,UAAA,CAAA,KAAA,YAAA;aAED,CAAM;IAGR;AAEA,UAAK,QAAA,CAAA,KAAA,OAAA,KAAA,EAAA,CAAA;SACH,SAAU,CAAA;sBACE;WACX;;;YAKD,gBAAa,oBAAA,IAAA,CAAA,MAAA,MAAA,MAAA,MAAA,KAAA,KAAA,KAAA,QAAA,UAAA,QAAA,CAAA;YACd,iBAAA;;AA/FD,QAAAC,SAAAC,KAAkB,QAAA,SAAA;AACX,MAAAD,WAAA,IAAA;AACA,WAAA,CAAAC,KAAA,UAAc,GAAGD,MAAA,GAAA,WAAAC,KAAA,UAAAD,SAAA,UAAmD,MAAA,CAAA;EAgG7E;SACE,CAAMC,MAAK,IAAG,EAAG;;;;;;SAahB;IACH,MAAS,OAAA;AACP,UAAI;AAA8B,cAAA,SAAc,MAAA,OAAA,KAAA;AAEhD,YAAM,WAAS,QAAO,WAAY,SAAA,SAAA,OAAA;AAAA,iBAAA,YAAA;AAClC,eAAO;eACC,GAAN;eACE,YAAI;;;;mBAGF;4BACD,OAAA,OAAA;aAAC,YAAU;;qBAEV,MAAQ,OAAA,OAAA;;YAEX,iBAAA;aACI;;;;;;AC7QF,IAAM,kBAAkB,CAAC,QAAoB;SAClD;AACF;;;ACJA,IAAM,SAAS,MAAM,KAAK,MAAS;AAK5B,IAAM,eAAe;;;ACP5B,IAAM,QAAQ;;;ACmBd,eAAsB,eAAY;QAChC,IAAM;IAGP;;;;;AC4BM,IAAM,iBAAiB,CAAC,mBAEtB,eACP,UAAa,mBACb,MAAO,QAAU,YAEnB,OAAO,MAAM,SAAU;AAcrB,IAAO,aAAe,CAAA,mBACf,eACP,UAAa,mBACb,MAAO,SAAW,mBAClB,MAAO,SAAM,YAEf,OAAO,MAAM,SAAA,qBACX,MAAO,UAAW,cAClB,OAAA,MAAA,gBAAA;eAmBe,OAAM,OAAM,MAAO,UAAA,CAAA,GAAA;WAChC,IAAI;qBAEO,KAAM,GAAW;UAC7B,OAAA,MAAA,MAAA,KAAA;AAED,aAEA,QAEKC,MAAA,IAAQ,IAAI,MAAE,GAAA,EAAA,SAAA,MAAA,OAAA,EAAA,IAAA,OAAA,QAAAA,QAAA,SACjBA,MACA;eACE,MAAO,CAAA,IAAK,GAAG,MAAO,OAAM;;QAE/B,OAAA,MAAAC,UAAA,KAAA;WAEM,QAAQ,KAAK,QAAQ,KAAA,OAAS,QAAA,OAAA,SAAA,KAAA;AACtC,MAAA,CAAA,QAAA,MAAA;AAED,UAAKC,SAAU,KAAQ,KAAC,QAA6C,QAAA,OAAA,SAAA,SAAA,GAAA;;AACnE,gBAAA,EAAA,GAAA,SAAA,MAAAA,MAAA;IACA;;SAIE,IAAA,MAAO,MAAK,MAAK,OAAQ;;eAEpBD,UAAA,OAAY;;UAGZ,MAAI;cACH,CAAA;aACD,UACL,wBACA,OAAA,KAAA,sBACW;UAEV,KAAA,KAAA;aACF,WAAA,KAAA,GAAA;UAAM,KAAA,MAAA,MAAA,YAAA,CAAA;qCAMN,KAAA,GAED;AACD,qBAAA,SAAA,OAAA;AAED,YAAS,KAAA,KAAa;IACpB;SACA;AACD,UAAA,IAAA;MAED,yBAA2B,OAAA,4HACzB,SAEED,IAAA;;;AAIH,SAAA;AAED;SACM,cAAa,OAAQ;QAAE,QAAQ,OAAC,oBAAA,KAAA;SAChC,IAAA,MAAO,IAAM,CAAA,MAAK,IAAA,IAAW,EAAA,KAAK,IAAA;;SACtC,QAAO,OAAU;AACjB,MAAAA;AAEF,SAGA,yBAA0B,MAAA,IAAA,KACxB,yBAA4C,MAAA,QAAA,OAAIA,MAAA,yBAAA,MAAA,IAAA,OAAA,QAAAA,QAAA,SAAA,SAAAA,IAAA,MAAA,OAAA,EAAA,IAAA;;IAG/C,2BAAA,CAAA,MAAA;AACF,MAAA,OAAA,MAAA;AAAA,WAAA;AAED,MAAM,OAAO,WAAA,eAAqD,aACxD;AAAW,WAAK,OAAQ,CAAA;AAElC,SAAA;;kDAGG,QAAA,OAAA,UAAA,YAAA,OAAA,MAAA,OAAA,mBAAA;AACI,IAAM,gBAAN,MAAM;cAGN,MAAA;SAA+B,OAAO;;OAG3C,OAAO,eAAA;AACP,WAAA;EAEF;;AAIE,IAAO,kBAAA,CAAA,SACP,QAAA,OAAA,SAAA,YAAA,KAAA,QAAA,KAAA,OAAA,iBAAA;;;;;;;;;;;;sCRvMO,UAAA,OAA6B,MAAM,GAAA;MACrC,SAEL,OAAA,CAAA;AAAY,UAAI,IAAA,UAAA,+CAIqB;MAChC,OAAE,UAAe,aAAE,aAAA,SAAA,CAAA,IAAA,CAAA,MAAA,IAAA,QAAA;UAExB,IAAA,UAAA,0EAID;AAED,SAIM,SAAgB,MAAA,IASpB,SAAY,MACV,EAAO,KACP,QAAU,IAEV,IAAA,EAAS,QAST,MAAK,IAAA,QAAU;;;;;;;;IAoBP,UAAA,KAAc;;;;mBAIpB;sBACG;;qBAEH,QAAA,eAAA,SAAA,aAAA;IACJ;AAIA,SAAA,UAAA,wBAAA,WAAA,OAAA;;SAEG,QAAA,mBAAA,QAAA,mBAAA,SAAA,iBAAA;;gBAGH;;;mBAYU;WACR;MACD,QAAA;MAED,gBAAiE;oBACnD,KAAA,aAAkB;MAC/B,GAAA,mBAAA;MACD,GAA0B,KAAY,YAA4B;;;kBAMD,SAAA,eAAA;EAAA;cAezD;WACN,CAAI;;0BAEO;mCACR,MAAA;;YAGD,MAAM;gBACN,QAAO,EAAO,QAAQ,OAAA,MAAW,GAAA,KAAA,CAAA;;aAGnC,MAAW;AACb,WAAC,KAAA,QAAA,EAAA,QAAA,QAAA,MAAA,GAAA,KAAA,CAAA;;;WAKC,KAAQ,QAAQ,EAAA,QAAM,SAAO,MAAS,GAAA,KAAU,CAAE;;YAIhD,MAAE;gBACF,QAAO,EAAA,QAAA,OAAA,MAAA,GAAA,KAAA,CAAA;;SAGT,MAAM,MAAM;WACZ,KAAI,QAAS,EAAI,QAAO,UAAA,MAAA,GAAA,KAAA,CAAA;;aACxB,MAAM,MAAU,MAAA;WAChB,KAAM,eAAY,MAAA,EAAA,QAAQ,OAAA,MAAS,GAAA,KAAA,CAAA;;yBAEb,MAAA;eACpB,SAAA,UAAA;iBACA,WAAA,aAAA;eACA,OAAA,WAAA,MAAA,MAAA,EAAA,SAAA;;YAEC,UAAkB,IAAA,YAAe;YACnC,UAAA,QAAA,OAAA,IAAA;aAEG,QAAK,OAAA,SAAiB;;;;eAGzB,SAAA;QAEDG,KAAA,IAAM,IAAA;YACJ,QAAI,MAAA,OAAiB,UAAkB,CAAE,EAAA,IAAA;iCAE/B,QAAA,IAAA,IAAA,QAAA,KAAA,eACV,OAAA,KAAA,UAAA,QAAA,MAAA,MAAA,CAAA,IACF;UACA,gBAAI,KAAgB,uBAAkB,IAAA;gBACpC,KAAO,SAAW,MAAA,KAAA;qBACnB;AAAA,8BAAA,WAAA,QAAA,OAAA;UAED,WAAAA,MAAA,QAAA,aAAA,QAAAA,QAAA,SAAuDA,MAAA,KAAA;UACvD,mBAGE,KAAM,QAAA,eAAA,QAAA,OAAA,SAAA,KAAA,KAAA,eAAA,eACH,8BAGH,GAAA;UAEF,kBAAoB,UAAC;SAGtB,cAAA,QAAA,cAAA,SAAA,SAAA,UAAA,YAED,oBAAA,KAAA,UAAA,QAAA,aAAA,QAAA,OAAA,SAAA,KAAA;AAMU,gBAAM,QAAc,UAAuB;IAE3C;QAMR,KAAA,qBAAyB,WAAQ,OAAO;AACzC,UAAA,CAAA,QAAA;AAAA,gBAAA,iBAAA,KAAA,sBAAA;AAED,cAAM,KACJ,qBACA,QAAwD;;;SAExD,iBAAkB,EAAA,kBAAiB,cAAa;SAChD,KAAM,eAAK;SAEX;;QAKA,gBAAY,QAAY,IAAA,KAAO,CAAA,cAAA;aAC7B,WAAI;;gBACgC,UAAU,EAAA,QAAA,CAAA,QAAA,WAA4B,SAAA,QAAA,OAAA,WAAA,IAAA;gBAC1E;;SAGF,QAAM,EAAA,KAAe;eAEhB;sBACC,EAAA,OAAgB,UAAS;;yBAE5B,YAAA,OAAA;aAED,KAAM,KAAA,QAAU;;uBAWhB,SAAA,EAAA,IAAA,GAAA;EAAA;kBACA,QAAA,OAAA,SAAA,SAAA;oBACO,SAAU,QAAM,OAAU,SAAmB,OAAA;;QAGtD,QAAM,SAAW,kBAAY;QAC7BA;6BACe,QAAM;0BAERA,MAAI,QAAK,gBAAoB,QAAMA,QAAA,SAAAA,MAAA,KAAA;;iBAE5C,KAAM,QAAC,IAAA,KAAe,aAAM,OAAA;8BAChB,KAAE,EAAK,IAAA,CAAA;0BACjB,KAAU,SAAK,IAAA,OAAA;uBACf,IAAO,gBAAe;qBACrB,MAAA,KAAA,iBAAA,KAAA,KAAA,SAAA,UAAA,EAAA,MAAA,WAAA;4BACJ,OAAA;;AAEU,eAAY,KAAA,aAAiB,SAAK,gBAAqB;mBAE3D,SAAyB;AAAA,cAAA,IAAA,0BAAA;YACjC,IAAA,mBAAA,EAAA,OAAA,SAAA,CAAA;;UAGD,kBAAa,sBAAgB,SAAA,OAAA;QAC7B,CAAA,SAAU,IAAC;UACX,oBAA4B,KAAA,YAAA,QAAA,GAAA;AAC7B,eAAA,KAAA,aAAA,SAAA,kBAAA,eAAA;MAED;YAIE,UAAM,MAAc,SAAQ,KAAA,EAAQ,MAAA,MAA0C,SAAA;YAC9E,UAAW,SAAY,OAAM;AAC9B,YAAA,aAAA,UAAA,SAAA;AAED,WAAA,MAA0B,YAAwB,SAAA,QAAA,KAAA,iBAAA,UAAA;YAChD,MAAS,KACP,gBAAmB,SAAE,QAAA,SAAA,YAAA,eAAA;YACnB;;QAGJ,QAAM,QAAA;aAGL,IAAA,OAAA,UAAA,UAAA;;wBAGW,SAAM,QAAU,IAAO,cAAc;wBAChD,QAAA,gBAAA,SAAA,SAAA,YAAA,SAAA,kBAAA,GAAA;YAEDC,QAAW,MAAA,SAAW,KAAA;AACvB,UAAA,OAAAA,UAAA,YAAAA,SAAA,MAAA;AAQC,eAAM,eAAaA,OAAS,mBAAc;UAC1C,YAAU;oBAAS;UAEnB,OAAM;QAEN,CAAA;;iBAEG,YAAa,SAAA,QAAA,KAAA,iBAAAA,KAAA;aACZA;;AAII,UAAAC,QAAA,SAAgB,KAAA;SACxB,MAAO,YAAS,SAAY,QAAC,KAAA,iBAAAA,KAAA;AAC/B,WAACA;;iBAGC,MAAA,SAAA;UACA,iBAAM,KAAiB,QAAG,OAAS;WAEnC,IAAA,YAAA,MAAA,gBAAA,SAAA,IAAA;;iBACkC,OAAY;UAC9C,qBAA0C,IAAK,IAE/C,IAAA,IAAA,IAAA,IACA,IAAI,IAAA,KAAS,WAAW,KAAG,QAAA,SAAA,GAAA,KAAA,KAAA,WAAA,GAAA,IAAA,KAAA,MAAA,CAAA,IAAA,KAAA;yBAAc,KAAA,aAAA;QAEzC,CAAA,WAAA,YAAwB,GAAA;cACpB,EAAA,GAAA,cAAoB,GAAG,MAAA;;QAE3B,OAAA;UACA,SAAa,aAAU,OAAG,KAAA,UAAA,CAAA;;WAE1B,IAAO,SAAM;;QAGP,iBACN,KAAiC,MACjC,IAAA,YACA;;QAEA;AAAA,aAAA,iBAAsB,SAAA,MAAA,WAAA,MAAA,CAAA;UAEtB,UAAA,WAAA,MAAA,WAAA,MAAA,GAAA,EAAA;WACE,KAAA,iBAAA,QACF,KAAA,EAAA,QAAA,WAAA,QAAA,GAAA,QAAA,CAAA,UACA,MAAA;AACA,mBAAM,OAAa;;;qBAIP;WAEZ,EAAA,OAAY,KAAA,MAAQ;;cAGd,UAAA;UAMN,oBAAsB,SAAE,QAAA,IAAA,gBAAA;QAGxB,sBAAA;AAAwB,aAAA;QACxB,sBAAqB;AAAU,aAAK;iBAEnC,WAAA;AAAA,aAAA;QAID,SAAA,WAAA;AAAA,aAAA;QAGA,SAAA,UAAA;AAAA,aAAA;WACA;;QAGD,aAAA,SAAA,kBAAA,iBAAA;AAEO,QAAAF;wBACS;UAMd,aAAA;OACF,oBAAA,QAAA,oBAAA,SAAA,SAAA,gBAAA,mBACF;IAED;AAEE,UAAA,cAA6BA,MAAA,QAAA,gBAAA,QAAAA,QAAA,SAAAA,MAAA,KAAA;UAC3B,UAAW,KAAG,6BAAO,kBAAA,YAAA,UAAA,IAAA;UAErB,MAAQ,OAAG;WACX,KAAK,QAAO,SAAY,gBAAa;;+BAEf,kBAAa,YAAA,YAAA;UACnC,oBAAqB;UACrB,gBAAkB;AAatB,QAAM,OAAgB,UAAY,UAAA,KAAA,cAAA,IAAA;AAIhC,aAAA;;UACE,aAAA,aAAI;AAEN,UAAC,eAAA,KAAA,IAAA,oBAAA,KAAA,IAAA,aAAA,GAAA,CAAA,GAAA,aAAA;UAWC,SAAW,KAAG,OAAK,IAAA;WACnB,eAAiB;;iBACV;AACT,WAAC,GAAA,KAAA,YAAA,WAAA;;QAGC,WAAM,MAAW;QACjB,OAAK,YAAU,eAAA,QAAA,IAAA,aAAA,QAAA;cACb,IAAM,GAAA,KAAI,YACR,cAAA,UAAA,GAAA,IAAA;;;;AAeL,IAAA,eAAA,MAAA;cAEM,QAAS,UAAA,SAAA;yBACd,IAAA,MAAA,MAAA;2BACoC,MAAA,sBAAA,QAAA,GAAA;SACpC,UAAW;;gBAEL;kBACE,KAAK,kBAAA;SACZ,MAAA;AAAA,aAAA;AACH,WAAC,KAAA,aAAA,KAAA;;QAGC,cAAW;qBACJ,KAAM,aAAa;mBACtB;gBACD;;MAEJ;IACF;AAED,UAAM,cAIJ,EAAA,GAAA,KAAQ,QAAkB;AAG1B,QAAA,YAAA,UAAA;;eAEG,SAAA,UAAA;AACH,YAAA,SACE,CAAiB,GACjB,OAAA,QACA,YACA,SAA4E,CAAA,CAAA,GAAA,GAAA,SAAA,IAAA,aAAA,QAAA,CAAA;iBAErE,CAAA,KAAO,KAAE,KAAQ,QACtB;AAEH,iBAAA,IAAA,aAAA,IAAA,KAAA,KAAA;MAED;;;;AAIA,WAAM,MAAM,uBAAe,MAAA,sBAAA,GAAA,EAAA;WACzB;MACD;IAED;;;;;WAMG,KAAA,YAAA,GAAA;AACH,aAAQ,MAAO,KAAA,YAAc;YAC3B;;;WAGC,uBAAA,oBAAA,QAAA,GAAA,OAAA,kBAAA;AACH,qBAAC,QAAA,KAAA,UAAA,GAAA;AACF,iBAAA,QAAA,KAAA,kBAAA,GAAA;AAEM,cAAM;MAGX;IAEI;;;IAKE,4BAAiB,QAAW;EAKlC,YAAA,QAAA,gBAAA,SAAA,MAAA;AAuBF;MAAA,CAAA,SAAA,WACA,eAAA,KAAA,CAAA,aAAA,QAAA,IAAA,KAAA,QAAA,UAAA,OAAA,CAAA,CAAA,EAAqF,MAAA,MAAA;IACrF;EACA;cAKW,OAAI,WAAA;AAEb,WAAA;;UAWG,OAAA,iBAAe;UAChB,OAAO,MAAQ;AAEjB,qBAAA,QAAA,MAAA;AAiCI,YAAA;IACJ;;;IAGI,wBAAA,CAAA,YAAsC;aACtC;;cAGA,QAAA;;;MAGJ,IAAI,QAAO,MAAA;AACT,cAAA,MAAO,KAAA,SAAA;eACL,OAAA,IAAA,YAAwB,MAAA,OAAA;;;;;AA4B9B,IAAE,wBAAA,MAAA;AAEF,MAAM,OAAA,SAAgB,eAAuB,KAAA,SAAA,MAAA;AAC3C,WAAA;MACA,oBAAA;MACA,+BAAa;MACb,kBAAA,kBAAA,KAAA,MAAA,EAAmD;MACnD,oBAAkB,cAAA,KAAA,MAAA,IAAA;6BAAe;MACjC,+BAA6B,KAAK;;;aACd,gBAAa,aAAA;AACjC,WAAI;0BAAuD;MAC3D,+BAAQ;wBAAkB;MAC1B,oBAAiB,SAAA;MACjB,uBAAA;MAEI,+BAAqD,QAAE;IAC3D;;MAGA,OAAA,UAAA,SAAA,KAAA,OAAA,YAAmD,cAAA,UAAA,CAAA,MAAA,oBAAA;AACnD,WAAA;MAEA,oBAAoB;MAEpB,+BAAA;MACA,kBAAA,kBAAA,QAAA,QAAA;MACA,oBAAA,cAAA,QAAA,IAAA;MACA,uBAAA;MACA,+BAA4B,QAAA;;;SAExB;wBAAsC;IAC1C,+BAAwB;sBAAS;IACjC,oBAAiB;2BAA4B;IAC7C,+BAA0B;;;oBACc,CAAC,SAAA;AAK3C,MAAI,SAAA;AAAqC,WAAA;AACzC,MAAM,SAAA,YAAqB,SAAK;AAAA,WAAA;MAC9B,SAAQ;AAAA,WAAgB;AACxB,MAAA,SAAA,aAAA,SAAA;AAAA,WAAA;AAEF,MAAM;AAAC,WAAM,SAAY;SACnB;;IAEH,oBAAA,CAAA,aAAA;AAMH,aAAM,SAAA,YAAyB;AAO/B,MAAM,SAAA,SAAA,KAAuB;AAAG,WAAe;MAC7C,aAAY;AAAc,WAAA;mBACd;AAAS,WAAI;MACxB,aAAA;AAAA,WAAA;MACD,aAAW;AAAA,WAAA;mBACC;AAAS,WAAI;MACxB,aAAA;AAAA,WAAA;MACD;AAAS,WAAA,SAAA;AACT,SAAA;AAEF;IACE;yBAAqC,MAAA;SACrC,qBAAsB,QAAA,qBAAA,SACtB,mBAEK,mBAAmB,sBAAyC;;IAC9C,WAAgB,CAAAG,UAAA;MACnC;AACA,WAAA,KAAA,MAAAA,KAAA;EAEF,SAAO,KAAP;AACE,WAAI;;;IAGJ,yBAAgB,IAAA,OAAoB,mBAAgB,GAAO;AAC7D,IAAEC,iBAAA,CAAA,QAAA;AAEF,SAAO,uBAAqB,KAA0B,GAAA;;YACrB,CAAO,OAAM,IAAA,QAAA,CAAA,YAAA,WAAA,SAAA,EAAA,CAAA;IAC5C,0BAAqB,CAAQ,MAAA,MAAA;cAAE,UAAO,CAAU,GAAC;AAEjD,UAAM,IAAI,MAAM,GAAA,yBAAyB;EACzC;AAEF,MAAM,IAAC,GAAM;AACX,UAAI,IAAA,MAAY,GAAA,iCAAc;;SAC1B;;AACJ,IAAO,cAAe,CAAA,QAAA;AACtB,MAAA,eAAA;AAAA,WAAA;AAEF,SAAA,IAAA,MAAA,GAAA;AACA;AA2BO,SAAM,WAAA,KAAiB;MAC5B,CAAA;AAAO,WAAO;AACd,aAAA,MAAA;AAAA,WAAA;AAEF,SAAO;;YAOH,MAAY;SACb,uCAAA,QAAA,SAAA,CAAA,MAAA;AACD,UAAA,IAAO,KAAM,OAAA,IAAA,KAAA;AACb,UAAA,IAAA,MAAA,MAAA,IAAA,IAAA,IAAA;;;;;;ASlyBI,IAAO,cAAP,MAAkB;cAEtB,QAA6B;SAC3B,SAAK;SAEL,MAAK,OAAM,IAAO,KAAI,MAAK;SAC3B,OAAK,OAAO,KAAO,KAAK,MAAK;SAC7B,QAAK,OAAQ,MAAO,KAAM,MAAK;SAC/B,MAAK,OAAM,IAAO,KAAI,MAAK;SAC3B,SAAK,OAAS,OAAO,KAAO,MAAK;SACjC,aAAK,OAAa,WAAO,KAAW,MAAK;;;;;ACPvC,IAAO,cAAP,cAA2B,YAAW;SAY1C,MAC8B,SACC;;WAE7B,KAAO,KAAK,gBAAK;MAClB;MACF,SAAA;MA6OD,GAAA;MAAiB,SAAWC,MAAX,KAAA,YAAW,QAG3BA,QAAA,SAAAA,MAAA;;;;;;;;AChMK,IAAO,YAAP,cAA8B,UAAS;cAM3C,QAA2B;UACzB,UAAM;cACJ,OAAQ,YAAO,cAAY,KAAa,QAAM,IAAA,wBAAY;eAC1D;;;UAIF;eACE,QAAS;eACT,QAAS;iBACT,QAAW;kBACX,QAAY;aACZ,QAAO;;SAQX,cAAA,IAAmC,YAAI,IAAY;SANjD,SAAK,QAAS,UAAc;SAC5B,WAAK;SAEL,aACD,WAAA,QAAA,WAAA,SAAA,SAAA,OAAA,cAIkB,QAAA,IAAY;;iBAIZ;WACjB,KAAO,SAAA;;mBAEL;;SAED,MAAC,eAAA;MACH,qBAAA;MAEkB,GAAA,KAAA,SAAgB;;;kBAGhC,SAAA,eAAA;QACD,KAAI,UAAA,QAAc,cAAiB;;;QAInC,cAAS,iBAAqB,MAAA;;;QAG9B,KAAI,aAAc,QAAA,kBAAyB;;;QAI3C,cAAU,qBACR,MAAA;AAEH;IAEkB;UACjB,IAAM;;;;gBAIA;UACN,eAAI,KAAe,aAAa;wBACvB,QAAA,CAAgB,WAAA,YAAA,GAAA;aACxB;;AAEH,UAAC,kBAAA,KAAA,gBAAA;AAES,QAAA,mBAAY,QAAA,CAAA,WAAA,eAAA,GAAA;aAChB;;WAEH,CAAA;;iBAEF;AAES,QAAA,KAAA,UAAe,MAAA;aACnB,CAAA;;WAEH,EAAA,aAAA,KAAA,OAAA;;oBAEF;AAEkB,QAAA,KAAS,aAAA,MAAA;aAC1B,CAAA;IACF;;EAEO;EACA,YAAA;AAEA,WAAA,EAAA,aAAW,QAAO;EAClB;AACA;AACA,UAAA,eAAa;AACb,UAAA,YAAA;AACA,UAAA,WAAiB;AACjB,UAAA,qBAAyB;AACzB,UAAA,4BAA6B;AAC7B,UAAA,gBAAsB;AACtB,UAAA,gBAAqB;AACrB,UAAA,iBAAwB;AAGjC,UAAO,kBAAsB;AAE7B,UAAO,sBAEL;AAYF,UAAM,sBAAgC;AACtC,UAAM,wBAA+B;AAErC,UAAA,2BAA0B;AACxB,IAAA,EAAA,cAAmB,UAAA,IAAA;AACL,IAAA;;;EAMf,2BAAAC;EAED,eAAAC;;;;;;;;;;;;;;;;AC/MA;AACAC;AACAC;;;ACHAC;AACA;AACAC;;;A9F2BA;AACA;;;A+F9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACPA;;;ACAA;;;ACAA;;;ACCAC;;;ACDA;;;ACAA;;;ACCA;AACAC;;;ACFA;AACA;AACA;AACA;;;ACHAC;AACA;;;ACDA;;;AzG2CA;;;A0G3CA;;;ACAA;;;ACAA;AACA;;;ACDA,IAAAC,6BAAgC;;;ACAhC;;;ACAA;AAGA;AAIA;;;ACPA;AACA;;;ACDA;AACA;;;ACDA;AACA;;;ACDAC;AACA;;;ACDA;AACA;AACA;AACAC;;;ACHA;AACA;;;ACDAC;;;ACAA;AACO,IAAM,yCAAyC;AAAA,EAClD;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACJ,EAAE,KAAK,GAAG;;;ADPV;;;AEJA;;;ACEA;AACAC;;;ACHA;;;ACAA;;;ACAAC;;;ACAAC;;;ACAA;;;ACAA;;;ACAAC;;;ACAA;;;ACAA;;;ACAA;;;ACAA;;;ACAA;;;ACAA;AAEAC;AACO,IAAM,uBAAN,cAAmC,mBAAmB;AAAA,EACzD,YAAY,SAAS,QAAQ;AACzB,UAAM;AACN,WAAO,eAAe,MAAM,WAAW;AAAA,MACnC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACX,CAAC;AACD,WAAO,eAAe,MAAM,WAAW;AAAA,MACnC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACX,CAAC;AACD,WAAO,eAAe,MAAM,UAAU;AAAA,MAClC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACX,CAAC;AACD,WAAO,eAAe,MAAM,YAAY;AAAA,MACpC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACX,CAAC;AACD,WAAO,eAAe,MAAM,eAAe;AAAA,MACvC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACX,CAAC;AACD,UAAM,EAAE,SAAS,UAAU,gBAAgB,KAAK,IAAI,UAAU,CAAC;AAC/D,SAAK,UAAU,WAAW;AAC1B,SAAK,SAAS,IAAIC,aAAY,IAAI;AAClC,SAAK,WAAW,YAAY;AAC5B,SAAK,cAAc;AAAA,EACvB;AAAA,EACA,aAAa,QAAQ,KAAKC,SAAQ,SAAS,aAAa;AACpD,UAAM,EAAE,MAAAC,MAAK,IAAI,MAAM,qBAAqB,QAAQ;AACpD,UAAM,WAAW,MAAMD,QAAO,KAAK,OAAO,KAAK;AAAA,MAC3C,QAAQ,UAAU,YAAY,QAAQ,OAAO,IAAI;AAAA,IACrD,CAAC;AACD,UAAME,QAAO,aAAa,OAAO,MAAM,SAAS,YAAY,CAAC,KACxD,MAAM,SAAS,KAAK;AACzB,WAAOD,MAAKC,KAAI;AAAA,EACpB;AAAA,EACA,MAAM,SAAS;AACX,WAAO,qBAAqB,QAAQ,KAAK,SAAS,KAAK,QAAQ,KAAK,SAAS,KAAK,WAAW;AAAA,EACjG;AAAA,EACA,MAAM,OAAO;AACT,UAAMC,KAAI,MAAM,KAAK,OAAO;AAC5B,UAAMC,QAAOD,GAAE,KAAK,QAAQ,EAAE,KAAK;AACnC,UAAM,WAAW,EAAE,QAAQ,KAAK,QAAQ;AACxC,WAAO,CAAC,IAAI,SAAS,EAAE,aAAaC,OAAM,SAAS,CAAC,CAAC;AAAA,EACzD;AAAA,EACA,aAAa,UAAU;AACnB,QAAI;AACA,YAAM,EAAE,MAAAH,MAAK,IAAI,MAAM;AACvB,aAAO,EAAE,MAAAA,MAAK;AAAA,IAClB,SACO,GAAP;AACI,cAAQ,MAAM,CAAC;AACf,YAAM,IAAI,MAAM,sEAAsE;AAAA,IAC1F;AAAA,EACJ;AACJ;;;ADpEO,IAAM,WAAN,cAAuB,qBAAqB;AAAA,EAC/C,YAAY,SAAS;AACjB,UAAM,OAAO;AACb,WAAO,eAAe,MAAM,WAAW;AAAA,MACnC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd,UAAU;AAAA,MACV,OAAO;AAAA,IACX,CAAC;AAAA,EACL;AAAA,EACA,MAAM,OAAO;AACT,UAAMI,KAAI,MAAM,KAAK,OAAO;AAC5B,QAAI,KAAK,QAAQ,SAAS,MAAM,GAAG;AAC/B,aAAO,KAAK,aAAaA,EAAC;AAAA,IAC9B;AACA,WAAO,KAAK,YAAYA,EAAC;AAAA,EAC7B;AAAA,EACA,aAAaA,IAAG;AACZ,UAAM,WAAWA,GAAE,0BAA0B;AAC7C,UAAM,QAAQA,GAAE,oBAAoB,EAAE,KAAK,OAAO;AAClD,UAAM,YAAY,CAAC;AACnB,aAAS,KAAK,CAAC,QAAQ,YAAY;AAC/B,YAAMC,QAAOD,GAAE,OAAO,EAAE,KAAK,EAAE,KAAK;AACpC,YAAM,WAAW,EAAE,QAAQ,KAAK,SAAS,MAAM;AAC/C,gBAAU,KAAK,IAAI,SAAS,EAAE,aAAaC,OAAM,SAAS,CAAC,CAAC;AAAA,IAChE,CAAC;AACD,WAAO;AAAA,EACX;AAAA,EACA,YAAYD,IAAG;AACX,UAAM,QAAQA,GAAE,oBAAoB;AACpC,UAAM,YAAY,CAAC;AACnB,UAAM,KAAK,CAAC,QAAQ,SAAS;AACzB,YAAM,UAAUA,GAAE,IAAI,EAAE,KAAK,oBAAoB,EAAE,KAAK;AACxD,YAAM,OAAOA,GAAE,IAAI,EAAE,KAAK,2BAA2B,EAAE,KAAK,MAAM;AAClE,YAAM,QAAQA,GAAE,IAAI,EAAE,KAAK,yBAAyB,EAAE,KAAK,EAAE,KAAK;AAClE,YAAM,WAAW;AAAA,QACb,QAAQ,KAAK;AAAA,QACb;AAAA,QACA;AAAA,QACA;AAAA,MACJ;AACA,gBAAU,KAAK,IAAI,SAAS,EAAE,aAAa,OAAO,SAAS,CAAC,CAAC;AAAA,IACjE,CAAC;AACD,WAAO;AAAA,EACX;AACJ;;;AEfA,IAAO,cAAQ;AAAA,EACb,MAAM,MACJ,SACA,KACA,KACmB;AAEnB,UAAM,wBACF,IAAI,uBAAuB;AAAA,MAC3B,mBAAmB,IAAI;AAAA,MACvB,4BAA4B,IAAI;AAAA,MAChC,8BAA8B,IAAI;AAAA,MAClC,uBAAuB,IAAI;AAAA,IAC7B,IACE;AAAA,MACA,cAAc,IAAI;AAAA,IACpB;AAGF,QAAI,OAAO,qBAAqB;AAChC,UAAM,MAAM,IAAI,iBAAiB,qBAAqB;AAGtD,QAAI,SAAS,+CAA+C;AAG5D,UAAM,QAAQ,IAAI,SAAS;AAAA,MACzB,KAAK,IAAI,WAAW,qBAAqB;AAAA,MACzC,QAAQ,mBAAmB,mBAAmB;AAAA,QAC5C,2BAA2B,aAAa,SAAS;AAAA,MACnD,CAAC;AAAA,IACH,CAAC;AACD,UAAM,MAAM,MAAM,MAAM,IAAI,OAAO;AAEnC,WAAO,IAAI;AAAA,MACT,oCAAoC,QAAQ,wBAAwB;AAAA,IACtE;AAAA,EACF;AACF;",
  "names": ["str", "camelCase", "map", "snakeCase", "root", "last", "aliases", "str", "get", "set", "compile", "styles", "messages", "text", "text", "elapsed", "styles", "parents", "parent", "self", "original", "require_retry", "pRetry", "error", "has", "val", "first", "index", "empty", "_a", "PQueueMod", "pRetry", "str", "filter", "result", "data", "update", "getRuntimeEnvironment", "runtimeEnvironment", "getEnv", "getEnvironmentVariable", "isBrowser", "isWebWorker", "isJsDom", "isDeno", "isNode", "init_env", "init_env", "getEnvironmentVariable", "getRuntimeEnvironment", "messages", "init_base", "init_base", "init_env", "getEnvironmentVariable", "PQueueMod", "import_p_queue", "init_base", "init_env", "text", "err", "messages", "getEnvironmentVariable", "import_p_retry", "import_p_queue", "STATUS_NO_RETRY", "AsyncCaller", "init_async_caller", "PQueueMod", "pRetry", "data", "error", "__defProp", "len", "i", "end", "len2", "slice", "str", "base64", "text", "end", "init_async_caller", "AsyncCaller", "bind", "wrap", "bind", "toString", "isArray", "val", "isUndefined", "isFormData", "isNumber", "isObject", "isDate", "isURLSearchParams", "str", "isStandardBrowserEnv", "forEach", "merge", "extend", "encode", "val", "buildURL", "serialize", "forEach", "enhanceError", "enhanceError", "createError", "createError", "settle", "remove", "isAbsoluteURL", "combineURLs", "isAbsoluteURL", "combineURLs", "buildFullPath", "val", "toString", "settle", "buildURL", "buildFullPath", "createError", "val", "enhanceError", "adapter", "data", "data", "adapter", "prop", "merge", "VERSION", "type", "schema", "buildURL", "data", "index", "wrap", "bind", "axios", "require_axios", "axios", "axios", "axios", "OpenAIApi", "Configuration", "require_dist", "exports", "tryJsonStringify", "data", "val", "serialize", "axios", "init_base", "messages", "text", "util", "val", "objectUtil", "first", "data", "json", "map", "data", "map", "pairs", "errorUtil", "parent", "data", "_a", "val", "regex", "ctx", "result", "schema", "pairs", "index", "issues", "type", "first", "elements", "processed", "ZodFirstPartyTypeKind", "exports", "exports", "_a", "types", "type", "x", "type", "_a", "_a", "schema", "_a", "_a", "schema", "schema", "index", "zodToJsonSchema", "schema", "_a", "name", "type", "init_env", "init_base", "getEnvironmentVariable", "messages", "data", "text", "isNode", "init_async_caller", "AsyncCaller", "text", "data", "init_base", "data", "i", "next", "text", "init_base", "data", "init_base", "data", "PromptTemplate", "FewShotPromptTemplate", "init_base", "data", "init_base", "text", "data", "i", "init_base", "difference", "init_base", "init_base", "init_base", "init_base", "init_base", "data", "init_prompts", "init_base", "init_prompts", "data", "init_base", "data", "LLMChain", "SequentialChain", "SimpleSequentialChain", "StuffDocumentsChain", "MapReduceDocumentsChain", "RefineDocumentsChain", "VectorDBQAChain", "APIChain", "text", "text", "init_base", "data", "init_prompt", "init_prompt", "init_prompt", "index", "e", "t", "n", "r", "o", "i", "u", "a", "s", "f", "l", "c", "d", "init_base", "hash", "init_base", "map", "import_openai", "init_env", "init_base", "getEnvironmentVariable", "data", "isNode", "text", "openai_exports", "import_openai", "init_openai", "init_env", "init_base", "getEnvironmentVariable", "data", "choices", "isNode", "init_base", "cache", "index", "text", "messages", "data", "slice", "bind", "Empty", "bind", "undefined", "doEval", "bind", "hasOwn", "stringToPath", "first", "last", "getBaseIntrinsic", "bind", "applyBind", "require_util", "str", "int", "has", "isArray", "isNumber", "isBoolean", "isDate", "hasOwn", "type", "prev", "require_utils", "has", "isArray", "compactQueue", "queue", "arrayToObject", "merge", "str", "encode", "compact", "val", "isRegExp", "isBuffer", "combine", "maybeMap", "has", "repeat", "isArray", "date", "isNonNullishPrimitive", "stringify", "filter", "value", "normalizeStringifyOptions", "has", "isArray", "str", "val", "root", "index", "parent", "normalizeParseOptions", "require_lib", "stringify", "parse", "init_types", "ElementType", "isTag", "Text", "Comment", "children", "clone", "CDATA", "Document", "parent", "prev", "next", "data", "_a", "type", "defaultOpts", "init_esm", "Document", "type", "data", "Text", "Comment", "text", "CDATA", "parent", "_a", "str", "CharCodes", "BinTrieFlags", "str", "next", "regex", "map", "escape", "data", "index", "init_esm", "EntityLevel", "DecodingMode", "EncodingMode", "val", "attributes", "_a", "encode", "data", "init_esm", "node", "isTag", "init_stringify", "init_esm", "parent", "siblings", "prev", "next", "_a", "getName", "isTag", "init_esm", "prev", "next", "parent", "children", "isTag", "_a", "init_esm", "isTag", "type", "init_esm", "data", "siblings", "init_helpers", "init_esm", "DocumentPosition", "children", "href", "_a", "fetch", "prop", "val", "init_stringify", "esm_exports", "getName", "isTag", "init_esm", "init_stringify", "init_helpers", "merge", "render", "data", "next", "init_esm", "camelCase", "str", "clone", "root", "Document", "init_esm", "CharacterCodes", "isTag", "_a", "prop", "val", "camelCase", "end", "index", "init_esm", "init_types", "SelectorType", "AttributeAction", "str", "isWhitespace", "subselects", "getName", "type", "data", "init_types", "init_types", "trueFunc", "isTraversal", "_a", "escapeRegex", "init_attributes", "next", "data", "adapter", "attr", "boolbase", "regex", "_a", "parse", "init_parse", "boolbase", "index", "import_boolbase", "parse", "init_esm", "init_parse", "next", "adapter", "parent", "boolbase", "import_boolbase", "init_esm", "text", "contains", "siblings", "adapter", "elem", "siblings", "next", "adapter", "boolbase", "siblings", "import_boolbase", "compileToken", "isTraversal", "next", "compileToken", "data", "_a", "adapter", "parent", "next", "compileToken", "elem", "siblings", "init_attributes", "compile", "next", "data", "adapter", "parent", "isTraversal", "_a", "first", "boolbase", "import_boolbase", "init_compile", "_a", "esm_exports", "select", "adapter", "import_boolbase", "compile", "init_esm", "init_compile", "boolbase", "s", "filter", "data", "init_helpers", "is", "filter", "data", "isTag", "root", "_a", "find", "type", "esm_exports", "boolbase", "init_esm", "init_helpers", "filter", "find", "is", "map", "toArray", "_a", "fn", "nextElem", "next", "set", "isTag", "val", "root", "end", "contents", "init_esm", "parent", "parse", "isDocument", "root", "Document", "parent", "init_parse", "init_esm", "append", "html", "prepend", "text", "toString", "wrap", "clone", "parent", "prev", "next", "_a", "isTag", "siblings", "index", "str", "Text", "init_manipulation", "init_esm", "init_parse", "children", "prop", "val", "isTag", "styles", "stringify", "parse", "str", "data", "isTag", "_a", "val", "init_manipulation", "root", "parse", "render", "load", "isDocument", "content", "options", "root", "isNode", "init_load", "CODE_POINTS", "ERR", "TokenType", "_a", "NS", "ATTRS", "DOCUMENT_MODE", "TAG_NAMES", "TAG_ID", "isWhitespace", "State", "_a", "type", "location", "document", "EntryType", "entry", "data", "document", "text", "attr", "location", "attr", "_a", "InsertionMode", "document", "html", "location", "parent", "siblings", "defaultOpts", "html", "attr", "parent", "parse", "html", "init_dist", "createTextNode", "Text", "str", "init_dist", "init_esm", "isTag", "Document", "data", "Comment", "prev", "document", "next", "text", "_a", "location", "isDocument", "parse", "index", "init_esm", "init_dist", "isWhitespace", "CharCodes", "State", "Tokenizer", "QuoteType", "Parser", "_a", "Tokenizer", "data", "end", "str", "data", "Parser", "init_esm", "esm_exports", "contains", "esm_default", "load", "merge", "parseHTML", "root", "parse", "init_esm", "init_types", "init_load", "init_parse", "isDocument", "init_base", "init_prompt", "init_async_caller", "init_env", "init_base", "init_base", "import_zod_to_json_schema", "FORMAT_INSTRUCTIONS", "init_env", "init_env", "init_env", "init_env", "init_env", "init_env", "init_env", "init_base", "init_base", "init_base", "text", "doc", "text", "init_base", "init_base", "init_base", "import_openai", "init_base", "init_async_caller", "init_env", "init_base", "import_zod_to_json_schema", "init_base", "import_zod_to_json_schema", "import_zod_to_json_schema", "isObject", "toArray", "index", "exception", "toString", "map", "data", "schema", "type", "extend", "date", "end", "next", "str", "prev", "first", "string", "init_base", "import_zod_to_json_schema", "str", "init_async_caller", "AsyncCaller", "import_openai", "init_env", "getEnvironmentVariable", "data", "text", "isNode", "init_base", "init_openai", "init_base", "init_env", "init_base", "init_env", "filter", "filter", "init_env", "init_base", "init_base", "init_base", "init_base", "init_async_caller", "init_base", "init_base", "import_zod_to_json_schema", "init_base", "text", "_a", "index", "str", "_a", "getBytes", "type", "_a", "json", "text", "text", "isAbsoluteURL", "_a", "APIConnectionTimeoutError", "NotFoundError", "init_env", "init_base", "init_base", "init_env", "init_async_caller", "init_async_caller", "init_base", "import_zod_to_json_schema", "init_base", "init_base", "init_base", "init_env", "init_base", "init_openai", "init_base", "init_async_caller", "AsyncCaller", "caller", "load", "html", "$", "text", "$", "text"]
}
